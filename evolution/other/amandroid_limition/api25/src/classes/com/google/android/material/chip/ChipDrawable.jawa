record `com.google.android.material.chip.ChipDrawable` @kind class @AccessFlag PUBLIC extends `com.google.android.material.shape.MaterialShapeDrawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `android.graphics.drawable.Drawable$Callback` @kind interface, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `int` `com.google.android.material.chip.ChipDrawable.alpha` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkable` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.checkedIcon` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkedIconVisible` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipCornerRadius` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.chipIcon` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipIconSize` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.chipIconVisible` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipMinHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.chipPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.chipStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipStrokeColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIcon` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIconRipple` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconSize` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @AccessFlag PRIVATE;
  `int`[] `com.google.android.material.chip.ChipDrawable.closeIconStateSet` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.closeIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.closeIconVisible` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `com.google.android.material.chip.ChipDrawable.colorFilter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.compatRippleColor` @AccessFlag PRIVATE;
  `android.content.Context` `com.google.android.material.chip.ChipDrawable.context` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.currentChecked` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTextColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTint` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.debugPaint` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.chip.ChipDrawable.delegate` @AccessFlag PRIVATE;
  `android.graphics.Paint$FontMetrics` `com.google.android.material.chip.ChipDrawable.fontMetrics` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.hasChipIconTint` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.hideMotionSpec` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconStartPadding` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.maxWidth` @AccessFlag PRIVATE;
  `android.graphics.PointF` `com.google.android.material.chip.ChipDrawable.pointF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.chip.ChipDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.rippleColor` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.chip.ChipDrawable.shapePath` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.shouldDrawText` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.showMotionSpec` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.text` @AccessFlag PRIVATE;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.chip.ChipDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.textEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.tint` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.chip.ChipDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `com.google.android.material.chip.ChipDrawable.tintMode` @AccessFlag PRIVATE;
  `android.text.TextUtils$TruncateAt` `com.google.android.material.chip.ChipDrawable.truncateAt` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.useCompatRipple` @AccessFlag PRIVATE;
}
global `boolean` `@@com.google.android.material.chip.ChipDrawable.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.ChipDrawable.NAMESPACE_APP` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.drawable.ShapeDrawable` `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18fec8.  v0:= 1I;
  #L18feca.  v0:= new `int`[v0];
  #L18fece.  v1:= 0I;
  #L18fed0.  v2:= 16842910I;
  #L18fed6.  v0[v1]:= v2;
  #L18feda.  `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] := v0 @kind object;
  #L18fede.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L18fee2.  v1:= new `android.graphics.drawable.shapes.OvalShape`;
  #L18fee6.  call `<init>`(v1) @signature `Landroid/graphics/drawable/shapes/OvalShape;.<init>:()V` @kind direct;
  #L18feec.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L18fef2.  `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` := v0 @kind object;
  #L18fef6.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.content.Context` v5 @kind object @name `context`, `android.util.AttributeSet` v6 @kind object @name `attrs`, `int` v7 @name `defStyleAttr`, `int` v8 @name `defStyleRes`) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18ff08.  call `<init>`(v4, v5, v6, v7, v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L18ff0e.  v0:= new `android.graphics.Paint`;
  #L18ff12.  v1:= 1I;
  #L18ff14.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L18ff1a.  v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L18ff1e.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L18ff22.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L18ff28.  v4.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v0 @kind object;
  #L18ff2c.  v0:= new `android.graphics.RectF`;
  #L18ff30.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L18ff36.  v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L18ff3a.  v0:= new `android.graphics.PointF`;
  #L18ff3e.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L18ff44.  v4.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` := v0 @kind object;
  #L18ff48.  v0:= new `android.graphics.Path`;
  #L18ff4c.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L18ff52.  v4.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` := v0 @kind object;
  #L18ff56.  v0:= 255I;
  #L18ff5a.  v4.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v0;
  #L18ff5e.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L18ff62.  v4.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v0 @kind object;
  #L18ff66.  v0:= new `java.lang.ref.WeakReference`;
  #L18ff6a.  v2:= 0I;
  #L18ff6c.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L18ff72.  v4.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L18ff76.  call `initializeElevationOverlay`(v4, v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L18ff7c.  v4.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` := v5 @kind object;
  #L18ff80.  v0:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L18ff84.  call `<init>`(v0, v4) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L18ff8a.  v4.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v0 @kind object;
  #L18ff8e.  v3:= "" @kind object;
  #L18ff92.  v4.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L18ff96.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L18ff9c.  v0:= temp @kind object;
  #L18ff9e.  call temp:= `getResources`(v5) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L18ffa4.  v3:= temp @kind object;
  #L18ffa6.  call temp:= `getDisplayMetrics`(v3) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L18ffac.  v3:= temp @kind object;
  #L18ffae.  v3:= v3.`android.util.DisplayMetrics.density` @type ^`float`;
  #L18ffb2.  v0.`android.text.TextPaint.density` @type ^`float` := v3;
  #L18ffb6.  v4.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L18ffba.  
  #L18ffbc.  v0:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L18ffc0.  call temp:= `setState`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setState:([I)Z` @kind virtual;
  #L18ffc6.  call temp:= `setCloseIconState`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L18ffcc.  v4.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L18ffd0.  v0:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L18ffd4.  if v0 == 0 then goto L18ffe4;
  #L18ffd8.  v0:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L18ffdc.  v1:= -1I;
  #L18ffde.  call `setTint`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.setTint:(I)V` @kind virtual;
  #L18ffe4.  return @kind void;
}
procedure `void` `applyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object @name `drawable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L18fff8.  if v3 != 0 then goto L18fffe;
  #L18fffc.  return @kind void;
  #L18fffe.  call `setCallback`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L190004.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L19000a.  v0:= temp;
  #L19000c.  call temp:= `setLayoutDirection`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L190012.  call temp:= `getLevel`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getLevel:()I` @kind virtual;
  #L190018.  v0:= temp;
  #L19001a.  call temp:= `setLevel`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L190020.  call temp:= `isVisible`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.isVisible:()Z` @kind virtual;
  #L190026.  v0:= temp;
  #L190028.  v1:= 0I;
  #L19002a.  call temp:= `setVisible`(v3, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L190030.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190034.  if v3 != v0 then goto L19005e;
  #L190038.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L19003e.  v0:= temp;
  #L190040.  if v0 == 0 then goto L190052;
  #L190044.  call temp:= `getCloseIconState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L19004a.  v0:= temp @kind object;
  #L19004c.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L190052.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L190056.  call `setTintList`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L19005c.  return @kind void;
  #L19005e.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L190064.  v0:= temp;
  #L190066.  if v0 == 0 then goto L190078;
  #L19006a.  call temp:= `getState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L190070.  v0:= temp @kind object;
  #L190072.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L190078.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19007c.  if v3 != v0 then goto L190092;
  #L190080.  v1:= v2.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` @kind boolean;
  #L190084.  if v1 == 0 then goto L190092;
  #L190088.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L19008c.  call `setTintList`(v0, v1) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L190092.  return @kind void;
}
procedure `void` `calculateChipIconBounds`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Rect` v5 @kind object @name `bounds`, `android.graphics.RectF` v6 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1900a4.  call `setEmpty`(v6) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1900aa.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1900b0.  v0:= temp;
  #L1900b2.  if v0 != 0 then goto L1900c2;
  #L1900b6.  call temp:= `showsCheckedIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1900bc.  v0:= temp;
  #L1900be.  if v0 == 0 then goto L190134;
  #L1900c2.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1900c6.  v1:= v4.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1900ca.  v0:= v0 + v1 @kind float;
  #L1900cc.  call temp:= `getLayoutDirection`(v4) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1900d2.  v1:= temp;
  #L1900d4.  if v1 != 0 then goto L1900f4;
  #L1900d8.  v1:= v5.`android.graphics.Rect.left` @type ^`int`;
  #L1900dc.  v1:= (`float`) v1 @kind i2f;
  #L1900de.  v1:= v1 + v0 @kind float;
  #L1900e0.  v6.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1900e4.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L1900e8.  v2:= v4.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1900ec.  v1:= v1 + v2 @kind float;
  #L1900ee.  v6.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1900f2.  goto L19010e;
  #L1900f4.  v1:= v5.`android.graphics.Rect.right` @type ^`int`;
  #L1900f8.  v1:= (`float`) v1 @kind i2f;
  #L1900fa.  v1:= v1 - v0 @kind float;
  #L1900fc.  v6.`android.graphics.RectF.right` @type ^`float` := v1;
  #L190100.  v1:= v6.`android.graphics.RectF.right` @type ^`float`;
  #L190104.  v2:= v4.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L190108.  v1:= v1 - v2 @kind float;
  #L19010a.  v6.`android.graphics.RectF.left` @type ^`float` := v1;
  #L19010e.  call temp:= `exactCenterY`(v5) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L190114.  v1:= temp;
  #L190116.  v2:= v4.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L19011a.  v3:= 2.0F;
  #L19011e.  v2:= v2 / v3 @kind float;
  #L190120.  v1:= v1 - v2 @kind float;
  #L190122.  v6.`android.graphics.RectF.top` @type ^`float` := v1;
  #L190126.  v1:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L19012a.  v2:= v4.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L19012e.  v1:= v1 + v2 @kind float;
  #L190130.  v6.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L190134.  return @kind void;
}
procedure `void` `calculateChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object @name `bounds`, `android.graphics.RectF` v4 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L190148.  call `set`(v4, v3) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L19014e.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L190154.  v0:= temp;
  #L190156.  if v0 == 0 then goto L19019c;
  #L19015a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L19015e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L190162.  v0:= v0 + v1 @kind float;
  #L190164.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L190168.  v0:= v0 + v1 @kind float;
  #L19016a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L19016e.  v0:= v0 + v1 @kind float;
  #L190170.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L190174.  v0:= v0 + v1 @kind float;
  #L190176.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L19017c.  v1:= temp;
  #L19017e.  if v1 != 0 then goto L190190;
  #L190182.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L190186.  v1:= (`float`) v1 @kind i2f;
  #L190188.  v1:= v1 - v0 @kind float;
  #L19018a.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L19018e.  goto L19019c;
  #L190190.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L190194.  v1:= (`float`) v1 @kind i2f;
  #L190196.  v1:= v1 + v0 @kind float;
  #L190198.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L19019c.  return @kind void;
}
procedure `void` `calculateCloseIconBounds`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Rect` v5 @kind object @name `bounds`, `android.graphics.RectF` v6 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1901b0.  call `setEmpty`(v6) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1901b6.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1901bc.  v0:= temp;
  #L1901be.  if v0 == 0 then goto L190234;
  #L1901c2.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1901c6.  v1:= v4.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1901ca.  v0:= v0 + v1 @kind float;
  #L1901cc.  call temp:= `getLayoutDirection`(v4) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1901d2.  v1:= temp;
  #L1901d4.  if v1 != 0 then goto L1901f4;
  #L1901d8.  v1:= v5.`android.graphics.Rect.right` @type ^`int`;
  #L1901dc.  v1:= (`float`) v1 @kind i2f;
  #L1901de.  v1:= v1 - v0 @kind float;
  #L1901e0.  v6.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1901e4.  v1:= v6.`android.graphics.RectF.right` @type ^`float`;
  #L1901e8.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1901ec.  v1:= v1 - v2 @kind float;
  #L1901ee.  v6.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1901f2.  goto L19020e;
  #L1901f4.  v1:= v5.`android.graphics.Rect.left` @type ^`int`;
  #L1901f8.  v1:= (`float`) v1 @kind i2f;
  #L1901fa.  v1:= v1 + v0 @kind float;
  #L1901fc.  v6.`android.graphics.RectF.left` @type ^`float` := v1;
  #L190200.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L190204.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L190208.  v1:= v1 + v2 @kind float;
  #L19020a.  v6.`android.graphics.RectF.right` @type ^`float` := v1;
  #L19020e.  call temp:= `exactCenterY`(v5) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L190214.  v1:= temp;
  #L190216.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L19021a.  v3:= 2.0F;
  #L19021e.  v2:= v2 / v3 @kind float;
  #L190220.  v1:= v1 - v2 @kind float;
  #L190222.  v6.`android.graphics.RectF.top` @type ^`float` := v1;
  #L190226.  v1:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L19022a.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L19022e.  v1:= v1 + v2 @kind float;
  #L190230.  v6.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L190234.  return @kind void;
}
procedure `void` `calculateCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object @name `bounds`, `android.graphics.RectF` v4 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L190248.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L19024e.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L190254.  v0:= temp;
  #L190256.  if v0 == 0 then goto L1902c2;
  #L19025a.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L19025e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L190262.  v0:= v0 + v1 @kind float;
  #L190264.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L190268.  v0:= v0 + v1 @kind float;
  #L19026a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L19026e.  v0:= v0 + v1 @kind float;
  #L190270.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L190274.  v0:= v0 + v1 @kind float;
  #L190276.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L19027c.  v1:= temp;
  #L19027e.  if v1 != 0 then goto L190298;
  #L190282.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L190286.  v1:= (`float`) v1 @kind i2f;
  #L190288.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L19028c.  v1:= v4.`android.graphics.RectF.right` @type ^`float`;
  #L190290.  v1:= v1 - v0 @kind float;
  #L190292.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L190296.  goto L1902ae;
  #L190298.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L19029c.  v1:= (`float`) v1 @kind i2f;
  #L19029e.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1902a2.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1902a6.  v1:= (`float`) v1 @kind i2f;
  #L1902a8.  v1:= v1 + v0 @kind float;
  #L1902aa.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1902ae.  v1:= v3.`android.graphics.Rect.top` @type ^`int`;
  #L1902b2.  v1:= (`float`) v1 @kind i2f;
  #L1902b4.  v4.`android.graphics.RectF.top` @type ^`float` := v1;
  #L1902b8.  v1:= v3.`android.graphics.Rect.bottom` @type ^`int`;
  #L1902bc.  v1:= (`float`) v1 @kind i2f;
  #L1902be.  v4.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L1902c2.  return @kind void;
}
procedure `void` `calculateTextBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object @name `bounds`, `android.graphics.RectF` v5 @kind object @name `outBounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1902d4.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1902da.  v0:= v3.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1902de.  if v0 == 0 then goto L19035c;
  #L1902e2.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1902e6.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L1902ec.  v1:= temp;
  #L1902ee.  v0:= v0 + v1 @kind float;
  #L1902f0.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1902f4.  v0:= v0 + v1 @kind float;
  #L1902f6.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1902fa.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L190300.  v2:= temp;
  #L190302.  v1:= v1 + v2 @kind float;
  #L190304.  v2:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L190308.  v1:= v1 + v2 @kind float;
  #L19030a.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L190310.  v2:= temp;
  #L190312.  if v2 != 0 then goto L190330;
  #L190316.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L19031a.  v2:= (`float`) v2 @kind i2f;
  #L19031c.  v2:= v2 + v0 @kind float;
  #L19031e.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L190322.  v2:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L190326.  v2:= (`float`) v2 @kind i2f;
  #L190328.  v2:= v2 - v1 @kind float;
  #L19032a.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L19032e.  goto L190348;
  #L190330.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L190334.  v2:= (`float`) v2 @kind i2f;
  #L190336.  v2:= v2 + v1 @kind float;
  #L190338.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L19033c.  v2:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L190340.  v2:= (`float`) v2 @kind i2f;
  #L190342.  v2:= v2 - v0 @kind float;
  #L190344.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L190348.  v2:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L19034c.  v2:= (`float`) v2 @kind i2f;
  #L19034e.  v5.`android.graphics.RectF.top` @type ^`float` := v2;
  #L190352.  v2:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L190356.  v2:= (`float`) v2 @kind i2f;
  #L190358.  v5.`android.graphics.RectF.bottom` @type ^`float` := v2;
  #L19035c.  return @kind void;
}
procedure `float` `calculateTextCenterFromBaseline`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L18fc2c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18fc30.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L18fc36.  v0:= temp @kind object;
  #L18fc38.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L18fc3c.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L18fc42.  v0:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L18fc46.  v0:= v0.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L18fc4a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L18fc4e.  v1:= v1.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L18fc52.  v0:= v0 + v1 @kind float;
  #L18fc54.  v1:= 2.0F;
  #L18fc58.  v0:= v0 / v1 @kind float;
  #L18fc5a.  return v0;
}
procedure `boolean` `canShowCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L18f33c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L18f340.  if v0 == 0 then goto L18f358;
  #L18f344.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f348.  if v0 == 0 then goto L18f358;
  #L18f34c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L18f350.  if v0 == 0 then goto L18f358;
  #L18f354.  v0:= 1I;
  #L18f356.  goto L18f35a;
  #L18f358.  v0:= 0I;
  #L18f35a.  return v0;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object @name `context`, `android.util.AttributeSet` v2 @kind object @name `attrs`, `int` v3 @name `defStyleAttr`, `int` v4 @name `defStyleRes`) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18fb38.  v0:= new `com.google.android.material.chip.ChipDrawable`;
  #L18fb3c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L18fb42.  call `loadFromAttributes`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @kind direct;
  #L18fb48.  return v0 @kind object;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromResource`(`android.content.Context` v3 @kind object @name `context`, `int` v4 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L18fb5c.  v0:= "chip" @kind object;
  #L18fb60.  call temp:= `parseDrawableXml`(v3, v4, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @kind static;
  #L18fb66.  v0:= temp @kind object;
  #L18fb68.  call temp:= `getStyleAttribute`(v0) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L18fb6e.  v1:= temp;
  #L18fb70.  if v1 != 0 then goto L18fb78;
  #L18fb74.  v1:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Entry` @type ^`int`;
  #L18fb78.  v2:= `@@com.google.android.material.R$attr.chipStandaloneStyle` @type ^`int`;
  #L18fb7c.  call temp:= `createFromAttributes`(v3, v0, v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L18fb82.  v2:= temp @kind object;
  #L18fb84.  return v2 @kind object;
}
procedure `void` `drawCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `android.graphics.Rect` v8 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L190434.  call temp:= `showsCheckedIcon`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L19043a.  v0:= temp;
  #L19043c.  if v0 == 0 then goto L19049c;
  #L190440.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190444.  call `calculateChipIconBounds`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L19044a.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19044e.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L190452.  v1:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190456.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L19045a.  call `translate`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L190460.  v2:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190464.  v3:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190468.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L19046e.  v3:= temp;
  #L190470.  v3:= (`int`) v3 @kind f2i;
  #L190472.  v4:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190476.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L19047c.  v4:= temp;
  #L19047e.  v4:= (`int`) v4 @kind f2i;
  #L190480.  v5:= 0I;
  #L190482.  call `setBounds`(v2, v5, v5, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L190488.  v2:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19048c.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L190492.  v2:= -v0 @kind float;
  #L190494.  v3:= -v1 @kind float;
  #L190496.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L19049c.  return @kind void;
}
procedure `void` `drawChipBackground`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`, `android.graphics.Rect` v6 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1904b0.  v0:= v4.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1904b4.  if v0 != 0 then goto L19050e;
  #L1904b8.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1904bc.  v1:= v4.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1904c0.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1904c6.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1904ca.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1904ce.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1904d4.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1904d8.  call temp:= `getTintColorFilter`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L1904de.  v1:= temp @kind object;
  #L1904e0.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1904e6.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1904ea.  call `set`(v0, v6) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1904f0.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1904f4.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1904fa.  v1:= temp;
  #L1904fc.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L190502.  v2:= temp;
  #L190504.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L190508.  call `drawRoundRect`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L19050e.  return @kind void;
}
procedure `void` `drawChipIcon`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `android.graphics.Rect` v8 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L190520.  call temp:= `showsChipIcon`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L190526.  v0:= temp;
  #L190528.  if v0 == 0 then goto L190588;
  #L19052c.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190530.  call `calculateChipIconBounds`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L190536.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19053a.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L19053e.  v1:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190542.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L190546.  call `translate`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L19054c.  v2:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190550.  v3:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190554.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L19055a.  v3:= temp;
  #L19055c.  v3:= (`int`) v3 @kind f2i;
  #L19055e.  v4:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190562.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L190568.  v4:= temp;
  #L19056a.  v4:= (`int`) v4 @kind f2i;
  #L19056c.  v5:= 0I;
  #L19056e.  call `setBounds`(v2, v5, v5, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L190574.  v2:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190578.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L19057e.  v2:= -v0 @kind float;
  #L190580.  v3:= -v1 @kind float;
  #L190582.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L190588.  return @kind void;
}
procedure `void` `drawChipStroke`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `canvas`, `android.graphics.Rect` v9 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19059c.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1905a0.  v1:= 0I;
  #L1905a2.  v0:= fcmpl(v0, v1);
  #L1905a6.  if v0 <= 0 then goto L190648;
  #L1905aa.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1905ae.  if v0 != 0 then goto L190648;
  #L1905b2.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1905b6.  v1:= v7.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1905ba.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1905c0.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1905c4.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1905c8.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1905ce.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1905d2.  if v0 != 0 then goto L1905e8;
  #L1905d6.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1905da.  call temp:= `getTintColorFilter`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L1905e0.  v1:= temp @kind object;
  #L1905e2.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1905e8.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1905ec.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L1905f0.  v1:= (`float`) v1 @kind i2f;
  #L1905f2.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1905f6.  v3:= 2.0F;
  #L1905fa.  v2:= v2 / v3 @kind float;
  #L1905fc.  v1:= v1 + v2 @kind float;
  #L1905fe.  v2:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L190602.  v2:= (`float`) v2 @kind i2f;
  #L190604.  v4:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L190608.  v4:= v4 / v3 @kind float;
  #L19060a.  v2:= v2 + v4 @kind float;
  #L19060c.  v4:= v9.`android.graphics.Rect.right` @type ^`int`;
  #L190610.  v4:= (`float`) v4 @kind i2f;
  #L190612.  v5:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L190616.  v5:= v5 / v3 @kind float;
  #L190618.  v4:= v4 - v5 @kind float;
  #L19061a.  v5:= v9.`android.graphics.Rect.bottom` @type ^`int`;
  #L19061e.  v5:= (`float`) v5 @kind i2f;
  #L190620.  v6:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L190624.  v6:= v6 / v3 @kind float;
  #L190626.  v5:= v5 - v6 @kind float;
  #L190628.  call `set`(v0, v1, v2, v4, v5) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L19062e.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L190632.  v1:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L190636.  v1:= v1 / v3 @kind float;
  #L190638.  v0:= v0 - v1 @kind float;
  #L19063a.  v1:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19063e.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L190642.  call `drawRoundRect`(v8, v1, v0, v0, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L190648.  return @kind void;
}
procedure `void` `drawChipSurface`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`, `android.graphics.Rect` v6 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19065c.  v0:= v4.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L190660.  if v0 != 0 then goto L1906a8;
  #L190664.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L190668.  v1:= v4.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L19066c.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L190672.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L190676.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L19067a.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L190680.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190684.  call `set`(v0, v6) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L19068a.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19068e.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L190694.  v1:= temp;
  #L190696.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L19069c.  v2:= temp;
  #L19069e.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1906a2.  call `drawRoundRect`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1906a8.  return @kind void;
}
procedure `void` `drawCloseIcon`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`, `android.graphics.Rect` v8 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1906bc.  call temp:= `showsCloseIcon`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1906c2.  v0:= temp;
  #L1906c4.  if v0 == 0 then goto L190758;
  #L1906c8.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1906cc.  call `calculateCloseIconBounds`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1906d2.  v0:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1906d6.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1906da.  v1:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1906de.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L1906e2.  call `translate`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1906e8.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1906ec.  v3:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1906f0.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1906f6.  v3:= temp;
  #L1906f8.  v3:= (`int`) v3 @kind f2i;
  #L1906fa.  v4:= v6.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1906fe.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L190704.  v4:= temp;
  #L190706.  v4:= (`int`) v4 @kind f2i;
  #L190708.  v5:= 0I;
  #L19070a.  call `setBounds`(v2, v5, v5, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L190710.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L190714.  if v2 == 0 then goto L190744;
  #L190718.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19071c.  v3:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190720.  call temp:= `getBounds`(v3) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L190726.  v3:= temp @kind object;
  #L190728.  call `setBounds`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L19072e.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190732.  call `jumpToCurrentState`(v2) @signature `Landroid/graphics/drawable/Drawable;.jumpToCurrentState:()V` @kind virtual;
  #L190738.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19073c.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L190742.  goto L19074e;
  #L190744.  v2:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L190748.  call `draw`(v2, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L19074e.  v2:= -v0 @kind float;
  #L190750.  v3:= -v1 @kind float;
  #L190752.  call `translate`(v7, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L190758.  return @kind void;
}
procedure `void` `drawCompatRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object @name `canvas`, `android.graphics.Rect` v6 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19076c.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L190770.  v1:= v4.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L190774.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L19077a.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L19077e.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L190782.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L190788.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19078c.  call `set`(v0, v6) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L190792.  v0:= v4.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L190796.  if v0 != 0 then goto L1907ba;
  #L19079a.  v0:= v4.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19079e.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1907a4.  v1:= temp;
  #L1907a6.  call temp:= `getChipCornerRadius`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1907ac.  v2:= temp;
  #L1907ae.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1907b2.  call `drawRoundRect`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1907b8.  goto L1907e4;
  #L1907ba.  v0:= new `android.graphics.RectF`;
  #L1907be.  call `<init>`(v0, v6) @signature `Landroid/graphics/RectF;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L1907c4.  v1:= v4.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L1907c8.  call `calculatePathForSize`(v4, v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L1907ce.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1907d2.  v1:= v4.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L1907d6.  call temp:= `getBoundsAsRectF`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1907dc.  v2:= temp @kind object;
  #L1907de.  call `drawShape`(v4, v5, v0, v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @kind super;
  #L1907e4.  return @kind void;
}
procedure `void` `drawDebug`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object @name `canvas`, `android.graphics.Rect` v11 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1907f8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1907fc.  if v0 == 0 then goto L190902;
  #L190800.  v1:= -16777216I;
  #L190804.  v2:= 127I;
  #L190808.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L19080e.  v1:= temp;
  #L190810.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L190816.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L19081a.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L190820.  call temp:= `showsChipIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L190826.  v0:= temp;
  #L190828.  if v0 != 0 then goto L190838;
  #L19082c.  call temp:= `showsCheckedIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L190832.  v0:= temp;
  #L190834.  if v0 == 0 then goto L190850;
  #L190838.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19083c.  call `calculateChipIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L190842.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190846.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L19084a.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L190850.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L190854.  if v0 == 0 then goto L190880;
  #L190858.  v0:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L19085c.  v4:= (`float`) v0 @kind i2f;
  #L19085e.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L190864.  v5:= temp;
  #L190866.  v0:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L19086a.  v6:= (`float`) v0 @kind i2f;
  #L19086c.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L190872.  v7:= temp;
  #L190874.  v8:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L190878.  v3:= v10 @kind object;
  #L19087a.  call `drawLine`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L190880.  call temp:= `showsCloseIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L190886.  v0:= temp;
  #L190888.  if v0 == 0 then goto L1908a4;
  #L19088c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L190890.  call `calculateCloseIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L190896.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19089a.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L19089e.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1908a4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1908a8.  v1:= -65536I;
  #L1908ac.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1908b2.  v1:= temp;
  #L1908b4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1908ba.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1908be.  call `calculateChipTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1908c4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1908c8.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1908cc.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1908d2.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1908d6.  v1:= -16711936I;
  #L1908dc.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1908e2.  v1:= temp;
  #L1908e4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1908ea.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1908ee.  call `calculateCloseIconTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1908f4.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1908f8.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1908fc.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L190902.  return @kind void;
}
procedure `void` `drawText`(`com.google.android.material.chip.ChipDrawable` v11 @kind this, `android.graphics.Canvas` v12 @kind object @name `canvas`, `android.graphics.Rect` v13 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L190914.  v0:= v11.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L190918.  if v0 == 0 then goto L190a46;
  #L19091c.  v0:= v11.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L190920.  call temp:= `calculateTextOriginAndAlignment`(v11, v13, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @kind virtual;
  #L190926.  v0:= temp @kind object;
  #L190928.  v1:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L19092c.  call `calculateTextBounds`(v11, v13, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L190932.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L190936.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L19093c.  v1:= temp @kind object;
  #L19093e.  if v1 == 0 then goto L190968;
  #L190942.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L190946.  call temp:= `getTextPaint`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L19094c.  v1:= temp @kind object;
  #L19094e.  call temp:= `getState`(v11) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L190954.  v2:= temp @kind object;
  #L190956.  v1.`android.text.TextPaint.drawableState` @type ^`int`[] := v2 @kind object;
  #L19095a.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L19095e.  v2:= v11.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190962.  call `updateTextPaintDrawState`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.updateTextPaintDrawState:(Landroid/content/Context;)V` @kind virtual;
  #L190968.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L19096c.  call temp:= `getTextPaint`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L190972.  v1:= temp @kind object;
  #L190974.  call `setTextAlign`(v1, v0) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L19097a.  v1:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L19097e.  call temp:= `getText`(v11) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L190984.  v2:= temp @kind object;
  #L190986.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L19098c.  v2:= temp @kind object;
  #L19098e.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L190994.  v1:= temp;
  #L190996.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L19099c.  v1:= temp;
  #L19099e.  v2:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1909a2.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1909a8.  v2:= temp;
  #L1909aa.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1909b0.  v2:= temp;
  #L1909b2.  if v1 <= v2 then goto L1909ba;
  #L1909b6.  v1:= 1I;
  #L1909b8.  goto L1909bc;
  #L1909ba.  v1:= 0I;
  #L1909bc.  v2:= 0I;
  #L1909be.  if v1 == 0 then goto L1909d4;
  #L1909c2.  call temp:= `save`(v12) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1909c8.  v2:= temp;
  #L1909ca.  v3:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1909ce.  call temp:= `clipRect`(v12, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L1909d4.  v3:= v11.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1909d8.  if v1 == 0 then goto L190a0c;
  #L1909dc.  v4:= v11.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1909e0.  if v4 == 0 then goto L190a0c;
  #L1909e4.  v4:= v11.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1909e8.  v5:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1909ec.  call temp:= `getTextPaint`(v5) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1909f2.  v5:= temp @kind object;
  #L1909f4.  v6:= v11.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1909f8.  call temp:= `width`(v6) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1909fe.  v6:= temp;
  #L190a00.  v7:= v11.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L190a04.  call temp:= `ellipsize`(v4, v5, v6, v7) @signature `Landroid/text/TextUtils;.ellipsize:(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;` @kind static;
  #L190a0a.  v3:= temp @kind object;
  #L190a0c.  v6:= 0I;
  #L190a0e.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L190a14.  v7:= temp;
  #L190a16.  v4:= v11.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L190a1a.  v8:= v4.`android.graphics.PointF.x` @type ^`float`;
  #L190a1e.  v4:= v11.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L190a22.  v9:= v4.`android.graphics.PointF.y` @type ^`float`;
  #L190a26.  v4:= v11.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L190a2a.  call temp:= `getTextPaint`(v4) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L190a30.  v10:= temp @kind object;
  #L190a32.  v4:= v12 @kind object;
  #L190a34.  v5:= v3 @kind object;
  #L190a36.  call `drawText`(v4, v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V` @kind virtual;
  #L190a3c.  if v1 == 0 then goto L190a46;
  #L190a40.  call `restoreToCount`(v12, v2) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L190a46.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getTintColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L18f21c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L18f220.  if v0 == 0 then goto L18f226;
  #L18f224.  goto L18f22a;
  #L18f226.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L18f22a.  return v0 @kind object;
}
procedure `boolean` `hasState`(`int`[] v4 @kind object @name `stateSet`, `int` v5 @name `state`) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18f384.  v0:= 0I;
  #L18f386.  if v4 != 0 then goto L18f38c;
  #L18f38a.  return v0;
  #L18f38c.  v1:= length @variable v4;
  #L18f38e.  v2:= v0;
  #L18f390.  if v2 >= v1 then goto L18f3a6;
  #L18f394.  v3:= v4[v2];
  #L18f398.  if v3 != v5 then goto L18f3a0;
  #L18f39c.  v0:= 1I;
  #L18f39e.  return v0;
  #L18f3a0.  v2:= v2 + 1;
  #L18f3a4.  goto L18f390;
  #L18f3a6.  return v0;
}
procedure `boolean` `isStateful`(`android.content.res.ColorStateList` v1 @kind object @name `colorStateList`) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L18f55c.  if v1 == 0 then goto L18f570;
  #L18f560.  call temp:= `isStateful`(v1) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L18f566.  v0:= temp;
  #L18f568.  if v0 == 0 then goto L18f570;
  #L18f56c.  v0:= 1I;
  #L18f56e.  goto L18f572;
  #L18f570.  v0:= 0I;
  #L18f572.  return v0;
}
procedure `boolean` `isStateful`(`android.graphics.drawable.Drawable` v1 @kind object @name `drawable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L18f584.  if v1 == 0 then goto L18f598;
  #L18f588.  call temp:= `isStateful`(v1) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L18f58e.  v0:= temp;
  #L18f590.  if v0 == 0 then goto L18f598;
  #L18f594.  v0:= 1I;
  #L18f596.  goto L18f59a;
  #L18f598.  v0:= 0I;
  #L18f59a.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.resources.TextAppearance` v1 @kind object @name `textAppearance`) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L18f5ac.  if v1 == 0 then goto L18f5cc;
  #L18f5b0.  v0:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f5b4.  if v0 == 0 then goto L18f5cc;
  #L18f5b8.  v0:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f5bc.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L18f5c2.  v0:= temp;
  #L18f5c4.  if v0 == 0 then goto L18f5cc;
  #L18f5c8.  v0:= 1I;
  #L18f5ca.  goto L18f5ce;
  #L18f5cc.  v0:= 0I;
  #L18f5ce.  return v0;
}
procedure `void` `loadFromAttributes`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.util.AttributeSet` v8 @kind object @name `attrs`, `int` v9 @name `defStyleAttr`, `int` v10 @name `defStyleRes`) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L190b34.  v0:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190b38.  v2:= `@@com.google.android.material.R$styleable.Chip` @type ^`int`[] @kind object;
  #L190b3c.  v6:= 0I;
  #L190b3e.  v5:= new `int`[v6];
  #L190b42.  v1:= v8 @kind object;
  #L190b44.  v3:= v9;
  #L190b46.  v4:= v10;
  #L190b48.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L190b4e.  v0:= temp @kind object;
  #L190b50.  v1:= `@@com.google.android.material.R$styleable.Chip_shapeAppearance` @type ^`int`;
  #L190b54.  call temp:= `hasValue`(v0, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L190b5a.  v1:= temp;
  #L190b5c.  v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` := v1 @kind boolean;
  #L190b60.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190b64.  v2:= `@@com.google.android.material.R$styleable.Chip_chipSurfaceColor` @type ^`int`;
  #L190b68.  call temp:= `getColorStateList`(v1, v0, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L190b6e.  v1:= temp @kind object;
  #L190b70.  call `setChipSurfaceColor`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @kind direct;
  #L190b76.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190b7a.  v2:= `@@com.google.android.material.R$styleable.Chip_chipBackgroundColor` @type ^`int`;
  #L190b7e.  call temp:= `getColorStateList`(v1, v0, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L190b84.  v1:= temp @kind object;
  #L190b86.  call `setChipBackgroundColor`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L190b8c.  v1:= `@@com.google.android.material.R$styleable.Chip_chipMinHeight` @type ^`int`;
  #L190b90.  v2:= 0I;
  #L190b92.  call temp:= `getDimension`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190b98.  v1:= temp;
  #L190b9a.  call `setChipMinHeight`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L190ba0.  v1:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L190ba4.  call temp:= `hasValue`(v0, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L190baa.  v1:= temp;
  #L190bac.  if v1 == 0 then goto L190bc2;
  #L190bb0.  v1:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L190bb4.  call temp:= `getDimension`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190bba.  v1:= temp;
  #L190bbc.  call `setChipCornerRadius`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L190bc2.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190bc6.  v3:= `@@com.google.android.material.R$styleable.Chip_chipStrokeColor` @type ^`int`;
  #L190bca.  call temp:= `getColorStateList`(v1, v0, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L190bd0.  v1:= temp @kind object;
  #L190bd2.  call `setChipStrokeColor`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L190bd8.  v1:= `@@com.google.android.material.R$styleable.Chip_chipStrokeWidth` @type ^`int`;
  #L190bdc.  call temp:= `getDimension`(v0, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190be2.  v1:= temp;
  #L190be4.  call `setChipStrokeWidth`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L190bea.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190bee.  v3:= `@@com.google.android.material.R$styleable.Chip_rippleColor` @type ^`int`;
  #L190bf2.  call temp:= `getColorStateList`(v1, v0, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L190bf8.  v1:= temp @kind object;
  #L190bfa.  call `setRippleColor`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L190c00.  v1:= `@@com.google.android.material.R$styleable.Chip_android_text` @type ^`int`;
  #L190c04.  call temp:= `getText`(v0, v1) @signature `Landroid/content/res/TypedArray;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L190c0a.  v1:= temp @kind object;
  #L190c0c.  call `setText`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L190c12.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190c16.  v3:= `@@com.google.android.material.R$styleable.Chip_android_textAppearance` @type ^`int`;
  #L190c1a.  call temp:= `getTextAppearance`(v1, v0, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getTextAppearance:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/resources/TextAppearance;` @kind static;
  #L190c20.  v1:= temp @kind object;
  #L190c22.  call `setTextAppearance`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L190c28.  v1:= `@@com.google.android.material.R$styleable.Chip_android_ellipsize` @type ^`int`;
  #L190c2c.  call temp:= `getInt`(v0, v1, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L190c32.  v1:= temp;
  #L190c34.  v3:= 1I;
  #L190c36.  if v1 == v3 then goto L190c60;
  #L190c3a.  v3:= 2I;
  #L190c3c.  if v1 == v3 then goto L190c54;
  #L190c40.  v3:= 3I;
  #L190c42.  if v1 == v3 then goto L190c48;
  #L190c46.  goto L190c6c;
  #L190c48.  v3:= `@@android.text.TextUtils$TruncateAt.END` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L190c4c.  call `setEllipsize`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L190c52.  goto L190c6c;
  #L190c54.  v3:= `@@android.text.TextUtils$TruncateAt.MIDDLE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L190c58.  call `setEllipsize`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L190c5e.  goto L190c6c;
  #L190c60.  v3:= `@@android.text.TextUtils$TruncateAt.START` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L190c64.  call `setEllipsize`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L190c6a.  
  #L190c6c.  v3:= `@@com.google.android.material.R$styleable.Chip_chipIconVisible` @type ^`int`;
  #L190c70.  call temp:= `getBoolean`(v0, v3, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190c76.  v3:= temp;
  #L190c78.  call `setChipIconVisible`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L190c7e.  v3:= "http://schemas.android.com/apk/res-auto" @kind object;
  #L190c82.  if v8 == 0 then goto L190cb8;
  #L190c86.  v4:= "chipIconEnabled" @kind object;
  #L190c8a.  call temp:= `getAttributeValue`(v8, v3, v4) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L190c90.  v4:= temp @kind object;
  #L190c92.  if v4 == 0 then goto L190cb8;
  #L190c96.  v4:= "chipIconVisible" @kind object;
  #L190c9a.  call temp:= `getAttributeValue`(v8, v3, v4) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L190ca0.  v4:= temp @kind object;
  #L190ca2.  if v4 != 0 then goto L190cb8;
  #L190ca6.  v4:= `@@com.google.android.material.R$styleable.Chip_chipIconEnabled` @type ^`int`;
  #L190caa.  call temp:= `getBoolean`(v0, v4, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190cb0.  v4:= temp;
  #L190cb2.  call `setChipIconVisible`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L190cb8.  v4:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190cbc.  v5:= `@@com.google.android.material.R$styleable.Chip_chipIcon` @type ^`int`;
  #L190cc0.  call temp:= `getDrawable`(v4, v0, v5) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L190cc6.  v4:= temp @kind object;
  #L190cc8.  call `setChipIcon`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L190cce.  v4:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L190cd2.  call temp:= `hasValue`(v0, v4) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L190cd8.  v4:= temp;
  #L190cda.  if v4 == 0 then goto L190cf4;
  #L190cde.  v4:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190ce2.  v5:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L190ce6.  call temp:= `getColorStateList`(v4, v0, v5) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L190cec.  v4:= temp @kind object;
  #L190cee.  call `setChipIconTint`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L190cf4.  v4:= `@@com.google.android.material.R$styleable.Chip_chipIconSize` @type ^`int`;
  #L190cf8.  call temp:= `getDimension`(v0, v4, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190cfe.  v4:= temp;
  #L190d00.  call `setChipIconSize`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L190d06.  v4:= `@@com.google.android.material.R$styleable.Chip_closeIconVisible` @type ^`int`;
  #L190d0a.  call temp:= `getBoolean`(v0, v4, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190d10.  v4:= temp;
  #L190d12.  call `setCloseIconVisible`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L190d18.  if v8 == 0 then goto L190d4e;
  #L190d1c.  v4:= "closeIconEnabled" @kind object;
  #L190d20.  call temp:= `getAttributeValue`(v8, v3, v4) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L190d26.  v4:= temp @kind object;
  #L190d28.  if v4 == 0 then goto L190d4e;
  #L190d2c.  v4:= "closeIconVisible" @kind object;
  #L190d30.  call temp:= `getAttributeValue`(v8, v3, v4) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L190d36.  v4:= temp @kind object;
  #L190d38.  if v4 != 0 then goto L190d4e;
  #L190d3c.  v4:= `@@com.google.android.material.R$styleable.Chip_closeIconEnabled` @type ^`int`;
  #L190d40.  call temp:= `getBoolean`(v0, v4, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190d46.  v4:= temp;
  #L190d48.  call `setCloseIconVisible`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L190d4e.  v4:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190d52.  v5:= `@@com.google.android.material.R$styleable.Chip_closeIcon` @type ^`int`;
  #L190d56.  call temp:= `getDrawable`(v4, v0, v5) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L190d5c.  v4:= temp @kind object;
  #L190d5e.  call `setCloseIcon`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L190d64.  v4:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190d68.  v5:= `@@com.google.android.material.R$styleable.Chip_closeIconTint` @type ^`int`;
  #L190d6c.  call temp:= `getColorStateList`(v4, v0, v5) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L190d72.  v4:= temp @kind object;
  #L190d74.  call `setCloseIconTint`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L190d7a.  v4:= `@@com.google.android.material.R$styleable.Chip_closeIconSize` @type ^`int`;
  #L190d7e.  call temp:= `getDimension`(v0, v4, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190d84.  v4:= temp;
  #L190d86.  call `setCloseIconSize`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L190d8c.  v4:= `@@com.google.android.material.R$styleable.Chip_android_checkable` @type ^`int`;
  #L190d90.  call temp:= `getBoolean`(v0, v4, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190d96.  v4:= temp;
  #L190d98.  call `setCheckable`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L190d9e.  v4:= `@@com.google.android.material.R$styleable.Chip_checkedIconVisible` @type ^`int`;
  #L190da2.  call temp:= `getBoolean`(v0, v4, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190da8.  v4:= temp;
  #L190daa.  call `setCheckedIconVisible`(v7, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L190db0.  if v8 == 0 then goto L190de6;
  #L190db4.  v4:= "checkedIconEnabled" @kind object;
  #L190db8.  call temp:= `getAttributeValue`(v8, v3, v4) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L190dbe.  v4:= temp @kind object;
  #L190dc0.  if v4 == 0 then goto L190de6;
  #L190dc4.  v4:= "checkedIconVisible" @kind object;
  #L190dc8.  call temp:= `getAttributeValue`(v8, v3, v4) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L190dce.  v3:= temp @kind object;
  #L190dd0.  if v3 != 0 then goto L190de6;
  #L190dd4.  v3:= `@@com.google.android.material.R$styleable.Chip_checkedIconEnabled` @type ^`int`;
  #L190dd8.  call temp:= `getBoolean`(v0, v3, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L190dde.  v3:= temp;
  #L190de0.  call `setCheckedIconVisible`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L190de6.  v3:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190dea.  v4:= `@@com.google.android.material.R$styleable.Chip_checkedIcon` @type ^`int`;
  #L190dee.  call temp:= `getDrawable`(v3, v0, v4) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L190df4.  v3:= temp @kind object;
  #L190df6.  call `setCheckedIcon`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L190dfc.  v3:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190e00.  v4:= `@@com.google.android.material.R$styleable.Chip_showMotionSpec` @type ^`int`;
  #L190e04.  call temp:= `createFromAttribute`(v3, v0, v4) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L190e0a.  v3:= temp @kind object;
  #L190e0c.  call `setShowMotionSpec`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L190e12.  v3:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190e16.  v4:= `@@com.google.android.material.R$styleable.Chip_hideMotionSpec` @type ^`int`;
  #L190e1a.  call temp:= `createFromAttribute`(v3, v0, v4) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L190e20.  v3:= temp @kind object;
  #L190e22.  call `setHideMotionSpec`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L190e28.  v3:= `@@com.google.android.material.R$styleable.Chip_chipStartPadding` @type ^`int`;
  #L190e2c.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e32.  v3:= temp;
  #L190e34.  call `setChipStartPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L190e3a.  v3:= `@@com.google.android.material.R$styleable.Chip_iconStartPadding` @type ^`int`;
  #L190e3e.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e44.  v3:= temp;
  #L190e46.  call `setIconStartPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L190e4c.  v3:= `@@com.google.android.material.R$styleable.Chip_iconEndPadding` @type ^`int`;
  #L190e50.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e56.  v3:= temp;
  #L190e58.  call `setIconEndPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L190e5e.  v3:= `@@com.google.android.material.R$styleable.Chip_textStartPadding` @type ^`int`;
  #L190e62.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e68.  v3:= temp;
  #L190e6a.  call `setTextStartPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L190e70.  v3:= `@@com.google.android.material.R$styleable.Chip_textEndPadding` @type ^`int`;
  #L190e74.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e7a.  v3:= temp;
  #L190e7c.  call `setTextEndPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L190e82.  v3:= `@@com.google.android.material.R$styleable.Chip_closeIconStartPadding` @type ^`int`;
  #L190e86.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e8c.  v3:= temp;
  #L190e8e.  call `setCloseIconStartPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L190e94.  v3:= `@@com.google.android.material.R$styleable.Chip_closeIconEndPadding` @type ^`int`;
  #L190e98.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190e9e.  v3:= temp;
  #L190ea0.  call `setCloseIconEndPadding`(v7, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L190ea6.  v3:= `@@com.google.android.material.R$styleable.Chip_chipEndPadding` @type ^`int`;
  #L190eaa.  call temp:= `getDimension`(v0, v3, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L190eb0.  v2:= temp;
  #L190eb2.  call `setChipEndPadding`(v7, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L190eb8.  v2:= `@@com.google.android.material.R$styleable.Chip_android_maxWidth` @type ^`int`;
  #L190ebc.  v3:= 2147483647I;
  #L190ec2.  call temp:= `getDimensionPixelSize`(v0, v2, v3) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L190ec8.  v2:= temp;
  #L190eca.  call `setMaxWidth`(v7, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L190ed0.  call `recycle`(v0) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L190ed6.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v18 @kind this, `int`[] v19 @kind object @name `chipState`, `int`[] v20 @kind object @name `closeIconState`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L18f6f8.  v0:= v18 @kind object;
  #L18f6fc.  v1:= v19 @kind object;
  #L18f700.  v2:= v20 @kind object;
  #L18f704.  call temp:= `onStateChange`(v18, v19) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L18f70a.  v3:= temp;
  #L18f70c.  v4:= 0I;
  #L18f70e.  v5:= v0.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f712.  if v5 == 0 then goto L18f724;
  #L18f716.  v7:= v0.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L18f71a.  call temp:= `getColorForState`(v5, v1, v7) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L18f720.  v5:= temp;
  #L18f722.  goto L18f726;
  #L18f724.  v5:= 0I;
  #L18f726.  v7:= v0.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L18f72a.  if v7 == v5 then goto L18f734;
  #L18f72e.  v0.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int` := v5;
  #L18f732.  v3:= 1I;
  #L18f734.  v7:= v0.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f738.  if v7 == 0 then goto L18f74a;
  #L18f73c.  v8:= v0.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L18f740.  call temp:= `getColorForState`(v7, v1, v8) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L18f746.  v7:= temp;
  #L18f748.  goto L18f74c;
  #L18f74a.  v7:= 0I;
  #L18f74c.  v8:= v0.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L18f750.  if v8 == v7 then goto L18f75a;
  #L18f754.  v0.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int` := v7;
  #L18f758.  v3:= 1I;
  #L18f75a.  
  #L18f75c.  call temp:= `layer`(v5, v7) @signature `Lcom/google/android/material/color/MaterialColors;.layer:(II)I` @kind static;
  #L18f762.  v8:= temp;
  #L18f764.  v9:= v0.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int`;
  #L18f768.  v10:= 1I;
  #L18f76a.  if v9 == v8 then goto L18f772;
  #L18f76e.  v9:= v10;
  #L18f770.  goto L18f774;
  #L18f772.  v9:= 0I;
  #L18f774.  call temp:= `getFillColor`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L18f77a.  v11:= temp @kind object;
  #L18f77c.  if v11 != 0 then goto L18f784;
  #L18f780.  v11:= v10;
  #L18f782.  goto L18f786;
  #L18f784.  v11:= 0I;
  #L18f786.  v9:= v9 ^| v11 @kind int;
  #L18f788.  if v9 == 0 then goto L18f7a0;
  #L18f78c.  v0.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int` := v8;
  #L18f790.  call temp:= `valueOf`(v8) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L18f796.  v11:= temp @kind object;
  #L18f798.  call `setFillColor`(v0, v11) @signature `Lcom/google/android/material/chip/ChipDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L18f79e.  v3:= 1I;
  #L18f7a0.  v11:= v0.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f7a4.  if v11 == 0 then goto L18f7b6;
  #L18f7a8.  v12:= v0.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L18f7ac.  call temp:= `getColorForState`(v11, v1, v12) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L18f7b2.  v11:= temp;
  #L18f7b4.  goto L18f7b8;
  #L18f7b6.  v11:= 0I;
  #L18f7b8.  v12:= v0.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L18f7bc.  if v12 == v11 then goto L18f7c6;
  #L18f7c0.  v0.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int` := v11;
  #L18f7c4.  v3:= 1I;
  #L18f7c6.  v12:= v0.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f7ca.  if v12 == 0 then goto L18f7ec;
  #L18f7ce.  call temp:= `shouldDrawRippleCompat`(v19) @signature `Lcom/google/android/material/ripple/RippleUtils;.shouldDrawRippleCompat:([I)Z` @kind static;
  #L18f7d4.  v12:= temp;
  #L18f7d6.  if v12 == 0 then goto L18f7ec;
  #L18f7da.  v12:= v0.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f7de.  v13:= v0.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L18f7e2.  call temp:= `getColorForState`(v12, v1, v13) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L18f7e8.  v12:= temp;
  #L18f7ea.  goto L18f7ee;
  #L18f7ec.  v12:= 0I;
  #L18f7ee.  v13:= v0.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L18f7f2.  if v13 == v12 then goto L18f804;
  #L18f7f6.  v0.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int` := v12;
  #L18f7fa.  v13:= v0.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L18f7fe.  if v13 == 0 then goto L18f804;
  #L18f802.  v3:= 1I;
  #L18f804.  v13:= v0.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18f808.  call temp:= `getTextAppearance`(v13) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L18f80e.  v13:= temp @kind object;
  #L18f810.  if v13 == 0 then goto L18f846;
  #L18f814.  v13:= v0.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18f818.  call temp:= `getTextAppearance`(v13) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L18f81e.  v13:= temp @kind object;
  #L18f820.  v13:= v13.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f824.  if v13 == 0 then goto L18f846;
  #L18f828.  v13:= v0.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18f82c.  call temp:= `getTextAppearance`(v13) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L18f832.  v13:= temp @kind object;
  #L18f834.  v13:= v13.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f838.  v14:= v0.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L18f83c.  call temp:= `getColorForState`(v13, v1, v14) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L18f842.  v13:= temp;
  #L18f844.  goto L18f848;
  #L18f846.  v13:= 0I;
  #L18f848.  v14:= v0.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L18f84c.  if v14 == v13 then goto L18f856;
  #L18f850.  v0.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int` := v13;
  #L18f854.  v3:= 1I;
  #L18f856.  call temp:= `getState`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L18f85c.  v14:= temp @kind object;
  #L18f85e.  v15:= 16842912I;
  #L18f864.  call temp:= `hasState`(v14, v15) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @kind static;
  #L18f86a.  v14:= temp;
  #L18f86c.  if v14 == 0 then goto L18f87a;
  #L18f870.  v14:= v0.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L18f874.  if v14 == 0 then goto L18f87a;
  #L18f878.  goto L18f87c;
  #L18f87a.  v10:= 0I;
  #L18f87c.  v14:= v0.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L18f880.  if v14 == v10 then goto L18f8ac;
  #L18f884.  v14:= v0.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f888.  if v14 == 0 then goto L18f8ac;
  #L18f88c.  call temp:= `calculateChipIconWidth`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L18f892.  v14:= temp;
  #L18f894.  v0.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v10 @kind boolean;
  #L18f898.  call temp:= `calculateChipIconWidth`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L18f89e.  v15:= temp;
  #L18f8a0.  v3:= 1I;
  #L18f8a2.  v16:= fcmpl(v14, v15);
  #L18f8a6.  if v16 == 0 then goto L18f8ac;
  #L18f8aa.  v4:= 1I;
  #L18f8ac.  v14:= v0.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f8b0.  if v14 == 0 then goto L18f8c2;
  #L18f8b4.  v15:= v0.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L18f8b8.  call temp:= `getColorForState`(v14, v1, v15) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L18f8be.  v14:= temp;
  #L18f8c0.  goto L18f8c4;
  #L18f8c2.  v14:= 0I;
  #L18f8c4.  v15:= v0.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L18f8c8.  if v15 == v14 then goto L18f8e6;
  #L18f8cc.  v0.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int` := v14;
  #L18f8d0.  v15:= v0.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f8d4.  v6:= v0.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L18f8d8.  call temp:= `updateTintFilter`(v0, v15, v6) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L18f8de.  v6:= temp @kind object;
  #L18f8e0.  v0.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v6 @kind object;
  #L18f8e4.  v3:= 1I;
  #L18f8e6.  v6:= v0.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f8ea.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f8f0.  v6:= temp;
  #L18f8f2.  if v6 == 0 then goto L18f904;
  #L18f8f6.  v6:= v0.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f8fa.  call temp:= `setState`(v6, v1) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L18f900.  v6:= temp;
  #L18f902.  v3:= v3 ^| v6 @kind int;
  #L18f904.  v6:= v0.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f908.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f90e.  v6:= temp;
  #L18f910.  if v6 == 0 then goto L18f922;
  #L18f914.  v6:= v0.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f918.  call temp:= `setState`(v6, v1) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L18f91e.  v6:= temp;
  #L18f920.  v3:= v3 ^| v6 @kind int;
  #L18f922.  v6:= v0.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f926.  call temp:= `isStateful`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f92c.  v6:= temp;
  #L18f92e.  if v6 == 0 then goto L18f964;
  #L18f932.  v6:= length @variable v1;
  #L18f934.  v15:= length @variable v2;
  #L18f936.  v6:= v6 + v15 @kind int;
  #L18f938.  v6:= new `int`[v6];
  #L18f93c.  v15:= length @variable v1;
  #L18f93e.  v17:= v5;
  #L18f942.  v5:= 0I;
  #L18f944.  call `arraycopy`(v1, v5, v6, v5, v15) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L18f94a.  v15:= length @variable v1;
  #L18f94c.  v1:= length @variable v2;
  #L18f94e.  call `arraycopy`(v2, v5, v6, v15, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L18f954.  v1:= v0.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f958.  call temp:= `setState`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L18f95e.  v1:= temp;
  #L18f960.  v3:= v3 ^| v1 @kind int;
  #L18f962.  goto L18f968;
  #L18f964.  v17:= v5;
  #L18f968.  v1:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L18f96c.  if v1 == 0 then goto L18f98e;
  #L18f970.  v1:= v0.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f974.  call temp:= `isStateful`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f97a.  v1:= temp;
  #L18f97c.  if v1 == 0 then goto L18f98e;
  #L18f980.  v1:= v0.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f984.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L18f98a.  v1:= temp;
  #L18f98c.  v3:= v3 ^| v1 @kind int;
  #L18f98e.  if v3 == 0 then goto L18f998;
  #L18f992.  call `invalidateSelf`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L18f998.  if v4 == 0 then goto L18f9a2;
  #L18f99c.  call `onSizeChange`(v18) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L18f9a2.  return v3;
}
procedure `void` `setChipSurfaceColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipSurfaceColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L191620.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L191624.  if v0 == v2 then goto L19163a;
  #L191628.  v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L19162c.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L191632.  v0:= temp @kind object;
  #L191634.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L19163a.  return @kind void;
}
procedure `boolean` `showsCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L18fa88.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L18fa8c.  if v0 == 0 then goto L18faa4;
  #L18fa90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18fa94.  if v0 == 0 then goto L18faa4;
  #L18fa98.  v0:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L18fa9c.  if v0 == 0 then goto L18faa4;
  #L18faa0.  v0:= 1I;
  #L18faa2.  goto L18faa6;
  #L18faa4.  v0:= 0I;
  #L18faa6.  return v0;
}
procedure `boolean` `showsChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L18fab8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L18fabc.  if v0 == 0 then goto L18facc;
  #L18fac0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18fac4.  if v0 == 0 then goto L18facc;
  #L18fac8.  v0:= 1I;
  #L18faca.  goto L18face;
  #L18facc.  v0:= 0I;
  #L18face.  return v0;
}
procedure `boolean` `showsCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L18fae0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L18fae4.  if v0 == 0 then goto L18faf4;
  #L18fae8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18faec.  if v0 == 0 then goto L18faf4;
  #L18faf0.  v0:= 1I;
  #L18faf2.  goto L18faf6;
  #L18faf4.  v0:= 0I;
  #L18faf6.  return v0;
}
procedure `void` `unapplyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `drawable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L191ddc.  if v2 == 0 then goto L191de8;
  #L191de0.  v0:= 0I;
  #L191de2.  call `setCallback`(v2, v0) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L191de8.  return @kind void;
}
procedure `void` `updateCompatRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L191e20.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L191e24.  if v0 == 0 then goto L191e36;
  #L191e28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L191e2c.  call temp:= `sanitizeRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L191e32.  v0:= temp @kind object;
  #L191e34.  goto L191e38;
  #L191e36.  v0:= 0I;
  #L191e38.  v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` := v0 @kind object;
  #L191e3c.  return @kind void;
}
procedure `void` `updateFrameworkCloseIconRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L191e50.  v0:= new `android.graphics.drawable.RippleDrawable`;
  #L191e54.  call temp:= `getRippleColor`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L191e5a.  v1:= temp @kind object;
  #L191e5c.  call temp:= `sanitizeRippleDrawableColor`(v1) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L191e62.  v1:= temp @kind object;
  #L191e64.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L191e68.  v3:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L191e6c.  call `<init>`(v0, v1, v2, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.<init>:(Landroid/content/res/ColorStateList;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191e72.  v4.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L191e76.  return @kind void;
}
procedure `float` `calculateChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L18fbb8.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L18fbbe.  v0:= temp;
  #L18fbc0.  if v0 != 0 then goto L18fbd6;
  #L18fbc4.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L18fbca.  v0:= temp;
  #L18fbcc.  if v0 == 0 then goto L18fbd2;
  #L18fbd0.  goto L18fbd6;
  #L18fbd2.  v0:= 0I;
  #L18fbd4.  return v0;
  #L18fbd6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L18fbda.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L18fbde.  v0:= v0 + v1 @kind float;
  #L18fbe0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L18fbe4.  v0:= v0 + v1 @kind float;
  #L18fbe6.  return v0;
}
procedure `float` `calculateCloseIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L18fbf8.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L18fbfe.  v0:= temp;
  #L18fc00.  if v0 == 0 then goto L18fc16;
  #L18fc04.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L18fc08.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L18fc0c.  v0:= v0 + v1 @kind float;
  #L18fc0e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L18fc12.  v0:= v0 + v1 @kind float;
  #L18fc14.  return v0;
  #L18fc16.  v0:= 0I;
  #L18fc18.  return v0;
}
procedure `android.graphics.Paint$Align` `calculateTextOriginAndAlignment`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.Rect` v5 @kind object @name `bounds`, `android.graphics.PointF` v6 @kind object @name `pointF`) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18f23c.  v0:= 0I;
  #L18f23e.  call `set`(v6, v0, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L18f244.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L18f248.  v1:= v4.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L18f24c.  if v1 == 0 then goto L18f2aa;
  #L18f250.  v1:= v4.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L18f254.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L18f25a.  v2:= temp;
  #L18f25c.  v1:= v1 + v2 @kind float;
  #L18f25e.  v2:= v4.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L18f262.  v1:= v1 + v2 @kind float;
  #L18f264.  call temp:= `getLayoutDirection`(v4) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L18f26a.  v2:= temp;
  #L18f26c.  if v2 != 0 then goto L18f282;
  #L18f270.  v2:= v5.`android.graphics.Rect.left` @type ^`int`;
  #L18f274.  v2:= (`float`) v2 @kind i2f;
  #L18f276.  v2:= v2 + v1 @kind float;
  #L18f278.  v6.`android.graphics.PointF.x` @type ^`float` := v2;
  #L18f27c.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L18f280.  goto L18f292;
  #L18f282.  v2:= v5.`android.graphics.Rect.right` @type ^`int`;
  #L18f286.  v2:= (`float`) v2 @kind i2f;
  #L18f288.  v2:= v2 - v1 @kind float;
  #L18f28a.  v6.`android.graphics.PointF.x` @type ^`float` := v2;
  #L18f28e.  v0:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L18f292.  call temp:= `centerY`(v5) @signature `Landroid/graphics/Rect;.centerY:()I` @kind virtual;
  #L18f298.  v2:= temp;
  #L18f29a.  v2:= (`float`) v2 @kind i2f;
  #L18f29c.  call temp:= `calculateTextCenterFromBaseline`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @kind direct;
  #L18f2a2.  v3:= temp;
  #L18f2a4.  v2:= v2 - v3 @kind float;
  #L18f2a6.  v6.`android.graphics.PointF.y` @type ^`float` := v2;
  #L18f2aa.  return v0 @kind object;
}
procedure `void` `draw`(`com.google.android.material.chip.ChipDrawable` v10 @kind this, `android.graphics.Canvas` v11 @kind object @name `canvas`) @signature `Lcom/google/android/material/chip/ChipDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L190370.  call temp:= `getBounds`(v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L190376.  v0:= temp @kind object;
  #L190378.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L19037e.  v1:= temp;
  #L190380.  if v1 != 0 then goto L190422;
  #L190384.  call temp:= `getAlpha`(v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L19038a.  v1:= temp;
  #L19038c.  if v1 != 0 then goto L190392;
  #L190390.  goto L190422;
  #L190392.  v1:= 0I;
  #L190394.  v2:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L190398.  v3:= 255I;
  #L19039c.  if v2 >= v3 then goto L1903c6;
  #L1903a0.  v2:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L1903a4.  v5:= (`float`) v2 @kind i2f;
  #L1903a6.  v2:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L1903aa.  v6:= (`float`) v2 @kind i2f;
  #L1903ac.  v2:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L1903b0.  v7:= (`float`) v2 @kind i2f;
  #L1903b2.  v2:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L1903b6.  v8:= (`float`) v2 @kind i2f;
  #L1903b8.  v9:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1903bc.  v4:= v11 @kind object;
  #L1903be.  call temp:= `saveLayerAlpha`(v4, v5, v6, v7, v8, v9) @signature `Lcom/google/android/material/canvas/CanvasCompat;.saveLayerAlpha:(Landroid/graphics/Canvas;FFFFI)I` @kind static;
  #L1903c4.  v1:= temp;
  #L1903c6.  call `drawChipSurface`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1903cc.  call `drawChipBackground`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1903d2.  v2:= v10.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1903d6.  if v2 == 0 then goto L1903e0;
  #L1903da.  call `draw`(v10, v11) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L1903e0.  call `drawChipStroke`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1903e6.  call `drawCompatRipple`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1903ec.  call `drawChipIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1903f2.  call `drawCheckedIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1903f8.  v2:= v10.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L1903fc.  if v2 == 0 then goto L190406;
  #L190400.  call `drawText`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L190406.  call `drawCloseIcon`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L19040c.  call `drawDebug`(v10, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L190412.  v2:= v10.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L190416.  if v2 >= v3 then goto L190420;
  #L19041a.  call `restoreToCount`(v11, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L190420.  return @kind void;
  #L190422.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fdb4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L18fdb8.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f2bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f2c0.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f18c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f190.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fc6c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L18fc70.  if v0 == 0 then goto L18fc7e;
  #L18fc74.  call temp:= `getTopLeftCornerResolvedSize`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L18fc7a.  v0:= temp;
  #L18fc7c.  goto L18fc82;
  #L18fc7e.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L18fc82.  return v0;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fc94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L18fc98.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f2d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f2d8.  if v0 == 0 then goto L18f2e6;
  #L18f2dc.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L18f2e2.  v0:= temp @kind object;
  #L18f2e4.  goto L18f2e8;
  #L18f2e6.  v0:= 0I;
  #L18f2e8.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fcac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L18fcb0.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f1a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f1a8.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fcc4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L18fcc8.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fcdc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L18fce0.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f1bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f1c0.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fcf4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L18fcf8.  return v0;
}
procedure `void` `getChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190a58.  call temp:= `getBounds`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L190a5e.  v0:= temp @kind object;
  #L190a60.  call `calculateChipTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L190a66.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f2fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f300.  if v0 == 0 then goto L18f30e;
  #L18f304.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L18f30a.  v0:= temp @kind object;
  #L18f30c.  goto L18f310;
  #L18f30e.  v0:= 0I;
  #L18f310.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fe98.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L18fe9c.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd0c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L18fd10.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd24.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L18fd28.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L18fd40.  return v0;
}
procedure `int`[] `getCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fe80.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L18fe84.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f1d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f1d8.  return v0 @kind object;
}
procedure `void` `getCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object @name `bounds`) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190a78.  call temp:= `getBounds`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L190a7e.  v0:= temp @kind object;
  #L190a80.  call `calculateCloseIconTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L190a86.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f204.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L18f208.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f324.  v0:= v1.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L18f328.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fb08.  v0:= v1.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L18fb0c.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd54.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L18fd58.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd6c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L18fd70.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fdcc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L18fdd0.  v0:= (`int`) v0 @kind f2i;
  #L18fdd2.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18fde4.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L18fde8.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L18fdee.  v1:= temp;
  #L18fdf0.  v0:= v0 + v1 @kind float;
  #L18fdf2.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L18fdf6.  v0:= v0 + v1 @kind float;
  #L18fdf8.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18fdfc.  call temp:= `getText`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L18fe02.  v2:= temp @kind object;
  #L18fe04.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L18fe0a.  v2:= temp @kind object;
  #L18fe0c.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L18fe12.  v1:= temp;
  #L18fe14.  v0:= v0 + v1 @kind float;
  #L18fe16.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L18fe1a.  v0:= v0 + v1 @kind float;
  #L18fe1c.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L18fe22.  v1:= temp;
  #L18fe24.  v0:= v0 + v1 @kind float;
  #L18fe26.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L18fe2a.  v0:= v0 + v1 @kind float;
  #L18fe2c.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L18fe32.  v0:= temp;
  #L18fe34.  v1:= v3.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L18fe38.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L18fe3e.  v1:= temp;
  #L18fe40.  return v1;
}
procedure `int` `getMaxWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fe54.  v0:= v1.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L18fe58.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fe6c.  v0:= -3I;
  #L18fe6e.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.chip.ChipDrawable` v8 @kind this, `android.graphics.Outline` v9 @kind object @name `outline`) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L190a98.  v0:= v8.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L190a9c.  if v0 == 0 then goto L190aa8;
  #L190aa0.  call `getOutline`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @kind super;
  #L190aa6.  return @kind void;
  #L190aa8.  call temp:= `getBounds`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L190aae.  v0:= temp @kind object;
  #L190ab0.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L190ab6.  v1:= temp;
  #L190ab8.  if v1 != 0 then goto L190ac8;
  #L190abc.  v1:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L190ac0.  call `setRoundRect`(v9, v0, v1) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L190ac6.  goto L190ae8;
  #L190ac8.  v3:= 0I;
  #L190aca.  v4:= 0I;
  #L190acc.  call temp:= `getIntrinsicWidth`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L190ad2.  v5:= temp;
  #L190ad4.  call temp:= `getIntrinsicHeight`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L190ada.  v6:= temp;
  #L190adc.  v7:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L190ae0.  v2:= v9 @kind object;
  #L190ae2.  call `setRoundRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Outline;.setRoundRect:(IIIIF)V` @kind virtual;
  #L190ae8.  call temp:= `getAlpha`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L190aee.  v1:= temp;
  #L190af0.  v1:= (`float`) v1 @kind i2f;
  #L190af2.  v2:= 255.0F;
  #L190af6.  v1:= v1 / v2 @kind float;
  #L190af8.  call `setAlpha`(v9, v1) @signature `Landroid/graphics/Outline;.setAlpha:(F)V` @kind virtual;
  #L190afe.  return @kind void;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f1ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f1f0.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fb20.  v0:= v1.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L18fb24.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18feb0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L18feb4.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fb98.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18fb9c.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L18fba2.  v0:= temp @kind object;
  #L18fba4.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd84.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L18fd88.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L18fda0.  return v0;
}
procedure `boolean` `getUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getUseCompatRipple:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f36c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L18f370.  return v0;
}
procedure `void` `invalidateDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `who`) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190b10.  call temp:= `getCallback`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L190b16.  v0:= temp @kind object;
  #L190b18.  if v0 == 0 then goto L190b22;
  #L190b1c.  call `invalidateDrawable`(v0, v1) @signature `Landroid/graphics/drawable/Drawable$Callback;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L190b22.  return @kind void;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f3b8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L18f3bc.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f3d0.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L18f3d6.  v0:= temp;
  #L18f3d8.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f3ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L18f3f0.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f404.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L18f40a.  v0:= temp;
  #L18f40c.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f420.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L18f424.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f438.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L18f43e.  v0:= temp;
  #L18f440.  return v0;
}
procedure `boolean` `isCloseIconStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f454.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f458.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f45e.  v0:= temp;
  #L18f460.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f474.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L18f478.  return v0;
}
procedure `boolean` `isShapeThemingEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isShapeThemingEnabled:()Z` @AccessFlag  {
    temp;
    v0;

  #L18f48c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L18f490.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f4a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f4a8.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L18f4ae.  v0:= temp;
  #L18f4b0.  if v0 != 0 then goto L18f546;
  #L18f4b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f4b8.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L18f4be.  v0:= temp;
  #L18f4c0.  if v0 != 0 then goto L18f546;
  #L18f4c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f4c8.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L18f4ce.  v0:= temp;
  #L18f4d0.  if v0 != 0 then goto L18f546;
  #L18f4d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L18f4d8.  if v0 == 0 then goto L18f4ec;
  #L18f4dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f4e0.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L18f4e6.  v0:= temp;
  #L18f4e8.  if v0 != 0 then goto L18f546;
  #L18f4ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L18f4f0.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L18f4f6.  v0:= temp @kind object;
  #L18f4f8.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @kind static;
  #L18f4fe.  v0:= temp;
  #L18f500.  if v0 != 0 then goto L18f546;
  #L18f504.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L18f50a.  v0:= temp;
  #L18f50c.  if v0 != 0 then goto L18f546;
  #L18f510.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f514.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f51a.  v0:= temp;
  #L18f51c.  if v0 != 0 then goto L18f546;
  #L18f520.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f524.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L18f52a.  v0:= temp;
  #L18f52c.  if v0 != 0 then goto L18f546;
  #L18f530.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L18f534.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L18f53a.  v0:= temp;
  #L18f53c.  if v0 == 0 then goto L18f542;
  #L18f540.  goto L18f546;
  #L18f542.  v0:= 0I;
  #L18f544.  goto L18f548;
  #L18f546.  v0:= 1I;
  #L18f548.  return v0;
}
procedure `boolean` `onLayoutDirectionChanged`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 @name `layoutDirection`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLayoutDirectionChanged:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18f5e0.  call temp:= `onLayoutDirectionChanged`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onLayoutDirectionChanged:(I)Z` @kind super;
  #L18f5e6.  v0:= temp;
  #L18f5e8.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L18f5ee.  v1:= temp;
  #L18f5f0.  if v1 == 0 then goto L18f602;
  #L18f5f4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f5f8.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L18f5fe.  v1:= temp;
  #L18f600.  v0:= v0 ^| v1 @kind int;
  #L18f602.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L18f608.  v1:= temp;
  #L18f60a.  if v1 == 0 then goto L18f61c;
  #L18f60e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f612.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L18f618.  v1:= temp;
  #L18f61a.  v0:= v0 ^| v1 @kind int;
  #L18f61c.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L18f622.  v1:= temp;
  #L18f624.  if v1 == 0 then goto L18f636;
  #L18f628.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f62c.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L18f632.  v1:= temp;
  #L18f634.  v0:= v0 ^| v1 @kind int;
  #L18f636.  if v0 == 0 then goto L18f640;
  #L18f63a.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L18f640.  v1:= 1I;
  #L18f642.  return v1;
}
procedure `boolean` `onLevelChange`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 @name `level`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L18f654.  call temp:= `onLevelChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onLevelChange:(I)Z` @kind super;
  #L18f65a.  v0:= temp;
  #L18f65c.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L18f662.  v1:= temp;
  #L18f664.  if v1 == 0 then goto L18f676;
  #L18f668.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f66c.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L18f672.  v1:= temp;
  #L18f674.  v0:= v0 ^| v1 @kind int;
  #L18f676.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L18f67c.  v1:= temp;
  #L18f67e.  if v1 == 0 then goto L18f690;
  #L18f682.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f686.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L18f68c.  v1:= temp;
  #L18f68e.  v0:= v0 ^| v1 @kind int;
  #L18f690.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L18f696.  v1:= temp;
  #L18f698.  if v1 == 0 then goto L18f6aa;
  #L18f69c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18f6a0.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L18f6a6.  v1:= temp;
  #L18f6a8.  v0:= v0 ^| v1 @kind int;
  #L18f6aa.  if v0 == 0 then goto L18f6b4;
  #L18f6ae.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L18f6b4.  return v0;
}
procedure `void` `onSizeChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L190ee8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` @kind object;
  #L190eec.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L190ef2.  v0:= temp @kind object;
  #L190ef4.  v0:= (`com.google.android.material.chip.ChipDrawable$Delegate`) v0 @kind object;
  #L190ef8.  if v0 == 0 then goto L190f02;
  #L190efc.  call `onChipDrawableSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable$Delegate;.onChipDrawableSizeChange:()V` @kind interface;
  #L190f02.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object @name `state`) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f6c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L18f6cc.  if v0 == 0 then goto L18f6d6;
  #L18f6d0.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L18f6d6.  call temp:= `getCloseIconState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L18f6dc.  v0:= temp @kind object;
  #L18f6de.  call temp:= `onStateChange`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L18f6e4.  v0:= temp;
  #L18f6e6.  return v0;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.chip.ChipDrawable` v0 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L190f14.  call `onSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L190f1a.  call `invalidateSelf`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L190f20.  return @kind void;
}
procedure `void` `scheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `who`, `java.lang.Runnable` v3 @kind object @name `what`, `long` v4 @name `when`) @signature `Lcom/google/android/material/chip/ChipDrawable;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190f34.  call temp:= `getCallback`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L190f3a.  v0:= temp @kind object;
  #L190f3c.  if v0 == 0 then goto L190f46;
  #L190f40.  call `scheduleDrawable`(v0, v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable$Callback;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @kind interface;
  #L190f46.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `alpha`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190f58.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L190f5c.  if v0 == v2 then goto L190f6a;
  #L190f60.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v2;
  #L190f64.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L190f6a.  return @kind void;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `boolean` v4 @name `checkable`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L190f7c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L190f80.  if v0 == v4 then goto L190fbe;
  #L190f84.  v3.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` := v4 @kind boolean;
  #L190f88.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L190f8e.  v0:= temp;
  #L190f90.  if v4 != 0 then goto L190fa2;
  #L190f94.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L190f98.  if v1 == 0 then goto L190fa2;
  #L190f9c.  v1:= 0I;
  #L190f9e.  v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v1 @kind boolean;
  #L190fa2.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L190fa8.  v1:= temp;
  #L190faa.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L190fb0.  v2:= fcmpl(v0, v1);
  #L190fb4.  if v2 == 0 then goto L190fbe;
  #L190fb8.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L190fbe.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190fd0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L190fd4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L190fda.  v0:= temp @kind object;
  #L190fdc.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L190fe2.  v0:= temp;
  #L190fe4.  call `setCheckable`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L190fea.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.drawable.Drawable` v5 @kind object @name `checkedIcon`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L190ffc.  v0:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L191000.  if v0 == v5 then goto L191040;
  #L191004.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L19100a.  v1:= temp;
  #L19100c.  v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` := v5 @kind object;
  #L191010.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L191016.  v2:= temp;
  #L191018.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19101c.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191022.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L191026.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L19102c.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191032.  v3:= fcmpl(v1, v2);
  #L191036.  if v3 == 0 then goto L191040;
  #L19103a.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191040.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `checkedIconEnabled`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L191054.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L19105a.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19106c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191070.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191076.  v0:= temp @kind object;
  #L191078.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L19107e.  v0:= temp;
  #L191080.  call `setCheckedIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L191086.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191098.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L19109c.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1910a2.  v0:= temp @kind object;
  #L1910a4.  call `setCheckedIcon`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1910aa.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191120.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191124.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L19112a.  v0:= temp @kind object;
  #L19112c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L191132.  v0:= temp;
  #L191134.  call `setCheckedIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L19113a.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `boolean` v5 @name `checkedIconVisible`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1910bc.  v0:= v4.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1910c0.  if v0 == v5 then goto L19110c;
  #L1910c4.  call temp:= `showsCheckedIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1910ca.  v0:= temp;
  #L1910cc.  v4.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` := v5 @kind boolean;
  #L1910d0.  call temp:= `showsCheckedIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1910d6.  v1:= temp;
  #L1910d8.  if v0 == v1 then goto L1910e0;
  #L1910dc.  v2:= 1I;
  #L1910de.  goto L1910e2;
  #L1910e0.  v2:= 0I;
  #L1910e2.  if v2 == 0 then goto L19110c;
  #L1910e6.  if v1 == 0 then goto L1910f6;
  #L1910ea.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1910ee.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1910f4.  goto L191100;
  #L1910f6.  v3:= v4.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1910fa.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191100.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191106.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L19110c.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipBackgroundColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19114c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L191150.  if v0 == v2 then goto L191166;
  #L191154.  v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L191158.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L19115e.  v0:= temp @kind object;
  #L191160.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L191166.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191178.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L19117c.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L191182.  v0:= temp @kind object;
  #L191184.  call `setChipBackgroundColor`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L19118a.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipCornerRadius`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19119c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1911a0.  v0:= fcmpl(v0, v2);
  #L1911a4.  if v0 == 0 then goto L1911c2;
  #L1911a8.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v2;
  #L1911ac.  call temp:= `getShapeAppearanceModel`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1911b2.  v0:= temp @kind object;
  #L1911b4.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1911ba.  v0:= temp @kind object;
  #L1911bc.  call `setShapeAppearanceModel`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L1911c2.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1911d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1911d8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1911de.  v0:= temp @kind object;
  #L1911e0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1911e6.  v0:= temp;
  #L1911e8.  call `setChipCornerRadius`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L1911ee.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191200.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L191204.  v0:= fcmpl(v0, v2);
  #L191208.  if v0 == 0 then goto L19121c;
  #L19120c.  v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float` := v2;
  #L191210.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191216.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L19121c.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191230.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191234.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L19123a.  v0:= temp @kind object;
  #L19123c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191242.  v0:= temp;
  #L191244.  call `setChipEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L19124a.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.drawable.Drawable` v5 @kind object @name `chipIcon`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19125c.  call temp:= `getChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L191262.  v0:= temp @kind object;
  #L191264.  if v0 == v5 then goto L1912c4;
  #L191268.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L19126e.  v1:= temp;
  #L191270.  if v5 == 0 then goto L191286;
  #L191274.  call temp:= `wrap`(v5) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L19127a.  v2:= temp @kind object;
  #L19127c.  call temp:= `mutate`(v2) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L191282.  v2:= temp @kind object;
  #L191284.  goto L191288;
  #L191286.  v2:= 0I;
  #L191288.  v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L19128c.  call temp:= `calculateChipIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L191292.  v2:= temp;
  #L191294.  call `unapplyChildDrawable`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L19129a.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1912a0.  v3:= temp;
  #L1912a2.  if v3 == 0 then goto L1912b0;
  #L1912a6.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1912aa.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1912b0.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1912b6.  v3:= fcmpl(v1, v2);
  #L1912ba.  if v3 == 0 then goto L1912c4;
  #L1912be.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1912c4.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `chipIconEnabled`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1912d8.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1912de.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1912f0.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L1912f6.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191308.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L19130c.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L191312.  v0:= temp @kind object;
  #L191314.  call `setChipIcon`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L19131a.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `float` v4 @name `chipIconSize`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19132c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L191330.  v0:= fcmpl(v0, v4);
  #L191334.  if v0 == 0 then goto L191360;
  #L191338.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L19133e.  v0:= temp;
  #L191340.  v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float` := v4;
  #L191344.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L19134a.  v1:= temp;
  #L19134c.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191352.  v2:= fcmpl(v0, v1);
  #L191356.  if v2 == 0 then goto L191360;
  #L19135a.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191360.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191374.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191378.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L19137e.  v0:= temp @kind object;
  #L191380.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191386.  v0:= temp;
  #L191388.  call `setChipIconSize`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L19138e.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipIconTint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1913a0.  v0:= 1I;
  #L1913a2.  v1.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` := v0 @kind boolean;
  #L1913a6.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1913aa.  if v0 == v2 then goto L1913d6;
  #L1913ae.  v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1913b2.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1913b8.  v0:= temp;
  #L1913ba.  if v0 == 0 then goto L1913c8;
  #L1913be.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1913c2.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1913c8.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1913ce.  v0:= temp @kind object;
  #L1913d0.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1913d6.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1913e8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1913ec.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1913f2.  v0:= temp @kind object;
  #L1913f4.  call `setChipIconTint`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1913fa.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191470.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191474.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L19147a.  v0:= temp @kind object;
  #L19147c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L191482.  v0:= temp;
  #L191484.  call `setChipIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L19148a.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `boolean` v5 @name `chipIconVisible`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19140c.  v0:= v4.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L191410.  if v0 == v5 then goto L19145c;
  #L191414.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L19141a.  v0:= temp;
  #L19141c.  v4.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` := v5 @kind boolean;
  #L191420.  call temp:= `showsChipIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L191426.  v1:= temp;
  #L191428.  if v0 == v1 then goto L191430;
  #L19142c.  v2:= 1I;
  #L19142e.  goto L191432;
  #L191430.  v2:= 0I;
  #L191432.  if v2 == 0 then goto L19145c;
  #L191436.  if v1 == 0 then goto L191446;
  #L19143a.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19143e.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191444.  goto L191450;
  #L191446.  v3:= v4.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19144a.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191450.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191456.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L19145c.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipMinHeight`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19149c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1914a0.  v0:= fcmpl(v0, v2);
  #L1914a4.  if v0 == 0 then goto L1914b8;
  #L1914a8.  v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float` := v2;
  #L1914ac.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1914b2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1914b8.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1914cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1914d0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1914d6.  v0:= temp @kind object;
  #L1914d8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1914de.  v0:= temp;
  #L1914e0.  call `setChipMinHeight`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L1914e6.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1914f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1914fc.  v0:= fcmpl(v0, v2);
  #L191500.  if v0 == 0 then goto L191514;
  #L191504.  v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float` := v2;
  #L191508.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L19150e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191514.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191528.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L19152c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191532.  v0:= temp @kind object;
  #L191534.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L19153a.  v0:= temp;
  #L19153c.  call `setChipStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L191542.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `chipStrokeColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191554.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L191558.  if v0 == v2 then goto L19157c;
  #L19155c.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L191560.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L191564.  if v0 == 0 then goto L19156e;
  #L191568.  call `setStrokeColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L19156e.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L191574.  v0:= temp @kind object;
  #L191576.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L19157c.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191590.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191594.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L19159a.  v0:= temp @kind object;
  #L19159c.  call `setChipStrokeColor`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1915a2.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `chipStrokeWidth`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1915b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1915b8.  v0:= fcmpl(v0, v2);
  #L1915bc.  if v0 == 0 then goto L1915e2;
  #L1915c0.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float` := v2;
  #L1915c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1915c8.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L1915ce.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1915d2.  if v0 == 0 then goto L1915dc;
  #L1915d6.  call `setStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind super;
  #L1915dc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1915e2.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1915f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1915f8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1915fe.  v0:= temp @kind object;
  #L191600.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191606.  v0:= temp;
  #L191608.  call `setChipStrokeWidth`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L19160e.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `android.graphics.drawable.Drawable` v5 @kind object @name `closeIcon`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19164c.  call temp:= `getCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L191652.  v0:= temp @kind object;
  #L191654.  if v0 == v5 then goto L1916c2;
  #L191658.  call temp:= `calculateCloseIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L19165e.  v1:= temp;
  #L191660.  if v5 == 0 then goto L191676;
  #L191664.  call temp:= `wrap`(v5) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L19166a.  v2:= temp @kind object;
  #L19166c.  call temp:= `mutate`(v2) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L191672.  v2:= temp @kind object;
  #L191674.  goto L191678;
  #L191676.  v2:= 0I;
  #L191678.  v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L19167c.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L191680.  if v2 == 0 then goto L19168a;
  #L191684.  call `updateFrameworkCloseIconRipple`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @kind direct;
  #L19168a.  call temp:= `calculateCloseIconWidth`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L191690.  v2:= temp;
  #L191692.  call `unapplyChildDrawable`(v4, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191698.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L19169e.  v3:= temp;
  #L1916a0.  if v3 == 0 then goto L1916ae;
  #L1916a4.  v3:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1916a8.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1916ae.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1916b4.  v3:= fcmpl(v1, v2);
  #L1916b8.  if v3 == 0 then goto L1916c2;
  #L1916bc.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1916c2.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object @name `closeIconContentDescription`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1916d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L1916d8.  if v0 == v2 then goto L1916f8;
  #L1916dc.  
  #L1916de.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L1916e4.  v0:= temp @kind object;
  #L1916e6.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L1916ec.  v0:= temp @kind object;
  #L1916ee.  v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L1916f2.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1916f8.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `closeIconEnabled`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L19170c.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L191712.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L191724.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L19172a.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `closeIconEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19173c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L191740.  v0:= fcmpl(v0, v2);
  #L191744.  if v0 == 0 then goto L191764;
  #L191748.  v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float` := v2;
  #L19174c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191752.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L191758.  v0:= temp;
  #L19175a.  if v0 == 0 then goto L191764;
  #L19175e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191764.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191778.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L19177c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191782.  v0:= temp @kind object;
  #L191784.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L19178a.  v0:= temp;
  #L19178c.  call `setCloseIconEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L191792.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1917a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1917a8.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1917ae.  v0:= temp @kind object;
  #L1917b0.  call `setCloseIcon`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1917b6.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `closeIconSize`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1917c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1917cc.  v0:= fcmpl(v0, v2);
  #L1917d0.  if v0 == 0 then goto L1917f0;
  #L1917d4.  v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float` := v2;
  #L1917d8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1917de.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1917e4.  v0:= temp;
  #L1917e6.  if v0 == 0 then goto L1917f0;
  #L1917ea.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1917f0.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191804.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191808.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L19180e.  v0:= temp @kind object;
  #L191810.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191816.  v0:= temp;
  #L191818.  call `setCloseIconSize`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L19181e.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `closeIconStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191830.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L191834.  v0:= fcmpl(v0, v2);
  #L191838.  if v0 == 0 then goto L191858;
  #L19183c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float` := v2;
  #L191840.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191846.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L19184c.  v0:= temp;
  #L19184e.  if v0 == 0 then goto L191858;
  #L191852.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191858.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19186c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191870.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191876.  v0:= temp @kind object;
  #L191878.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L19187e.  v0:= temp;
  #L191880.  call `setCloseIconStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L191886.  return @kind void;
}
procedure `boolean` `setCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object @name `stateSet`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f9b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L18f9b8.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L18f9be.  v0:= temp;
  #L18f9c0.  if v0 != 0 then goto L18f9e6;
  #L18f9c4.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] := v2 @kind object;
  #L18f9c8.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L18f9ce.  v0:= temp;
  #L18f9d0.  if v0 == 0 then goto L18f9e6;
  #L18f9d4.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L18f9da.  v0:= temp @kind object;
  #L18f9dc.  call temp:= `onStateChange`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L18f9e2.  v0:= temp;
  #L18f9e4.  return v0;
  #L18f9e6.  v0:= 0I;
  #L18f9e8.  return v0;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `closeIconTint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191898.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L19189c.  if v0 == v2 then goto L1918c8;
  #L1918a0.  v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1918a4.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1918aa.  v0:= temp;
  #L1918ac.  if v0 == 0 then goto L1918ba;
  #L1918b0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1918b4.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1918ba.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L1918c0.  v0:= temp @kind object;
  #L1918c2.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1918c8.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1918dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1918e0.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1918e6.  v0:= temp @kind object;
  #L1918e8.  call `setCloseIconTint`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1918ee.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191964.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191968.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L19196e.  v0:= temp @kind object;
  #L191970.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L191976.  v0:= temp;
  #L191978.  call `setCloseIconVisible`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L19197e.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v4 @kind this, `boolean` v5 @name `closeIconVisible`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L191900.  v0:= v4.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L191904.  if v0 == v5 then goto L191950;
  #L191908.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L19190e.  v0:= temp;
  #L191910.  v4.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` := v5 @kind boolean;
  #L191914.  call temp:= `showsCloseIcon`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L19191a.  v1:= temp;
  #L19191c.  if v0 == v1 then goto L191924;
  #L191920.  v2:= 1I;
  #L191922.  goto L191926;
  #L191924.  v2:= 0I;
  #L191926.  if v2 == 0 then goto L191950;
  #L19192a.  if v1 == 0 then goto L19193a;
  #L19192e.  v3:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L191932.  call `applyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191938.  goto L191944;
  #L19193a.  v3:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L19193e.  call `unapplyChildDrawable`(v4, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L191944.  call `invalidateSelf`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L19194a.  call `onSizeChange`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191950.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object @name `colorFilter`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191990.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L191994.  if v0 == v2 then goto L1919a2;
  #L191998.  v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L19199c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L1919a2.  return @kind void;
}
procedure `void` `setDelegate`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `com.google.android.material.chip.ChipDrawable$Delegate` v2 @kind object @name `delegate`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1919b4.  v0:= new `java.lang.ref.WeakReference`;
  #L1919b8.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1919be.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1919c2.  return @kind void;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.text.TextUtils$TruncateAt` v1 @kind object @name `truncateAt`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;

  #L1919d4.  v0.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` := v1 @kind object;
  #L1919d8.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object @name `hideMotionSpec`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L1919ec.  v0.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L1919f0.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191a04.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191a08.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L191a0e.  v0:= temp @kind object;
  #L191a10.  call `setHideMotionSpec`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L191a16.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `float` v4 @name `iconEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191a28.  v0:= v3.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L191a2c.  v0:= fcmpl(v0, v4);
  #L191a30.  if v0 == 0 then goto L191a5c;
  #L191a34.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L191a3a.  v0:= temp;
  #L191a3c.  v3.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float` := v4;
  #L191a40.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L191a46.  v1:= temp;
  #L191a48.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191a4e.  v2:= fcmpl(v0, v1);
  #L191a52.  if v2 == 0 then goto L191a5c;
  #L191a56.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191a5c.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191a70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191a74.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191a7a.  v0:= temp @kind object;
  #L191a7c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191a82.  v0:= temp;
  #L191a84.  call `setIconEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L191a8a.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `float` v4 @name `iconStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L191a9c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L191aa0.  v0:= fcmpl(v0, v4);
  #L191aa4.  if v0 == 0 then goto L191ad0;
  #L191aa8.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L191aae.  v0:= temp;
  #L191ab0.  v3.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float` := v4;
  #L191ab4.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L191aba.  v1:= temp;
  #L191abc.  call `invalidateSelf`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191ac2.  v2:= fcmpl(v0, v1);
  #L191ac6.  if v2 == 0 then goto L191ad0;
  #L191aca.  call `onSizeChange`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191ad0.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191ae4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191ae8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191aee.  v0:= temp @kind object;
  #L191af0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191af6.  v0:= temp;
  #L191af8.  call `setIconStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L191afe.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 @name `maxWidth`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L191b10.  v0.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int` := v1;
  #L191b14.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `rippleColor`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191b28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L191b2c.  if v0 == v2 then goto L191b48;
  #L191b30.  v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L191b34.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L191b3a.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L191b40.  v0:= temp @kind object;
  #L191b42.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L191b48.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191b5c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191b60.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L191b66.  v0:= temp @kind object;
  #L191b68.  call `setRippleColor`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L191b6e.  return @kind void;
}
procedure `void` `setShouldDrawText`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 @name `shouldDrawText`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShouldDrawText:(Z)V` @AccessFlag  {
    temp;

  #L191b80.  v0.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L191b84.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object @name `showMotionSpec`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L191b98.  v0.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L191b9c.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191bb0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191bb4.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L191bba.  v0:= temp @kind object;
  #L191bbc.  call `setShowMotionSpec`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L191bc2.  return @kind void;
}
procedure `void` `setText`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `java.lang.CharSequence` v3 @kind object @name `text`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191bd4.  if v3 != 0 then goto L191bdc;
  #L191bd8.  v3:= "" @kind object;
  #L191bdc.  v0:= v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L191be0.  call temp:= `equals`(v0, v3) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L191be6.  v0:= temp;
  #L191be8.  if v0 != 0 then goto L191c08;
  #L191bec.  v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L191bf0.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L191bf4.  v1:= 1I;
  #L191bf6.  call `setTextWidthDirty`(v0, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L191bfc.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191c02.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191c08.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object @name `textAppearance`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191c1c.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L191c20.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191c24.  call `setTextAppearance`(v0, v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L191c2a.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L191c3c.  v0:= new `com.google.android.material.resources.TextAppearance`;
  #L191c40.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191c44.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L191c4a.  call `setTextAppearance`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L191c50.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `textEndPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191c64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L191c68.  v0:= fcmpl(v0, v2);
  #L191c6c.  if v0 == 0 then goto L191c80;
  #L191c70.  v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float` := v2;
  #L191c74.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191c7a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191c80.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191c94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191c98.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191c9e.  v0:= temp @kind object;
  #L191ca0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191ca6.  v0:= temp;
  #L191ca8.  call `setTextEndPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L191cae.  return @kind void;
}
procedure `void` `setTextResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191cc0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191cc4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191cca.  v0:= temp @kind object;
  #L191ccc.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L191cd2.  v0:= temp @kind object;
  #L191cd4.  call `setText`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L191cda.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 @name `textStartPadding`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191cec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L191cf0.  v0:= fcmpl(v0, v2);
  #L191cf4.  if v0 == 0 then goto L191d08;
  #L191cf8.  v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float` := v2;
  #L191cfc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191d02.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L191d08.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 @name `id`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191d1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L191d20.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L191d26.  v0:= temp @kind object;
  #L191d28.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L191d2e.  v0:= temp;
  #L191d30.  call `setTextStartPadding`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L191d36.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object @name `tint`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191d48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L191d4c.  if v0 == v2 then goto L191d62;
  #L191d50.  v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L191d54.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L191d5a.  v0:= temp @kind object;
  #L191d5c.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L191d62.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object @name `tintMode`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191d74.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L191d78.  if v0 == v2 then goto L191d96;
  #L191d7c.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L191d80.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L191d84.  call temp:= `updateTintFilter`(v1, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L191d8a.  v0:= temp @kind object;
  #L191d8c.  v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L191d90.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L191d96.  return @kind void;
}
procedure `void` `setUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 @name `useCompatRipple`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191da8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L191dac.  if v0 == v2 then goto L191dc8;
  #L191db0.  v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` := v2 @kind boolean;
  #L191db4.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L191dba.  call temp:= `getState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getState:()[I` @kind virtual;
  #L191dc0.  v0:= temp @kind object;
  #L191dc2.  call temp:= `onStateChange`(v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L191dc8.  return @kind void;
}
procedure `boolean` `setVisible`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `boolean` v3 @name `visible`, `boolean` v4 @name `restart`) @signature `Lcom/google/android/material/chip/ChipDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18f9fc.  call temp:= `setVisible`(v2, v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setVisible:(ZZ)Z` @kind super;
  #L18fa02.  v0:= temp;
  #L18fa04.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L18fa0a.  v1:= temp;
  #L18fa0c.  if v1 == 0 then goto L18fa1e;
  #L18fa10.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18fa14.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L18fa1a.  v1:= temp;
  #L18fa1c.  v0:= v0 ^| v1 @kind int;
  #L18fa1e.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L18fa24.  v1:= temp;
  #L18fa26.  if v1 == 0 then goto L18fa38;
  #L18fa2a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18fa2e.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L18fa34.  v1:= temp;
  #L18fa36.  v0:= v0 ^| v1 @kind int;
  #L18fa38.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L18fa3e.  v1:= temp;
  #L18fa40.  if v1 == 0 then goto L18fa52;
  #L18fa44.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L18fa48.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L18fa4e.  v1:= temp;
  #L18fa50.  v0:= v0 ^| v1 @kind int;
  #L18fa52.  if v0 == 0 then goto L18fa5c;
  #L18fa56.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateSelf:()V` @kind virtual;
  #L18fa5c.  return v0;
}
procedure `boolean` `shouldDrawText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @AccessFlag  {
    temp;
    v0;

  #L18fa70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L18fa74.  return v0;
}
procedure `void` `unscheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object @name `who`, `java.lang.Runnable` v3 @kind object @name `what`) @signature `Lcom/google/android/material/chip/ChipDrawable;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191dfc.  call temp:= `getCallback`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L191e02.  v0:= temp @kind object;
  #L191e04.  if v0 == 0 then goto L191e0e;
  #L191e08.  call `unscheduleDrawable`(v0, v1, v3) @signature `Landroid/graphics/drawable/Drawable$Callback;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @kind interface;
  #L191e0e.  return @kind void;
}
