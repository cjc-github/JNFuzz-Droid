record `com.google.android.material.datepicker.CalendarConstraints` @kind class @AccessFlag PUBLIC_FINAL extends `android.os.Parcelable` @kind interface {
  `com.google.android.material.datepicker.Month` `com.google.android.material.datepicker.CalendarConstraints.end` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.datepicker.CalendarConstraints.monthSpan` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.datepicker.Month` `com.google.android.material.datepicker.CalendarConstraints.openAt` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.datepicker.Month` `com.google.android.material.datepicker.CalendarConstraints.start` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.datepicker.CalendarConstraints$DateValidator` `com.google.android.material.datepicker.CalendarConstraints.validator` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.datepicker.CalendarConstraints.yearSpan` @AccessFlag PRIVATE_FINAL;
}
global `android.os.Parcelable$Creator` `@@com.google.android.material.datepicker.CalendarConstraints.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1966b4.  v0:= new `com.google.android.material.datepicker.CalendarConstraints$1`;
  #L1966b8.  call `<init>`(v0) @signature `Lcom/google/android/material/datepicker/CalendarConstraints$1;.<init>:()V` @kind direct;
  #L1966be.  `@@com.google.android.material.datepicker.CalendarConstraints.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L1966c2.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.datepicker.CalendarConstraints` v2 @kind this, `com.google.android.material.datepicker.Month` v3 @kind object @name `start`, `com.google.android.material.datepicker.Month` v4 @kind object @name `end`, `com.google.android.material.datepicker.Month` v5 @kind object @name `openAt`, `com.google.android.material.datepicker.CalendarConstraints$DateValidator` v6 @kind object @name `validator`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<init>:(Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1966d4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1966da.  v2.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` := v3 @kind object;
  #L1966de.  v2.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` := v4 @kind object;
  #L1966e2.  v2.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` := v5 @kind object;
  #L1966e6.  v2.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` := v6 @kind object;
  #L1966ea.  call temp:= `compareTo`(v3, v5) @signature `Lcom/google/android/material/datepicker/Month;.compareTo:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1966f0.  v0:= temp;
  #L1966f2.  if v0 > 0 then goto L196736;
  #L1966f6.  call temp:= `compareTo`(v5, v4) @signature `Lcom/google/android/material/datepicker/Month;.compareTo:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1966fc.  v0:= temp;
  #L1966fe.  if v0 > 0 then goto L196726;
  #L196702.  call temp:= `monthsUntil`(v3, v4) @signature `Lcom/google/android/material/datepicker/Month;.monthsUntil:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L196708.  v0:= temp;
  #L19670a.  v0:= v0 + 1;
  #L19670e.  v2.`com.google.android.material.datepicker.CalendarConstraints.monthSpan` @type ^`int` := v0;
  #L196712.  v0:= v4.`com.google.android.material.datepicker.Month.year` @type ^`int`;
  #L196716.  v1:= v3.`com.google.android.material.datepicker.Month.year` @type ^`int`;
  #L19671a.  v0:= v0 - v1 @kind int;
  #L19671c.  v0:= v0 + 1;
  #L196720.  v2.`com.google.android.material.datepicker.CalendarConstraints.yearSpan` @type ^`int` := v0;
  #L196724.  return @kind void;
  #L196726.  v0:= new `java.lang.IllegalArgumentException`;
  #L19672a.  v1:= "current Month cannot be after end Month" @kind object;
  #L19672e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196734.  throw v0;
  #L196736.  v0:= new `java.lang.IllegalArgumentException`;
  #L19673a.  v1:= "start Month cannot be after current Month" @kind object;
  #L19673e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196744.  throw v0;
}
procedure `void` `<init>`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind this, `com.google.android.material.datepicker.Month` v1 @kind object @name `x0`, `com.google.android.material.datepicker.Month` v2 @kind object @name `x1`, `com.google.android.material.datepicker.Month` v3 @kind object @name `x2`, `com.google.android.material.datepicker.CalendarConstraints$DateValidator` v4 @kind object @name `x3`, `com.google.android.material.datepicker.CalendarConstraints$1` v5 @kind object @name `x4`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<init>:(Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;Lcom/google/android/material/datepicker/CalendarConstraints$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L196758.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<init>:(Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;)V` @kind direct;
  #L19675e.  return @kind void;
}
procedure `com.google.android.material.datepicker.Month` `access$100`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.access$100:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/Month;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L196598.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L19659c.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `access$200`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.access$200:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/Month;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1965b0.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1965b4.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `access$300`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.access$300:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/Month;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1965c8.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1965cc.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.CalendarConstraints$DateValidator` `access$400`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind object @name `x0`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.access$400:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L196568.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L19656c.  return v0 @kind object;
}
procedure `int` `describeContents`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196628.  v0:= 0I;
  #L19662a.  return v0;
}
procedure `boolean` `equals`(`com.google.android.material.datepicker.CalendarConstraints` v5 @kind this, `java.lang.Object` v6 @kind object @name `o`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1964a4.  v0:= 1I;
  #L1964a6.  if v5 != v6 then goto L1964ac;
  #L1964aa.  return v0;
  #L1964ac.  v1:= instanceof @variable v6 @type ^`com.google.android.material.datepicker.CalendarConstraints` @kind boolean;
  #L1964b0.  v2:= 0I;
  #L1964b2.  if v1 != 0 then goto L1964b8;
  #L1964b6.  return v2;
  #L1964b8.  v1:= v6 @kind object;
  #L1964ba.  v1:= (`com.google.android.material.datepicker.CalendarConstraints`) v1 @kind object;
  #L1964be.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1964c2.  v4:= v1.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1964c6.  call temp:= `equals`(v3, v4) @signature `Lcom/google/android/material/datepicker/Month;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1964cc.  v3:= temp;
  #L1964ce.  if v3 == 0 then goto L196510;
  #L1964d2.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1964d6.  v4:= v1.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1964da.  call temp:= `equals`(v3, v4) @signature `Lcom/google/android/material/datepicker/Month;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1964e0.  v3:= temp;
  #L1964e2.  if v3 == 0 then goto L196510;
  #L1964e6.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1964ea.  v4:= v1.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1964ee.  call temp:= `equals`(v3, v4) @signature `Lcom/google/android/material/datepicker/Month;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1964f4.  v3:= temp;
  #L1964f6.  if v3 == 0 then goto L196510;
  #L1964fa.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1964fe.  v4:= v1.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L196502.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L196508.  v3:= temp;
  #L19650a.  if v3 == 0 then goto L196510;
  #L19650e.  goto L196512;
  #L196510.  v0:= v2;
  #L196512.  return v0;
}
procedure `com.google.android.material.datepicker.CalendarConstraints$DateValidator` `getDateValidator`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.getDateValidator:()Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196580.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L196584.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `getEnd`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.getEnd:()Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L1965e0.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1965e4.  return v0 @kind object;
}
procedure `int` `getMonthSpan`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.getMonthSpan:()I` @AccessFlag  {
    temp;
    v0;

  #L19663c.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.monthSpan` @type ^`int`;
  #L196640.  return v0;
}
procedure `com.google.android.material.datepicker.Month` `getOpenAt`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.getOpenAt:()Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L1965f8.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1965fc.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `getStart`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.getStart:()Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L196610.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L196614.  return v0 @kind object;
}
procedure `int` `getYearSpan`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.getYearSpan:()I` @AccessFlag  {
    temp;
    v0;

  #L196654.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.yearSpan` @type ^`int`;
  #L196658.  return v0;
}
procedure `int` `hashCode`(`com.google.android.material.datepicker.CalendarConstraints` v3 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19666c.  v0:= 4I;
  #L19666e.  v0:= new `java.lang.Object`[v0];
  #L196672.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L196676.  v2:= 0I;
  #L196678.  v0[v2]:= v1 @kind object;
  #L19667c.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L196680.  v2:= 1I;
  #L196682.  v0[v2]:= v1 @kind object;
  #L196686.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L19668a.  v2:= 2I;
  #L19668c.  v0[v2]:= v1 @kind object;
  #L196690.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L196694.  v2:= 3I;
  #L196696.  v0[v2]:= v1 @kind object;
  #L19669a.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1966a0.  v1:= temp;
  #L1966a2.  return v1;
}
procedure `boolean` `isWithinBounds`(`com.google.android.material.datepicker.CalendarConstraints` v4 @kind this, `long` v5 @name `date`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.isWithinBounds:(J)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L196524.  v0:= v4.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L196528.  v1:= 1I;
  #L19652a.  call temp:= `getDay`(v0, v1) @signature `Lcom/google/android/material/datepicker/Month;.getDay:(I)J` @kind virtual;
  #L196530.  v2:= temp @kind wide;
  #L196532.  v0:= lcmp(v2, v5);
  #L196536.  if v0 > 0 then goto L196554;
  #L19653a.  v0:= v4.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L19653e.  v2:= v0.`com.google.android.material.datepicker.Month.daysInMonth` @type ^`int`;
  #L196542.  call temp:= `getDay`(v0, v2) @signature `Lcom/google/android/material/datepicker/Month;.getDay:(I)J` @kind virtual;
  #L196548.  v2:= temp @kind wide;
  #L19654a.  v0:= lcmp(v5, v2);
  #L19654e.  if v0 > 0 then goto L196554;
  #L196552.  goto L196556;
  #L196554.  v1:= 0I;
  #L196556.  return v1;
}
procedure `void` `writeToParcel`(`com.google.android.material.datepicker.CalendarConstraints` v2 @kind this, `android.os.Parcel` v3 @kind object @name `dest`, `int` v4 @name `flags`) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L196770.  v0:= v2.`com.google.android.material.datepicker.CalendarConstraints.start` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L196774.  v1:= 0I;
  #L196776.  call `writeParcelable`(v3, v0, v1) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L19677c.  v0:= v2.`com.google.android.material.datepicker.CalendarConstraints.end` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L196780.  call `writeParcelable`(v3, v0, v1) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L196786.  v0:= v2.`com.google.android.material.datepicker.CalendarConstraints.openAt` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L19678a.  call `writeParcelable`(v3, v0, v1) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L196790.  v0:= v2.`com.google.android.material.datepicker.CalendarConstraints.validator` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L196794.  call `writeParcelable`(v3, v0, v1) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L19679a.  return @kind void;
}
