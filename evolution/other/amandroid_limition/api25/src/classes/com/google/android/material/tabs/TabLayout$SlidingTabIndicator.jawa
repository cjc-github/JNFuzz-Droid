record `com.google.android.material.tabs.TabLayout$SlidingTabIndicator` @kind class @AccessFlag  extends `android.widget.LinearLayout` @kind class {
  `android.graphics.drawable.GradientDrawable` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.defaultSelectionIndicator` @AccessFlag PRIVATE_FINAL;
  `android.animation.ValueAnimator` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @AccessFlag ;
  `float` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectionOffset` @AccessFlag ;
  `com.google.android.material.tabs.TabLayout` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind this, `com.google.android.material.tabs.TabLayout` v1 @kind object, `android.content.Context` v2 @kind object @name `context`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.<init>:(Lcom/google/android/material/tabs/TabLayout;Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b2200.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` := v1 @kind object;
  #L1b2204.  call `<init>`(v0, v2) @signature `Landroid/widget/LinearLayout;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1b220a.  v1:= -1I;
  #L1b220c.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int` := v1;
  #L1b2210.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int` := v1;
  #L1b2214.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int` := v1;
  #L1b2218.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int` := v1;
  #L1b221c.  v1:= 0I;
  #L1b221e.  call `setWillNotDraw`(v0, v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setWillNotDraw:(Z)V` @kind virtual;
  #L1b2224.  v1:= new `android.graphics.Paint`;
  #L1b2228.  call `<init>`(v1) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L1b222e.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L1b2232.  v1:= new `android.graphics.drawable.GradientDrawable`;
  #L1b2236.  call `<init>`(v1) @signature `Landroid/graphics/drawable/GradientDrawable;.<init>:()V` @kind direct;
  #L1b223c.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.defaultSelectionIndicator` @type ^`android.graphics.drawable.GradientDrawable` := v1 @kind object;
  #L1b2240.  return @kind void;
}
procedure `void` `calculateTabViewContentBounds`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v8 @kind this, `com.google.android.material.tabs.TabLayout$TabView` v9 @kind object @name `tabView`, `android.graphics.RectF` v10 @kind object @name `contentBounds`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b23b0.  call temp:= `access$1200`(v9) @signature `Lcom/google/android/material/tabs/TabLayout$TabView;.access$1200:(Lcom/google/android/material/tabs/TabLayout$TabView;)I` @kind static;
  #L1b23b6.  v0:= temp;
  #L1b23b8.  call temp:= `getContext`(v8) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1b23be.  v1:= temp @kind object;
  #L1b23c0.  v2:= 24I;
  #L1b23c4.  call temp:= `dpToPx`(v1, v2) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L1b23ca.  v1:= temp;
  #L1b23cc.  v1:= (`int`) v1 @kind f2i;
  #L1b23ce.  if v0 >= v1 then goto L1b23d4;
  #L1b23d2.  v0:= v1;
  #L1b23d4.  call temp:= `getLeft`(v9) @signature `Lcom/google/android/material/tabs/TabLayout$TabView;.getLeft:()I` @kind virtual;
  #L1b23da.  v2:= temp;
  #L1b23dc.  call temp:= `getRight`(v9) @signature `Lcom/google/android/material/tabs/TabLayout$TabView;.getRight:()I` @kind virtual;
  #L1b23e2.  v3:= temp;
  #L1b23e4.  v2:= v2 + v3 @kind int;
  #L1b23e6.  v2:= v2 / 2;
  #L1b23ea.  v3:= v0 / 2;
  #L1b23ee.  v3:= v2 - v3 @kind int;
  #L1b23f2.  v4:= v0 / 2;
  #L1b23f6.  v4:= v4 + v2 @kind int;
  #L1b23f8.  v5:= (`float`) v3 @kind i2f;
  #L1b23fa.  v6:= (`float`) v4 @kind i2f;
  #L1b23fc.  v7:= 0I;
  #L1b23fe.  call `set`(v10, v5, v7, v6, v7) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L1b2404.  return @kind void;
}
procedure `void` `updateIndicatorPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v11 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b27d4.  v0:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int`;
  #L1b27d8.  call temp:= `getChildAt`(v11, v0) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1b27de.  v0:= temp @kind object;
  #L1b27e0.  if v0 == 0 then goto L1b290a;
  #L1b27e4.  call temp:= `getWidth`(v0) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L1b27ea.  v1:= temp;
  #L1b27ec.  if v1 <= 0 then goto L1b290a;
  #L1b27f0.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1b27f6.  v1:= temp;
  #L1b27f8.  call temp:= `getRight`(v0) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L1b27fe.  v2:= temp;
  #L1b2800.  v3:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b2804.  v3:= v3.`com.google.android.material.tabs.TabLayout.tabIndicatorFullWidth` @type ^`boolean` @kind boolean;
  #L1b2808.  if v3 != 0 then goto L1b2850;
  #L1b280c.  v3:= instanceof @variable v0 @type ^`com.google.android.material.tabs.TabLayout$TabView` @kind boolean;
  #L1b2810.  if v3 == 0 then goto L1b2850;
  #L1b2814.  v3:= v0 @kind object;
  #L1b2816.  v3:= (`com.google.android.material.tabs.TabLayout$TabView`) v3 @kind object;
  #L1b281a.  v4:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b281e.  call temp:= `access$1100`(v4) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b2824.  v4:= temp @kind object;
  #L1b2826.  call `calculateTabViewContentBounds`(v11, v3, v4) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @kind direct;
  #L1b282c.  v3:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b2830.  call temp:= `access$1100`(v3) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b2836.  v3:= temp @kind object;
  #L1b2838.  v3:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L1b283c.  v1:= (`int`) v3 @kind f2i;
  #L1b283e.  v3:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b2842.  call temp:= `access$1100`(v3) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b2848.  v3:= temp @kind object;
  #L1b284a.  v3:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L1b284e.  v2:= (`int`) v3 @kind f2i;
  #L1b2850.  v3:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectionOffset` @type ^`float`;
  #L1b2854.  v4:= 0I;
  #L1b2856.  v3:= fcmpl(v3, v4);
  #L1b285a.  if v3 <= 0 then goto L1b290e;
  #L1b285e.  v3:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int`;
  #L1b2862.  call temp:= `getChildCount`(v11) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildCount:()I` @kind virtual;
  #L1b2868.  v4:= temp;
  #L1b286a.  v4:= v4 + -1;
  #L1b286e.  if v3 >= v4 then goto L1b290e;
  #L1b2872.  v3:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int`;
  #L1b2876.  v3:= v3 + 1;
  #L1b287a.  call temp:= `getChildAt`(v11, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1b2880.  v3:= temp @kind object;
  #L1b2882.  call temp:= `getLeft`(v3) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1b2888.  v4:= temp;
  #L1b288a.  call temp:= `getRight`(v3) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L1b2890.  v5:= temp;
  #L1b2892.  v6:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b2896.  v6:= v6.`com.google.android.material.tabs.TabLayout.tabIndicatorFullWidth` @type ^`boolean` @kind boolean;
  #L1b289a.  if v6 != 0 then goto L1b28e2;
  #L1b289e.  v6:= instanceof @variable v3 @type ^`com.google.android.material.tabs.TabLayout$TabView` @kind boolean;
  #L1b28a2.  if v6 == 0 then goto L1b28e2;
  #L1b28a6.  v6:= v3 @kind object;
  #L1b28a8.  v6:= (`com.google.android.material.tabs.TabLayout$TabView`) v6 @kind object;
  #L1b28ac.  v7:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b28b0.  call temp:= `access$1100`(v7) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b28b6.  v7:= temp @kind object;
  #L1b28b8.  call `calculateTabViewContentBounds`(v11, v6, v7) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @kind direct;
  #L1b28be.  v6:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b28c2.  call temp:= `access$1100`(v6) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b28c8.  v6:= temp @kind object;
  #L1b28ca.  v6:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L1b28ce.  v4:= (`int`) v6 @kind f2i;
  #L1b28d0.  v6:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b28d4.  call temp:= `access$1100`(v6) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b28da.  v6:= temp @kind object;
  #L1b28dc.  v6:= v6.`android.graphics.RectF.right` @type ^`float`;
  #L1b28e0.  v5:= (`int`) v6 @kind f2i;
  #L1b28e2.  v6:= v11.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectionOffset` @type ^`float`;
  #L1b28e6.  v7:= (`float`) v4 @kind i2f;
  #L1b28e8.  v7:= v7 * v6 @kind float;
  #L1b28ea.  v8:= 1.0F;
  #L1b28ee.  v9:= v8 - v6 @kind float;
  #L1b28f2.  v10:= (`float`) v1 @kind i2f;
  #L1b28f4.  v9:= v9 * v10 @kind float;
  #L1b28f6.  v7:= v7 + v9 @kind float;
  #L1b28f8.  v1:= (`int`) v7 @kind f2i;
  #L1b28fa.  v7:= (`float`) v5 @kind i2f;
  #L1b28fc.  v7:= v7 * v6 @kind float;
  #L1b28fe.  v8:= v8 - v6 @kind float;
  #L1b2900.  v6:= (`float`) v2 @kind i2f;
  #L1b2902.  v8:= v8 * v6 @kind float;
  #L1b2904.  v7:= v7 + v8 @kind float;
  #L1b2906.  v2:= (`int`) v7 @kind f2i;
  #L1b2908.  goto L1b290e;
  #L1b290a.  v1:= -1I;
  #L1b290c.  v2:= v1;
  #L1b290e.  call `setIndicatorPosition`(v11, v1, v2) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setIndicatorPosition:(II)V` @kind virtual;
  #L1b2914.  return @kind void;
}
procedure `void` `animateIndicatorToPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v17 @kind this, `int` v18 @name `position`, `int` v19 @name `duration`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.animateIndicatorToPosition:(II)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1b2254.  v6:= v17 @kind object;
  #L1b2258.  v0:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b225c.  if v0 == 0 then goto L1b2276;
  #L1b2260.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L1b2266.  v0:= temp;
  #L1b2268.  if v0 == 0 then goto L1b2276;
  #L1b226c.  v0:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2270.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L1b2276.  call temp:= `getChildAt`(v17, v18) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1b227c.  v7:= temp @kind object;
  #L1b227e.  if v7 != 0 then goto L1b228a;
  #L1b2282.  call `updateIndicatorPosition`(v17) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @kind direct;
  #L1b2288.  return @kind void;
  #L1b228a.  call temp:= `getLeft`(v7) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1b2290.  v0:= temp;
  #L1b2292.  call temp:= `getRight`(v7) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L1b2298.  v1:= temp;
  #L1b229a.  v2:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b229e.  v2:= v2.`com.google.android.material.tabs.TabLayout.tabIndicatorFullWidth` @type ^`boolean` @kind boolean;
  #L1b22a2.  if v2 != 0 then goto L1b22f0;
  #L1b22a6.  v2:= instanceof @variable v7 @type ^`com.google.android.material.tabs.TabLayout$TabView` @kind boolean;
  #L1b22aa.  if v2 == 0 then goto L1b22f0;
  #L1b22ae.  v2:= v7 @kind object;
  #L1b22b0.  v2:= (`com.google.android.material.tabs.TabLayout$TabView`) v2 @kind object;
  #L1b22b4.  v3:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b22b8.  call temp:= `access$1100`(v3) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b22be.  v3:= temp @kind object;
  #L1b22c0.  call `calculateTabViewContentBounds`(v6, v2, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @kind direct;
  #L1b22c6.  v2:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b22ca.  call temp:= `access$1100`(v2) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b22d0.  v2:= temp @kind object;
  #L1b22d2.  v2:= v2.`android.graphics.RectF.left` @type ^`float`;
  #L1b22d6.  v0:= (`int`) v2 @kind f2i;
  #L1b22d8.  v2:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b22dc.  call temp:= `access$1100`(v2) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1100:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1b22e2.  v2:= temp @kind object;
  #L1b22e4.  v2:= v2.`android.graphics.RectF.right` @type ^`float`;
  #L1b22e8.  v1:= (`int`) v2 @kind f2i;
  #L1b22ea.  v8:= v0;
  #L1b22ec.  v9:= v1;
  #L1b22ee.  goto L1b22f4;
  #L1b22f0.  v8:= v0;
  #L1b22f2.  v9:= v1;
  #L1b22f4.  v10:= v8;
  #L1b22f6.  v11:= v9;
  #L1b22f8.  v12:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1b22fc.  v13:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1b2300.  if v12 != v10 then goto L1b2318;
  #L1b2304.  if v13 == v11 then goto L1b230a;
  #L1b2308.  goto L1b2318;
  #L1b230a.  v1:= v18;
  #L1b230e.  v15:= v19;
  #L1b2312.  v16:= v7 @kind object;
  #L1b2316.  goto L1b238e;
  #L1b2318.  v0:= new `android.animation.ValueAnimator`;
  #L1b231c.  call `<init>`(v0) @signature `Landroid/animation/ValueAnimator;.<init>:()V` @kind direct;
  #L1b2322.  v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L1b2326.  v14:= v0 @kind object;
  #L1b2328.  v0:= `@@com.google.android.material.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L1b232c.  call `setInterpolator`(v14, v0) @signature `Landroid/animation/ValueAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L1b2332.  v15:= v19;
  #L1b2336.  v0:= (`long`) v15 @kind i2l;
  #L1b2338.  call temp:= `setDuration`(v14, v0) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L1b233e.  v0:= 2I;
  #L1b2340.  v0:= new `float`[v0];
  #L1b2344.  goto L1b2390;
  #L1b234a.  call `setFloatValues`(v14, v0) @signature `Landroid/animation/ValueAnimator;.setFloatValues:([F)V` @kind virtual;
  #L1b2350.  v5:= new `com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1`;
  #L1b2354.  v0:= v5 @kind object;
  #L1b2356.  v1:= v17 @kind object;
  #L1b235a.  v2:= v12;
  #L1b235c.  v3:= v10;
  #L1b235e.  v4:= v13;
  #L1b2360.  v16:= v7 @kind object;
  #L1b2364.  v7:= v5 @kind object;
  #L1b2366.  v5:= v11;
  #L1b2368.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator$1;.<init>:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;IIII)V` @kind direct;
  #L1b236e.  call `addUpdateListener`(v14, v7) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L1b2374.  v0:= new `com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2`;
  #L1b2378.  v1:= v18;
  #L1b237c.  call `<init>`(v0, v6, v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator$2;.<init>:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;I)V` @kind direct;
  #L1b2382.  call `addListener`(v14, v0) @signature `Landroid/animation/ValueAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L1b2388.  call `start`(v14) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L1b238e.  return @kind void;
  #L1b2390.  v0:= (0I, 1065353216I) @kind object;
  #L1b239f.  goto L1b234a;
}
procedure `boolean` `childrenNeedLayout`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v4 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.childrenNeedLayout:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b21a0.  v0:= 0I;
  #L1b21a2.  call temp:= `getChildCount`(v4) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildCount:()I` @kind virtual;
  #L1b21a8.  v1:= temp;
  #L1b21aa.  if v0 >= v1 then goto L1b21cc;
  #L1b21ae.  call temp:= `getChildAt`(v4, v0) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1b21b4.  v2:= temp @kind object;
  #L1b21b6.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L1b21bc.  v3:= temp;
  #L1b21be.  if v3 > 0 then goto L1b21c6;
  #L1b21c2.  v3:= 1I;
  #L1b21c4.  return v3;
  #L1b21c6.  v0:= v0 + 1;
  #L1b21ca.  goto L1b21aa;
  #L1b21cc.  v0:= 0I;
  #L1b21ce.  return v0;
}
procedure `void` `draw`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `canvas`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b2418.  v0:= 0I;
  #L1b241a.  v1:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b241e.  v1:= v1.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1b2422.  if v1 == 0 then goto L1b2436;
  #L1b2426.  v1:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b242a.  v1:= v1.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1b242e.  call temp:= `getIntrinsicHeight`(v1) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L1b2434.  v0:= temp;
  #L1b2436.  v1:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int`;
  #L1b243a.  if v1 < 0 then goto L1b2442;
  #L1b243e.  v0:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int`;
  #L1b2442.  v1:= 0I;
  #L1b2444.  v2:= 0I;
  #L1b2446.  v3:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b244a.  v3:= v3.`com.google.android.material.tabs.TabLayout.tabIndicatorGravity` @type ^`int`;
  #L1b244e.  if v3 == 0 then goto L1b2496;
  #L1b2452.  v4:= 1I;
  #L1b2454.  v5:= 2I;
  #L1b2456.  if v3 == v4 then goto L1b2478;
  #L1b245a.  if v3 == v5 then goto L1b2472;
  #L1b245e.  v4:= 3I;
  #L1b2460.  if v3 == v4 then goto L1b2466;
  #L1b2464.  goto L1b24ac;
  #L1b2466.  v1:= 0I;
  #L1b2468.  call temp:= `getHeight`(v6) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getHeight:()I` @kind virtual;
  #L1b246e.  v2:= temp;
  #L1b2470.  goto L1b24ac;
  #L1b2472.  v1:= 0I;
  #L1b2474.  v2:= v0;
  #L1b2476.  goto L1b24ac;
  #L1b2478.  call temp:= `getHeight`(v6) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getHeight:()I` @kind virtual;
  #L1b247e.  v3:= temp;
  #L1b2480.  v3:= v3 - v0 @kind int;
  #L1b2482.  v1:= v3 / 2;
  #L1b2486.  call temp:= `getHeight`(v6) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getHeight:()I` @kind virtual;
  #L1b248c.  v3:= temp;
  #L1b248e.  v3:= v3 + v0 @kind int;
  #L1b2490.  v2:= v3 / 2;
  #L1b2494.  goto L1b24ac;
  #L1b2496.  call temp:= `getHeight`(v6) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getHeight:()I` @kind virtual;
  #L1b249c.  v3:= temp;
  #L1b249e.  v1:= v3 - v0 @kind int;
  #L1b24a2.  call temp:= `getHeight`(v6) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getHeight:()I` @kind virtual;
  #L1b24a8.  v2:= temp;
  #L1b24aa.  
  #L1b24ac.  v3:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1b24b0.  if v3 < 0 then goto L1b2530;
  #L1b24b4.  v4:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1b24b8.  if v4 <= v3 then goto L1b2530;
  #L1b24bc.  v3:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b24c0.  v3:= v3.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1b24c4.  if v3 == 0 then goto L1b24d2;
  #L1b24c8.  v3:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b24cc.  v3:= v3.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1b24d0.  goto L1b24d6;
  #L1b24d2.  v3:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.defaultSelectionIndicator` @type ^`android.graphics.drawable.GradientDrawable` @kind object;
  #L1b24d6.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1b24dc.  v3:= temp @kind object;
  #L1b24de.  v4:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1b24e2.  v5:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1b24e6.  call `setBounds`(v3, v4, v1, v5, v2) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1b24ec.  v4:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1b24f0.  if v4 == 0 then goto L1b252a;
  #L1b24f4.  v4:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b24f8.  v5:= 21I;
  #L1b24fc.  if v4 != v5 then goto L1b2518;
  #L1b2500.  v4:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1b2504.  call temp:= `getColor`(v4) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1b250a.  v4:= temp;
  #L1b250c.  v5:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1b2510.  call `setColorFilter`(v3, v4, v5) @signature `Landroid/graphics/drawable/Drawable;.setColorFilter:(ILandroid/graphics/PorterDuff$Mode;)V` @kind virtual;
  #L1b2516.  goto L1b252a;
  #L1b2518.  v4:= v6.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1b251c.  call temp:= `getColor`(v4) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1b2522.  v4:= temp;
  #L1b2524.  call `setTint`(v3, v4) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTint:(Landroid/graphics/drawable/Drawable;I)V` @kind static;
  #L1b252a.  call `draw`(v3, v7) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1b2530.  call `draw`(v6, v7) @signature `Landroid/widget/LinearLayout;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L1b2536.  return @kind void;
}
procedure `float` `getIndicatorPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v2 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getIndicatorPosition:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1b21e0.  v0:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int`;
  #L1b21e4.  v0:= (`float`) v0 @kind i2f;
  #L1b21e6.  v1:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectionOffset` @type ^`float`;
  #L1b21ea.  v0:= v0 + v1 @kind float;
  #L1b21ec.  return v0;
}
procedure `void` `onLayout`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v5 @kind this, `boolean` v6 @name `changed`, `int` v7 @name `l`, `int` v8 @name `t`, `int` v9 @name `r`, `int` v10 @name `b`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onLayout:(ZIIII)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b2548.  call `onLayout`(v5, v6, v7, v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onLayout:(ZIIII)V` @kind super;
  #L1b254e.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2552.  if v0 == 0 then goto L1b25a2;
  #L1b2556.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L1b255c.  v0:= temp;
  #L1b255e.  if v0 == 0 then goto L1b25a2;
  #L1b2562.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2566.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L1b256c.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2570.  call temp:= `getDuration`(v0) @signature `Landroid/animation/ValueAnimator;.getDuration:()J` @kind virtual;
  #L1b2576.  v0:= temp @kind wide;
  #L1b2578.  v2:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int`;
  #L1b257c.  v3:= 1.0F;
  #L1b2580.  v4:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2584.  call temp:= `getAnimatedFraction`(v4) @signature `Landroid/animation/ValueAnimator;.getAnimatedFraction:()F` @kind virtual;
  #L1b258a.  v4:= temp;
  #L1b258c.  v3:= v3 - v4 @kind float;
  #L1b258e.  v4:= (`float`) v0 @kind l2f;
  #L1b2590.  v3:= v3 * v4 @kind float;
  #L1b2592.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1b2598.  v3:= temp;
  #L1b259a.  call `animateIndicatorToPosition`(v5, v2, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.animateIndicatorToPosition:(II)V` @kind virtual;
  #L1b25a0.  goto L1b25a8;
  #L1b25a2.  call `updateIndicatorPosition`(v5) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @kind direct;
  #L1b25a8.  return @kind void;
}
procedure `void` `onMeasure`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v8 @kind this, `int` v9 @name `widthMeasureSpec`, `int` v10 @name `heightMeasureSpec`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b25bc.  call `onMeasure`(v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onMeasure:(II)V` @kind super;
  #L1b25c2.  call temp:= `getMode`(v9) @signature `Landroid/view/View$MeasureSpec;.getMode:(I)I` @kind static;
  #L1b25c8.  v0:= temp;
  #L1b25ca.  v1:= 2.0F;
  #L1b25ce.  if v0 == v1 then goto L1b25d4;
  #L1b25d2.  return @kind void;
  #L1b25d4.  v0:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b25d8.  v0:= v0.`com.google.android.material.tabs.TabLayout.tabGravity` @type ^`int`;
  #L1b25dc.  v1:= 1I;
  #L1b25de.  if v0 == v1 then goto L1b25f0;
  #L1b25e2.  v0:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b25e6.  v0:= v0.`com.google.android.material.tabs.TabLayout.mode` @type ^`int`;
  #L1b25ea.  v1:= 2I;
  #L1b25ec.  if v0 != v1 then goto L1b26c2;
  #L1b25f0.  call temp:= `getChildCount`(v8) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildCount:()I` @kind virtual;
  #L1b25f6.  v0:= temp;
  #L1b25f8.  v1:= 0I;
  #L1b25fa.  v2:= 0I;
  #L1b25fc.  v3:= v0;
  #L1b25fe.  if v2 >= v3 then goto L1b262c;
  #L1b2602.  call temp:= `getChildAt`(v8, v2) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1b2608.  v4:= temp @kind object;
  #L1b260a.  call temp:= `getVisibility`(v4) @signature `Landroid/view/View;.getVisibility:()I` @kind virtual;
  #L1b2610.  v5:= temp;
  #L1b2612.  if v5 != 0 then goto L1b2626;
  #L1b2616.  call temp:= `getMeasuredWidth`(v4) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L1b261c.  v5:= temp;
  #L1b261e.  call temp:= `max`(v1, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1b2624.  v1:= temp;
  #L1b2626.  v2:= v2 + 1;
  #L1b262a.  goto L1b25fe;
  #L1b262c.  if v1 > 0 then goto L1b2632;
  #L1b2630.  return @kind void;
  #L1b2632.  call temp:= `getContext`(v8) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1b2638.  v2:= temp @kind object;
  #L1b263a.  v3:= 16I;
  #L1b263e.  call temp:= `dpToPx`(v2, v3) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L1b2644.  v2:= temp;
  #L1b2646.  v2:= (`int`) v2 @kind f2i;
  #L1b2648.  v3:= 0I;
  #L1b264a.  v4:= v1 * v0 @kind int;
  #L1b264e.  call temp:= `getMeasuredWidth`(v8) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getMeasuredWidth:()I` @kind virtual;
  #L1b2654.  v5:= temp;
  #L1b2656.  v6:= v2 * 2;
  #L1b265a.  v5:= v5 - v6 @kind int;
  #L1b265c.  if v4 > v5 then goto L1b26a2;
  #L1b2660.  v4:= 0I;
  #L1b2662.  if v4 >= v0 then goto L1b26a0;
  #L1b2666.  call temp:= `getChildAt`(v8, v4) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1b266c.  v5:= temp @kind object;
  #L1b266e.  call temp:= `getLayoutParams`(v5) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L1b2674.  v5:= temp @kind object;
  #L1b2676.  v5:= (`android.widget.LinearLayout$LayoutParams`) v5 @kind object;
  #L1b267a.  v6:= v5.`android.widget.LinearLayout$LayoutParams.width` @type ^`int`;
  #L1b267e.  v7:= 0I;
  #L1b2680.  if v6 != v1 then goto L1b2690;
  #L1b2684.  v6:= v5.`android.widget.LinearLayout$LayoutParams.weight` @type ^`float`;
  #L1b2688.  v6:= fcmpl(v6, v7);
  #L1b268c.  if v6 == 0 then goto L1b269a;
  #L1b2690.  v5.`android.widget.LinearLayout$LayoutParams.width` @type ^`int` := v1;
  #L1b2694.  v5.`android.widget.LinearLayout$LayoutParams.weight` @type ^`float` := v7;
  #L1b2698.  v3:= 1I;
  #L1b269a.  v4:= v4 + 1;
  #L1b269e.  goto L1b2662;
  #L1b26a0.  goto L1b26b8;
  #L1b26a2.  v4:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b26a6.  v5:= 0I;
  #L1b26a8.  v4.`com.google.android.material.tabs.TabLayout.tabGravity` @type ^`int` := v5;
  #L1b26ac.  v4:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1b26b0.  call `updateTabViews`(v4, v5) @signature `Lcom/google/android/material/tabs/TabLayout;.updateTabViews:(Z)V` @kind virtual;
  #L1b26b6.  v3:= 1I;
  #L1b26b8.  if v3 == 0 then goto L1b26c2;
  #L1b26bc.  call `onMeasure`(v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onMeasure:(II)V` @kind super;
  #L1b26c2.  return @kind void;
}
procedure `void` `onRtlPropertiesChanged`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v2 @kind this, `int` v3 @name `layoutDirection`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onRtlPropertiesChanged:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b26d4.  call `onRtlPropertiesChanged`(v2, v3) @signature `Landroid/widget/LinearLayout;.onRtlPropertiesChanged:(I)V` @kind super;
  #L1b26da.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b26de.  v1:= 23I;
  #L1b26e2.  if v0 >= v1 then goto L1b26f8;
  #L1b26e6.  v0:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int`;
  #L1b26ea.  if v0 == v3 then goto L1b26f8;
  #L1b26ee.  call `requestLayout`(v2) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.requestLayout:()V` @kind virtual;
  #L1b26f4.  v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int` := v3;
  #L1b26f8.  return @kind void;
}
procedure `void` `setIndicatorPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 @name `left`, `int` v3 @name `right`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setIndicatorPosition:(II)V` @AccessFlag  {
    temp;
    v0;

  #L1b270c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1b2710.  if v2 != v0 then goto L1b271c;
  #L1b2714.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1b2718.  if v3 == v0 then goto L1b272a;
  #L1b271c.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int` := v2;
  #L1b2720.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int` := v3;
  #L1b2724.  call `postInvalidateOnAnimation`(v1) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L1b272a.  return @kind void;
}
procedure `void` `setIndicatorPositionFromTabPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 @name `position`, `float` v3 @name `positionOffset`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setIndicatorPositionFromTabPosition:(IF)V` @AccessFlag  {
    temp;
    v0;

  #L1b273c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2740.  if v0 == 0 then goto L1b275a;
  #L1b2744.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L1b274a.  v0:= temp;
  #L1b274c.  if v0 == 0 then goto L1b275a;
  #L1b2750.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1b2754.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L1b275a.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedPosition` @type ^`int` := v2;
  #L1b275e.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectionOffset` @type ^`float` := v3;
  #L1b2762.  call `updateIndicatorPosition`(v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @kind direct;
  #L1b2768.  return @kind void;
}
procedure `void` `setSelectedIndicatorColor`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 @name `color`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setSelectedIndicatorColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L1b277c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1b2780.  call temp:= `getColor`(v0) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1b2786.  v0:= temp;
  #L1b2788.  if v0 == v2 then goto L1b279c;
  #L1b278c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1b2790.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1b2796.  call `postInvalidateOnAnimation`(v1) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L1b279c.  return @kind void;
}
procedure `void` `setSelectedIndicatorHeight`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 @name `height`) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setSelectedIndicatorHeight:(I)V` @AccessFlag  {
    temp;
    v0;

  #L1b27b0.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int`;
  #L1b27b4.  if v0 == v2 then goto L1b27c2;
  #L1b27b8.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int` := v2;
  #L1b27bc.  call `postInvalidateOnAnimation`(v1) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L1b27c2.  return @kind void;
}
