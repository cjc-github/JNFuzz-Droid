record `androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` @kind class @AccessFlag PUBLIC {
  `javax.crypto.Cipher` `androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject.mCipher` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Mac` `androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject.mMac` @AccessFlag PRIVATE_FINAL;
  `java.security.Signature` `androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject.mSignature` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v1 @kind this, `java.security.Signature` v2 @kind object @name `signature`) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;.<init>:(Ljava/security/Signature;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v1 @kind this, `javax.crypto.Cipher` v2 @kind object @name `cipher`) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;.<init>:(Ljavax/crypto/Cipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v1 @kind this, `javax.crypto.Mac` v2 @kind object @name `mac`) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;.<init>:(Ljavax/crypto/Mac;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `javax.crypto.Cipher` `getCipher`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v1 @kind this) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;.getCipher:()Ljavax/crypto/Cipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `javax.crypto.Mac` `getMac`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v1 @kind this) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;.getMac:()Ljavax/crypto/Mac;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.security.Signature` `getSignature`(`androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject` v1 @kind this) @signature `Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;.getSignature:()Ljava/security/Signature;` @AccessFlag PUBLIC {

  # return;
}
