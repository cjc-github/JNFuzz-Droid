record `androidx.core.content.res.ComplexColorCompat` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `androidx.core.content.res.ComplexColorCompat.mColor` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `androidx.core.content.res.ComplexColorCompat.mColorStateList` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Shader` `androidx.core.content.res.ComplexColorCompat.mShader` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@androidx.core.content.res.ComplexColorCompat.LOG_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.core.content.res.ComplexColorCompat` v0 @kind this, `android.graphics.Shader` v1 @kind object @name `shader`, `android.content.res.ColorStateList` v2 @kind object @name `colorStateList`, `int` v3 @name `color`) @signature `Landroidx/core/content/res/ComplexColorCompat;.<init>:(Landroid/graphics/Shader;Landroid/content/res/ColorStateList;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.core.content.res.ComplexColorCompat` `createFromXml`(`android.content.res.Resources` v8 @kind object @name `resources`, `int` v9 @name `resId`, `android.content.res.Resources$Theme` v10 @kind object @name `theme`) @signature `Landroidx/core/content/res/ComplexColorCompat;.createFromXml:(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroidx/core/content/res/ComplexColorCompat;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `androidx.core.content.res.ComplexColorCompat` `from`(`int` v2 @name `color`) @signature `Landroidx/core/content/res/ComplexColorCompat;.from:(I)Landroidx/core/content/res/ComplexColorCompat;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.core.content.res.ComplexColorCompat` `from`(`android.content.res.ColorStateList` v3 @kind object @name `colorStateList`) @signature `Landroidx/core/content/res/ComplexColorCompat;.from:(Landroid/content/res/ColorStateList;)Landroidx/core/content/res/ComplexColorCompat;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.core.content.res.ComplexColorCompat` `from`(`android.graphics.Shader` v3 @kind object @name `shader`) @signature `Landroidx/core/content/res/ComplexColorCompat;.from:(Landroid/graphics/Shader;)Landroidx/core/content/res/ComplexColorCompat;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.core.content.res.ComplexColorCompat` `inflate`(`android.content.res.Resources` v3 @kind object @name `resources`, `int` v4 @name `resId`, `android.content.res.Resources$Theme` v5 @kind object @name `theme`) @signature `Landroidx/core/content/res/ComplexColorCompat;.inflate:(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroidx/core/content/res/ComplexColorCompat;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getColor`(`androidx.core.content.res.ComplexColorCompat` v1 @kind this) @signature `Landroidx/core/content/res/ComplexColorCompat;.getColor:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.Shader` `getShader`(`androidx.core.content.res.ComplexColorCompat` v1 @kind this) @signature `Landroidx/core/content/res/ComplexColorCompat;.getShader:()Landroid/graphics/Shader;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isGradient`(`androidx.core.content.res.ComplexColorCompat` v1 @kind this) @signature `Landroidx/core/content/res/ComplexColorCompat;.isGradient:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isStateful`(`androidx.core.content.res.ComplexColorCompat` v1 @kind this) @signature `Landroidx/core/content/res/ComplexColorCompat;.isStateful:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `onStateChanged`(`androidx.core.content.res.ComplexColorCompat` v3 @kind this, `int`[] v4 @kind object @name `stateSet`) @signature `Landroidx/core/content/res/ComplexColorCompat;.onStateChanged:([I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setColor`(`androidx.core.content.res.ComplexColorCompat` v0 @kind this, `int` v1 @name `color`) @signature `Landroidx/core/content/res/ComplexColorCompat;.setColor:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `willDraw`(`androidx.core.content.res.ComplexColorCompat` v1 @kind this) @signature `Landroidx/core/content/res/ComplexColorCompat;.willDraw:()Z` @AccessFlag PUBLIC {

  # return;
}
