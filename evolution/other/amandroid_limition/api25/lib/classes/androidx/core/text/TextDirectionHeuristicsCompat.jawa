record `androidx.core.text.TextDirectionHeuristicsCompat` @kind class @AccessFlag PUBLIC_FINAL {
}
global `androidx.core.text.TextDirectionHeuristicCompat` `@@androidx.core.text.TextDirectionHeuristicsCompat.ANYRTL_LTR` @AccessFlag PUBLIC_STATIC_FINAL;
global `androidx.core.text.TextDirectionHeuristicCompat` `@@androidx.core.text.TextDirectionHeuristicsCompat.FIRSTSTRONG_LTR` @AccessFlag PUBLIC_STATIC_FINAL;
global `androidx.core.text.TextDirectionHeuristicCompat` `@@androidx.core.text.TextDirectionHeuristicsCompat.FIRSTSTRONG_RTL` @AccessFlag PUBLIC_STATIC_FINAL;
global `androidx.core.text.TextDirectionHeuristicCompat` `@@androidx.core.text.TextDirectionHeuristicsCompat.LOCALE` @AccessFlag PUBLIC_STATIC_FINAL;
global `androidx.core.text.TextDirectionHeuristicCompat` `@@androidx.core.text.TextDirectionHeuristicsCompat.LTR` @AccessFlag PUBLIC_STATIC_FINAL;
global `androidx.core.text.TextDirectionHeuristicCompat` `@@androidx.core.text.TextDirectionHeuristicsCompat.RTL` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.core.text.TextDirectionHeuristicsCompat.STATE_FALSE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.core.text.TextDirectionHeuristicsCompat.STATE_TRUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.core.text.TextDirectionHeuristicsCompat.STATE_UNKNOWN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/core/text/TextDirectionHeuristicsCompat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.text.TextDirectionHeuristicsCompat` v0 @kind this) @signature `Landroidx/core/text/TextDirectionHeuristicsCompat;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `isRtlText`(`int` v1 @name `directionality`) @signature `Landroidx/core/text/TextDirectionHeuristicsCompat;.isRtlText:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `isRtlTextOrFormat`(`int` v2 @name `directionality`) @signature `Landroidx/core/text/TextDirectionHeuristicsCompat;.isRtlTextOrFormat:(I)I` @AccessFlag STATIC {

  # return;
}
