record `androidx.core.util.Pools$SimplePool` @kind class @AccessFlag PUBLIC extends `androidx.core.util.Pools$Pool` @kind interface {
  `java.lang.Object`[] `androidx.core.util.Pools$SimplePool.mPool` @AccessFlag PRIVATE_FINAL;
  `int` `androidx.core.util.Pools$SimplePool.mPoolSize` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`androidx.core.util.Pools$SimplePool` v2 @kind this, `int` v3 @name `maxPoolSize`) @signature `Landroidx/core/util/Pools$SimplePool;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isInPool`(`androidx.core.util.Pools$SimplePool` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Landroidx/core/util/Pools$SimplePool;.isInPool:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `acquire`(`androidx.core.util.Pools$SimplePool` v5 @kind this) @signature `Landroidx/core/util/Pools$SimplePool;.acquire:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `release`(`androidx.core.util.Pools$SimplePool` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Landroidx/core/util/Pools$SimplePool;.release:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
