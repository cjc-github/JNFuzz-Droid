record `androidx.core.util.Preconditions` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`androidx.core.util.Preconditions` v0 @kind this) @signature `Landroidx/core/util/Preconditions;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `checkArgument`(`boolean` v1 @name `expression`) @signature `Landroidx/core/util/Preconditions;.checkArgument:(Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `checkArgument`(`boolean` v2 @name `expression`, `java.lang.Object` v3 @kind object @name `errorMessage`) @signature `Landroidx/core/util/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `checkArgumentInRange`(`int` v6 @name `value`, `int` v7 @name `lower`, `int` v8 @name `upper`, `java.lang.String` v9 @kind object @name `valueName`) @signature `Landroidx/core/util/Preconditions;.checkArgumentInRange:(IIILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `checkArgumentNonnegative`(`int` v1 @name `value`) @signature `Landroidx/core/util/Preconditions;.checkArgumentNonnegative:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `checkArgumentNonnegative`(`int` v1 @name `value`, `java.lang.String` v2 @kind object @name `errorMessage`) @signature `Landroidx/core/util/Preconditions;.checkArgumentNonnegative:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v1 @kind object) @signature `Landroidx/core/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object @name `errorMessage`) @signature `Landroidx/core/util/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `checkState`(`boolean` v1 @name `expression`) @signature `Landroidx/core/util/Preconditions;.checkState:(Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `checkState`(`boolean` v1 @name `expression`, `java.lang.String` v2 @kind object @name `message`) @signature `Landroidx/core/util/Preconditions;.checkState:(ZLjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
