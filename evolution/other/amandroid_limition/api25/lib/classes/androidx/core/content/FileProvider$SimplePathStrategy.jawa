record `androidx.core.content.FileProvider$SimplePathStrategy` @kind class @AccessFlag  extends `androidx.core.content.FileProvider$PathStrategy` @kind interface {
  `java.lang.String` `androidx.core.content.FileProvider$SimplePathStrategy.mAuthority` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `androidx.core.content.FileProvider$SimplePathStrategy.mRoots` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.core.content.FileProvider$SimplePathStrategy` v1 @kind this, `java.lang.String` v2 @kind object @name `authority`) @signature `Landroidx/core/content/FileProvider$SimplePathStrategy;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addRoot`(`androidx.core.content.FileProvider$SimplePathStrategy` v4 @kind this, `java.lang.String` v5 @kind object @name `name`, `java.io.File` v6 @kind object @name `root`) @signature `Landroidx/core/content/FileProvider$SimplePathStrategy;.addRoot:(Ljava/lang/String;Ljava/io/File;)V` @AccessFlag  {

  # return;
}
procedure `java.io.File` `getFileForUri`(`androidx.core.content.FileProvider$SimplePathStrategy` v9 @kind this, `android.net.Uri` v10 @kind object @name `uri`) @signature `Landroidx/core/content/FileProvider$SimplePathStrategy;.getFileForUri:(Landroid/net/Uri;)Ljava/io/File;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.net.Uri` `getUriForFile`(`androidx.core.content.FileProvider$SimplePathStrategy` v7 @kind this, `java.io.File` v8 @kind object @name `file`) @signature `Landroidx/core/content/FileProvider$SimplePathStrategy;.getUriForFile:(Ljava/io/File;)Landroid/net/Uri;` @AccessFlag PUBLIC {

  # return;
}
