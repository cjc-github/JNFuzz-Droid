record `androidx.core.graphics.PathParser$PathDataNode` @kind class @AccessFlag PUBLIC {
  `float`[] `androidx.core.graphics.PathParser$PathDataNode.mParams` @AccessFlag PUBLIC;
  `char` `androidx.core.graphics.PathParser$PathDataNode.mType` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`androidx.core.graphics.PathParser$PathDataNode` v0 @kind this, `char` v1 @name `type`, `float`[] v2 @kind object @name `params`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.<init>:(C[F)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.graphics.PathParser$PathDataNode` v3 @kind this, `androidx.core.graphics.PathParser$PathDataNode` v4 @kind object @name `n`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.<init>:(Landroidx/core/graphics/PathParser$PathDataNode;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addCommand`(`android.graphics.Path` v25 @kind object @name `path`, `float`[] v26 @kind object @name `current`, `char` v27 @name `previousCmd`, `char` v28 @name `cmd`, `float`[] v29 @kind object @name `val`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.addCommand:(Landroid/graphics/Path;[FCC[F)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `arcToBezier`(`android.graphics.Path` v62 @kind object @name `p`, `double` v63 @name `cx`, `double` v65 @name `cy`, `double` v67 @name `a`, `double` v69 @name `b`, `double` v71 @name `e1x`, `double` v73 @name `e1y`, `double` v75 @name `theta`, `double` v77 @name `start`, `double` v79 @name `sweep`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.arcToBezier:(Landroid/graphics/Path;DDDDDDDDD)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `drawArc`(`android.graphics.Path` v73 @kind object @name `p`, `float` v74 @name `x0`, `float` v75 @name `y0`, `float` v76 @name `x1`, `float` v77 @name `y1`, `float` v78 @name `a`, `float` v79 @name `b`, `float` v80 @name `theta`, `boolean` v81 @name `isMoreThanHalf`, `boolean` v82 @name `isPositiveArc`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.drawArc:(Landroid/graphics/Path;FFFFFFFZZ)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `nodesToPath`(`androidx.core.graphics.PathParser$PathDataNode`[] v5 @kind object @name `node`, `android.graphics.Path` v6 @kind object @name `path`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.nodesToPath:([Landroidx/core/graphics/PathParser$PathDataNode;Landroid/graphics/Path;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `interpolatePathDataNode`(`androidx.core.graphics.PathParser$PathDataNode` v4 @kind this, `androidx.core.graphics.PathParser$PathDataNode` v5 @kind object @name `nodeFrom`, `androidx.core.graphics.PathParser$PathDataNode` v6 @kind object @name `nodeTo`, `float` v7 @name `fraction`) @signature `Landroidx/core/graphics/PathParser$PathDataNode;.interpolatePathDataNode:(Landroidx/core/graphics/PathParser$PathDataNode;Landroidx/core/graphics/PathParser$PathDataNode;F)V` @AccessFlag PUBLIC {

  # return;
}
