record `androidx.core.os.CancellationSignal` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `androidx.core.os.CancellationSignal.mCancelInProgress` @AccessFlag PRIVATE;
  `java.lang.Object` `androidx.core.os.CancellationSignal.mCancellationSignalObj` @AccessFlag PRIVATE;
  `boolean` `androidx.core.os.CancellationSignal.mIsCanceled` @AccessFlag PRIVATE;
  `androidx.core.os.CancellationSignal$OnCancelListener` `androidx.core.os.CancellationSignal.mOnCancelListener` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`androidx.core.os.CancellationSignal` v0 @kind this) @signature `Landroidx/core/os/CancellationSignal;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `waitForCancelFinishedLocked`(`androidx.core.os.CancellationSignal` v1 @kind this) @signature `Landroidx/core/os/CancellationSignal;.waitForCancelFinishedLocked:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `cancel`(`androidx.core.os.CancellationSignal` v5 @kind this) @signature `Landroidx/core/os/CancellationSignal;.cancel:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getCancellationSignalObject`(`androidx.core.os.CancellationSignal` v2 @kind this) @signature `Landroidx/core/os/CancellationSignal;.getCancellationSignalObject:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCanceled`(`androidx.core.os.CancellationSignal` v1 @kind this) @signature `Landroidx/core/os/CancellationSignal;.isCanceled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setOnCancelListener`(`androidx.core.os.CancellationSignal` v1 @kind this, `androidx.core.os.CancellationSignal$OnCancelListener` v2 @kind object @name `listener`) @signature `Landroidx/core/os/CancellationSignal;.setOnCancelListener:(Landroidx/core/os/CancellationSignal$OnCancelListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `throwIfCanceled`(`androidx.core.os.CancellationSignal` v1 @kind this) @signature `Landroidx/core/os/CancellationSignal;.throwIfCanceled:()V` @AccessFlag PUBLIC {

  # return;
}
