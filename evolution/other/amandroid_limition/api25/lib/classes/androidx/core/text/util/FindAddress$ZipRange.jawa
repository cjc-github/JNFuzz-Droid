record `androidx.core.text.util.FindAddress$ZipRange` @kind class @AccessFlag  {
  `int` `androidx.core.text.util.FindAddress$ZipRange.mException1` @AccessFlag ;
  `int` `androidx.core.text.util.FindAddress$ZipRange.mException2` @AccessFlag ;
  `int` `androidx.core.text.util.FindAddress$ZipRange.mHigh` @AccessFlag ;
  `int` `androidx.core.text.util.FindAddress$ZipRange.mLow` @AccessFlag ;
}
procedure `void` `<init>`(`androidx.core.text.util.FindAddress$ZipRange` v0 @kind this, `int` v1 @name `low`, `int` v2 @name `high`, `int` v3 @name `exception1`, `int` v4 @name `exception2`) @signature `Landroidx/core/text/util/FindAddress$ZipRange;.<init>:(IIII)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `matches`(`androidx.core.text.util.FindAddress$ZipRange` v3 @kind this, `java.lang.String` v4 @kind object @name `zipCode`) @signature `Landroidx/core/text/util/FindAddress$ZipRange;.matches:(Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
