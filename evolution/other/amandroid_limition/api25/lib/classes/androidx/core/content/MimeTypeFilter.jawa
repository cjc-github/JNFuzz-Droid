record `androidx.core.content.MimeTypeFilter` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`androidx.core.content.MimeTypeFilter` v0 @kind this) @signature `Landroidx/core/content/MimeTypeFilter;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `matches`(`java.lang.String` v8 @kind object @name `mimeType`, `java.lang.String`[] v9 @kind object @name `filters`) @signature `Landroidx/core/content/MimeTypeFilter;.matches:(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `matches`(`java.lang.String`[] v8 @kind object @name `mimeTypes`, `java.lang.String` v9 @kind object @name `filter`) @signature `Landroidx/core/content/MimeTypeFilter;.matches:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `matches`(`java.lang.String` v3 @kind object @name `mimeType`, `java.lang.String` v4 @kind object @name `filter`) @signature `Landroidx/core/content/MimeTypeFilter;.matches:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `matchesMany`(`java.lang.String`[] v8 @kind object @name `mimeTypes`, `java.lang.String` v9 @kind object @name `filter`) @signature `Landroidx/core/content/MimeTypeFilter;.matchesMany:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `mimeTypeAgainstFilter`(`java.lang.String`[] v5 @kind object @name `mimeTypeParts`, `java.lang.String`[] v6 @kind object @name `filterParts`) @signature `Landroidx/core/content/MimeTypeFilter;.mimeTypeAgainstFilter:([Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
