record `androidx.core.util.Pools$SynchronizedPool` @kind class @AccessFlag PUBLIC extends `androidx.core.util.Pools$SimplePool` @kind class {
  `java.lang.Object` `androidx.core.util.Pools$SynchronizedPool.mLock` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.core.util.Pools$SynchronizedPool` v1 @kind this, `int` v2 @name `maxPoolSize`) @signature `Landroidx/core/util/Pools$SynchronizedPool;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `acquire`(`androidx.core.util.Pools$SynchronizedPool` v2 @kind this) @signature `Landroidx/core/util/Pools$SynchronizedPool;.acquire:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `release`(`androidx.core.util.Pools$SynchronizedPool` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Landroidx/core/util/Pools$SynchronizedPool;.release:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
