record `androidx.core.view.accessibility.AccessibilityManagerCompat` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`androidx.core.view.accessibility.AccessibilityManagerCompat` v0 @kind this) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `addAccessibilityStateChangeListener`(`android.view.accessibility.AccessibilityManager` v1 @kind object @name `manager`, `androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener` v2 @kind object @name `listener`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.addAccessibilityStateChangeListener:(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$AccessibilityStateChangeListener;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `addTouchExplorationStateChangeListener`(`android.view.accessibility.AccessibilityManager` v3 @kind object @name `manager`, `androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener` v4 @kind object @name `listener`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.addTouchExplorationStateChangeListener:(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.List` `getEnabledAccessibilityServiceList`(`android.view.accessibility.AccessibilityManager` v1 @kind object @name `manager`, `int` v2 @name `feedbackTypeFlags`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.getEnabledAccessibilityServiceList:(Landroid/view/accessibility/AccessibilityManager;I)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.List` `getInstalledAccessibilityServiceList`(`android.view.accessibility.AccessibilityManager` v1 @kind object @name `manager`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.getInstalledAccessibilityServiceList:(Landroid/view/accessibility/AccessibilityManager;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isTouchExplorationEnabled`(`android.view.accessibility.AccessibilityManager` v1 @kind object @name `manager`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.isTouchExplorationEnabled:(Landroid/view/accessibility/AccessibilityManager;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `removeAccessibilityStateChangeListener`(`android.view.accessibility.AccessibilityManager` v1 @kind object @name `manager`, `androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener` v2 @kind object @name `listener`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.removeAccessibilityStateChangeListener:(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$AccessibilityStateChangeListener;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `removeTouchExplorationStateChangeListener`(`android.view.accessibility.AccessibilityManager` v3 @kind object @name `manager`, `androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener` v4 @kind object @name `listener`) @signature `Landroidx/core/view/accessibility/AccessibilityManagerCompat;.removeTouchExplorationStateChangeListener:(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
