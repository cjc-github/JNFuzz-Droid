record `androidx.core.net.TrafficStatsCompat` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`androidx.core.net.TrafficStatsCompat` v0 @kind this) @signature `Landroidx/core/net/TrafficStatsCompat;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `clearThreadStatsTag`() @signature `Landroidx/core/net/TrafficStatsCompat;.clearThreadStatsTag:()V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getThreadStatsTag`() @signature `Landroidx/core/net/TrafficStatsCompat;.getThreadStatsTag:()I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `incrementOperationCount`(`int` v0 @name `operationCount`) @signature `Landroidx/core/net/TrafficStatsCompat;.incrementOperationCount:(I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `incrementOperationCount`(`int` v0 @name `tag`, `int` v1 @name `operationCount`) @signature `Landroidx/core/net/TrafficStatsCompat;.incrementOperationCount:(II)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `setThreadStatsTag`(`int` v0 @name `tag`) @signature `Landroidx/core/net/TrafficStatsCompat;.setThreadStatsTag:(I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `tagDatagramSocket`(`java.net.DatagramSocket` v3 @kind object @name `socket`) @signature `Landroidx/core/net/TrafficStatsCompat;.tagDatagramSocket:(Ljava/net/DatagramSocket;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `tagSocket`(`java.net.Socket` v0 @kind object @name `socket`) @signature `Landroidx/core/net/TrafficStatsCompat;.tagSocket:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `untagDatagramSocket`(`java.net.DatagramSocket` v3 @kind object @name `socket`) @signature `Landroidx/core/net/TrafficStatsCompat;.untagDatagramSocket:(Ljava/net/DatagramSocket;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `untagSocket`(`java.net.Socket` v0 @kind object @name `socket`) @signature `Landroidx/core/net/TrafficStatsCompat;.untagSocket:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
