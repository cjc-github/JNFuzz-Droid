record `androidx.constraintlayout.solver.ArrayRow` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.solver.LinearSystem$Row` @kind interface {
  `float` `androidx.constraintlayout.solver.ArrayRow.constantValue` @AccessFlag ;
  `boolean` `androidx.constraintlayout.solver.ArrayRow.isSimpleDefinition` @AccessFlag ;
  `boolean` `androidx.constraintlayout.solver.ArrayRow.used` @AccessFlag ;
  `androidx.constraintlayout.solver.SolverVariable` `androidx.constraintlayout.solver.ArrayRow.variable` @AccessFlag ;
  `androidx.constraintlayout.solver.ArrayLinkedVariables` `androidx.constraintlayout.solver.ArrayRow.variables` @AccessFlag PUBLIC_FINAL;
}
global `boolean` `@@androidx.constraintlayout.solver.ArrayRow.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@androidx.constraintlayout.solver.ArrayRow.epsilon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this, `androidx.constraintlayout.solver.Cache` v2 @kind object @name `cache`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.<init>:(Landroidx/constraintlayout/solver/Cache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `addError`(`androidx.constraintlayout.solver.ArrayRow` v3 @kind this, `androidx.constraintlayout.solver.LinearSystem` v4 @kind object @name `system`, `int` v5 @name `strength`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.addError:(Landroidx/constraintlayout/solver/LinearSystem;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addError`(`androidx.constraintlayout.solver.ArrayRow` v3 @kind this, `androidx.constraintlayout.solver.SolverVariable` v4 @kind object @name `error`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.addError:(Landroidx/constraintlayout/solver/SolverVariable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `addSingleError`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `error`, `int` v4 @name `sign`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.addSingleError:(Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `boolean` `chooseSubject`(`androidx.constraintlayout.solver.ArrayRow` v3 @kind this, `androidx.constraintlayout.solver.LinearSystem` v4 @kind object @name `system`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.chooseSubject:(Landroidx/constraintlayout/solver/LinearSystem;)Z` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowCentering`(`androidx.constraintlayout.solver.ArrayRow` v4 @kind this, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `variableA`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variableB`, `int` v7 @name `marginA`, `float` v8 @name `bias`, `androidx.constraintlayout.solver.SolverVariable` v9 @kind object @name `variableC`, `androidx.constraintlayout.solver.SolverVariable` v10 @kind object @name `variableD`, `int` v11 @name `marginB`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowCentering:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;IFLandroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowDefinition`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this, `androidx.constraintlayout.solver.SolverVariable` v2 @kind object @name `variable`, `int` v3 @name `value`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowDefinition:(Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowDimensionPercent`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `variableA`, `androidx.constraintlayout.solver.SolverVariable` v4 @kind object @name `variableB`, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `variableC`, `float` v6 @name `percent`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowDimensionPercent:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;F)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowDimensionRatio`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `variableA`, `androidx.constraintlayout.solver.SolverVariable` v4 @kind object @name `variableB`, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `variableC`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variableD`, `float` v7 @name `ratio`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowDimensionRatio:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;F)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowEqualDimension`(`androidx.constraintlayout.solver.ArrayRow` v15 @kind this, `float` v16 @name `currentWeight`, `float` v17 @name `totalWeights`, `float` v18 @name `nextWeight`, `androidx.constraintlayout.solver.SolverVariable` v19 @kind object @name `variableStartA`, `int` v20 @name `marginStartA`, `androidx.constraintlayout.solver.SolverVariable` v21 @kind object @name `variableEndA`, `int` v22 @name `marginEndA`, `androidx.constraintlayout.solver.SolverVariable` v23 @kind object @name `variableStartB`, `int` v24 @name `marginStartB`, `androidx.constraintlayout.solver.SolverVariable` v25 @kind object @name `variableEndB`, `int` v26 @name `marginEndB`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowEqualDimension:(FFFLandroidx/constraintlayout/solver/SolverVariable;ILandroidx/constraintlayout/solver/SolverVariable;ILandroidx/constraintlayout/solver/SolverVariable;ILandroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowEqualMatchDimensions`(`androidx.constraintlayout.solver.ArrayRow` v6 @kind this, `float` v7 @name `currentWeight`, `float` v8 @name `totalWeights`, `float` v9 @name `nextWeight`, `androidx.constraintlayout.solver.SolverVariable` v10 @kind object @name `variableStartA`, `androidx.constraintlayout.solver.SolverVariable` v11 @kind object @name `variableEndA`, `androidx.constraintlayout.solver.SolverVariable` v12 @kind object @name `variableStartB`, `androidx.constraintlayout.solver.SolverVariable` v13 @kind object @name `variableEndB`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowEqualMatchDimensions:(FFFLandroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowEquals`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `variable`, `int` v4 @name `value`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowEquals:(Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowEquals`(`androidx.constraintlayout.solver.ArrayRow` v4 @kind this, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `variableA`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variableB`, `int` v7 @name `margin`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowEquals:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowGreaterThan`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `a`, `int` v4 @name `b`, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `slack`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowGreaterThan:(Landroidx/constraintlayout/solver/SolverVariable;ILandroidx/constraintlayout/solver/SolverVariable;)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowGreaterThan`(`androidx.constraintlayout.solver.ArrayRow` v4 @kind this, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `variableA`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variableB`, `androidx.constraintlayout.solver.SolverVariable` v7 @kind object @name `slack`, `int` v8 @name `margin`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowGreaterThan:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowLowerThan`(`androidx.constraintlayout.solver.ArrayRow` v4 @kind this, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `variableA`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `variableB`, `androidx.constraintlayout.solver.SolverVariable` v7 @kind object @name `slack`, `int` v8 @name `margin`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowLowerThan:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;I)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.ArrayRow` `createRowWithAngle`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `at`, `androidx.constraintlayout.solver.SolverVariable` v4 @kind object @name `ab`, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `bt`, `androidx.constraintlayout.solver.SolverVariable` v6 @kind object @name `bb`, `float` v7 @name `angleComponent`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.createRowWithAngle:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;F)Landroidx/constraintlayout/solver/ArrayRow;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `ensurePositiveConstant`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.ensurePositiveConstant:()V` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getKey`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.getKey:()Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getPivotCandidate`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.LinearSystem` v3 @kind object @name `system`, `boolean`[] v4 @kind object @name `avoid`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.getPivotCandidate:(Landroidx/constraintlayout/solver/LinearSystem;[Z)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasKeyVariable`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.hasKeyVariable:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `hasVariable`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this, `androidx.constraintlayout.solver.SolverVariable` v2 @kind object @name `v`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.hasVariable:(Landroidx/constraintlayout/solver/SolverVariable;)Z` @AccessFlag  {

  # return;
}
procedure `void` `initFromRow`(`androidx.constraintlayout.solver.ArrayRow` v6 @kind this, `androidx.constraintlayout.solver.LinearSystem$Row` v7 @kind object @name `row`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.initFromRow:(Landroidx/constraintlayout/solver/LinearSystem$Row;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `pickPivot`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `exclude`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.pickPivot:(Landroidx/constraintlayout/solver/SolverVariable;)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag  {

  # return;
}
procedure `void` `pivot`(`androidx.constraintlayout.solver.ArrayRow` v3 @kind this, `androidx.constraintlayout.solver.SolverVariable` v4 @kind object @name `v`) @signature `Landroidx/constraintlayout/solver/ArrayRow;.pivot:(Landroidx/constraintlayout/solver/SolverVariable;)V` @AccessFlag  {

  # return;
}
procedure `void` `reset`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `sizeInBytes`(`androidx.constraintlayout.solver.ArrayRow` v2 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.sizeInBytes:()I` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toReadableString`(`androidx.constraintlayout.solver.ArrayRow` v11 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.toReadableString:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.constraintlayout.solver.ArrayRow` v1 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayRow;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
