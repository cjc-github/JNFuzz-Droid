record `androidx.constraintlayout.solver.ArrayLinkedVariables` @kind class @AccessFlag PUBLIC {
  `int` `androidx.constraintlayout.solver.ArrayLinkedVariables.ROW_SIZE` @AccessFlag PRIVATE;
  `androidx.constraintlayout.solver.SolverVariable` `androidx.constraintlayout.solver.ArrayLinkedVariables.candidate` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.solver.ArrayLinkedVariables.currentSize` @AccessFlag ;
  `int`[] `androidx.constraintlayout.solver.ArrayLinkedVariables.mArrayIndices` @AccessFlag PRIVATE;
  `int`[] `androidx.constraintlayout.solver.ArrayLinkedVariables.mArrayNextIndices` @AccessFlag PRIVATE;
  `float`[] `androidx.constraintlayout.solver.ArrayLinkedVariables.mArrayValues` @AccessFlag PRIVATE;
  `androidx.constraintlayout.solver.Cache` `androidx.constraintlayout.solver.ArrayLinkedVariables.mCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.constraintlayout.solver.ArrayLinkedVariables.mDidFillOnce` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.solver.ArrayLinkedVariables.mHead` @AccessFlag PRIVATE;
  `int` `androidx.constraintlayout.solver.ArrayLinkedVariables.mLast` @AccessFlag PRIVATE;
  `androidx.constraintlayout.solver.ArrayRow` `androidx.constraintlayout.solver.ArrayLinkedVariables.mRow` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@androidx.constraintlayout.solver.ArrayLinkedVariables.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@androidx.constraintlayout.solver.ArrayLinkedVariables.FULL_NEW_CHECK` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.constraintlayout.solver.ArrayLinkedVariables.NONE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v3 @kind this, `androidx.constraintlayout.solver.ArrayRow` v4 @kind object @name `arrayRow`, `androidx.constraintlayout.solver.Cache` v5 @kind object @name `cache`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.<init>:(Landroidx/constraintlayout/solver/ArrayRow;Landroidx/constraintlayout/solver/Cache;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `isNew`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v2 @kind this, `androidx.constraintlayout.solver.SolverVariable` v3 @kind object @name `variable`, `androidx.constraintlayout.solver.LinearSystem` v4 @kind object @name `system`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.isNew:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/LinearSystem;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v10 @kind this, `androidx.constraintlayout.solver.SolverVariable` v11 @kind object @name `variable`, `float` v12 @name `value`, `boolean` v13 @name `removeFromDefinition`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.add:(Landroidx/constraintlayout/solver/SolverVariable;FZ)V` @AccessFlag FINAL {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `chooseSubject`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v16 @kind this, `androidx.constraintlayout.solver.LinearSystem` v17 @kind object @name `system`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.chooseSubject:(Landroidx/constraintlayout/solver/LinearSystem;)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v4 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.clear:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `containsKey`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v6 @kind this, `androidx.constraintlayout.solver.SolverVariable` v7 @kind object @name `variable`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.containsKey:(Landroidx/constraintlayout/solver/SolverVariable;)Z` @AccessFlag FINAL {

  # return;
}
procedure `void` `display`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v6 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.display:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `divideByAmount`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v4 @kind this, `float` v5 @name `amount`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.divideByAmount:(F)V` @AccessFlag  {

  # return;
}
procedure `float` `get`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v4 @kind this, `androidx.constraintlayout.solver.SolverVariable` v5 @kind object @name `v`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.get:(Landroidx/constraintlayout/solver/SolverVariable;)F` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getPivotCandidate`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v6 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.getPivotCandidate:()Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getPivotCandidate`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v7 @kind this, `boolean`[] v8 @kind object @name `avoid`, `androidx.constraintlayout.solver.SolverVariable` v9 @kind object @name `exclude`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.getPivotCandidate:([ZLandroidx/constraintlayout/solver/SolverVariable;)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag  {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getVariable`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v4 @kind this, `int` v5 @name `index`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.getVariable:(I)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag FINAL {

  # return;
}
procedure `float` `getVariableValue`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v3 @kind this, `int` v4 @name `index`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.getVariableValue:(I)F` @AccessFlag FINAL {

  # return;
}
procedure `boolean` `hasAtLeastOnePositiveVariable`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v4 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.hasAtLeastOnePositiveVariable:()Z` @AccessFlag  {

  # return;
}
procedure `void` `invert`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v5 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.invert:()V` @AccessFlag  {

  # return;
}
procedure `void` `put`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v10 @kind this, `androidx.constraintlayout.solver.SolverVariable` v11 @kind object @name `variable`, `float` v12 @name `value`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.put:(Landroidx/constraintlayout/solver/SolverVariable;F)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `float` `remove`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v7 @kind this, `androidx.constraintlayout.solver.SolverVariable` v8 @kind object @name `variable`, `boolean` v9 @name `removeFromDefinition`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.remove:(Landroidx/constraintlayout/solver/SolverVariable;Z)F` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `sizeInBytes`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v2 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.sizeInBytes:()I` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v6 @kind this) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateFromRow`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v10 @kind this, `androidx.constraintlayout.solver.ArrayRow` v11 @kind object @name `self`, `androidx.constraintlayout.solver.ArrayRow` v12 @kind object @name `definition`, `boolean` v13 @name `removeFromDefinition`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.updateFromRow:(Landroidx/constraintlayout/solver/ArrayRow;Landroidx/constraintlayout/solver/ArrayRow;Z)V` @AccessFlag FINAL {

  # return;
}
procedure `void` `updateFromSystem`(`androidx.constraintlayout.solver.ArrayLinkedVariables` v13 @kind this, `androidx.constraintlayout.solver.ArrayRow` v14 @kind object @name `self`, `androidx.constraintlayout.solver.ArrayRow`[] v15 @kind object @name `rows`) @signature `Landroidx/constraintlayout/solver/ArrayLinkedVariables;.updateFromSystem:(Landroidx/constraintlayout/solver/ArrayRow;[Landroidx/constraintlayout/solver/ArrayRow;)V` @AccessFlag  {

  # return;
}
