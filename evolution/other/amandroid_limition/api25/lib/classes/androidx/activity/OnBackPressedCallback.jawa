record `androidx.activity.OnBackPressedCallback` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.util.concurrent.CopyOnWriteArrayList` `androidx.activity.OnBackPressedCallback.mCancellables` @AccessFlag PRIVATE;
  `boolean` `androidx.activity.OnBackPressedCallback.mEnabled` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`androidx.activity.OnBackPressedCallback` v1 @kind this, `boolean` v2 @name `enabled`) @signature `Landroidx/activity/OnBackPressedCallback;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addCancellable`(`androidx.activity.OnBackPressedCallback` v1 @kind this, `androidx.activity.Cancellable` v2 @kind object @name `cancellable`) @signature `Landroidx/activity/OnBackPressedCallback;.addCancellable:(Landroidx/activity/Cancellable;)V` @AccessFlag  {

  # return;
}
procedure `void` `handleOnBackPressed`() @signature `Landroidx/activity/OnBackPressedCallback;.handleOnBackPressed:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEnabled`(`androidx.activity.OnBackPressedCallback` v1 @kind this) @signature `Landroidx/activity/OnBackPressedCallback;.isEnabled:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `remove`(`androidx.activity.OnBackPressedCallback` v2 @kind this) @signature `Landroidx/activity/OnBackPressedCallback;.remove:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `removeCancellable`(`androidx.activity.OnBackPressedCallback` v1 @kind this, `androidx.activity.Cancellable` v2 @kind object @name `cancellable`) @signature `Landroidx/activity/OnBackPressedCallback;.removeCancellable:(Landroidx/activity/Cancellable;)V` @AccessFlag  {

  # return;
}
procedure `void` `setEnabled`(`androidx.activity.OnBackPressedCallback` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Landroidx/activity/OnBackPressedCallback;.setEnabled:(Z)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
