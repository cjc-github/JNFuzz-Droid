record `androidx.appcompat.app.AlertController$AlertParams` @kind class @AccessFlag PUBLIC {
  `android.widget.ListAdapter` `androidx.appcompat.app.AlertController$AlertParams.mAdapter` @AccessFlag PUBLIC;
  `boolean` `androidx.appcompat.app.AlertController$AlertParams.mCancelable` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mCheckedItem` @AccessFlag PUBLIC;
  `boolean`[] `androidx.appcompat.app.AlertController$AlertParams.mCheckedItems` @AccessFlag PUBLIC;
  `android.content.Context` `androidx.appcompat.app.AlertController$AlertParams.mContext` @AccessFlag PUBLIC_FINAL;
  `android.database.Cursor` `androidx.appcompat.app.AlertController$AlertParams.mCursor` @AccessFlag PUBLIC;
  `android.view.View` `androidx.appcompat.app.AlertController$AlertParams.mCustomTitleView` @AccessFlag PUBLIC;
  `boolean` `androidx.appcompat.app.AlertController$AlertParams.mForceInverseBackground` @AccessFlag PUBLIC;
  `android.graphics.drawable.Drawable` `androidx.appcompat.app.AlertController$AlertParams.mIcon` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mIconAttrId` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mIconId` @AccessFlag PUBLIC;
  `android.view.LayoutInflater` `androidx.appcompat.app.AlertController$AlertParams.mInflater` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `androidx.appcompat.app.AlertController$AlertParams.mIsCheckedColumn` @AccessFlag PUBLIC;
  `boolean` `androidx.appcompat.app.AlertController$AlertParams.mIsMultiChoice` @AccessFlag PUBLIC;
  `boolean` `androidx.appcompat.app.AlertController$AlertParams.mIsSingleChoice` @AccessFlag PUBLIC;
  `java.lang.CharSequence`[] `androidx.appcompat.app.AlertController$AlertParams.mItems` @AccessFlag PUBLIC;
  `java.lang.String` `androidx.appcompat.app.AlertController$AlertParams.mLabelColumn` @AccessFlag PUBLIC;
  `java.lang.CharSequence` `androidx.appcompat.app.AlertController$AlertParams.mMessage` @AccessFlag PUBLIC;
  `android.graphics.drawable.Drawable` `androidx.appcompat.app.AlertController$AlertParams.mNegativeButtonIcon` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnClickListener` `androidx.appcompat.app.AlertController$AlertParams.mNegativeButtonListener` @AccessFlag PUBLIC;
  `java.lang.CharSequence` `androidx.appcompat.app.AlertController$AlertParams.mNegativeButtonText` @AccessFlag PUBLIC;
  `android.graphics.drawable.Drawable` `androidx.appcompat.app.AlertController$AlertParams.mNeutralButtonIcon` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnClickListener` `androidx.appcompat.app.AlertController$AlertParams.mNeutralButtonListener` @AccessFlag PUBLIC;
  `java.lang.CharSequence` `androidx.appcompat.app.AlertController$AlertParams.mNeutralButtonText` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnCancelListener` `androidx.appcompat.app.AlertController$AlertParams.mOnCancelListener` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnMultiChoiceClickListener` `androidx.appcompat.app.AlertController$AlertParams.mOnCheckboxClickListener` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnClickListener` `androidx.appcompat.app.AlertController$AlertParams.mOnClickListener` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnDismissListener` `androidx.appcompat.app.AlertController$AlertParams.mOnDismissListener` @AccessFlag PUBLIC;
  `android.widget.AdapterView$OnItemSelectedListener` `androidx.appcompat.app.AlertController$AlertParams.mOnItemSelectedListener` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnKeyListener` `androidx.appcompat.app.AlertController$AlertParams.mOnKeyListener` @AccessFlag PUBLIC;
  `androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener` `androidx.appcompat.app.AlertController$AlertParams.mOnPrepareListViewListener` @AccessFlag PUBLIC;
  `android.graphics.drawable.Drawable` `androidx.appcompat.app.AlertController$AlertParams.mPositiveButtonIcon` @AccessFlag PUBLIC;
  `android.content.DialogInterface$OnClickListener` `androidx.appcompat.app.AlertController$AlertParams.mPositiveButtonListener` @AccessFlag PUBLIC;
  `java.lang.CharSequence` `androidx.appcompat.app.AlertController$AlertParams.mPositiveButtonText` @AccessFlag PUBLIC;
  `boolean` `androidx.appcompat.app.AlertController$AlertParams.mRecycleOnMeasure` @AccessFlag PUBLIC;
  `java.lang.CharSequence` `androidx.appcompat.app.AlertController$AlertParams.mTitle` @AccessFlag PUBLIC;
  `android.view.View` `androidx.appcompat.app.AlertController$AlertParams.mView` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mViewLayoutResId` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mViewSpacingBottom` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mViewSpacingLeft` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mViewSpacingRight` @AccessFlag PUBLIC;
  `boolean` `androidx.appcompat.app.AlertController$AlertParams.mViewSpacingSpecified` @AccessFlag PUBLIC;
  `int` `androidx.appcompat.app.AlertController$AlertParams.mViewSpacingTop` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`androidx.appcompat.app.AlertController$AlertParams` v1 @kind this, `android.content.Context` v2 @kind object @name `context`) @signature `Landroidx/appcompat/app/AlertController$AlertParams;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `createListView`(`androidx.appcompat.app.AlertController$AlertParams` v11 @kind this, `androidx.appcompat.app.AlertController` v12 @kind object @name `dialog`) @signature `Landroidx/appcompat/app/AlertController$AlertParams;.createListView:(Landroidx/appcompat/app/AlertController;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `apply`(`androidx.appcompat.app.AlertController$AlertParams` v13 @kind this, `androidx.appcompat.app.AlertController` v14 @kind object @name `dialog`) @signature `Landroidx/appcompat/app/AlertController$AlertParams;.apply:(Landroidx/appcompat/app/AlertController;)V` @AccessFlag PUBLIC {

  # return;
}
