record `androidx.fragment.app.FragmentManagerNonConfig` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `androidx.fragment.app.FragmentManagerNonConfig.mChildNonConfigs` @AccessFlag PRIVATE_FINAL;
  `java.util.Collection` `androidx.fragment.app.FragmentManagerNonConfig.mFragments` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `androidx.fragment.app.FragmentManagerNonConfig.mViewModelStores` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.fragment.app.FragmentManagerNonConfig` v0 @kind this, `java.util.Collection` v1 @kind object, `java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Landroidx/fragment/app/FragmentManagerNonConfig;.<init>:(Ljava/util/Collection;Ljava/util/Map;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `getChildNonConfigs`(`androidx.fragment.app.FragmentManagerNonConfig` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManagerNonConfig;.getChildNonConfigs:()Ljava/util/Map;` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `getFragments`(`androidx.fragment.app.FragmentManagerNonConfig` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManagerNonConfig;.getFragments:()Ljava/util/Collection;` @AccessFlag  {

  # return;
}
procedure `java.util.Map` `getViewModelStores`(`androidx.fragment.app.FragmentManagerNonConfig` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManagerNonConfig;.getViewModelStores:()Ljava/util/Map;` @AccessFlag  {

  # return;
}
procedure `boolean` `isRetaining`(`androidx.fragment.app.FragmentManagerNonConfig` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object @name `f`) @signature `Landroidx/fragment/app/FragmentManagerNonConfig;.isRetaining:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
