record `androidx.fragment.app.FragmentManagerViewModel` @kind class @AccessFlag  extends `androidx.lifecycle.ViewModel` @kind class {
  `java.util.HashMap` `androidx.fragment.app.FragmentManagerViewModel.mChildNonConfigs` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.fragment.app.FragmentManagerViewModel.mHasBeenCleared` @AccessFlag PRIVATE;
  `boolean` `androidx.fragment.app.FragmentManagerViewModel.mHasSavedSnapshot` @AccessFlag PRIVATE;
  `java.util.HashSet` `androidx.fragment.app.FragmentManagerViewModel.mRetainedFragments` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.fragment.app.FragmentManagerViewModel.mStateAutomaticallySaved` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `androidx.fragment.app.FragmentManagerViewModel.mViewModelStores` @AccessFlag PRIVATE_FINAL;
}
global `androidx.lifecycle.ViewModelProvider$Factory` `@@androidx.fragment.app.FragmentManagerViewModel.FACTORY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/fragment/app/FragmentManagerViewModel;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.fragment.app.FragmentManagerViewModel` v1 @kind this, `boolean` v2 @name `stateAutomaticallySaved`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.<init>:(Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.fragment.app.FragmentManagerViewModel` `getInstance`(`androidx.lifecycle.ViewModelStore` v2 @kind object @name `viewModelStore`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.getInstance:(Landroidx/lifecycle/ViewModelStore;)Landroidx/fragment/app/FragmentManagerViewModel;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `addRetainedFragment`(`androidx.fragment.app.FragmentManagerViewModel` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object @name `fragment`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.addRetainedFragment:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
procedure `void` `clearNonConfigState`(`androidx.fragment.app.FragmentManagerViewModel` v4 @kind this, `androidx.fragment.app.Fragment` v5 @kind object @name `f`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.clearNonConfigState:(Landroidx/fragment/app/Fragment;)V` @AccessFlag  {

  # return;
}
procedure `boolean` `equals`(`androidx.fragment.app.FragmentManagerViewModel` v5 @kind this, `java.lang.Object` v6 @kind object @name `o`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.fragment.app.FragmentManagerViewModel` `getChildNonConfig`(`androidx.fragment.app.FragmentManagerViewModel` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object @name `f`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.getChildNonConfig:(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/FragmentManagerViewModel;` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `getRetainedFragments`(`androidx.fragment.app.FragmentManagerViewModel` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.getRetainedFragments:()Ljava/util/Collection;` @AccessFlag  {

  # return;
}
procedure `androidx.fragment.app.FragmentManagerNonConfig` `getSnapshot`(`androidx.fragment.app.FragmentManagerViewModel` v6 @kind this) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.getSnapshot:()Landroidx/fragment/app/FragmentManagerNonConfig;` @AccessFlag  {

  # return;
}
procedure `androidx.lifecycle.ViewModelStore` `getViewModelStore`(`androidx.fragment.app.FragmentManagerViewModel` v3 @kind this, `androidx.fragment.app.Fragment` v4 @kind object @name `f`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.getViewModelStore:(Landroidx/fragment/app/Fragment;)Landroidx/lifecycle/ViewModelStore;` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`androidx.fragment.app.FragmentManagerViewModel` v3 @kind this) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCleared`(`androidx.fragment.app.FragmentManagerViewModel` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.isCleared:()Z` @AccessFlag  {

  # return;
}
procedure `void` `onCleared`(`androidx.fragment.app.FragmentManagerViewModel` v2 @kind this) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.onCleared:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `removeRetainedFragment`(`androidx.fragment.app.FragmentManagerViewModel` v1 @kind this, `androidx.fragment.app.Fragment` v2 @kind object @name `fragment`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.removeRetainedFragment:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
procedure `void` `restoreFromSnapshot`(`androidx.fragment.app.FragmentManagerViewModel` v7 @kind this, `androidx.fragment.app.FragmentManagerNonConfig` v8 @kind object @name `nonConfig`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.restoreFromSnapshot:(Landroidx/fragment/app/FragmentManagerNonConfig;)V` @AccessFlag  {

  # return;
}
procedure `boolean` `shouldDestroy`(`androidx.fragment.app.FragmentManagerViewModel` v2 @kind this, `androidx.fragment.app.Fragment` v3 @kind object @name `fragment`) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.shouldDestroy:(Landroidx/fragment/app/Fragment;)Z` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.fragment.app.FragmentManagerViewModel` v6 @kind this) @signature `Landroidx/fragment/app/FragmentManagerViewModel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
