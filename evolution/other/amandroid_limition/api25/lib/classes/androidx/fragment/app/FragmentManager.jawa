record `androidx.fragment.app.FragmentManager` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `androidx.fragment.app.FragmentFactory` `androidx.fragment.app.FragmentManager.mFragmentFactory` @AccessFlag PRIVATE;
}
global `androidx.fragment.app.FragmentFactory` `@@androidx.fragment.app.FragmentManager.DEFAULT_FACTORY` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.fragment.app.FragmentManager.POP_BACK_STACK_INCLUSIVE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/fragment/app/FragmentManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `enableDebugLogging`(`boolean` v0 @name `enabled`) @signature `Landroidx/fragment/app/FragmentManager;.enableDebugLogging:(Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addOnBackStackChangedListener`(`androidx.fragment.app.FragmentManager$OnBackStackChangedListener` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.addOnBackStackChangedListener:(Landroidx/fragment/app/FragmentManager$OnBackStackChangedListener;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.FragmentTransaction` `beginTransaction`() @signature `Landroidx/fragment/app/FragmentManager;.beginTransaction:()Landroidx/fragment/app/FragmentTransaction;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `dump`(`java.lang.String` v0 @kind object, `java.io.FileDescriptor` v1 @kind object, `java.io.PrintWriter` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.dump:(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `executePendingTransactions`() @signature `Landroidx/fragment/app/FragmentManager;.executePendingTransactions:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findFragmentById`(`int` v0 ) @signature `Landroidx/fragment/app/FragmentManager;.findFragmentById:(I)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.Fragment` `findFragmentByTag`(`java.lang.String` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.findFragmentByTag:(Ljava/lang/String;)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.FragmentManager$BackStackEntry` `getBackStackEntryAt`(`int` v0 ) @signature `Landroidx/fragment/app/FragmentManager;.getBackStackEntryAt:(I)Landroidx/fragment/app/FragmentManager$BackStackEntry;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getBackStackEntryCount`() @signature `Landroidx/fragment/app/FragmentManager;.getBackStackEntryCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.Fragment` `getFragment`(`android.os.Bundle` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.getFragment:(Landroid/os/Bundle;Ljava/lang/String;)Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.FragmentFactory` `getFragmentFactory`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.getFragmentFactory:()Landroidx/fragment/app/FragmentFactory;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getFragments`() @signature `Landroidx/fragment/app/FragmentManager;.getFragments:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.Fragment` `getPrimaryNavigationFragment`() @signature `Landroidx/fragment/app/FragmentManager;.getPrimaryNavigationFragment:()Landroidx/fragment/app/Fragment;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isDestroyed`() @signature `Landroidx/fragment/app/FragmentManager;.isDestroyed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isStateSaved`() @signature `Landroidx/fragment/app/FragmentManager;.isStateSaved:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.FragmentTransaction` `openTransaction`(`androidx.fragment.app.FragmentManager` v1 @kind this) @signature `Landroidx/fragment/app/FragmentManager;.openTransaction:()Landroidx/fragment/app/FragmentTransaction;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `popBackStack`() @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `popBackStack`(`int` v0 , `int` v1 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `popBackStack`(`java.lang.String` v0 @kind object, `int` v1 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStack:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `popBackStackImmediate`() @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `popBackStackImmediate`(`int` v0 , `int` v1 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:(II)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `popBackStackImmediate`(`java.lang.String` v0 @kind object, `int` v1 ) @signature `Landroidx/fragment/app/FragmentManager;.popBackStackImmediate:(Ljava/lang/String;I)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putFragment`(`android.os.Bundle` v0 @kind object, `java.lang.String` v1 @kind object, `androidx.fragment.app.Fragment` v2 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.putFragment:(Landroid/os/Bundle;Ljava/lang/String;Landroidx/fragment/app/Fragment;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `registerFragmentLifecycleCallbacks`(`androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks` v0 @kind object, `boolean` v1 ) @signature `Landroidx/fragment/app/FragmentManager;.registerFragmentLifecycleCallbacks:(Landroidx/fragment/app/FragmentManager$FragmentLifecycleCallbacks;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeOnBackStackChangedListener`(`androidx.fragment.app.FragmentManager$OnBackStackChangedListener` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.removeOnBackStackChangedListener:(Landroidx/fragment/app/FragmentManager$OnBackStackChangedListener;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.fragment.app.Fragment$SavedState` `saveFragmentInstanceState`(`androidx.fragment.app.Fragment` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.saveFragmentInstanceState:(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/Fragment$SavedState;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setFragmentFactory`(`androidx.fragment.app.FragmentManager` v0 @kind this, `androidx.fragment.app.FragmentFactory` v1 @kind object @name `fragmentFactory`) @signature `Landroidx/fragment/app/FragmentManager;.setFragmentFactory:(Landroidx/fragment/app/FragmentFactory;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `unregisterFragmentLifecycleCallbacks`(`androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks` v0 @kind object) @signature `Landroidx/fragment/app/FragmentManager;.unregisterFragmentLifecycleCallbacks:(Landroidx/fragment/app/FragmentManager$FragmentLifecycleCallbacks;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
