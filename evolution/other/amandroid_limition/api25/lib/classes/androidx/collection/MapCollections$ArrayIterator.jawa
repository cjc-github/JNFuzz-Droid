record `androidx.collection.MapCollections$ArrayIterator` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `boolean` `androidx.collection.MapCollections$ArrayIterator.mCanRemove` @AccessFlag ;
  `int` `androidx.collection.MapCollections$ArrayIterator.mIndex` @AccessFlag ;
  `int` `androidx.collection.MapCollections$ArrayIterator.mOffset` @AccessFlag FINAL;
  `int` `androidx.collection.MapCollections$ArrayIterator.mSize` @AccessFlag ;
  `androidx.collection.MapCollections` `androidx.collection.MapCollections$ArrayIterator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.collection.MapCollections$ArrayIterator` v1 @kind this, `androidx.collection.MapCollections` v2 @kind object @name `this$0`, `int` v3 @name `offset`) @signature `Landroidx/collection/MapCollections$ArrayIterator;.<init>:(Landroidx/collection/MapCollections;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`androidx.collection.MapCollections$ArrayIterator` v2 @kind this) @signature `Landroidx/collection/MapCollections$ArrayIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`androidx.collection.MapCollections$ArrayIterator` v3 @kind this) @signature `Landroidx/collection/MapCollections$ArrayIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`androidx.collection.MapCollections$ArrayIterator` v2 @kind this) @signature `Landroidx/collection/MapCollections$ArrayIterator;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
