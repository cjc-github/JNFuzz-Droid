record `androidx.recyclerview.widget.DiffUtil$DiffResult` @kind class @AccessFlag PUBLIC {
  `androidx.recyclerview.widget.DiffUtil$Callback` `androidx.recyclerview.widget.DiffUtil$DiffResult.mCallback` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.recyclerview.widget.DiffUtil$DiffResult.mDetectMoves` @AccessFlag PRIVATE_FINAL;
  `int`[] `androidx.recyclerview.widget.DiffUtil$DiffResult.mNewItemStatuses` @AccessFlag PRIVATE_FINAL;
  `int` `androidx.recyclerview.widget.DiffUtil$DiffResult.mNewListSize` @AccessFlag PRIVATE_FINAL;
  `int`[] `androidx.recyclerview.widget.DiffUtil$DiffResult.mOldItemStatuses` @AccessFlag PRIVATE_FINAL;
  `int` `androidx.recyclerview.widget.DiffUtil$DiffResult.mOldListSize` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `androidx.recyclerview.widget.DiffUtil$DiffResult.mSnakes` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_CHANGED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_IGNORE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_MASK` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_MOVED_CHANGED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_MOVED_NOT_CHANGED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_NOT_CHANGED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.FLAG_OFFSET` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.DiffUtil$DiffResult.NO_POSITION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v1 @kind this, `androidx.recyclerview.widget.DiffUtil$Callback` v2 @kind object @name `callback`, `java.util.List` v3 @kind object, `int`[] v4 @kind object @name `oldItemStatuses`, `int`[] v5 @kind object @name `newItemStatuses`, `boolean` v6 @name `detectMoves`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.<init>:(Landroidx/recyclerview/widget/DiffUtil$Callback;Ljava/util/List;[I[IZ)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addRootSnake`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v4 @kind this) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.addRootSnake:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `dispatchAdditions`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v7 @kind this, `java.util.List` v8 @kind object, `androidx.recyclerview.widget.ListUpdateCallback` v9 @kind object @name `updateCallback`, `int` v10 @name `start`, `int` v11 @name `count`, `int` v12 @name `globalIndex`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.dispatchAdditions:(Ljava/util/List;Landroidx/recyclerview/widget/ListUpdateCallback;III)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `dispatchRemovals`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v8 @kind this, `java.util.List` v9 @kind object, `androidx.recyclerview.widget.ListUpdateCallback` v10 @kind object @name `updateCallback`, `int` v11 @name `start`, `int` v12 @name `count`, `int` v13 @name `globalIndex`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.dispatchRemovals:(Ljava/util/List;Landroidx/recyclerview/widget/ListUpdateCallback;III)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `findAddition`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v2 @kind this, `int` v3 @name `x`, `int` v4 @name `y`, `int` v5 @name `snakeIndex`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.findAddition:(III)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `findMatchingItem`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v15 @kind this, `int` v16 @name `x`, `int` v17 @name `y`, `int` v18 @name `snakeIndex`, `boolean` v19 @name `removal`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.findMatchingItem:(IIIZ)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `findMatchingItems`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v14 @kind this) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.findMatchingItems:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `findRemoval`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v2 @kind this, `int` v3 @name `x`, `int` v4 @name `y`, `int` v5 @name `snakeIndex`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.findRemoval:(III)V` @AccessFlag PRIVATE {

  # return;
}
procedure `androidx.recyclerview.widget.DiffUtil$PostponedUpdate` `removePostponedUpdate`(`java.util.List` v7 @kind object, `int` v8 @name `pos`, `boolean` v9 @name `removal`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.removePostponedUpdate:(Ljava/util/List;IZ)Landroidx/recyclerview/widget/DiffUtil$PostponedUpdate;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `convertNewPositionToOld`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v3 @kind this, `int` v4 @name `newListPosition`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.convertNewPositionToOld:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `convertOldPositionToNew`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v3 @kind this, `int` v4 @name `oldListPosition`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.convertOldPositionToNew:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `dispatchUpdatesTo`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v17 @kind this, `androidx.recyclerview.widget.ListUpdateCallback` v18 @kind object @name `updateCallback`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.dispatchUpdatesTo:(Landroidx/recyclerview/widget/ListUpdateCallback;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `dispatchUpdatesTo`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v1 @kind this, `androidx.recyclerview.widget.RecyclerView$Adapter` v2 @kind object @name `adapter`) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.dispatchUpdatesTo:(Landroidx/recyclerview/widget/RecyclerView$Adapter;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getSnakes`(`androidx.recyclerview.widget.DiffUtil$DiffResult` v1 @kind this) @signature `Landroidx/recyclerview/widget/DiffUtil$DiffResult;.getSnakes:()Ljava/util/List;` @AccessFlag  {

  # return;
}
