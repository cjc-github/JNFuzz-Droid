record `androidx.recyclerview.widget.RecyclerView$State` @kind class @AccessFlag PUBLIC {
  `android.util.SparseArray` `androidx.recyclerview.widget.RecyclerView$State.mData` @AccessFlag PRIVATE;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mDeletedInvisibleItemCountSincePreviousLayout` @AccessFlag ;
  `long` `androidx.recyclerview.widget.RecyclerView$State.mFocusedItemId` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mFocusedItemPosition` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mFocusedSubChildId` @AccessFlag ;
  `boolean` `androidx.recyclerview.widget.RecyclerView$State.mInPreLayout` @AccessFlag ;
  `boolean` `androidx.recyclerview.widget.RecyclerView$State.mIsMeasuring` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mItemCount` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mLayoutStep` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mPreviousLayoutItemCount` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mRemainingScrollHorizontal` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mRemainingScrollVertical` @AccessFlag ;
  `boolean` `androidx.recyclerview.widget.RecyclerView$State.mRunPredictiveAnimations` @AccessFlag ;
  `boolean` `androidx.recyclerview.widget.RecyclerView$State.mRunSimpleAnimations` @AccessFlag ;
  `boolean` `androidx.recyclerview.widget.RecyclerView$State.mStructureChanged` @AccessFlag ;
  `int` `androidx.recyclerview.widget.RecyclerView$State.mTargetPosition` @AccessFlag ;
  `boolean` `androidx.recyclerview.widget.RecyclerView$State.mTrackOldChangeHolders` @AccessFlag ;
}
global `int` `@@androidx.recyclerview.widget.RecyclerView$State.STEP_ANIMATIONS` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.RecyclerView$State.STEP_LAYOUT` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.recyclerview.widget.RecyclerView$State.STEP_START` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`androidx.recyclerview.widget.RecyclerView$State` v2 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `assertLayoutStep`(`androidx.recyclerview.widget.RecyclerView$State` v3 @kind this, `int` v4 @name `accepted`) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.assertLayoutStep:(I)V` @AccessFlag  {

  # return;
}
procedure `boolean` `didStructureChange`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.didStructureChange:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this, `int` v2 @name `resourceId`) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getItemCount`(`androidx.recyclerview.widget.RecyclerView$State` v2 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.getItemCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getRemainingScrollHorizontal`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.getRemainingScrollHorizontal:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getRemainingScrollVertical`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.getRemainingScrollVertical:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getTargetScrollPosition`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.getTargetScrollPosition:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasTargetScrollPosition`(`androidx.recyclerview.widget.RecyclerView$State` v2 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.hasTargetScrollPosition:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isMeasuring`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.isMeasuring:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPreLayout`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.isPreLayout:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `prepareForNestedPrefetch`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this, `androidx.recyclerview.widget.RecyclerView$Adapter` v2 @kind object @name `adapter`) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.prepareForNestedPrefetch:(Landroidx/recyclerview/widget/RecyclerView$Adapter;)V` @AccessFlag  {

  # return;
}
procedure `void` `put`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this, `int` v2 @name `resourceId`, `java.lang.Object` v3 @kind object @name `data`) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.put:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this, `int` v2 @name `resourceId`) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.remove:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.recyclerview.widget.RecyclerView$State` v2 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `willRunPredictiveAnimations`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.willRunPredictiveAnimations:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `willRunSimpleAnimations`(`androidx.recyclerview.widget.RecyclerView$State` v1 @kind this) @signature `Landroidx/recyclerview/widget/RecyclerView$State;.willRunSimpleAnimations:()Z` @AccessFlag PUBLIC {

  # return;
}
