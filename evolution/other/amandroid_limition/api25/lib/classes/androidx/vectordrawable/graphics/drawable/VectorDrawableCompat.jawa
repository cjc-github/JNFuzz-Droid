record `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` @kind class @AccessFlag PUBLIC extends `androidx.vectordrawable.graphics.drawable.VectorDrawableCommon` @kind class {
  `boolean` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mAllowCaching` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable$ConstantState` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mCachedConstantStateDelegate` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mColorFilter` @AccessFlag PRIVATE;
  `boolean` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mMutated` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTintFilter` @AccessFlag PRIVATE;
  `android.graphics.Rect` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds` @AccessFlag PRIVATE_FINAL;
  `float`[] `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpFloats` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpMatrix` @AccessFlag PRIVATE_FINAL;
  `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState` @AccessFlag PRIVATE;
}
global `boolean` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.DBG_VECTOR_DRAWABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.PorterDuff$Mode` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.DEFAULT_TINT_MODE` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LINECAP_BUTT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LINECAP_ROUND` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LINECAP_SQUARE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LINEJOIN_BEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LINEJOIN_MITER` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LINEJOIN_ROUND` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.LOGTAG` @AccessFlag STATIC_FINAL;
global `int` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.MAX_CACHED_BITMAP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.SHAPE_CLIP_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.SHAPE_GROUP` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.SHAPE_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.SHAPE_VECTOR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v3 @kind this, `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v4 @kind object @name `state`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.<init>:(Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `applyAlpha`(`int` v2 @name `color`, `float` v3 @name `alpha`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.applyAlpha:(IF)I` @AccessFlag STATIC {

  # return;
}
procedure `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` `create`(`android.content.res.Resources` v7 @kind object @name `res`, `int` v8 @name `resId`, `android.content.res.Resources$Theme` v9 @kind object @name `theme`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.create:(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` `createFromXmlInner`(`android.content.res.Resources` v1 @kind object @name `r`, `org.xmlpull.v1.XmlPullParser` v2 @kind object @name `parser`, `android.util.AttributeSet` v3 @kind object @name `attrs`, `android.content.res.Resources$Theme` v4 @kind object @name `theme`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.createFromXmlInner:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `inflateInternal`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v16 @kind this, `android.content.res.Resources` v17 @kind object @name `res`, `org.xmlpull.v1.XmlPullParser` v18 @kind object @name `parser`, `android.util.AttributeSet` v19 @kind object @name `attrs`, `android.content.res.Resources$Theme` v20 @kind object @name `theme`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.inflateInternal:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `needMirroring`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v3 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.needMirroring:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `android.graphics.PorterDuff$Mode` `parseTintModeCompat`(`int` v1 @name `value`, `android.graphics.PorterDuff$Mode` v2 @kind object @name `defaultMode`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.parseTintModeCompat:(ILandroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuff$Mode;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `printGroupTree`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v5 @kind this, `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup` v6 @kind object @name `currentGroup`, `int` v7 @name `level`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.printGroupTree:(Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VGroup;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateStateFromTypedArray`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v7 @kind this, `android.content.res.TypedArray` v8 @kind object @name `a`, `org.xmlpull.v1.XmlPullParser` v9 @kind object @name `parser`, `android.content.res.Resources$Theme` v10 @kind object @name `theme`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.updateStateFromTypedArray:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `applyTheme`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `android.content.res.Resources$Theme` v1 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.applyTheme:(Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `canApplyTheme`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.canApplyTheme:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clearColorFilter`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.clearColorFilter:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `draw`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v12 @kind this, `android.graphics.Canvas` v13 @kind object @name `canvas`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getAlpha`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getAlpha:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getChangingConfigurations`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v2 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getChangingConfigurations:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v2 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `getCurrent`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getCurrent:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `getIntrinsicHeight`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIntrinsicWidth`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumHeight`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getMinimumHeight:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `getMinimumWidth`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getMinimumWidth:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `getOpacity`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getOpacity:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `getPadding`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `android.graphics.Rect` v1 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `float` `getPixelSize`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v7 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getPixelSize:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getState`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getState:()[I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `getTargetByName`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getTargetByName:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `android.graphics.Region` `getTransparentRegion`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `inflate`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.content.res.Resources` v2 @kind object @name `res`, `org.xmlpull.v1.XmlPullParser` v3 @kind object @name `parser`, `android.util.AttributeSet` v4 @kind object @name `attrs`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.inflate:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `inflate`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v6 @kind this, `android.content.res.Resources` v7 @kind object @name `res`, `org.xmlpull.v1.XmlPullParser` v8 @kind object @name `parser`, `android.util.AttributeSet` v9 @kind object @name `attrs`, `android.content.res.Resources$Theme` v10 @kind object @name `theme`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.inflate:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invalidateSelf`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.invalidateSelf:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isAutoMirrored`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.isAutoMirrored:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isStateful`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.isStateful:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `jumpToCurrentState`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.jumpToCurrentState:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v2 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onBoundsChange`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.graphics.Rect` v2 @kind object @name `bounds`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `onStateChange`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v5 @kind this, `int`[] v6 @kind object @name `stateSet`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.onStateChange:([I)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `scheduleSelf`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `java.lang.Runnable` v2 @kind object @name `what`, `long` v3 @name `when`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.scheduleSelf:(Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAllowCaching`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `boolean` v1 @name `allowCaching`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setAllowCaching:(Z)V` @AccessFlag  {

  # return;
}
procedure `void` `setAlpha`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `int` v2 @name `alpha`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setAlpha:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAutoMirrored`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `boolean` v2 @name `mirrored`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setAutoMirrored:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setChangingConfigurations`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int` v1 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setChangingConfigurations:(I)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setColorFilter`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int` v1 , `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setColorFilter:(ILandroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setColorFilter`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object @name `colorFilter`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFilterBitmap`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `boolean` v1 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setFilterBitmap:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setHotspot`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `float` v1 , `float` v2 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setHotspot:(FF)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setHotspotBounds`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setHotspotBounds:(IIII)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `setState`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int`[] v1 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setState:([I)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setTint`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `int` v2 @name `tint`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setTint:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTintList`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v3 @kind this, `android.content.res.ColorStateList` v4 @kind object @name `tint`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTintMode`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v3 @kind this, `android.graphics.PorterDuff$Mode` v4 @kind object @name `tintMode`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setVisible`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `boolean` v2 @name `visible`, `boolean` v3 @name `restart`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `unscheduleSelf`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v1 @kind this, `java.lang.Runnable` v2 @kind object @name `what`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.unscheduleSelf:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.PorterDuffColorFilter` `updateTintFilter`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat` v2 @kind this, `android.graphics.PorterDuffColorFilter` v3 @kind object @name `tintFilter`, `android.content.res.ColorStateList` v4 @kind object @name `tint`, `android.graphics.PorterDuff$Mode` v5 @kind object @name `tintMode`) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat;.updateTintFilter:(Landroid/graphics/PorterDuffColorFilter;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag  {

  # return;
}
