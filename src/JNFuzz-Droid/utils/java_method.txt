<com.azure.authenticator.common.Util: void adjustFontScale(float,android.content.Context,android.app.Activity)>
<com.facebook.cache.common.CacheEventListener: void onHit(com.facebook.cache.common.CacheEvent)>
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>
<android.graphics.Rect: int centerX()>
<com.google.android.material.bottomsheet.BottomSheetDialog$3: void <init>(com.google.android.material.bottomsheet.BottomSheetDialog)>
<ch.qos.logback.core.joran.spi.InterpretationContext: void addSubstitutionProperties(java.util.Properties)>
<com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()>
<android.view.View: void setFitsSystemWindows(boolean)>
<com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)>
<com.google.android.gms.maps.internal.zzax: void zza(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints build()>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level)>
<com.airbnb.lottie.model.CubicCurveData: void setVertex(float,float)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)>
<ch.qos.logback.core.OutputStreamAppender: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.adapter.EditAccountViewHolder: void <init>(com.azure.authenticator.databinding.AccountListRowEditModeBinding,com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)>
<com.adjust.sdk.SdkClickHandler: com.adjust.sdk.ILogger access$100(com.adjust.sdk.SdkClickHandler)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream()>
<com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean tryDismissWithAnimation(boolean)>
<com.google.android.gms.cloudmessaging.zzx: void <init>(com.google.android.gms.cloudmessaging.Rpc,java.lang.String,java.util.concurrent.ScheduledFuture)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzaa()>
<com.google.android.gms.common.sqlite.CursorWrapper: void fillWindow(int,android.database.CursorWindow)>
<com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener access$2400(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager get(java.lang.String)>
<com.azure.authenticator.logging.LoggingReceiver: void <init>()>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler: void lambda$schedule$1(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.TransportScheduleCallback,com.google.android.datatransport.runtime.EventInternal)>
<com.facebook.react.uimanager.UIViewOperationQueue$2: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext)>
<com.adjust.sdk.AdjustInstance: void addSessionPartnerParameter(java.lang.String,java.lang.String)>
<java.nio.channels.FileChannel: long position()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_AssistedFactory_Impl: void <init>(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_Factory)>
<android.util.SparseIntArray: void clear()>
<com.google.android.gms.internal.auth-api-phone.zzk: void <init>(com.google.android.gms.internal.auth-api-phone.zzj)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setThumbTintColor(android.view.View,java.lang.Integer)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onPause()>
<com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()>
<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.util.List)>
<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager getDialogFragmentManager()>
<com.google.android.material.textfield.TextInputLayout: boolean access$100(com.google.android.material.textfield.TextInputLayout)>
<ch.qos.logback.core.util.FileUtil: void <init>(ch.qos.logback.core.Context)>
<com.fasterxml.jackson.core.JsonParser$Feature: boolean enabledIn(int)>
<com.google.android.gms.internal.measurement.zzbr: java.lang.Boolean zzP()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzm(int,com.google.android.gms.internal.measurement.zzdu)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2002(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<com.google.android.gms.measurement.internal.zzg: long zzW()>
<com.airbnb.lottie.LottieDrawable: void setOutlineMasksAndMattes(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.commonuilibrary.ui.AppLockActivity injectAppLockActivity2(com.microsoft.authenticator.commonuilibrary.ui.AppLockActivity)>
<com.google.android.material.chip.ChipDrawable: float getCurrentChipIconWidth()>
<com.facebook.imagepipeline.producers.BaseConsumer: void <init>()>
<com.google.android.material.navigation.NavigationBarItemView: void <init>(android.content.Context)>
<ch.qos.logback.core.helpers.CyclicBuffer: void clear()>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: com.azure.authenticator.ui.backup.BackupFlowViewModel access$getBackupFlowViewModel$p(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void ensureDataSourceInitialized()>
<com.facebook.common.statfs.StatFsHelper: android.os.StatFs updateStatsHelper(android.os.StatFs,java.io.File)>
<com.google.android.gms.internal.measurement.zzhl: void zzf(int)>
<android.util.SparseIntArray: void <init>(int)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.lang.String getProvider()>
<android.widget.Button: void setMinHeight(int)>
<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.Service: void onDestroy()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void evaluateNgcFeasibilityAndContinueAsync()>
<com.google.android.gms.internal.measurement.zzp: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onStagingAreaMiss()>
<com.google.android.gms.measurement.internal.zzkd: void zzH(com.google.android.gms.measurement.internal.zzg)>
<android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>
<com.google.android.gms.common.server.response.FastParser: java.math.BigInteger zaq(java.io.BufferedReader)>
<ch.qos.logback.core.rolling.RollingFileAppender: void attemptOpenFile()>
<com.facebook.imagepipeline.request.ImageRequest: android.net.Uri getSourceUri()>
<com.google.android.material.datepicker.MaterialCalendar: void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)>
<dagger.hilt.android.internal.managers.FragmentComponentManager: android.content.ContextWrapper createContextWrapper(android.content.Context,androidx.fragment.app.Fragment)>
<com.airbnb.lottie.parser.GradientStrokeParser: com.airbnb.lottie.model.content.GradientStroke parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.airbnb.lottie.LottieDrawable: boolean setComposition(com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.common.api.internal.zaaa: void zaa(com.google.android.gms.common.api.internal.BasePendingResult,boolean)>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>
<com.facebook.common.references.SharedReference: void addLiveReference(java.lang.Object)>
<com.google.android.material.navigation.NavigationBarMenu: void <init>(android.content.Context,java.lang.Class,int)>
<com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)>
<com.adjust.sdk.scheduler.RunnableWrapper: void <init>(java.lang.Runnable)>
<ch.qos.logback.core.net.server.ServerSocketListener: ch.qos.logback.core.net.server.Client createClient(java.lang.String,java.net.Socket)>
<android.animation.AnimatorSet: boolean isRunning()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: boolean isTaskCancelled(bolts.Task)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzb(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List lambda$loadActiveContexts$9(android.database.sqlite.SQLiteDatabase)>
<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
<com.google.android.gms.common.api.GoogleApiClient: void registerConnectionFailedListener(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: float getFullBorderWidth()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)>
<android.graphics.Canvas: int save()>
<com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener: void onMyLocationChange(android.location.Location)>
<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>
<com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)>
<androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
<com.google.android.material.shape.MaterialShapeDrawable: int compositeElevationOverlayIfNeeded(int)>
<com.airbnb.lottie.LottieDrawable: void setSpeed(float)>
<android.widget.RelativeLayout: int getMeasuredWidth()>
<android.widget.EditText: void measure(int,int)>
<com.google.common.collect.ImmutableList$Itr: void <init>(com.google.common.collect.ImmutableList,int)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zaK()>
<android.widget.FrameLayout: void setScaleX(float)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setEnabled(android.view.View,boolean)>
<ch.qos.logback.core.rolling.helper.FileFinder: java.util.List findFiles(java.lang.String)>
<com.google.android.gms.internal.auth.zzq: void <init>(com.google.android.gms.common.api.Status)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult: boolean getResult()>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<com.google.android.material.animation.MotionTiming: android.animation.TimeInterpolator getInterpolator()>
<com.google.android.gms.measurement.internal.zzkk: boolean zzt(java.lang.String,java.lang.String,int,java.lang.Object)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getMfaServiceUrl()>
<com.google.android.gms.internal.measurement.zzgs: int zzi(int,int,int)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier: void <init>(java.util.List,boolean)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$handleBackupTicketResult$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation)>
<android.widget.FrameLayout: boolean removeCallbacks(java.lang.Runnable)>
<com.google.android.gms.internal.measurement.zzd: void <init>(android.os.IBinder)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setBorderTopRightRadius(android.view.View,float)>
<android.app.Application: void onCreate()>
<com.airbnb.lottie.model.content.MergePaths$MergePathsMode: void <init>(java.lang.String,int)>
<androidx.viewpager.widget.ViewPager: int getCurrentItem()>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
<com.google.android.gms.auth.AccountChangeEvent: void <init>(int,long,java.lang.String,int,int,java.lang.String)>
<com.google.android.material.resources.MaterialResources: int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)>
<com.google.common.net.InternetDomainName: boolean hasPublicSuffix()>
<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider mfaSilentLocationWorker_AssistedFactoryProvider()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>
<com.google.android.gms.internal.location.zze: void <init>(com.google.android.gms.internal.location.zzg,com.google.android.gms.common.api.GoogleApiClient,android.app.PendingIntent)>
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<com.google.android.gms.common.api.internal.zabl: void zaK()>
<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setAccessibilityLiveRegion(android.view.View,java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$initialize$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.google.android.material.textfield.IndicatorViewController: void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)>
<android.text.Editable: char charAt(int)>
<ch.qos.logback.core.pattern.DynamicConverter: void addError(java.lang.String)>
<com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List cancelNoCallbacks()>
<com.google.android.gms.common.internal.MethodInvocation: void <init>(int,int,int,long,long,java.lang.String,java.lang.String,int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: float[] createFloatArray(android.os.Parcel,int)>
<android.widget.TextView: void onAttachedToWindow()>
<com.google.android.gms.measurement.internal.zzfi: void zzk(java.lang.Runnable)>
<com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.common.internal.ClientSettings createDefault(android.content.Context)>
<com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()>
<com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture submit(java.util.concurrent.Callable)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$800(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.facebook.soloader.ExoSoSource$FileDso: void <init>(java.lang.String,java.lang.String,java.io.File)>
<com.google.android.a.a: void <init>(android.os.IBinder)>
<ch.qos.logback.core.joran.util.StringToObjectConverter: boolean canBeBuiltFromSimpleString(java.lang.Class)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.request.SaveRequestProcessor saveRequestProcessor()>
<android.content.Intent: void removeExtra(java.lang.String)>
<com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_Factory: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel newInstance(com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase,com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase,com.microsoft.authenticator.authentication.aad.businessLogic.AadPhoneSignInSessionUseCase,com.microsoft.authenticator.location.LocationManager,com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: kotlin.Pair separateMfaAndBroker(com.azure.authenticator.storage.database.DbAccount,boolean)>
<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzT(java.lang.String)>
<com.google.android.gms.common.api.Api$AnyClientKey: void <init>()>
<com.google.android.gms.internal.measurement.zzc: boolean zza(android.os.Parcel)>
<android.widget.Button: void setTextColor(android.content.res.ColorStateList)>
<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,int)>
<com.microsoft.identity.common.java.logging.Logger: void setAllowPii(boolean)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzaa(java.lang.String)>
<com.google.android.material.snackbar.BaseTransientBottomBar$7: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivityPaused(android.app.Activity)>
<com.google.android.gms.internal.measurement.zzbw: void zzq(com.google.android.gms.internal.measurement.zzbw,int,com.google.android.gms.internal.measurement.zzby)>
<com.google.android.gms.auth.zzc: void <init>()>
<ch.qos.logback.core.pattern.parser.TokenStream: void processOption(char,java.util.List,java.lang.StringBuffer)>
<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
<com.facebook.react.ReactAndroidHWInputDeviceHelper: void clearFocus()>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.fragment.main.BackupDetailsFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener: void <init>(com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor)>
<com.adjust.sdk.LogLevel: void <init>(java.lang.String,int,int)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: void doTranscode(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream)>
<com.facebook.cache.common.CacheKeyUtil: java.util.List getResourceIds(com.facebook.cache.common.CacheKey)>
<com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody create(okhttp3.MediaType,java.io.InputStream)>
<com.facebook.fbreact.specs.NativeBlobModuleSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.maps.internal.zzao: void <init>()>
<java.util.concurrent.LinkedBlockingQueue: void <init>()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeStringArray(android.os.Parcel,int,java.lang.String[],boolean)>
<bolts.Task: void access$000(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>
<com.google.android.gms.internal.measurement.zzdq: java.util.List zzc()>
<com.azure.authenticator.accounts.GenericAccount: boolean isPartiallyRestoredCapabilitySet(com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum)>
<com.facebook.react.uimanager.UIViewOperationQueue: boolean access$2500(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.view.View,int)>
<android.widget.TextView: void setAlpha(float)>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode SINGLE()>
<com.airbnb.lottie.animation.content.Content: java.lang.String getName()>
<android.widget.CheckBox: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.gms.common.internal.zzo: boolean zzg(android.content.ServiceConnection)>
<ch.qos.logback.core.pattern.util.RegularEscapeUtil: void <init>()>
<com.google.android.gms.internal.measurement.zzjk: void zzR(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)>
<com.facebook.imageformat.ImageFormat: void <init>(java.lang.String,java.lang.String)>
<com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: androidx.lifecycle.LiveData getCheckWpjStatus()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void access$200(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder)>
<com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)>
<com.airbnb.lottie.model.layer.BaseLayer: void applySubtractMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)>
<com.evernote.android.job.v21.JobProxy21: android.app.job.JobInfo$Builder createBuilderPeriodic(android.app.job.JobInfo$Builder,long,long)>
<com.adjust.sdk.UtilNetworking: java.util.Map getSignature(java.util.Map,java.lang.String,java.lang.String)>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.common.zzw: java.lang.String zzg(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getPlainTextOathSecretKey()>
<android.net.Uri: boolean isAbsolute()>
<com.google.android.gms.common.api.Status: java.lang.String zza()>
<com.google.android.gms.maps.internal.zzz: void zza(com.google.android.gms.internal.maps.zzn)>
<com.facebook.react.modules.image.ImageLoaderModule$3: void <init>(com.facebook.react.modules.image.ImageLoaderModule,int,com.facebook.react.bridge.Promise)>
<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate$1: void <init>(com.facebook.react.uimanager.ReactAccessibilityDelegate)>
<com.google.android.gms.internal.measurement.zzbt: com.google.android.gms.internal.measurement.zzbt zzf(int,com.google.android.gms.internal.measurement.zzbv)>
<java.io.File: boolean exists()>
<com.facebook.react.uimanager.ReactShadowNode: java.lang.Iterable calculateLayoutOnChildren()>
<com.google.android.gms.measurement.internal.zzec: java.util.List zzl(int)>
<com.google.android.gms.maps.model.zzv: void <init>()>
<androidx.preference.TwoStatePreference: boolean isChecked()>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void appendIfNotNull(java.lang.StringBuilder,java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)>
<com.airbnb.lottie.model.FontCharacter: double getWidth()>
<com.google.android.gms.common.internal.zad: void <init>(android.content.Intent,android.app.Activity,int)>
<com.google.android.material.badge.BadgeDrawable$SavedState: java.lang.CharSequence access$1100(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.gms.common.GoogleSignatureVerifier: boolean zzb(android.content.pm.PackageInfo,boolean)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasureInWindow(int,com.facebook.react.bridge.Callback)>
<com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.String,java.lang.Throwable)>
<java.net.URL: java.lang.String getFile()>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: void initializeComponentContext()>
<com.adjust.sdk.Util: boolean checkPermission(android.content.Context,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void beginRecoverBackup()>
<com.google.android.material.snackbar.SnackbarManager: boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)>
<com.microsoft.authenticator.graphclient.entities.Settings: java.lang.String getShownContext()>
<com.facebook.react.animated.DecayAnimation: void <init>(com.facebook.react.bridge.ReadableMap)>
<com.adjust.sdk.IPackageHandler: void addPackage(com.adjust.sdk.ActivityPackage)>
<com.google.firebase.encoders.DataEncoder: void encode(java.lang.Object,java.io.Writer)>
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>
<com.google.android.material.behavior.SwipeDismissBehavior: int clamp(int,int,int)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectMfaSdkHostAppDelegate(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate)>
<com.google.android.gms.internal.auth.zzx: void onFailure(com.google.android.gms.common.api.Status)>
<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)>
<com.github.amlcurran.showcaseview.ShowcaseView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>
<com.google.android.gms.common.ConnectionResult: java.lang.String toString()>
<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()>
<java.io.BufferedReader: void mark(int)>
<android.os.Parcel: void readIntArray(int[])>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void setApplication(android.content.Context)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void restoreBackupAsync(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,com.microsoft.authenticator.backup.entities.CloudBackup)>
<com.facebook.soloader.UnpackingSoSource: byte[] getDepsBlock()>
<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)>
<com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()>
<com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void stop()>
<com.azure.authenticator.ui.msa.'-$$Lambda$MsaProtectionActivity$Au-AP3nT1v8MUyxBdU-Fk9whfSc': void <init>(com.azure.authenticator.ui.msa.MsaProtectionActivity)>
<com.google.android.material.stateful.ExtendableSavedState$1: com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<com.facebook.react.views.textinput.ReactEditText: void <init>(android.content.Context)>
<com.azure.authenticator.accounts.AccountCapability: void removeCapability(com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum)>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void onValueRelease(int)>
<android.widget.TextView: void setGravity(int)>
<android.widget.EditText: android.content.res.ColorStateList getHintTextColors()>
<android.os.RemoteException: void <init>()>
<com.google.android.gms.auth.api.signin.zad: void <init>()>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)>
<android.view.ViewGroup: int getLeft()>
<com.google.android.material.appbar.ViewOffsetHelper: void applyOffsets()>
<android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
<com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()>
<com.google.android.gms.common.internal.zzaf: java.lang.String zza(android.content.Context)>
<com.google.android.gms.internal.auth-api.zzau: void <init>(com.google.android.gms.internal.auth-api.zzao,com.google.android.gms.tasks.TaskCompletionSource)>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$15: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,java.util.List,com.google.android.datatransport.runtime.TransportContext)>
<ch.qos.logback.core.net.ObjectWriter: void write(java.lang.Object)>
<com.google.android.datatransport.runtime.TransportImpl: void schedule(com.google.android.datatransport.Event,com.google.android.datatransport.TransportScheduleCallback)>
<com.microsoft.authenticator.registration.mfa.entities.AadMfaAccountAdditionalInformation: java.lang.String getReplicationScope()>
<java.lang.StackTraceElement: int getLineNumber()>
<com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.model.layer.Layer parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.measurement.internal.zzdz: void zzm(com.google.android.gms.measurement.internal.zzaa,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool get()>
<androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzA(java.lang.String)>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object getDeviceId(kotlin.coroutines.Continuation)>
<ch.qos.logback.core.spi.ContextAwareImpl: void addInfo(java.lang.String,java.lang.Throwable)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<ch.qos.logback.core.joran.util.PropertySetter: boolean isSanityCheckSuccessful(java.lang.String,java.lang.reflect.Method,java.lang.Class[],java.lang.Object)>
<com.facebook.soloader.UnpackingSoSource: com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker()>
<com.google.android.gms.common.api.TransformedResult: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_6_7$1: void <init>(int,int)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion: void onNgcRegistered(boolean,java.lang.String)>
<ch.qos.logback.core.util.IncompatibleClassException: void <init>(java.lang.Class,java.lang.Class)>
<com.microsoft.authenticator.workaccount.entities.WorkplaceJoinedStateStatus$Success: boolean isJoined()>
<com.facebook.shimmer.ShimmerDrawable: void updateValueAnimator()>
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void flattenAnimatedNodeOffset(int)>
<androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)>
<com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean shouldDecodePrefetches()>
<ch.qos.logback.core.util.DefaultInvocationGate: void decreaseMask()>
<com.google.android.gms.internal.measurement.zzlu: com.google.android.gms.internal.measurement.zzlv zzd()>
<android.graphics.Matrix: void reset()>
<com.azure.authenticator.jwe.JweEncryptionException: void <init>(com.azure.authenticator.jwe.JweEncryptionException$JweEncryptionError,java.lang.Throwable)>
<org.json.JSONObject: java.lang.String optString(java.lang.String)>
<com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$13: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(long)>
<com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)>
<androidx.recyclerview.widget.LinearLayoutManager: int findLastVisibleItemPosition()>
<com.google.android.gms.auth.api.identity.SignInCredential: java.lang.String getId()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean isClosed()>
<java.lang.String: int lastIndexOf(int,int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List lambda$loadActiveContexts$8(android.database.Cursor)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalExifThumbnailProducer newLocalExifThumbnailProducer()>
<com.google.android.gms.internal.measurement.zzkh: java.lang.reflect.Field zzF()>
<com.google.android.gms.internal.measurement.zzja: boolean zzK(java.lang.Object,int)>
<com.google.android.gms.common.api.GoogleApi: android.os.Looper getLooper()>
<android.text.TextPaint: float descent()>
<com.google.android.material.chip.Chip: void insetChipBackgroundDrawable(int,int,int,int)>
<com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: void <init>(java.util.List)>
<com.google.android.gms.auth.api.identity.zzl$zzc: com.google.android.gms.auth.api.identity.zzl$zzc zzc(com.google.android.gms.auth.api.identity.zzl)>
<com.google.android.gms.cloudmessaging.zze: java.util.concurrent.ScheduledExecutorService zzb(com.google.android.gms.cloudmessaging.zze)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.fragment.main.SettingsFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<ch.qos.logback.core.joran.GenericConfigurator: void registerSafeConfiguration(java.util.List)>
<com.azure.authenticator.databinding.FrxSigninFragmentBinding: void <init>(android.widget.ScrollView,android.widget.LinearLayout,android.widget.RelativeLayout,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.TextView,com.airbnb.lottie.LottieAnimationView,android.widget.TextView,android.widget.Button,android.widget.Button,android.widget.TextView,android.widget.LinearLayout)>
<android.os.Process: void setThreadPriority(int)>
<bolts.AndroidExecutors: void allowCoreThreadTimeout(java.util.concurrent.ThreadPoolExecutor,boolean)>
<java.lang.NullPointerException: void <init>(java.lang.String)>
<android.widget.ScrollView: void fling(int)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>
<com.google.android.gms.maps.model.MarkerOptions: float getRotation()>
<com.facebook.react.modules.toast.ToastModule$1: void <init>(com.facebook.react.modules.toast.ToastModule,java.lang.String,int)>
<java.util.LinkedList: void addFirst(java.lang.Object)>
<com.google.android.material.navigation.NavigationBarItemView: boolean hasBadge()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$ActivityRetainedC build()>
<com.facebook.common.internal.ImmutableMap: java.util.Map of(java.lang.Object,java.lang.Object)>
<com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: void <init>(com.facebook.common.internal.Objects$1)>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getCodeLocation(java.lang.String,char)>
<com.azure.authenticator.storage.database.migration.Migration12To13: void <init>(android.content.Context)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float)>
<com.google.android.gms.measurement.internal.zzfl: java.lang.String zzv()>
<com.facebook.react.common.ClearableSynchronizedPool: void clear()>
<ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran: java.util.List removeSiftElement(java.util.List)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getGuid()>
<com.azure.authenticator.MainNavDirections: androidx.navigation.NavDirections toDidDeepLinkFragment()>
<javax.net.ssl.SSLSocket: void close()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.location.abstraction.LocationPermissionManager locationPermissionManager()>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectSelfhostConfigManager(com.azure.authenticator.OnAppUpgradeReceiver,com.microsoft.authenticator.selfhost.SelfhostConfigManager)>
<com.adjust.sdk.UtilNetworking: com.adjust.sdk.ResponseData readHttpResponse(javax.net.ssl.HttpsURLConnection,com.adjust.sdk.ActivityPackage)>
<java.util.concurrent.Executor: void execute(java.lang.Runnable)>
<com.facebook.react.ReactPackageHelper: java.lang.Iterable getNativeModuleIterator(com.facebook.react.ReactPackage,com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager)>
<com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$200(com.google.android.material.timepicker.TimePickerView)>
<com.google.android.gms.internal.auth-api.zzi: void <init>(com.google.android.gms.internal.auth-api.zzj,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.CredentialRequest)>
<androidx.work.impl.background.systemjob.SystemJobService: void onDestroy()>
<com.google.android.gms.internal.measurement.zzge: void <init>(com.google.android.gms.internal.measurement.zzhe)>
<android.os.Messenger: void <init>(android.os.Handler)>
<com.facebook.react.views.viewpager.ReactViewPager: com.facebook.react.uimanager.events.EventDispatcher access$100(com.facebook.react.views.viewpager.ReactViewPager)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.time.Clock getClock()>
<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzy zzl()>
<com.google.android.material.bottomappbar.BottomAppBar: void cancelAnimations()>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: void doInBackgroundGuarded(java.lang.Void[])>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.io.Closeable,com.facebook.common.references.CloseableReference$LeakHandler)>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void setProgress(float)>
<com.google.android.gms.measurement.internal.zzkk: java.lang.Object zzK(java.lang.String,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzir: com.google.android.gms.internal.measurement.zzir zzc()>
<com.facebook.drawee.controller.AbstractDraweeController: com.facebook.datasource.DataSource getDataSource()>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zze()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.OnAppUpgradeReceiver injectOnAppUpgradeReceiver2(com.azure.authenticator.OnAppUpgradeReceiver)>
<com.google.android.gms.dynamite.DynamiteModule$VersionPolicy: com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm)>
<com.google.android.gms.common.data.zad: void <init>()>
<com.google.android.gms.internal.location.zzaz: void zzt(android.app.PendingIntent)>
<com.google.android.gms.internal.auth.zzc: void zza(android.os.Parcel,android.os.Parcelable)>
<android.graphics.Paint: float descent()>
<com.azure.authenticator.databinding.PaymentInfoBottomSheetLayoutBinding: void <init>(android.widget.RelativeLayout,android.widget.TextView,android.widget.ImageView,android.widget.TextView)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: void generateNgcKey(com.microsoft.onlineid.UserAccount,android.os.Bundle)>
<com.google.android.gms.maps.GoogleMap$CancelableCallback: void onCancel()>
<com.google.android.gms.dynamite.zzo: com.google.android.gms.dynamic.IObjectWrapper zzj(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean,long)>
<com.google.android.material.shape.EdgeTreatment: void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath)>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>
<com.facebook.react.bridge.NativeArray: void <init>(com.facebook.jni.HybridData)>
<com.google.android.material.shape.ShapeAppearancePathProvider: void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path)>
<com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])>
<com.google.android.gms.internal.measurement.zzbr: boolean zzX(java.lang.String,java.lang.String)>
<ch.qos.logback.core.pattern.PatternLayoutBase: java.util.Map getEffectiveConverterMap()>
<com.facebook.react.views.image.ReactImageManager: void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)>
<com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator: com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize)>
<com.facebook.react.views.text.TextAttributes: boolean getAllowFontScaling()>
<com.airbnb.lottie.LottieTask: void notifySuccessListeners(java.lang.Object)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel getAadNgcSessionViewModel()>
<com.azure.authenticator.ui.LaunchActivity: boolean queryIsSharedDeviceModeAppRestrictionSet()>
<android.widget.HorizontalScrollView: void setHorizontalFadingEdgeEnabled(boolean)>
<com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromShadowNodeClassDefinition(java.lang.Class,java.util.Map)>
<com.google.android.material.tabs.TabLayout: void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)>
<com.google.android.gms.internal.auth.zzz: void zza(com.google.android.gms.internal.auth.zzx,com.google.android.gms.internal.auth.zzv)>
<com.google.android.gms.measurement.internal.zzjv: boolean zzaz()>
<java.io.DataInputStream: int read(byte[])>
<com.google.common.util.concurrent.CycleDetectingLockFactory$1: void <init>()>
<com.google.android.gms.internal.measurement.zzmk: boolean zzc()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzn getFocusedBuilding()>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler: void showExportPasswordConfirmDialog(androidx.fragment.app.FragmentActivity)>
<com.google.android.gms.internal.measurement.zzdi: int zzk()>
<com.facebook.react.views.view.ReactViewBackgroundManager: void setBackgroundColor(int)>
<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketError$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback,com.microsoft.authenticator.msa.entities.MsaAccountManagerError)>
<androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.material.card.MaterialCardView: boolean isDragged()>
<com.microsoft.authenticator.experimentation.abstraction.ExperimentationWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.authenticator.experimentation.businessLogic.FlightManager,com.microsoft.authenticator.experimentation.storage.ExperimentationStorage)>
<android.os.PersistableBundle: void putInt(java.lang.String,int)>
<com.facebook.imagepipeline.memory.BucketsBitmapPool: int getBucketedSizeForValue(android.graphics.Bitmap)>
<com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: void putEOI(byte[],int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<com.google.android.material.shape.MaterialShapeDrawable: int getShadowRadius()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$leaveWorkplaceJoin$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.facebook.imagepipeline.core.CloseableReferenceFactory: java.lang.String getStackTraceString(java.lang.Throwable)>
<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _hashToIndex(int)>
<com.google.android.gms.common.internal.zzq: com.google.android.gms.common.stats.ConnectionTracker zzg(com.google.android.gms.common.internal.zzq)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzH()>
<com.microsoft.brooklyn.ui.signin.SignInViewModel: void <init>(com.microsoft.brooklyn.common.BrooklynMSASignInUseCase)>
<com.google.android.gms.internal.measurement.zzjq: void <init>(com.google.android.gms.internal.measurement.zzjs,com.google.android.gms.internal.measurement.zzjl)>
<com.facebook.imagepipeline.transformation.BitmapTransformation: void transform(android.graphics.Bitmap)>
<javax.mail.Multipart: void addBodyPart(javax.mail.BodyPart)>
<com.azure.authenticator.databinding.FrxSyncToggleScreenBinding: com.azure.authenticator.databinding.FrxSyncToggleScreenBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdb: com.google.android.gms.internal.measurement.zzda zzk()>
<com.google.android.material.timepicker.ClockFaceView: void findIntersectingTextView()>
<com.facebook.react.TurboReactPackage$1$1: void findNext()>
<com.google.android.gms.cloudmessaging.zzf: void zza(int,java.lang.String)>
<com.facebook.common.logging.LoggingDelegate: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.internal.zac: java.lang.String zaa(android.content.Context,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider mfaNotificationActionWorker_AssistedFactoryProvider()>
<com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.telemetry.BrooklynLaunchTelemetryManager brooklynLaunchTelemetryManager()>
<com.google.android.gms.measurement.internal.zzec: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactNativeHost getReactNativeHost()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.RoundingParams getRoundingParams()>
<com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()>
<android.os.Vibrator: void vibrate(long[],int)>
<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>
<com.azure.authenticator.databinding.GeneratorHistoryLayoutBinding: com.azure.authenticator.databinding.GeneratorHistoryLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: boolean evaluateShowApp(com.microsoft.authenticator.graphclient.entities.EnabledState,java.lang.String)>
<ch.qos.logback.classic.spi.LoggingEvent: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zzb: void getStreetViewPanoramaAsync(com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.google.android.gms.measurement.internal.zzei: char zzq(com.google.android.gms.measurement.internal.zzei)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int)>
<com.google.android.gms.common.api.internal.zacv: java.lang.ref.WeakReference zaf(com.google.android.gms.common.api.internal.zacv)>
<com.google.android.gms.internal.measurement.zzia: java.lang.Object zza(java.lang.Object)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference postprocessInternal(com.facebook.imagepipeline.image.CloseableImage)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectNotificationHelper(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.google.android.gms.common.api.GoogleApiClient: void zap(com.google.android.gms.common.api.internal.zacv)>
<com.google.android.gms.measurement.internal.zzib: void zzC(com.google.android.gms.measurement.internal.zzhu,boolean,long)>
<com.google.android.material.textfield.TextInputLayout: void onApplyBoxBackgroundMode()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onCreateView$5: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>
<com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)>
<com.google.android.gms.internal.measurement.zzha: void zzG(int,java.util.List,boolean)>
<android.view.View: void setTag(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzii: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp)>
<java.lang.Float: int compare(float,float)>
<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<bolts.Task: boolean isFaulted()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void onBackPressed()>
<android.widget.AutoCompleteTextView: boolean post(java.lang.Runnable)>
<com.google.android.material.appbar.AppBarLayout: boolean setLiftableState(boolean)>
<com.google.android.gms.internal.location.zzaz: void zzE(com.google.android.gms.location.LocationRequest,android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$4: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.joran.spi.InterpretationContext: java.lang.Object popObject()>
<com.evernote.android.job.JobManager: java.util.Set getAllJobs()>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManager,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void <init>(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.measurement.zzkj: java.lang.String zzc(byte[],int,int)>
<com.evernote.android.job.JobRequest$NetworkType: void <init>(java.lang.String,int)>
<com.google.common.collect.RegularImmutableMap: java.lang.Object createHashTable(java.lang.Object[],int,int,int)>
<com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)>
<com.adjust.sdk.ActivityHandler$10: void <init>(com.adjust.sdk.ActivityHandler,java.lang.String,long,long)>
<com.google.android.gms.internal.location.zzbm: void zzc(int,int,int)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSendAccessibilityEvent(int,int)>
<com.google.android.gms.common.api.internal.RemoteCall: void accept(java.lang.Object,java.lang.Object)>
<com.google.crypto.tink.proto.Keyset$Key$Builder: com.google.crypto.tink.proto.Keyset$Key$Builder setKeyId(int)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>
<com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: void <init>(com.facebook.react.bridge.JavaModuleWrapper)>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: void setMaxPriority(androidx.core.app.NotificationCompat$Builder)>
<com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()>
<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>
<android.content.res.TypedArray: boolean hasValue(int)>
<java.math.BigDecimal: void <init>(double)>
<java.lang.Float: java.lang.Float valueOf(java.lang.String)>
<android.widget.ImageView: void setEnabled(boolean)>
<com.facebook.common.util.UriUtil: boolean isQualifiedResourceUri(android.net.Uri)>
<com.google.android.material.chip.ChipDrawable: void setRippleColor(android.content.res.ColorStateList)>
<com.google.android.material.snackbar.SnackbarManager: boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry access$getMsaAddAccountFlowTelemetry$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: void onPreExecute()>
<com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView)>
<androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zzc()>
<com.google.android.gms.internal.measurement.zzgp: void <init>()>
<com.fasterxml.jackson.core.io.OutputDecorator: java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)>
<com.adjust.sdk.SdkClickHandler$2: void <init>(com.adjust.sdk.SdkClickHandler)>
<ch.qos.logback.core.util.Duration: long getMilliseconds()>
<com.facebook.react.modules.core.JavaTimerManager$1: int compare(com.facebook.react.modules.core.JavaTimerManager$Timer,com.facebook.react.modules.core.JavaTimerManager$Timer)>
<ch.qos.logback.core.net.AbstractSocketAppender: void access$000(ch.qos.logback.core.net.AbstractSocketAppender)>
<com.facebook.react.views.text.TextAttributeProps: void setLetterSpacing(float)>
<android.view.ViewGroup: float getRotationX()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)>
<com.google.android.gms.common.api.internal.zah: void <init>(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.tasks.TaskCompletionSource)>
<ch.qos.logback.core.pattern.FormatInfo: ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String)>
<com.google.android.material.circularreveal.CircularRevealWidget: void destroyCircularRevealCache()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.sdk.AutomationSpecClient automationSpecClient()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener: void onAnimationEnd()>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager: void showProgressDialogFragment(androidx.fragment.app.FragmentActivity,int)>
<androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()>
<com.google.android.gms.internal.safetynet.zzi: void zza(com.google.android.gms.internal.safetynet.zzg,java.lang.String,int[],int,java.lang.String)>
<androidx.work.impl.background.systemjob.SystemJobService: boolean onStartJob(android.app.job.JobParameters)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.storage.Storage getStorage()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void onImageLoadedFromCacheImmediately(java.lang.String,com.facebook.common.references.CloseableReference)>
<android.content.pm.PackageInstaller$SessionInfo: java.lang.String getAppPackageName()>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()>
<com.facebook.imagepipeline.systrace.FrescoSystrace: void endSection()>
<com.google.android.gms.common.internal.zza: boolean zza()>
<android.widget.TextView: void setVisibility(int)>
<com.google.android.gms.maps.internal.zzbt: void <init>()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$102(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long)>
<com.airbnb.lottie.model.content.MergePaths: com.airbnb.lottie.model.content.MergePaths$MergePathsMode getMode()>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<com.google.android.material.navigation.NavigationBarPresenter$SavedState$1: com.google.android.material.navigation.NavigationBarPresenter$SavedState[] newArray(int)>
<android.widget.EditText: android.graphics.Typeface getTypeface()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.credential.AddCredentialFragment injectAddCredentialFragment2(com.microsoft.brooklyn.ui.credential.AddCredentialFragment)>
<com.airbnb.lottie.model.Font: java.lang.String getStyle()>
<com.google.android.gms.measurement.internal.zzgg: com.google.android.gms.measurement.internal.zzei zzat()>
<com.azure.authenticator.authentication.msa.MsaAccountManager: android.content.Intent getAddAccountIntent(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getDirectEventTypeConstants()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void access$700(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)>
<com.google.android.gms.internal.measurement.zzp: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzv)>
<android.media.ExifInterface: void <init>(java.io.InputStream)>
<com.google.android.material.timepicker.ClockFaceView: android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.graphics.RectF)>
<com.facebook.drawee.backends.pipeline.DraweeConfig: com.facebook.common.internal.ImmutableList getCustomDrawableFactories()>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectSelfhostConfigManager(com.azure.authenticator.PhoneFactorApplication,com.microsoft.authenticator.selfhost.SelfhostConfigManager)>
<com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdateSeen()>
<android.widget.LinearLayout: void onMeasure(int,int)>
<androidx.fragment.app.Fragment: void onDestroyView()>
<ch.qos.logback.core.joran.action.AppenderAction: void warnDeprecated(java.lang.String)>
<ch.qos.logback.core.pattern.parser.Token: int getType()>
<ch.qos.logback.core.spi.AppenderAttachableImpl: void detachAndStopAllAppenders()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab newTab()>
<com.google.android.gms.internal.measurement.zzgn: byte[] zza(byte[],int,int)>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getInnerRoundedness()>
<com.google.android.gms.measurement.internal.zzg: void zze(java.lang.String)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
<android.widget.ArrayAdapter: void addAll(java.util.Collection)>
<com.google.android.gms.maps.internal.zzh: com.google.android.gms.dynamic.IObjectWrapper zzi(com.google.android.gms.internal.maps.zzt)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs: void <init>(java.util.HashMap,com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs$1)>
<com.facebook.cache.disk.FileCache: com.facebook.binaryresource.BinaryResource getResource(com.facebook.cache.common.CacheKey)>
<com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest build()>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildGdprPackage()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>
<com.facebook.yoga.YogaNode: void setData(java.lang.Object)>
<com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)>
<ch.qos.logback.core.subst.Tokenizer: void addLiteralToken(java.util.List,java.lang.StringBuilder)>
<com.google.android.material.chip.ChipGroup: boolean access$800(com.google.android.material.chip.ChipGroup)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconEndPadding(float)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyError$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<android.widget.RelativeLayout: android.content.res.Resources getResources()>
<androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.measurement.zzkg: float zze(java.lang.Object,long)>
<com.google.android.material.navigation.NavigationBarItemView: void tryUpdateBadgeBounds(android.view.View)>
<com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType defaultValue()>
<com.facebook.drawee.gestures.GestureDetector: boolean isCapturingGesture()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCI: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,android.view.View)>
<com.airbnb.lottie.model.content.GradientColor: int getSize()>
<com.google.android.material.button.MaterialButtonHelper: int getInsetBottom()>
<android.view.ViewPropertyAnimator: void cancel()>
<com.google.android.gms.common.server.response.FastParser$ParseException: void <init>(java.lang.Throwable)>
<android.animation.ValueAnimator: boolean isStarted()>
<com.microsoft.brooklyn.config.BrooklynAppUpgradeManager: void handleAppUpgradeForBrooklyn()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.ChangePasswordFormDatasetUseCase changePasswordFormDatasetUseCase()>
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$400(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()>
<com.facebook.react.modules.blob.BlobModule$1: void <init>(com.facebook.react.modules.blob.BlobModule)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel access$10800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.measurement.internal.zzec: boolean zzk(com.google.android.gms.measurement.internal.zzaa)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer get()>
<com.google.android.gms.measurement.internal.zzdw: java.util.Map zza(android.content.Context)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String[] convert(java.lang.Throwable)>
<com.azure.authenticator.common.Util$Companion: void adjustFontScale$default(com.azure.authenticator.common.Util$Companion,float,android.content.Context,android.app.Activity,int,java.lang.Object)>
<com.google.android.material.textfield.ClearTextEndIconDelegate$4$1: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate$4,android.widget.EditText)>
<com.google.android.gms.common.api.internal.zaco: void zaf(com.google.android.gms.common.api.internal.zaco,com.google.android.gms.signin.internal.zak)>
<com.google.android.gms.common.api.GoogleApiClient: android.content.Context getContext()>
<android.widget.RelativeLayout: void invalidate()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zar(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.Map)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getVerificationSign3()>
<com.google.android.gms.internal.firebase_messaging.zzi: void zza(java.lang.Throwable,java.lang.Throwable)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.backup.RestoreFlowActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<ch.qos.logback.core.helpers.Transform: java.lang.String escapeTags(java.lang.StringBuffer)>
<ch.qos.logback.core.joran.GenericConfigurator: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>
<ch.qos.logback.classic.pattern.CallerDataConverter: java.lang.String getDefaultRangeDelimiter()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<com.google.android.gms.dynamic.IFragmentWrapper: java.lang.String zzh()>
<android.text.Layout: float getLineWidth(int)>
<com.google.android.gms.measurement.internal.zzgq: void <init>(com.google.android.gms.measurement.internal.zzhn,boolean)>
<com.google.android.gms.auth.api.accounttransfer.zzm: void <init>()>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>
<com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagForTouch(float,float,android.view.ViewGroup)>
<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>
<com.google.android.gms.internal.measurement.zzdj: int zzV()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1)>
<com.facebook.react.views.textinput.ReactEditText: void clearFocus()>
<com.facebook.react.bridge.Dynamic: java.lang.String asString()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.favicon.FaviconRefreshWorker_AssistedFactory faviconRefreshWorker_AssistedFactory()>
<com.google.android.material.internal.CollapsingTextHelper: int getCurrentCollapsedTextColor()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager access$4500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: android.view.View$OnFocusChangeListener access$200(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<java.util.ArrayList: int size()>
<java.io.OutputStream: void close()>
<androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: void <init>()>
<com.google.common.collect.MapMakerInternalMap$ValueIterator: void <init>(com.google.common.collect.MapMakerInternalMap)>
<androidx.room.InvalidationTracker: void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[])>
<java.util.Comparator: boolean equals(java.lang.Object)>
<com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.common.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: com.facebook.react.jstasks.HeadlessJsTaskContext getInstance(com.facebook.react.bridge.ReactContext)>
<com.google.crypto.tink.KeysetHandle: void assertEnoughEncryptedKeyMaterial(com.google.crypto.tink.proto.EncryptedKeyset)>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)>
<ch.qos.logback.core.net.AbstractSocketAppender: ch.qos.logback.core.net.SocketConnector createConnector(java.net.InetAddress,int,int,long)>
<com.adjust.sdk.IActivityHandler: void setPushToken(java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzdb: void zzq(com.google.android.gms.internal.measurement.zzdb)>
<com.google.android.gms.common.logging.Logger: void w(java.lang.String,java.lang.Object[])>
<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity: java.lang.Object generatedComponent()>
<com.airbnb.lottie.model.content.ShapeFill: android.graphics.Path$FillType getFillType()>
<com.facebook.react.uimanager.ReactShadowNode: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: float getStartDelayProgress()>
<com.azure.authenticator.storage.database.AccountStorage$getAllAccountsObservable$1: java.util.List apply(java.util.List)>
<android.widget.Button: boolean callOnClick()>
<java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager getAadTokenRefreshManager$app_productionRelease()>
<com.azure.authenticator.ui.RootActivityBase: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity: void inject()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void access$startUrlWithCookies(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment,java.util.Set)>
<com.facebook.imageutils.WebpUtil: android.util.Pair getSize(java.io.InputStream)>
<java.security.KeyStore: void deleteEntry(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.azure.authenticator.storage.Storage: void removeDosPreventer()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread: void performXMLConfiguration(ch.qos.logback.classic.LoggerContext)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$handleMsaNgcKeyGenerationStatus(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,java.lang.String,com.microsoft.authenticator.registration.msa.entities.MsaNgcKeyGenerationStatus)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void upload(com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>
<com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)>
<ch.qos.logback.core.joran.util.StringToObjectConverter: boolean isOfTypeCharset(java.lang.Class)>
<com.airbnb.lottie.model.content.ShapeTrimPath$Type: void <init>(java.lang.String,int)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzh(java.lang.String)>
<com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding: void <init>(android.widget.LinearLayout,android.webkit.WebView)>
<com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.ShapeAppearancePathProvider getInstance()>
<com.google.android.gms.internal.measurement.zzp: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzs)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager access$7500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.CountingMemoryCache getBitmapCountingMemoryCache()>
<android.text.Layout: int getLineAscent(int)>
<com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX(int)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportUnexpectedChar(int,java.lang.String)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setHardware(java.lang.String)>
<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>
<com.google.android.material.datepicker.DateValidatorPointForward: com.google.android.material.datepicker.DateValidatorPointForward 'from'(long)>
<com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager getInstance()>
<com.google.android.datatransport.runtime.TransportContext: byte[] getExtras()>
<com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordsViewModel: void <init>(com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository,com.microsoft.brooklyn.module.repository.UtilitySDKRepository,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper)>
<com.facebook.react.ReactInstanceManager: void tearDownReactContext(com.facebook.react.bridge.ReactContext)>
<com.facebook.imagepipeline.image.EncodedImage: void copyMetaDataFrom(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.internal.measurement.zzkh: void zzA(java.lang.Object,long,boolean)>
<com.airbnb.lottie.LottieTask: void setResult(com.airbnb.lottie.LottieResult)>
<com.google.android.gms.internal.measurement.zzgx: void zzr(java.lang.String)>
<com.facebook.react.uimanager.MatrixMathHelper: boolean isZero(double)>
<com.google.android.gms.internal.measurement.zzmq: boolean zza()>
<com.google.android.gms.internal.measurement.zzcd: com.google.android.gms.internal.measurement.zzcd zzk()>
<com.facebook.soloader.SoSource: void <init>()>
<android.content.ContextWrapper: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.Number)>
<android.widget.EditText: void onScrollChanged(int,int,int,int)>
<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setVisibilityEventTimeMs(long)>
<com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation: com.airbnb.lottie.model.DocumentData getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.facebook.react.bridge.JavaScriptContextHolder: long get()>
<com.microsoft.ngc.aad.NgcSession: java.lang.String getRawRichContextString()>
<kotlin.text.StringsKt: boolean equals(java.lang.String,java.lang.String,boolean)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_3_7()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.main.SettingsViewModel access$14000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int,int,int)>
<com.airbnb.lottie.network.DefaultLottieFetchResult: java.lang.String getErrorFromConnection(java.net.HttpURLConnection)>
<com.google.android.gms.measurement.internal.zzhn: void zzh()>
<com.google.android.gms.internal.measurement.zzjs: void clear()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)>
<com.google.android.gms.common.internal.zzz: void <init>(android.os.IBinder)>
<com.google.android.gms.internal.measurement.zzgf: int zzn(int,byte[],int,int,com.google.android.gms.internal.measurement.zzjx,com.google.android.gms.internal.measurement.zzge)>
<com.google.android.gms.common.data.DataHolder: com.google.android.gms.common.data.DataHolder$Builder builder(java.lang.String[])>
<com.fasterxml.jackson.core.JsonToken: int id()>
<com.google.android.gms.common.images.zag: void zaa(android.graphics.drawable.Drawable,boolean,boolean,boolean)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment_GeneratedInjector: void injectDeviceRegistrationFragment(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.facebook.imagepipeline.nativecode.WebpTranscoder: boolean isWebpNativelySupported(com.facebook.imageformat.ImageFormat)>
<com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean shouldAnimate()>
<com.google.common.collect.AbstractMapEntry: java.lang.Object getKey()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.payment.EditAddPaymentFragment injectEditAddPaymentFragment2(com.microsoft.brooklyn.ui.payment.EditAddPaymentFragment)>
<com.google.android.gms.common.api.PendingResults: com.google.android.gms.common.api.OptionalPendingResult immediatePendingResult(com.google.android.gms.common.api.Result,com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.common.api.internal.zaaz: void zal(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.internal.StatusPendingResult,boolean)>
<ch.qos.logback.classic.spi.LoggingEventVO: ch.qos.logback.classic.spi.LoggingEventVO build(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.views.scroll.FpsListener: void enable(java.lang.String)>
<com.evernote.android.job.Job: boolean isRequirementNetworkTypeMet()>
<com.google.android.gms.location.zzw: void <init>()>
<com.google.android.material.datepicker.MonthAdapter: android.widget.TextView getView(int,android.view.View,android.view.ViewGroup)>
<com.google.android.gms.location.ActivityRecognitionResult: java.util.List zza(android.content.Intent)>
<android.util.SparseArray: void remove(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: kotlinx.coroutines.Job approveAadNgcSession(java.lang.String)>
<android.graphics.drawable.Drawable: boolean isStateful()>
<com.facebook.react.modules.core.JavaTimerManager: void setChoreographerCallback()>
<com.google.android.material.appbar.ViewOffsetBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<java.util.List: void add(int,java.lang.Object)>
<com.google.android.material.stateful.ExtendableSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1)>
<com.azure.authenticator.accounts.AccountType: com.azure.authenticator.accounts.AccountType getEnum(int)>
<com.adjust.sdk.SharedPreferencesManager: void saveDeeplink(android.net.Uri,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.ngc.provider.cryptography.NgcCredentialManager ngcCredentialManager()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollToNextPage(int)>
<com.google.android.gms.measurement.internal.zzkf: void zzx(com.google.android.gms.internal.measurement.zzda,java.lang.String,java.lang.Object)>
<androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)>
<com.adjust.sdk.ActivityHandler: void stopForegroundTimerI()>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()>
<com.google.android.gms.internal.measurement.zzdj: void zzaq(com.google.android.gms.internal.measurement.zzdj,int)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionManager: void <init>(android.content.Context,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate)>
<ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabCornerSize(float)>
<com.fasterxml.jackson.core.base.ParserBase: void <init>(com.fasterxml.jackson.core.io.IOContext,int)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zaj(com.google.android.gms.common.api.GoogleApi)>
<com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener: void onPositiveButtonClick(java.lang.Object)>
<com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)>
<com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)>
<com.google.android.material.navigation.NavigationBarMenuView: int getItemIconSize()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,int)>
<ch.qos.logback.core.recovery.RecoveryCoordinator: long getCurrentTime()>
<com.azure.authenticator.PhoneFactorApplication: void <init>()>
<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray(java.lang.Object[])>
<com.facebook.react.bridge.ModuleSpec: java.lang.String getName()>
<com.adjust.sdk.AdjustInstance$4: void <init>(com.adjust.sdk.AdjustInstance,java.lang.String)>
<com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)>
<com.google.android.material.chip.Chip: void removeBackgroundInset()>
<com.google.android.gms.auth.api.credentials.zzj: void <init>()>
<com.github.amlcurran.showcaseview.ShowcaseView$Builder: void <init>(android.app.Activity,boolean)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer$1)>
<dummyMainClass: com.azure.authenticator.ui.LaunchActivity dummyMainMethod_com_azure_authenticator_ui_LaunchActivity(android.content.Intent)>
<com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.ByteString getEncryptedKeyset()>
<com.google.android.gms.location.FusedLocationProviderClient: void zzb(com.google.android.gms.location.zzap,com.google.android.gms.location.LocationCallback,com.google.android.gms.location.zzan,com.google.android.gms.internal.location.zzba,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzaz,com.google.android.gms.tasks.TaskCompletionSource)>
<androidx.core.widget.TextViewCompat: int getMaxLines(android.widget.TextView)>
<com.google.android.gms.auth.account.zzg: void <init>(com.google.android.gms.auth.account.WorkAccountClient)>
<com.facebook.react.animated.AnimatedNode: void removeChild(com.facebook.react.animated.AnimatedNode)>
<com.google.android.gms.location.zzj: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showEntropyLayout()>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabDiameter()>
<java.io.FileInputStream: void <init>(java.io.File)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void access$100(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,int)>
<java.lang.Thread: void setPriority(int)>
<ch.qos.logback.core.pattern.parser.FormattingNode: ch.qos.logback.core.pattern.FormatInfo getFormatInfo()>
<ch.qos.logback.core.rolling.helper.RegexPathPart: void <init>(java.lang.String)>
<javax.net.ssl.SSLSocket: void setTrafficClass(int)>
<java.io.OutputStream: void write(int)>
<com.google.android.gms.internal.measurement.zzlm: boolean zzb()>
<java.lang.String: java.lang.String valueOf(char[])>
<android.graphics.Canvas: void restoreToCount(int)>
<com.google.android.gms.internal.measurement.zzlc: com.google.android.gms.internal.measurement.zzld zzg()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_15_16$cp()>
<com.google.android.gms.internal.measurement.zzdw: void <init>(com.google.android.gms.internal.measurement.zzdv)>
<com.google.android.gms.common.api.internal.zabd: com.google.android.gms.common.ConnectionResult zad(com.google.android.gms.common.api.Api)>
<com.google.android.gms.internal.measurement.zzmq: boolean zzc()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void invalidateAadNgcAccounts()>
<android.graphics.Rect: float exactCenterY()>
<android.widget.EditText: void setSaveEnabled(boolean)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int,int)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider)>
<com.facebook.react.uimanager.MatrixMathHelper: double[] v3Cross(double[],double[])>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setResizeOptions(com.facebook.imagepipeline.common.ResizeOptions)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: boolean readBoolean(android.os.Parcel,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$savePlaceHolderPolicy$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,kotlin.coroutines.Continuation)>
<com.azure.authenticator.authentication.msa.MsaAccountManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int[] getMethodInvocationMethodKeyAllowlist()>
<com.facebook.react.bridge.JavaOnlyArray: void pushNull()>
<com.facebook.yoga.YogaNode: com.facebook.yoga.YogaNode removeChildAt(int)>
<com.azure.authenticator.databinding.AddNewAadMfaAccountBinding: android.widget.ScrollView getRoot()>
<com.azure.authenticator.ui.Hilt_MainActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.google.android.material.internal.CollapsingTextHelper: void <init>(android.view.View)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: java.util.List getInvalidMfaAccounts()>
<com.facebook.react.uimanager.UIImplementation: void findSubviewIn(int,float,float,com.facebook.react.bridge.Callback)>
<com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>
<com.facebook.react.modules.network.NetworkingModule$UriHandler: boolean supports(android.net.Uri,java.lang.String)>
<com.facebook.react.ReactInstanceManager: void createReactContextInBackground()>
<com.google.android.gms.cloudmessaging.zzs: void <init>(int,int,android.os.Bundle)>
<com.facebook.react.ReactInstanceManager: void clearReactRoot(com.facebook.react.uimanager.ReactRoot)>
<com.google.android.gms.tasks.zzl: com.google.android.gms.tasks.OnFailureListener zzd(com.google.android.gms.tasks.zzl)>
<com.google.android.material.navigation.NavigationBarMenuView: void <init>(android.content.Context)>
<com.facebook.common.internal.Sets: java.util.Set newIdentityHashSet()>
<com.google.android.material.snackbar.Snackbar$1: void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener)>
<com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$000(com.facebook.react.views.scroll.ReactHorizontalScrollView)>
<com.google.common.collect.MapMakerInternalMap$WeakValueReference: java.lang.Object get()>
<java.net.URI: void <init>(java.lang.String)>
<com.google.android.gms.internal.location.zzaz: void zzG(android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void <init>(java.util.concurrent.Executor)>
<com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTLAllowed(android.content.Context)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter$GetProfileImageCallback: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter)>
<com.facebook.react.modules.camera.ImageEditingManager: boolean isLocalUri(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void injectAuthMethodsPolicyManager(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeLongObject(android.os.Parcel,int,java.lang.Long,boolean)>
<com.microsoft.did.di.VcWalletModule: void <init>()>
<com.airbnb.lottie.utils.LottieValueAnimator: void setMinFrame(int)>
<com.google.android.gms.maps.model.LatLngBounds: double zzc(double,double)>
<android.app.Fragment: void onLowMemory()>
<java.util.Iterator: void remove()>
<ch.qos.logback.core.net.SMTPAppenderBase: javax.mail.internet.InternetAddress getAddress(java.lang.String)>
<com.google.android.gms.internal.measurement.zzkz: long zzb()>
<com.facebook.soloader.SoSource: java.lang.String toString()>
<com.microsoft.onlineid.UserCookie: java.lang.String getUrlHostname()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: long readLong(android.os.Parcel,int)>
<com.facebook.react.views.image.ReactCallerContextFactory: java.lang.Object getOrCreateCallerContext(com.facebook.react.uimanager.ThemedReactContext,java.lang.String)>
<android.graphics.Typeface: int getStyle()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig getDefault(com.google.android.datatransport.runtime.time.Clock)>
<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationUseCase access$2900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field zaa()>
<com.facebook.datasource.DataSource: java.lang.Throwable getFailureCause()>
<com.facebook.react.views.scroll.VelocityHelper: float getYVelocity()>
<com.facebook.imagepipeline.memory.GenericByteArrayPool: byte[] alloc(int)>
<com.google.android.gms.internal.measurement.zzit: com.google.android.gms.internal.measurement.zzis zzb()>
<android.util.SparseArray: void delete(int)>
<java.io.BufferedReader: void close()>
<java.util.concurrent.ConcurrentMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.api.Api$Client zaf()>
<com.evernote.android.job.Job$Params: com.evernote.android.job.JobRequest getRequest()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.network.ApiProvider apiProvider()>
<com.facebook.cache.disk.DiskStorage$Inserter: void writeData(com.facebook.cache.common.WriterCallback,java.lang.Object)>
<com.adjust.sdk.SharedPreferencesManager: org.json.JSONArray getRawReferrer(java.lang.String,long)>
<com.azure.authenticator.accounts.AccountType: int getValue()>
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<com.adjust.sdk.SharedPreferencesManager: void setSendingReferrersAsNotSent()>
<com.google.android.material.button.MaterialButton: int getIconSize()>
<android.widget.SeekBar: android.content.Context getContext()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.android.gms.internal.measurement.zzkf: void <init>(sun.misc.Unsafe)>
<com.facebook.imagepipeline.transcoder.ImageTranscodeResult: void <init>(int)>
<com.adjust.sdk.Util: boolean readBooleanField(java.io.ObjectInputStream$GetField,java.lang.String,boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: int getMaxBlobByteSizePerRow()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void access$hideAutofillDisableBannerIfRequired(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.gms.measurement.internal.zzam: boolean zzf()>
<com.google.android.datatransport.cct.internal.LogEvent: long getEventUptimeMs()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: java.lang.Object retrieveBackup(java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCBuilder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCBuilder savedStateHandle(androidx.lifecycle.SavedStateHandle)>
<kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)>
<com.adjust.sdk.ActivityHandler: void updateAdidI(java.lang.String)>
<com.google.android.gms.common.api.PendingResults: com.google.android.gms.common.api.PendingResult immediateFailedResult(com.google.android.gms.common.api.Result,com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.measurement.internal.zzaj: void zzb(com.google.android.gms.measurement.internal.zzei,android.database.sqlite.SQLiteDatabase)>
<ch.qos.logback.classic.android.LogcatAppender: java.lang.String getTag(ch.qos.logback.classic.spi.ILoggingEvent)>
<ch.qos.logback.classic.Logger: boolean isInfoEnabled(org.slf4j.Marker)>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<com.airbnb.lottie.parser.MaskParser: com.airbnb.lottie.model.content.Mask parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<android.net.NetworkInfo: boolean isConnected()>
<com.google.android.gms.internal.measurement.zzbv: int zzc()>
<ch.qos.logback.core.NOPOutputStream: void <init>()>
<com.google.android.material.textfield.ClearTextEndIconDelegate$6: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.gms.maps.internal.zzau: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.net.Uri getPhotoUrl()>
<com.google.android.gms.location.places.zza: void <init>()>
<java.lang.Math: double ulp(double)>
<java.nio.ByteBuffer: byte get()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzI(java.lang.String)>
<com.facebook.common.references.OOMSoftReference: void <init>()>
<android.content.res.AssetFileDescriptor: void close()>
<com.evernote.android.job.JobRequest: com.evernote.android.job.JobRequest$NetworkType requiredNetworkType()>
<com.google.android.gms.internal.location.zzam: void zzk(android.app.PendingIntent)>
<com.microsoft.authenticator.di.AppModule: com.microsoft.powerlift.PowerLift providePowerLift(android.content.Context)>
<com.google.android.gms.internal.auth-api-phone.zzm: void <init>()>
<ch.qos.logback.core.joran.spi.ConsoleTarget: void <init>(java.lang.String,int,java.lang.String,java.io.OutputStream)>
<com.google.android.material.bottomappbar.BottomAppBar: void createFabTranslationXAnimation(int,java.util.List)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.location.abstraction.LocationPermissionRequestViewModel access$13000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.azure.authenticator.accounts.GenericAccount: boolean equals(java.lang.Object)>
<com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue getUIViewOperationQueue()>
<com.google.android.gms.common.api.GoogleApi: java.lang.String getContextAttributionTag()>
<android.widget.RelativeLayout: void setBackgroundColor(int)>
<com.facebook.react.uimanager.ReactRoot: int getHeightMeasureSpec()>
<com.microsoft.authenticator.backup.entities.RetrieveBackupResult$Success: com.microsoft.authenticator.backup.entities.CloudBackup getCloudBackup()>
<com.google.android.gms.measurement.internal.zzhn: void zzn(java.lang.Boolean)>
<com.facebook.drawee.controller.ForwardingControllerListener: void removeListener(com.facebook.drawee.controller.ControllerListener)>
<com.azure.authenticator.databinding.AccountFullscreenSettingsFragmentBinding: com.azure.authenticator.databinding.AccountFullscreenSettingsFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.IntegerTokenConverter getIntegerTokenConverter()>
<ch.qos.logback.core.net.SMTPAppenderBase: void updateMimeMsg(javax.mail.internet.MimeMessage,ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object)>
<com.google.android.gms.common.GoogleSignatureVerifier: boolean isUidGoogleSigned(int)>
<com.facebook.imagepipeline.producers.ThreadHandoffProducer$2: void <init>(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageInfo(com.facebook.imagepipeline.image.ImageInfo)>
<com.facebook.react.views.textinput.ReactTextInputEvent: java.lang.String getEventName()>
<com.google.android.gms.measurement.internal.zzcv: void <init>()>
<com.azure.authenticator.databinding.PaymentsDataPlaceholderLayoutBinding: com.azure.authenticator.databinding.PaymentsDataPlaceholderLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.bottomsheet.BottomSheetDialog$5: void <init>(com.google.android.material.bottomsheet.BottomSheetDialog)>
<android.widget.ImageButton: void setTranslationZ(float)>
<java.util.Set: boolean containsAll(java.util.Collection)>
<com.azure.authenticator.ui.fragment.accounts.AccountsCommonUI$showEditAccountNameDialog$onFocusChangeListener$1: void <init>(android.app.AlertDialog)>
<com.facebook.react.views.textinput.ReactTextInputFocusEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<android.graphics.Bitmap$Config: java.lang.String toString()>
<java.security.GeneralSecurityException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.location.zzav: void zzn()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int addAccessibilityActionForState(android.view.View,int,int)>
<com.google.android.gms.cloudmessaging.zzf: boolean zza(android.os.Message)>
<android.database.CursorWindow: void freeLastRow()>
<com.google.android.material.tabs.TabIndicatorInterpolator: void setIndicatorBoundsForOffset(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showSendFeedbackDialog$storeRatingDialogBuilder$2: void <init>(com.azure.authenticator.ui.dialog.StoreRatingTask,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.airbnb.lottie.value.ScaleXY: float getScaleY()>
<com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)>
<com.airbnb.lottie.LottieImageAsset: java.lang.String getId()>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void handleResult(com.facebook.imagepipeline.image.CloseableImage,int)>
<java.util.concurrent.BlockingQueue: boolean offer(java.lang.Object)>
<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void access$700(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)>
<com.adjust.sdk.SharedPreferencesManager: void saveString(java.lang.String,java.lang.String)>
<android.view.ViewGroup: void setLeft(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker access$1300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.adjust.sdk.DeviceInfo: java.lang.String getDisplayHeight(android.util.DisplayMetrics)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.Registry$KeyManagerContainer createContainerFor(com.google.crypto.tink.KeyTypeManager)>
<com.evernote.android.job.JobRequest: com.evernote.android.job.JobRequest$BackoffPolicy getBackoffPolicy()>
<com.google.android.gms.common.util.IOUtils: long copyStream(java.io.InputStream,java.io.OutputStream,boolean,int)>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>
<com.google.android.gms.internal.measurement.zzlt: void <init>()>
<android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
<dummyMainClass: com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment dummyMainMethod_com_azure_authenticator_ui_fragment_sharedDeviceMode_SharedDeviceModeSettingsFragment(android.content.Intent,android.app.Activity)>
<android.database.sqlite.SQLiteStatement: long executeInsert()>
<com.microsoft.authenticator.mfasdk.storage.MfaSdkLocalStorage: void <init>(android.content.Context)>
<android.app.Activity: void finish()>
<com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderColor(int,float,float)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void stopInspector()>
<com.google.android.gms.location.places.PlaceReport: java.lang.String getTag()>
<com.google.android.gms.internal.auth-api.zzak: void <init>(android.content.Context,com.google.android.gms.auth.api.identity.zzf)>
<com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAllComplete(java.util.Collection)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$8: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setCradleVerticalOffset(float)>
<androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.view.View)>
<com.google.android.gms.internal.firebase_messaging.zzj: void <init>(java.lang.Throwable,java.lang.ref.ReferenceQueue)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: void setWebpBitmapFactory(com.facebook.common.webp.WebpBitmapFactory,com.facebook.imagepipeline.core.ImagePipelineExperiments,com.facebook.common.webp.BitmapCreator)>
<com.facebook.react.views.text.TextAttributes: void setHeightOfTallestInlineViewOrImage(float)>
<com.airbnb.lottie.LottieAnimationView: void setRenderMode(com.airbnb.lottie.RenderMode)>
<com.microsoft.onlineid.sdk.extension.Session: com.microsoft.onlineid.sdk.extension.Session$SessionType getSessionType()>
<ch.qos.logback.core.Layout: java.lang.String getPresentationFooter()>
<android.widget.Button: android.content.Context getContext()>
<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>
<com.google.android.gms.internal.auth.zzn: void <init>()>
<androidx.work.ForegroundInfo: void <init>(int,android.app.Notification)>
<com.google.android.gms.common.zzw: void <init>(boolean,java.lang.String,java.lang.Throwable)>
<android.widget.ImageButton: boolean isFocused()>
<com.microsoft.authenticator.reactnative.modules.LogsPackage: void <init>()>
<ch.qos.logback.core.util.ExecutorServiceUtil$1: void <init>()>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void fadeOutLayer(int)>
<androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)>
<org.json.JSONArray: java.lang.Object get(int)>
<com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.cct.CctTransportBackend$HttpResponse doSend(com.google.android.datatransport.cct.CctTransportBackend$HttpRequest)>
<com.google.android.gms.measurement.internal.zzhq: void <init>(com.google.android.gms.measurement.internal.zzhr,java.lang.String,java.net.URL,byte[],java.util.Map,com.google.android.gms.measurement.internal.zzfj,byte[])>
<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.facebook.react.devsupport.LogBoxModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)>
<com.facebook.react.views.textinput.ReactEditText: void maybeSetText(com.facebook.react.views.text.ReactTextUpdate)>
<com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForViewManagerClass(java.lang.Class)>
<com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.gms.internal.measurement.zzbw: boolean zzm()>
<android.widget.TextView: void setText(int)>
<java.net.HttpURLConnection: void setDefaultUseCaches(boolean)>
<com.facebook.react.uimanager.ReactShadowNode: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode)>
<com.azure.authenticator.accounts.RestoreCapability: boolean isPartiallyRestored()>
<com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)>
<java.lang.Character: char[] toChars(int)>
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()>
<com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()>
<com.adjust.sdk.Util: java.lang.String getSdkPrefixPlatform(java.lang.String)>
<com.azure.authenticator.jobs.DeferrableWorkerTag: void <init>()>
<com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.ReactContext getReactContext(android.view.View)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: java.lang.Float evaluate(float,java.lang.Float,java.lang.Float)>
<com.google.android.gms.maps.internal.ILocationSourceDelegate: void activate(com.google.android.gms.maps.internal.zzah)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeCharForError(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.MutableLiveData access$get_approveSessionResult$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.facebook.react.animated.NativeAnimatedModule$7: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>
<com.evernote.android.job.JobRequest$Builder: boolean access$1600(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.gms.measurement.internal.zzbd: void <init>()>
<java.io.PrintStream: void flush()>
<com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()>
<com.google.android.gms.common.internal.zzae: com.google.android.gms.common.zzq zzf(com.google.android.gms.common.zzn)>
<android.content.ClipData: int getItemCount()>
<com.google.android.gms.common.internal.service.zag: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.maps.SupportMapFragment$zzb: void setActivity(android.app.Activity)>
<dagger.hilt.android.internal.managers.FragmentComponentManager: void <init>(androidx.fragment.app.Fragment)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _finishString2(char[],int)>
<java.util.ArrayList: java.lang.Object[] toArray()>
<android.widget.EditText: void setJustificationMode(int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBoolean(android.os.Parcel,int,boolean)>
<com.google.android.gms.common.api.internal.zaac: com.google.android.gms.common.api.internal.ApiKey zaa()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$leaveWorkplaceJoin$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzgx: void <init>(byte[],int,int)>
<android.app.Activity: android.view.View findViewById(int)>
<com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.value.Keyframe parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,float,com.airbnb.lottie.parser.ValueParser,boolean)>
<com.google.android.gms.internal.safetynet.zzu: void <init>(com.google.android.gms.internal.safetynet.zzk$zzd)>
<com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(android.content.Context,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$7: com.microsoft.authenticator.notifications.controller.FcmTokenDailyRetryRefreshWorker create(android.content.Context,androidx.work.WorkerParameters)>
<android.view.View: void setVisibility(int)>
<com.facebook.react.fabric.Binding: void unregister()>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount accountWithUpdatedAadMfaComponents(com.azure.authenticator.storage.database.DbAccount,com.azure.authenticator.storage.database.DbAccount)>
<com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getText()>
<com.google.android.gms.common.internal.zzv: void <init>(android.os.IBinder)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$6: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void onPostExecute(com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<ch.qos.logback.core.subst.Tokenizer$TokenizerState: ch.qos.logback.core.subst.Tokenizer$TokenizerState[] values()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void onDataSourceFailed(int,com.facebook.datasource.DataSource)>
<com.google.android.material.animation.MotionTiming: void <init>(long,long)>
<com.airbnb.lottie.model.layer.TextLayer: float getTextLineWidthForGlyphs(java.lang.String,com.airbnb.lottie.model.Font,float,float)>
<com.google.android.material.shape.AdjustedCornerSize: void <init>(float,com.google.android.material.shape.CornerSize)>
<androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)>
<com.google.android.gms.internal.location.zzbs: void <init>()>
<com.evernote.android.job.JobBootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_1_7$1: void <init>(int,int)>
<com.google.android.gms.location.zzag: void <init>(android.app.PendingIntent)>
<com.google.android.gms.maps.GoogleMap$CancelableCallback: void onFinish()>
<okio.Buffer: byte getByte(long)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int peekKeyword()>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$600(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.gms.maps.internal.zzbe: void <init>()>
<com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zab(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzm()>
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>
<ch.qos.logback.core.util.PropertySetterException: void <init>(java.lang.Throwable)>
<android.widget.CheckBox: int getMinWidth()>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: void <init>(com.facebook.react.views.viewpager.ReactViewPager)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: int zzz(com.google.android.gms.common.AccountPicker$AccountChooserOptions,int)>
<com.google.android.gms.location.zzan: void zza()>
<java.lang.Math: double max(double,double)>
<android.util.SparseLongArray: void append(int,long)>
<com.microsoft.authenticator.reactnative.modules.DeviceRegistrationPackage: void <init>(kotlinx.coroutines.CoroutineDispatcher)>
<com.adjust.sdk.ActivityHandler: void sendReftagReferrer()>
<com.google.android.gms.internal.auth.zzax: void <init>(java.lang.String)>
<com.facebook.react.uimanager.SimpleViewManager: void <init>()>
<com.microsoft.authenticator.features.frx.businessLogic.InstallReferrerManager: void <init>(android.content.Context,com.azure.authenticator.storage.Storage)>
<com.google.android.material.snackbar.SnackbarManager: com.google.android.material.snackbar.SnackbarManager getInstance()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_Factory: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel get()>
<com.facebook.datasource.BaseDataSubscriber: void <init>()>
<com.google.android.gms.common.api.internal.ListenerHolder: void notifyListenerInternal(com.google.android.gms.common.api.internal.ListenerHolder$Notifier)>
<com.google.android.gms.internal.common.zzr: void <init>(int)>
<com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.ProducerListener getListener()>
<com.facebook.react.uimanager.UIViewOperationQueue: int[] access$300(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.google.android.material.datepicker.MaterialCalendar$6: void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton)>
<com.facebook.react.uimanager.ReactShadowNode: int getNativeChildCount()>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.internal.measurement.zzdi: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>
<ch.qos.logback.classic.util.ContextInitializer: java.net.URL findConfigFileFromSystemProperties(boolean)>
<java.util.zip.ZipEntry: long getCrc()>
<ch.qos.logback.classic.Logger: boolean isTraceEnabled(org.slf4j.Marker)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: boolean isServerKeyIdentifierInvalidated(java.lang.String)>
<com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer createAndPutNewMultiplexer(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzfh: void zzc(java.lang.InterruptedException)>
<com.google.android.material.datepicker.OnSelectionChangedListener: void <init>()>
<androidx.room.RoomOpenHelper: void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: androidx.sqlite.db.SupportSQLiteDatabase access$602(com.azure.authenticator.storage.database.AppDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setDisplay(com.facebook.yoga.YogaDisplay)>
<com.fasterxml.jackson.core.JsonStreamContext: int getEntryCount()>
<com.adjust.sdk.ActivityHandler: android.content.Intent createDeeplinkIntentI(android.net.Uri)>
<android.content.Context: android.os.Looper getMainLooper()>
<java.util.concurrent.ScheduledFuture: long getDelay(java.util.concurrent.TimeUnit)>
<com.azure.authenticator.databinding.AadAccountPageWebViewFragmentBinding: void <init>(android.widget.LinearLayout,android.webkit.WebView)>
<com.google.android.material.button.MaterialButton$SavedState$1: void <init>()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber: void <init>(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int)>
<com.facebook.yoga.YogaNode: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()>
<com.azure.authenticator.storage.Storage: void setShowUpgradeInfoDialogKey(boolean)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt)>
<com.airbnb.lottie.L$1: void <init>(android.content.Context)>
<android.content.ContentValues: int size()>
<com.fasterxml.jackson.core.io.IOContext: void releaseConcatBuffer(char[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: okhttp3.OkHttpClient okHttpClient()>
<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>
<com.google.android.gms.common.api.internal.GoogleApiManager: long zaE(com.google.android.gms.common.api.internal.GoogleApiManager)>
<okio.Buffer: okio.ByteString readByteString()>
<androidx.preference.PreferenceGroup: boolean addPreference(androidx.preference.Preference)>
<com.google.android.gms.internal.measurement.zzdf: void <init>()>
<com.facebook.react.bridge.CatalystInstanceImpl: void destroyV1()>
<com.google.android.gms.tasks.Task: java.lang.Object getResult()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.authentication.MsaAuthViewModel access$13300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onDestroy()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$loadSections$2: void onChanged(com.microsoft.authenticator.workaccount.entities.GetDeviceIdStatus)>
<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int)>
<com.google.android.gms.common.api.ResolvingResultCallbacks: void onUnresolvableFailure(com.google.android.gms.common.api.Status)>
<ch.qos.logback.core.ContextBase: void removeShutdownHook()>
<android.widget.Spinner: void requestLayout()>
<com.facebook.cache.disk.DynamicDefaultDiskStorage: com.facebook.cache.disk.DiskStorage get()>
<com.airbnb.lottie.utils.Utils: void saveLayerCompat(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint,int)>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity: void <init>()>
<java.lang.Math: double sqrt(double)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)>
<dummyMainClass: com.azure.authenticator.ui.msa.MsaProtectionActivity dummyMainMethod_com_azure_authenticator_ui_msa_MsaProtectionActivity(android.content.Intent)>
<com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.PresentationUseCase access$8300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.microsoft.brooklyn.common.BrooklynMSASignOutUseCase: void <init>(com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.common.BrooklynBGTaskScheduler,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.repository.PaymentsRepository,com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.sync.SyncSDKConnector)>
<com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void <init>(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)>
<android.view.ViewConfiguration: int getLongPressTimeout()>
<com.google.android.gms.internal.common.zzo: com.google.android.gms.internal.common.zzo zza(java.lang.Object)>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object getWorkplaceJoinedUpn(kotlin.coroutines.Continuation)>
<com.microsoft.authenticator.notifications.controller.FcmListenerService_MembersInjector: void injectDeferrableWorkerUtils(com.microsoft.authenticator.notifications.controller.FcmListenerService,com.azure.authenticator.jobs.DeferrableWorkerUtils)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.EntropyUseCase: boolean isEntropyNumberValid(java.util.List,java.lang.String)>
<com.google.android.gms.dynamite.zzo: int zzi()>
<java.util.Random: int nextInt(int)>
<com.google.common.io.BaseEncoding: byte[] extract(byte[],int)>
<com.facebook.imagepipeline.decoder.DecodeException: com.facebook.imagepipeline.image.EncodedImage getEncodedImage()>
<com.google.android.gms.common.data.DataBufferObserver: void onDataRangeInserted(int,int)>
<com.google.android.material.bottomappbar.BottomAppBar$5$1: void <init>(com.google.android.material.bottomappbar.BottomAppBar$5)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.drawable.Drawable buildBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>
<android.widget.ImageButton: android.view.ViewTreeObserver getViewTreeObserver()>
<com.google.android.gms.location.SleepSegmentEvent: void <init>(long,long,int,int,int)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender$1: void <init>(ch.qos.logback.core.net.server.AbstractServerSocketAppender,java.io.Serializable)>
<com.google.android.gms.maps.zzag: void <init>(com.google.android.gms.maps.StreetViewPanorama,com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaLongClickListener)>
<com.google.android.gms.internal.measurement.zznb: boolean zzc()>
<com.google.android.material.textfield.TextInputLayout: boolean access$000(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$5: void <init>(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<ch.qos.logback.core.joran.spi.InterpretationContext: void addInPlayListener(ch.qos.logback.core.joran.event.InPlayListener)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void updatePeekHeight(boolean)>
<com.facebook.imagepipeline.memory.BasePool: int getBucketedSizeForValue(java.lang.Object)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setPosition(com.google.android.gms.maps.model.LatLng)>
<android.content.Context: android.content.Context getApplicationContext()>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zab()>
<com.google.android.material.badge.BadgeDrawable: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zzc(java.lang.Iterable)>
<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.common.LocalisedCountryData access$4100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$6: void <init>()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$showWPJSectionWithRegisterMode(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)>
<androidx.appcompat.widget.AppCompatRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$802(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.facebook.react.views.picker.ReactPicker: void setStagedSelection(int)>
<com.google.android.material.timepicker.ClockFaceView: void setValues(java.lang.String[],int)>
<com.google.android.gms.internal.measurement.zzir: void zzg()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showSignInToUpdateBackupDialog$signInToUpdateBackupDialogBuilder$2: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<ch.qos.logback.core.joran.event.StartEvent: void <init>(ch.qos.logback.core.joran.spi.ElementPath,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Locator)>
<com.facebook.imagepipeline.memory.Bucket: void decrementInUseCount()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipString()>
<com.microsoft.brooklyn.module.generatepasswords.viewlogic.ChangePasswordAutofillActivity_MembersInjector: void injectTelemetryManager(com.microsoft.brooklyn.module.generatepasswords.viewlogic.ChangePasswordAutofillActivity,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.facebook.common.logging.FLog: void d(java.lang.Class,java.lang.String,java.lang.Object)>
<com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void <init>(com.facebook.react.bridge.ReactContext)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void snapshot(com.google.android.gms.maps.internal.zzbs,com.google.android.gms.dynamic.IObjectWrapper)>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<com.google.android.material.appbar.AppBarLayout$2: void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable)>
<com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzdq zzn()>
<com.google.android.gms.tasks.zzr: void zzb(com.google.android.gms.tasks.Task)>
<com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: java.lang.String zaa(java.lang.String)>
<com.facebook.react.ReactActivityDelegate: com.facebook.react.modules.core.PermissionListener access$000(com.facebook.react.ReactActivityDelegate)>
<com.google.crypto.tink.KeysetReader: com.google.crypto.tink.proto.EncryptedKeyset readEncrypted()>
<com.google.android.gms.measurement.internal.zzgz: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference)>
<com.adjust.sdk.ActivityHandler$31: void <init>(com.adjust.sdk.ActivityHandler)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker$doWork$2: void <init>(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker,kotlin.coroutines.Continuation)>
<android.view.ViewGroup: void setBackground(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.pattern.ConverterUtil: void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter)>
<android.app.AlertDialog: void hide()>
<android.app.Application: void <init>()>
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>
<com.google.android.gms.common.data.zaa: void <init>()>
<com.facebook.react.modules.toast.ToastModule$3: void <init>(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int,int,int)>
<com.google.android.gms.common.api.internal.UnregisterListenerMethod: void <init>(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)>
<android.graphics.Matrix: void <init>()>
<com.google.android.gms.internal.common.zzl: java.lang.String zzd(int,int,java.lang.String)>
<com.google.android.material.internal.ViewUtils$RelativePadding: void <init>(com.google.android.material.internal.ViewUtils$RelativePadding)>
<com.facebook.react.uimanager.TransformHelper$1: double[] initialValue()>
<com.adjust.sdk.DeviceInfo: java.lang.String getMacShortMd5(java.lang.String)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$FJpj-Wlp2dpx5Zw_GJW5q5SvKqg': void <init>()>
<android.widget.CheckBox: void setBackground(android.graphics.drawable.Drawable)>
<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setValue(android.view.View,boolean)>
<com.facebook.react.views.viewpager.ReactViewPager: com.facebook.react.views.viewpager.ReactViewPager$Adapter getAdapter()>
<com.google.android.gms.measurement.internal.zzfx: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.google.android.material.shape.ShapeAppearancePathProvider: void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int,int)>
<com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>
<com.google.android.gms.common.internal.zzo: void zzb(java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequest: boolean getProgressiveRenderingEnabled()>
<com.facebook.react.views.slider.ReactSlider: void disableStateListAnimatorIfNeeded()>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableIntegerValue parseInteger(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<java.io.File: boolean canRead()>
<com.google.android.gms.measurement.internal.zzir: void <init>(com.google.android.gms.measurement.internal.zzjb,boolean,com.google.android.gms.measurement.internal.zzp,boolean,com.google.android.gms.measurement.internal.zzaa,com.google.android.gms.measurement.internal.zzaa)>
<com.adjust.sdk.ActivityHandler: void updatePackagesI()>
<com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>
<okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)>
<com.facebook.react.viewmanagers.AndroidViewPagerManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)>
<com.android.installreferrer.api.InstallReferrerClient: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCBuilder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCBuilder fragment(androidx.fragment.app.Fragment)>
<java.net.URI: java.lang.String getRawQuery()>
<com.google.android.gms.ads.identifier.zzb: float getFloat(java.lang.String,float)>
<com.facebook.imagepipeline.cache.MemoryCache: com.facebook.common.references.CloseableReference get(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzjm: void <init>(com.google.android.gms.measurement.internal.zzjq)>
<com.fasterxml.jackson.core.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean,int)>
<com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.abstraction.ExperimentationWorker access$600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: boolean canSwipeDismissView(android.view.View)>
<com.google.android.gms.internal.measurement.zzif: com.google.android.gms.internal.measurement.zzgs zzb()>
<android.widget.ImageButton: int getLayerType()>
<com.facebook.drawee.drawable.FadeDrawable: void fadeOutLayer(int)>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: int measureContentWidth()>
<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable$SavedState getSavedState()>
<com.google.android.material.badge.BadgeDrawable: android.widget.FrameLayout getCustomBadgeParent()>
<com.azure.authenticator.databinding.FragmentAutofillControlSettingsBinding: com.azure.authenticator.databinding.FragmentAutofillControlSettingsBinding bind(android.view.View)>
<android.app.Activity: boolean isFinishing()>
<com.google.android.gms.internal.measurement.zzla: long zzo()>
<com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.facebook.yoga.YogaNode: void setBorder(com.facebook.yoga.YogaEdge,float)>
<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: java.lang.String getCid()>
<com.evernote.android.job.v14.PlatformAlarmService: android.os.IBinder onBind(android.content.Intent)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: void access$100(com.evernote.android.job.v14.PlatformAlarmServiceExact,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$showConfirmLeaveWpj$leaveWpjDialogBuilder$2: void <init>()>
<com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder: void <init>()>
<android.widget.TextSwitcher: void setVisibility(int)>
<com.google.android.gms.internal.auth.zzx: void zzb(com.google.android.gms.common.api.Status)>
<com.google.common.collect.MapMaker: void <init>()>
<com.google.android.gms.common.api.internal.zax: void zaz(com.google.android.gms.common.ConnectionResult)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int secondaryCount()>
<com.google.android.gms.internal.measurement.zzhe: com.google.android.gms.internal.measurement.zzhe zza()>
<android.widget.EditText: void removeTextChangedListener(android.text.TextWatcher)>
<com.google.android.gms.internal.location.zzav: android.location.Location zzb()>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment$Companion: void <init>()>
<com.azure.authenticator.accounts.RestoreCapability: com.azure.authenticator.accounts.RestoreCapability copy(int)>
<android.graphics.Bitmap: void eraseColor(int)>
<com.azure.authenticator.accounts.RestoreCapability: boolean isPartiallyRestoredCapabilitySet(com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: boolean skipToEndOfBlockComment()>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: long getUniqueId()>
<com.airbnb.lottie.model.content.ContentModel: com.airbnb.lottie.animation.content.Content toContent(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer)>
<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportInvalidEOF()>
<com.airbnb.lottie.model.layer.TextLayer: void drawGlyph(android.graphics.Path,android.graphics.Paint,android.graphics.Canvas)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectLocationManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.location.LocationManager)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void onFailure(com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable)>
<com.facebook.react.bridge.JSApplicationIllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<ch.qos.logback.core.util.DefaultInvocationGate: void updateLimits(long)>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void injectAccountStorage(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.storage.database.AccountStorage)>
<com.google.android.material.tabs.TabLayout: void setUnboundedRipple(boolean)>
<com.facebook.react.bridge.BaseJavaModule: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.repository.PaymentsRepository access$4000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.measurement.zzjb: com.google.android.gms.internal.measurement.zzjb zzf(com.google.android.gms.internal.measurement.zzjw,com.google.android.gms.internal.measurement.zzhf,com.google.android.gms.internal.measurement.zzix)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void getMapAsync(com.google.android.gms.maps.internal.zzap)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<com.azure.authenticator.notifications.msa.MsaNotification: java.util.Date getMsaSessionLocalReceivedTime()>
<ch.qos.logback.core.subst.Tokenizer: void handleDefaultValueState(char,java.util.List,java.lang.StringBuilder)>
<android.widget.Button: int getMeasuredWidth()>
<com.facebook.soloader.SoLoader: void initSoLoader(com.facebook.soloader.SoFileLoader)>
<com.azure.authenticator.databinding.EnableRemoteNgcUpsellBinding: void <init>(android.widget.ScrollView,android.widget.LinearLayout,android.widget.TextView)>
<com.google.android.material.chip.ChipDrawable: com.google.android.material.resources.TextAppearance getTextAppearance()>
<com.azure.authenticator.storage.database.DbAccount: void setMfaServiceUrl(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjv: void <init>(com.google.android.gms.internal.measurement.zzix)>
<com.google.android.material.navigation.NavigationBarView: android.view.MenuInflater getMenuInflater()>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>
<ch.qos.logback.core.joran.spi.ConsoleTarget: ch.qos.logback.core.joran.spi.ConsoleTarget findByName(java.lang.String)>
<com.facebook.react.uimanager.events.Event: boolean isInitialized()>
<ch.qos.logback.core.Layout: java.lang.String getPresentationHeader()>
<android.widget.RelativeLayout: void dispatchDraw(android.graphics.Canvas)>
<androidx.core.view.ViewCompat: void setAccessibilityHeading(android.view.View,boolean)>
<com.google.android.gms.maps.model.TileOverlayOptions: float getTransparency()>
<java.lang.Class: java.lang.Class[] getInterfaces()>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: void <init>(com.facebook.soloader.ExtractFromZipSoSource,com.facebook.soloader.UnpackingSoSource)>
<com.microsoft.authenticator.msa.entities.MsaAccountManagerError: com.microsoft.authenticator.msa.entities.MsaAccountManagerError$ErrorType getErrorType()>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getParent()>
<com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.model.content.ShapeTrimPath$Type getType()>
<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>
<ch.qos.logback.core.util.StatusListenerConfigHelper: void addOnConsoleListenerInstance(ch.qos.logback.core.Context,ch.qos.logback.core.status.OnConsoleStatusListener)>
<java.util.Stack: java.util.Iterator iterator()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer newEncodedMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer)>
<ch.qos.logback.core.rolling.RollingFileAppender: void rollover()>
<android.util.SparseIntArray: int valueAt(int)>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<com.azure.authenticator.MainNavDirections: androidx.navigation.NavDirections toCardListFragment()>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void access$000(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable)>
<com.azure.authenticator.storage.Storage: void writeDosPreventer(java.lang.String)>
<ch.qos.logback.core.joran.util.PropertySetter: ch.qos.logback.core.util.AggregationType computeAggregationType(java.lang.String)>
<com.facebook.imagepipeline.cache.MemoryCacheTracker: void onCacheMiss()>
<com.airbnb.lottie.model.content.GradientFill: android.graphics.Path$FillType getFillType()>
<com.google.android.gms.measurement.internal.zzkk: java.lang.Object zzE(java.lang.String,java.lang.Object)>
<com.facebook.soloader.DirectorySoSource: void <init>(java.io.File,int)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzec zzn()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int[],int)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)>
<ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: java.lang.String getAlgorithm()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureEnterpriseControls$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,kotlin.coroutines.Continuation)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: void <init>(com.facebook.react.uimanager.ReactShadowNode,int)>
<com.facebook.react.bridge.ModuleHolder: boolean hasInstance()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)>
<com.google.android.gms.common.internal.zac: java.lang.String zah(android.content.Context,java.lang.String,java.lang.String)>
<com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)>
<com.azure.authenticator.accounts.AadAccount: com.azure.authenticator.accounts.AadAccount createBrokerAccountFromAccountInfo(com.microsoft.identity.broker4j.workplacejoin.AccountInfo)>
<com.google.android.gms.location.GeofencingRequest: int getInitialTrigger()>
<javax.net.ssl.SSLSocket: int getPort()>
<com.google.android.material.textfield.NoEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.gms.auth.AccountChangeEventsResponse: java.util.List getEvents()>
<com.google.android.gms.common.internal.zzt: int zzc()>
<com.google.android.gms.internal.measurement.zzgz: void zzn(long)>
<com.google.android.gms.internal.firebase_messaging.zzg: byte[] zzc(java.util.Queue,int)>
<com.google.crypto.tink.KeyTypeManager: com.google.crypto.tink.proto.KeyData$KeyMaterialType keyMaterialType()>
<android.view.View: void setForeground(android.graphics.drawable.Drawable)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void maybeClose(java.util.ArrayList)>
<com.airbnb.lottie.utils.Utils$2: android.graphics.Path initialValue()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions build()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_25_26$cp()>
<com.google.android.gms.measurement.internal.zzex: boolean zzk()>
<com.google.crypto.tink.PrimitiveWrapper: java.lang.Class getPrimitiveClass()>
<com.google.android.gms.internal.measurement.zzdj: void zzax(com.google.android.gms.internal.measurement.zzdj,long)>
<com.adjust.sdk.ActivityHandler$InternalState: boolean hasFirstSdkStartNotOcurred()>
<com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float)>
<com.facebook.react.bridge.CatalystInstanceImpl: void access$1300(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)>
<com.microsoft.did.feature.cardflow.presentationlogic.CardFlowViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener: void onTabSelected(com.google.android.material.tabs.TabLayout$Tab)>
<java.lang.Object: void wait(long)>
<com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshManager)>
<com.facebook.common.internal.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>
<com.google.android.gms.internal.auth.zzw: void <init>()>
<com.google.android.gms.auth.api.signin.internal.Storage: void <init>(android.content.Context)>
<com.facebook.react.uimanager.Spacing: boolean set(int,float)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: void setMainActivityInForeground(boolean)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.util.ArrayList createTypedList(android.os.Parcel,int,android.os.Parcelable$Creator)>
<com.evernote.android.job.JobRequest: boolean isExact()>
<com.google.android.material.internal.ViewUtils: boolean isLayoutRtl(android.view.View)>
<com.azure.authenticator.databinding.ThirdPartyNoticeBinding: com.azure.authenticator.databinding.ThirdPartyNoticeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeHidden()>
<com.google.android.gms.common.zzi: boolean equals(java.lang.Object)>
<com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)>
<android.widget.ProgressBar: void setVisibility(int)>
<com.facebook.react.views.textinput.SelectionWatcher: void onSelectionChanged(int,int)>
<com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig get()>
<com.google.android.gms.measurement.internal.zzdz: void zzh(com.google.android.gms.measurement.internal.zzp)>
<android.webkit.CookieManager: void removeAllCookie()>
<com.google.android.gms.common.internal.zzo: void zza(java.lang.String)>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>
<com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidValueError(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List lambda$loadBatch$7(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext,android.database.sqlite.SQLiteDatabase)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _handleOddName2(int,int,int[])>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.storage.Storage getStorage$app_productionRelease()>
<com.google.android.material.shape.MaterialShapeDrawable: void calculateStrokePath()>
<com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(double)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$leaveWorkplaceJoin$1: java.lang.Object invokeSuspend(java.lang.Object)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>
<androidx.viewpager.widget.PagerAdapter: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeController: void submitRequest()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: float getYVelocity()>
<com.google.android.gms.tasks.DuplicateTaskCompletionException: void <init>(java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.animation.content.Content: void setContents(java.util.List,java.util.List)>
<ch.qos.logback.classic.LoggerContext: void resetStatusListeners()>
<com.microsoft.brooklyn.module.generatepasswords.presentationlogic.ChangePasswordAutofillViewModel: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.repository.UtilitySDKRepository,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations,com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository,com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper)>
<com.facebook.react.uimanager.JSTouchDispatcher: void onChildStartedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)>
<ch.qos.logback.core.spi.AbstractComponentTracker: int getComponentCount()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMyLocationChangeListener(com.google.android.gms.maps.internal.zzax)>
<ch.qos.logback.classic.pattern.NamedConverter: java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.internal.safetynet.zzk$zzf: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<android.view.ViewGroup: void setNextFocusRightId(int)>
<com.google.android.material.button.MaterialButton: int getStrokeWidth()>
<com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectAuthenticatorState(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<com.google.android.gms.auth.AccountChangeEventsResponse: void <init>(int,java.util.List)>
<com.adjust.sdk.ActivityPackage: java.lang.String getSuffix()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void <init>(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)>
<com.google.android.material.bottomsheet.BottomSheetDialog: void removeDefaultCallback()>
<com.google.common.collect.Lists: int indexOfRandomAccess(java.util.List,java.lang.Object)>
<com.facebook.react.fabric.mounting.MountingManager: void deleteView(int)>
<com.facebook.imagepipeline.request.Postprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()>
<com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>
<com.azure.authenticator.ui.MainActivity: void onActivityResult(int,int,android.content.Intent)>
<com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.fasterxml.jackson.core.PrettyPrinter: void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)>
<com.google.android.gms.common.api.GoogleApi: void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
<com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: java.lang.String getUriString()>
<com.facebook.drawee.generic.RootDrawable: void <init>(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: boolean equals(java.lang.Object)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtualAnchor()>
<com.adjust.sdk.DeviceInfo: java.lang.String getMacSha1(java.lang.String)>
<com.google.android.gms.auth.api.signin.internal.zzt: void zzc(com.google.android.gms.auth.api.signin.internal.zzr,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.adjust.sdk.ActivityHandler$15: void <init>(com.adjust.sdk.ActivityHandler)>
<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>
<com.google.android.gms.measurement.internal.zzkd: void zzC(com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOf(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzfk: void <init>(com.google.android.gms.measurement.internal.zzfl,com.google.android.gms.measurement.internal.zzgn)>
<com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getWidth()>
<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.crypto.tink.KeyTypeManager$PrimitiveFactory: java.lang.Class getPrimitiveClass()>
<com.azure.authenticator.ui.action.ActionStateManager: com.microsoft.authenticator.common.businessLogic.AuthenticatorState access$getAuthenticatorState$p(com.azure.authenticator.ui.action.ActionStateManager)>
<com.google.android.gms.internal.measurement.zzcc: com.google.android.gms.internal.measurement.zzcc zza(int)>
<com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue getEnd()>
<com.google.android.gms.internal.measurement.zzjp: void <init>(com.google.android.gms.internal.measurement.zzjs,java.lang.Comparable,java.lang.Object)>
<com.evernote.android.job.util.support.PersistableBundleCompat: java.lang.String saveToXml()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer newLocalContentUriThumbnailFetchProducer()>
<com.google.android.gms.internal.auth-api.zzk: void <init>(com.google.android.gms.internal.auth-api.zzj,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.Credential)>
<com.azure.authenticator.databinding.AddNewMfaAccountBinding: com.azure.authenticator.databinding.AddNewMfaAccountBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.uimanager.events.Event: java.lang.String getEventName()>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<androidx.viewpager.widget.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
<bolts.Task: void <init>(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzlx: boolean zzc()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)>
<java.util.ListIterator: boolean hasNext()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer newEncodedCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer)>
<com.airbnb.lottie.model.content.ShapeData: void setInitialPoint(float,float)>
<android.text.Layout: int getLineForVertical(int)>
<com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)>
<com.facebook.react.views.text.TextAttributes: void setMaxFontSizeMultiplier(float)>
<com.google.android.gms.measurement.internal.zzkf: boolean zzl(java.lang.String)>
<com.facebook.react.uimanager.annotations.ReactPropGroup: double defaultDouble()>
<javax.net.ssl.SSLSocket: int getTrafficClass()>
<com.google.crypto.tink.KeysetManager: boolean keyIdExists(int)>
<com.facebook.drawee.drawable.RoundedColorDrawable: void setColor(int)>
<com.facebook.imagepipeline.memory.DefaultBitmapPoolParams: com.facebook.imagepipeline.memory.PoolParams get()>
<com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)>
<java.util.concurrent.ExecutorService: void shutdown()>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllAadNgcAccounts()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.app.Fragment: android.view.View getView()>
<ch.qos.logback.classic.util.ContextInitializer: java.net.URL findConfigFileURLFromAssets(boolean)>
<com.google.android.gms.auth.zzd: java.lang.Boolean requestGoogleAccountsAccess(android.content.Context)>
<com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpSupported()>
<com.google.android.gms.internal.measurement.zzev: void <init>(java.util.Map)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<com.facebook.react.uimanager.UIImplementation: void dismissPopupMenu()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: androidx.fragment.app.FragmentActivity fragmentActivity()>
<okio.ForwardingSource: void <init>(okio.Source)>
<com.microsoft.onlineid.sdk.extension.Session: java.util.Date getGcmMessageReceivedTime()>
<com.azure.authenticator.databinding.FragmentPaymentListBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
<com.google.android.gms.internal.measurement.zzhz: boolean zza()>
<com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable getText()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void maybeSetDataSourceWithResult(com.facebook.datasource.DataSource,boolean)>
<com.facebook.drawee.drawable.FadeDrawable: boolean updateAlphas(float)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List join(java.util.List,java.util.Map)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
<com.google.android.material.appbar.AppBarLayout: android.view.View findLiftOnScrollTargetView(android.view.View)>
<com.google.android.gms.maps.zze: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnInfoWindowLongClickListener)>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<com.google.android.gms.dynamic.zae: void <init>(android.content.Context,android.content.Intent)>
<com.google.android.datatransport.runtime.EventInternal: java.lang.String get(java.lang.String)>
<com.google.android.gms.internal.auth-api.zzs: void <init>()>
<com.facebook.react.util.JSStackTrace: java.lang.String parseFileId(com.facebook.react.bridge.ReadableMap)>
<com.evernote.android.job.JobRequest: long getMinInterval()>
<com.facebook.imagepipeline.image.EncodedImage: boolean isValid(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzd(long)>
<ch.qos.logback.core.pattern.CompositeConverter: void <init>()>
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>
<com.google.android.material.shape.ShapePath: void reset(float,float)>
<com.google.android.gms.common.api.internal.zacv: com.google.android.gms.common.api.TransformedResult then(com.google.android.gms.common.api.ResultTransform)>
<com.google.android.gms.internal.measurement.zzli: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$processFREArguments$$inlined$navArgs$1: void <init>(androidx.fragment.app.Fragment)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.signin.SignInViewModel access$14100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$startAddAccountFlow(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,boolean)>
<com.google.android.material.bottomappbar.BottomAppBar$5: void <init>(com.google.android.material.bottomappbar.BottomAppBar,int)>
<com.airbnb.lottie.parser.moshi.JsonReader: void skipName()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext)>
<ch.qos.logback.classic.spi.TurboFilterList: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab)>
<com.facebook.drawee.drawable.DrawableUtils: void setCallbacks(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable$Callback,com.facebook.drawee.drawable.TransformCallback)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: boolean evaluateShowLocation(com.microsoft.authenticator.graphclient.entities.EnabledState,java.lang.String)>
<ch.qos.logback.core.net.SyslogOutputStream: void <init>(java.lang.String,int)>
<com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)>
<com.facebook.react.uimanager.UIImplementation: void updateViewHierarchy()>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void setIsDeviceLocked(boolean)>
<com.evernote.android.job.util.JobUtil: boolean hasPermission(android.content.Context,java.lang.String,int)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder: void <init>()>
<com.microsoft.brooklyn.module.utilitysdk.UtilitySDKConnector: void <init>(com.microsoft.utilitysdk.CommonLibraryController)>
<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>
<com.microsoft.authenticator.reactnative.ReactNativeFragmentManager: boolean isReactFragment(androidx.fragment.app.FragmentActivity,int)>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: void inject()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIBinder(android.os.Parcel,int,android.os.IBinder,boolean)>
<com.facebook.drawee.controller.AbstractDraweeController: java.lang.String toString()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$6: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int)>
<com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()>
<com.google.android.gms.internal.measurement.zzlv: boolean zza()>
<com.microsoft.brooklyn.module.enterpriseDenyList.persistence.EnterpriseDenyListStorage: void <init>(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.navigation.InterModuleActivityLauncher interModuleActivityLauncher()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean getEnsureMinTouchTargetSize()>
<com.google.android.material.behavior.SwipeDismissBehavior$2: void <init>(com.google.android.material.behavior.SwipeDismissBehavior)>
<com.azure.authenticator.storage.Storage: boolean readIsMfaBiometricPreferenceOptIn(android.content.Context)>
<com.facebook.react.views.art.ARTSurfaceViewShadowNode: void <init>()>
<ch.qos.logback.core.OutputStreamAppender: void stop()>
<com.facebook.soloader.SoLoader: boolean loadLibrary(java.lang.String,int)>
<com.microsoft.authenticator.mfasdk.account.entities.AccountCapability: int getValue()>
<com.google.android.gms.common.internal.zzw: void <init>(android.os.IBinder)>
<com.google.android.datatransport.runtime.EventInternal: java.lang.String getTransportName()>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _thresholdSize(int)>
<com.google.android.gms.internal.measurement.zzku: boolean zza()>
<com.google.android.gms.internal.measurement.zzcc: com.google.android.gms.internal.measurement.zzcc[] values()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenY()>
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>
<com.facebook.soloader.UnpackingSoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<com.airbnb.lottie.utils.GammaEvaluator: float EOCF_sRGB(float)>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: void <init>()>
<com.google.android.gms.maps.GoogleMap$OnMarkerDragListener: void onMarkerDragStart(com.google.android.gms.maps.model.Marker)>
<ch.qos.logback.core.spi.LifeCycle: void start()>
<android.animation.ValueAnimator: int getRepeatCount()>
<com.facebook.yoga.YogaNode: void setJustifyContent(com.facebook.yoga.YogaJustify)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.facebook.drawee.drawable.RoundedDrawable: void <init>(android.graphics.drawable.Drawable)>
<com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)>
<android.content.ContentValues: void put(java.lang.String,byte[])>
<com.google.android.gms.measurement.internal.zzeo: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setMapType(int)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int)>
<com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)>
<com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()>
<com.google.android.material.textfield.ClearTextEndIconDelegate$2: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>
<com.google.android.gms.common.api.BatchResult: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.common.api.PendingResult[])>
<com.google.android.material.internal.CollapsingTextHelper: void getTextPaintExpanded(android.text.TextPaint)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity$onCreate$3: void onChanged(java.lang.Boolean)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean setRunningIfDirtyAndNotRunning()>
<com.google.android.gms.measurement.internal.zzkf: void zzF(java.lang.StringBuilder,int,java.lang.String,com.google.android.gms.internal.measurement.zzdq,java.lang.String)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.RestoreUseCase access$10300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzt(long)>
<com.google.android.gms.internal.measurement.zzkh: void zze(java.lang.Object,long,int)>
<com.adjust.sdk.IActivityHandler: com.adjust.sdk.ActivityState getActivityState()>
<com.facebook.react.bridge.ModuleHolder: java.lang.String getName()>
<dummyMainClass: com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity dummyMainMethod_com_azure_authenticator_authentication_msa_ui_AddMsaAccountActivity(android.content.Intent)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>
<androidx.appcompat.widget.LinearLayoutCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment injectFirstRunSignInFragment2(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment)>
<com.google.android.material.shape.MaterialShapeDrawable: boolean hasStroke()>
<com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)>
<com.google.android.gms.auth.api.signin.internal.SignInConfiguration: com.google.android.gms.auth.api.signin.GoogleSignInOptions zzu()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.google.android.gms.internal.location.zzbj: android.os.Looper zza(android.os.Looper)>
<com.facebook.react.views.text.ReactTextShadowNode: android.text.Layout measureSpannedText(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: int getCount()>
<com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzai zzi()>
<android.widget.TextView: void setScaleY(float)>
<com.google.android.gms.measurement.internal.zzex: void zzj(boolean)>
<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.TransportRuntime getInstance()>
<com.google.android.material.resources.TextAppearanceFontCallback: void onFontRetrievalFailed(int)>
<com.google.android.gms.location.zza: void <init>()>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzl(java.lang.String)>
<com.google.android.datatransport.cct.internal.LogResponse: com.google.android.datatransport.cct.internal.LogResponse create(long)>
<com.google.android.gms.internal.measurement.zzdm: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase access$getWorkplaceJoinUseCase$p(com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel)>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void access$1300(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,android.view.View,android.view.View,float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$evaluateNgcFeasibilityAndContinueAsync$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<com.facebook.yoga.YogaNode: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)>
<com.google.android.gms.common.api.internal.zabd: void zao()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketCancel$1$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.auth.api.accounttransfer.DeviceMetaData: void <init>(int,boolean,long,boolean)>
<com.facebook.react.modules.blob.BlobModule$4: void <init>(com.facebook.react.modules.blob.BlobModule)>
<com.adjust.sdk.AdjustInstance: void setOfflineMode(boolean)>
<com.airbnb.lottie.model.layer.BaseLayer: boolean areAllMasksNone()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String getGivenName()>
<com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderWidth(int,float)>
<com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode valueOf(java.lang.String)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: android.os.Bundle zad(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.os.Bundle)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setAllGesturesEnabled(boolean)>
<android.app.Activity: android.os.Looper getMainLooper()>
<com.google.android.material.navigation.NavigationBarItemView: void setChecked(boolean)>
<android.content.pm.Signature: byte[] toByteArray()>
<com.azure.authenticator.databinding.AddressDataPlaceholderLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.google.android.gms.common.api.internal.zaah: void <init>(com.google.android.gms.common.api.internal.zaar)>
<com.google.android.gms.measurement.internal.zzfb: boolean zza(android.content.Context)>
<java.security.SecureRandom: java.lang.String getAlgorithm()>
<com.adjust.sdk.ActivityHandler: void initI()>
<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.location.zzk: void <init>()>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zaa(java.lang.String)>
<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionManager: boolean scheduleActionHandler(android.content.Intent)>
<ch.qos.logback.core.joran.spi.EventPlayer: void addEventsDynamically(java.util.List,int)>
<android.widget.TextView: android.text.Layout getLayout()>
<com.facebook.imagepipeline.image.EncodedImage: boolean isCompleteAt(int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: void <init>()>
<android.view.View: android.view.animation.Animation getAnimation()>
<com.google.android.gms.measurement.internal.zzgl: void interceptEvent(java.lang.String,java.lang.String,android.os.Bundle,long)>
<com.google.android.material.navigation.NavigationBarMenuView: androidx.appcompat.view.menu.MenuBuilder getMenu()>
<com.google.android.material.snackbar.BaseTransientBottomBar$17: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.facebook.react.views.text.ReactTextUpdate: void <init>(android.text.Spannable,int,boolean,int,int,int)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeOrphan(int)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void toggleBatteryOptimization()>
<com.google.android.gms.internal.measurement.zzha: void zze(int,float)>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$$special$$inlined$viewModels$1: androidx.lifecycle.ViewModelProvider$Factory invoke()>
<com.google.android.gms.location.LocationSettingsResponse: void <init>(com.google.android.gms.location.LocationSettingsResult)>
<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void setOptions(java.util.List)>
<com.azure.authenticator.ui.msa.'-$$Lambda$MsaProtectionActivity$Au-AP3nT1v8MUyxBdU-Fk9whfSc': void onClick(android.content.DialogInterface,int)>
<ch.qos.logback.core.Layout: java.lang.String doLayout(java.lang.Object)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateState(com.facebook.react.uimanager.StateWrapper)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onTranslationChanged()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalAssetFetchSequence()>
<com.google.android.material.floatingactionbutton.MotionStrategy: void performNow()>
<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object)>
<com.facebook.react.uimanager.layoutanimation.InterpolatorType: void <init>(java.lang.String,int)>
<com.google.android.gms.internal.location.zzax: void zze(int)>
<com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setFitToContents(boolean)>
<com.google.android.gms.auth.zzd: void clearToken(android.content.Context,java.lang.String)>
<com.facebook.soloader.ApkSoSource: int access$000(com.facebook.soloader.ApkSoSource)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.view.VelocityTracker: float getXVelocity()>
<java.io.RandomAccessFile: void setLength(long)>
<com.azure.authenticator.PhoneFactorApplication: void onCreate()>
<com.facebook.react.uimanager.ReactAccessibilityDelegate: void <init>()>
<com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token[] values()>
<com.google.android.gms.measurement.internal.zzge: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<java.lang.Package: java.lang.String getName()>
<com.google.android.gms.internal.measurement.zzgf: int zzf(byte[],int,com.google.android.gms.internal.measurement.zzge)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: com.azure.authenticator.storage.Storage access$getStorage$p(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker)>
<androidx.collection.LongSparseArray: void <init>()>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckUseCase mfaAuthCheckUseCase()>
<java.util.HashMap: void <init>(int,float)>
<com.google.crypto.tink.KeyTypeManager: void validateKey(com.google.crypto.tink.shaded.protobuf.MessageLite)>
<com.facebook.imagepipeline.transcoder.ImageTranscoder: boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions)>
<android.widget.Button: int getPaddingTop()>
<com.microsoft.brooklyn.ui.address.AddEditAddressFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.address.AddEditAddressFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.gms.common.api.internal.zax: com.google.android.gms.common.api.internal.zabd zay(com.google.android.gms.common.api.internal.zax)>
<com.fasterxml.jackson.core.io.IOContext: void releaseTokenBuffer(char[])>
<com.google.android.gms.internal.measurement.zzim: int indexOf(java.lang.Object)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void <init>()>
<com.google.android.gms.internal.measurement.zznr: boolean zza()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.google.android.gms.common.zzw: java.lang.String zza()>
<com.fasterxml.jackson.core.base.GeneratorBase: void <init>(int,com.fasterxml.jackson.core.ObjectCodec)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)>
<com.google.android.material.navigation.NavigationBarItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)>
<com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)>
<androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$new$1$AbstractAuthRequestActivity(android.view.View)>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String getPassword()>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setEventCode(java.lang.Integer)>
<androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover$1: void <init>(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover,java.util.Date)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)>
<com.adjust.sdk.PackageBuilder: java.util.Map getAdRevenueParameters(java.lang.String,org.json.JSONObject)>
<com.facebook.imagepipeline.producers.JobScheduler: void access$100(com.facebook.imagepipeline.producers.JobScheduler)>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>
<java.util.concurrent.FutureTask: void setException(java.lang.Throwable)>
<com.google.android.material.button.MaterialButton: boolean isLayoutRTL()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.CameraPosition zzb(android.content.Context,android.util.AttributeSet)>
<com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.ByteString getValue()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<com.facebook.react.views.textinput.ReactEditText: void applyTextAttributes()>
<android.net.Uri: int getPort()>
<com.google.android.datatransport.Encoding: boolean equals(java.lang.Object)>
<androidx.room.RoomDatabase$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)>
<com.azure.authenticator.databinding.FragmentEnableAppLockBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.Button)>
<com.google.android.gms.measurement.internal.zzjt: void zzd()>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ThreadHandoffProducer newBackgroundThreadHandoffProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue)>
<java.util.AbstractList: void clear()>
<com.google.crypto.tink.KeysetHandle: com.google.crypto.tink.KeysetHandle fromKeyset(com.google.crypto.tink.proto.Keyset)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zap(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setAccessibilityLabel(android.view.View,java.lang.String)>
<com.google.android.gms.common.api.internal.zzd: android.os.Bundle zzc(com.google.android.gms.common.api.internal.zzd)>
<com.google.android.gms.internal.measurement.zzbr: void zzI(boolean)>
<android.widget.LinearLayout: void removeView(android.view.View)>
<com.evernote.android.job.JobStorage$JobOpenHelper: void upgradeFrom4To5(android.database.sqlite.SQLiteDatabase)>
<androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()>
<com.google.android.gms.maps.internal.zzbs: void zzb(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.material.circularreveal.CircularRevealHelper: void buildCircularRevealCache()>
<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getUseLastFrameForPreview()>
<com.airbnb.lottie.parser.IntegerParser: java.lang.Integer parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.google.android.gms.auth.api.signin.internal.zzi: com.google.android.gms.common.api.PendingResult zzc(com.google.android.gms.common.api.GoogleApiClient,android.content.Context,boolean)>
<com.google.android.gms.measurement.internal.zzaf: boolean equals(java.lang.Object)>
<com.google.android.datatransport.runtime.backends.BackendRequest: com.google.android.datatransport.runtime.backends.BackendRequest$Builder builder()>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer: void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<com.evernote.android.job.v24.JobProxy24: void <init>(android.content.Context,java.lang.String)>
<com.facebook.react.modules.core.JavaTimerManager: java.util.PriorityQueue access$300(com.facebook.react.modules.core.JavaTimerManager)>
<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>
<java.io.File: boolean isFile()>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportError(java.lang.String)>
<com.adjust.sdk.DeviceInfo: java.lang.String getOsName()>
<com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: void executeWithExceptions()>
<com.facebook.drawee.interfaces.SettableDraweeHierarchy: void setControllerOverlay(android.graphics.drawable.Drawable)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)>
<com.azure.authenticator.databinding.ViewLogBinding: void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.ProgressBar,android.webkit.WebView)>
<com.azure.authenticator.storage.Storage: boolean readIsNotificationVibrationEnabled(android.content.Context)>
<com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder: com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder setTypeUrl(java.lang.String)>
<com.google.android.material.datepicker.CalendarConstraints$1: com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel)>
<com.facebook.react.modules.storage.AsyncLocalStorageUtil: boolean setItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
<com.microsoft.authenticator.notifications.controller.FirebaseNotificationsWrapper: void <init>(android.content.Context)>
<com.google.android.material.textfield.TextInputLayout$3: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.google.common.collect.MapMaker: java.util.concurrent.ConcurrentMap makeMap()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationUseCase aadNgcPnRegistrationUseCase()>
<com.facebook.imageutils.WebpUtil: short getShort(java.io.InputStream)>
<com.google.android.gms.common.server.response.FastParser$ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.adjust.sdk.SharedPreferencesManager: boolean getGdprForgetMe()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray access$000(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController)>
<com.google.android.gms.internal.measurement.zznh: com.google.android.gms.internal.measurement.zzni zzc()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getServerAuthCode()>
<com.azure.authenticator.accounts.AadAccount: void setMfaServiceUrl(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void applyBoxUnderlineAttributes()>
<com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: void <init>(java.lang.String,int)>
<com.azure.authenticator.logging.ExternalLogger: void i(java.lang.String)>
<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.adjust.sdk.UtilNetworking: java.lang.String extractAppSecret(java.util.Map)>
<com.azure.authenticator.ui.MainActivity: void onBackPressed()>
<com.google.android.datatransport.runtime.backends.CreationContextFactory: void <init>(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)>
<com.google.android.gms.internal.measurement.zzki: boolean zzd(byte)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzk addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions)>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: java.net.URL getMainWatchURL(ch.qos.logback.core.Context)>
<com.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: void <init>()>
<com.adjust.sdk.PackageBuilder: void addJsonObject(java.util.Map,java.lang.String,org.json.JSONObject)>
<com.microsoft.authenticator.workaccount.entities.CheckWpjStatus$WpjRetrievalComplete: java.lang.String getUpn()>
<com.google.android.gms.tasks.zzv: com.google.android.gms.tasks.zzv zza(android.app.Activity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaValidateDeviceNotification mfaValidateDeviceNotification()>
<com.google.common.collect.MapMakerInternalMap$WeakValueReference: com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.jobs.DeferrableWorkerUtils access$2400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$402(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.facebook.yoga.YogaNode: com.facebook.yoga.YogaDirection getLayoutDirection()>
<com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder: void onViewAttachedToWindow()>
<com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getServiceDescriptor()>
<com.google.android.gms.measurement.internal.zzae: android.os.Bundle zzo()>
<com.airbnb.lottie.LottieCompositionFactory$10: void <init>(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_Factory: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel get()>
<com.adjust.sdk.ActivityHandler$13: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.SessionResponseData)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void handleGetEncryptionKeyResult(com.microsoft.authenticator.msa.entities.GetMsaEncryptionKeyResult,java.lang.String,com.microsoft.onlineid.Ticket,com.microsoft.authenticator.backup.entities.CloudBackup)>
<com.google.android.gms.internal.firebase_messaging.zzl: void <init>()>
<com.google.android.material.expandable.ExpandableWidgetHelper: void <init>(com.google.android.material.expandable.ExpandableWidget)>
<com.google.android.gms.measurement.internal.zzgd: void zzv(java.lang.String,android.os.Bundle)>
<com.airbnb.lottie.network.DefaultLottieNetworkFetcher: void <init>()>
<com.facebook.imagepipeline.producers.FetchState: void setResponseBytesRange(com.facebook.imagepipeline.common.BytesRange)>
<com.azure.authenticator.ui.action.ActionStateManager: android.content.Context getContext()>
<java.lang.String: void <init>(char[],int,int)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: int getBitmapWidth(android.graphics.Bitmap)>
<com.google.android.material.tabs.TabLayout: void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams)>
<com.google.android.gms.dynamic.FragmentWrapper: void <init>(android.app.Fragment)>
<com.google.android.gms.common.api.internal.zabs: void <init>(android.os.IBinder)>
<com.google.android.gms.internal.location.zzo: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,boolean)>
<com.google.android.gms.maps.zzv: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveListener)>
<android.os.Messenger: void send(android.os.Message)>
<com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: javax.inject.Provider provider(javax.inject.Provider)>
<com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.ViewLogTask: java.lang.String doInBackground(java.lang.Void[])>
<com.google.android.gms.location.LocationSettingsStates: boolean isBleUsable()>
<com.google.android.gms.internal.measurement.zzgc: boolean addAll(java.util.Collection)>
<com.google.android.gms.common.api.internal.zak: void zab(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.react.views.view.ReactViewBackgroundManager: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()>
<android.widget.ImageView: void setVisibility(int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$1200()>
<com.airbnb.lottie.utils.LottieValueAnimator: boolean isReversed()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover$ArchiveRemoverRunnable: void <init>(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover,java.util.Date)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void access$600(com.facebook.react.views.scroll.ReactHorizontalScrollView)>
<com.google.android.gms.maps.internal.zzam: void <init>()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder zaa(java.lang.Object,android.os.Looper,java.lang.String)>
<com.facebook.common.logging.LoggingDelegate: void v(java.lang.String,java.lang.String)>
<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>
<com.facebook.imagepipeline.memory.PoolBackend: void put(java.lang.Object)>
<com.facebook.react.views.slider.ReactSliderManager: void <init>()>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment: boolean showNoNetworkIfNecessary()>
<com.facebook.drawee.drawable.Rounded: void setCircle(boolean)>
<com.google.android.gms.measurement.internal.zzep: void <init>(com.google.android.gms.measurement.internal.zzeq,boolean)>
<com.google.android.gms.auth.zzj: java.lang.Object zzb(android.os.IBinder)>
<com.google.android.gms.internal.measurement.zzmc: void <init>()>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: void <init>(boolean)>
<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.google.android.gms.maps.StreetViewPanoramaOptions: com.google.android.gms.maps.model.StreetViewPanoramaCamera getStreetViewPanoramaCamera()>
<com.facebook.react.views.viewpager.PageScrollStateChangedEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.airbnb.lottie.LottieComposition: java.util.Map getImages()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutX()>
<com.facebook.react.animated.PropsAnimatedNode: void updateView()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager_Factory: com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager newInstance(com.azure.authenticator.jobs.DeferrableWorkerUtils,com.azure.authenticator.storage.database.AccountStorage)>
<com.google.android.gms.internal.measurement.zzlo: void <init>()>
<com.google.android.material.transformation.FabTransformationBehavior: void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)>
<com.google.crypto.tink.proto.KeysetInfo$Builder: com.google.crypto.tink.proto.KeysetInfo$Builder setPrimaryKeyId(int)>
<com.airbnb.lottie.model.layer.ImageLayer: android.graphics.Bitmap getBitmap()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
<com.google.android.gms.internal.measurement.zzdi: long zzu()>
<com.google.android.material.textfield.TextInputLayout: boolean cutoutEnabled()>
<com.facebook.react.animated.NativeAnimatedModule$6: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.animated.AnimatedNodeValueListener)>
<com.google.android.material.shape.ShapePath: void setEndShadowAngle(float)>
<ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: void <init>()>
<com.google.android.gms.measurement.internal.zzhn: java.lang.String zzD()>
<com.google.android.gms.measurement.internal.zzke: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdu: void zzs(com.google.android.gms.internal.measurement.zzdu,double)>
<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>
<com.facebook.drawee.drawable.RoundedColorDrawable: com.facebook.drawee.drawable.RoundedColorDrawable fromColorDrawable(android.graphics.drawable.ColorDrawable)>
<com.facebook.react.uimanager.Spacing: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.accounts.AccountListFragment injectAccountListFragment2(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<android.os.Parcel: void setDataPosition(int)>
<com.azure.authenticator.databinding.AccountListRowEditModeBinding: com.azure.authenticator.databinding.AccountListRowEditModeBinding bind(android.view.View)>
<com.adjust.sdk.SharedPreferencesManager: void removePushToken()>
<com.evernote.android.job.JobRescheduleService: void startService(android.content.Context)>
<com.facebook.react.views.text.ReactTextView$1: void <init>(com.facebook.react.views.text.ReactTextView)>
<android.database.Cursor: int getColumnIndex(java.lang.String)>
<com.google.android.material.datepicker.DateSelector: java.util.Collection getSelectedRanges()>
<com.google.android.gms.internal.location.zzam: void zzl(android.app.PendingIntent,com.google.android.gms.common.api.internal.IStatusCallback)>
<com.google.android.datatransport.runtime.AutoValue_SendRequest$Builder: void <init>()>
<ch.qos.logback.core.OutputStreamAppender: void writeOut(java.lang.Object)>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<ch.qos.logback.core.subst.NodeToStringTransformer: boolean equalNodes(ch.qos.logback.core.subst.Node,ch.qos.logback.core.subst.Node)>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node makeNewLiteralNode(java.lang.String)>
<dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideContextFactory: android.content.Context provideContext(dagger.hilt.android.internal.modules.ApplicationContextModule)>
<com.azure.authenticator.databinding.FragmentMainBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.FrameLayout,com.azure.authenticator.databinding.ToolbarLayoutBinding,android.widget.FrameLayout,com.azure.authenticator.databinding.BottomNavigationLayoutBinding,androidx.constraintlayout.widget.ConstraintLayout)>
<com.google.android.material.appbar.MaterialToolbar: android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView)>
<com.microsoft.brooklyn.ui.address.ViewAddressFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.address.ViewAddressFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarStyle getCalendarStyle()>
<java.lang.Math: int min(int,int)>
<com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()>
<com.google.android.material.textfield.TextInputLayout: void dispatchOnEndIconChanged(int)>
<com.facebook.react.views.picker.ReactDialogPickerManager: void <init>()>
<com.google.android.gms.measurement.internal.zzeg: void zza(java.lang.String)>
<com.adjust.sdk.Util$1: void <init>()>
<com.azure.authenticator.storage.MfaSdkAccountTranslator: com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount aadAccountToMfaSdkAccount$app_productionRelease(com.azure.authenticator.accounts.AadAccount)>
<com.facebook.cache.disk.DefaultDiskStorage: com.facebook.common.time.Clock access$400(com.facebook.cache.disk.DefaultDiskStorage)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setModel(java.lang.String)>
<com.google.android.gms.internal.measurement.zzcz: void zzg(com.google.android.gms.internal.measurement.zzcz,int)>
<com.google.android.gms.common.server.response.zan: void zaa()>
<com.google.android.material.datepicker.DateValidatorPointForward: void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1)>
<com.google.android.gms.measurement.internal.zzeh: java.lang.String zza(com.google.android.gms.measurement.internal.zzeh)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean isConnecting()>
<com.google.android.gms.measurement.internal.zzea: java.lang.String zzi()>
<com.google.android.gms.auth.zzd: void <init>()>
<com.google.android.gms.measurement.internal.zzkg: void <init>(java.lang.String,long,java.lang.Object,java.lang.String)>
<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()>
<com.adjust.sdk.AdjustFactory: void useTestConnectionOptions()>
<android.widget.EditText: void setMaxWidth(int)>
<java.lang.Object: void wait()>
<com.facebook.react.ReactActivityDelegate: void loadApp(java.lang.String)>
<com.google.android.gms.maps.model.ButtCap: void <init>()>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>
<com.facebook.imagepipeline.common.ResizeOptions: void <init>(int,int,float,float)>
<com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.abstraction.FillRequestFormHandlerFactory fillRequestFormHandlerFactory()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void <init>()>
<com.google.android.gms.internal.measurement.zzfp: void <init>(com.google.android.gms.internal.measurement.zzfo)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.common.api.internal.zacv: void zan(com.google.android.gms.common.api.Result)>
<android.content.res.TypedArray: void recycle()>
<android.view.View: int[] getDrawableState()>
<com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale)>
<java.util.LinkedList: void addLast(java.lang.Object)>
<ch.qos.logback.classic.pattern.CallerDataConverter: java.lang.String getCallerLinePrefix()>
<com.google.android.gms.measurement.internal.zzeq: void zzb()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setImageRequest(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdq: void zzq(com.google.android.gms.internal.measurement.zzdq,java.lang.Iterable)>
<java.util.List: void clear()>
<com.google.android.material.animation.AnimatorSetCompat: void playTogether(android.animation.AnimatorSet,java.util.List)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void connectAnimatedNodeToView(int,int)>
<com.google.android.finsky.externalreferrer.IGetInstallReferrerService: android.os.Bundle c(android.os.Bundle)>
<com.google.android.gms.internal.maps.zzh: void setFillColor(int)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_9_10()>
<com.facebook.drawee.drawable.AutoRotateDrawable: void <init>(android.graphics.drawable.Drawable,int,boolean)>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastP()>
<com.google.android.gms.measurement.internal.zzab: void <init>()>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: java.util.Map zag()>
<com.google.android.gms.common.internal.zaaa: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.cloudmessaging.zzf: void zza(int)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzl(java.lang.Iterable)>
<com.facebook.react.modules.camera.ImageEditingManager$CleanTask: void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.camera.ImageEditingManager$1)>
<com.airbnb.lottie.utils.LottieValueAnimator: void playAnimation()>
<com.google.android.gms.internal.common.zzc: void zzb(android.os.Parcel,boolean)>
<com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: int getIntValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.gms.measurement.internal.zzjd: void <init>(com.google.android.gms.measurement.internal.zzjh,int,com.google.android.gms.measurement.internal.zzei,android.content.Intent)>
<com.azure.authenticator.ui.Hilt_MainActivity: java.lang.Object generatedComponent()>
<com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.zzw zza(com.google.android.gms.tasks.TaskCompletionSource)>
<ch.qos.logback.core.net.server.RemoteReceiverServerRunner: boolean configureClient(ch.qos.logback.core.net.server.RemoteReceiverClient)>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>
<com.google.android.gms.location.zzs: int hashCode()>
<ch.qos.logback.core.rolling.helper.FileProvider: java.lang.String[] list(java.io.File,java.io.FilenameFilter)>
<ch.qos.logback.core.status.StatusUtil: boolean hasXMLParsingErrors(long)>
<com.google.android.gms.measurement.internal.zzg: void zzy(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: com.azure.authenticator.ui.action.UserInteractionRequiredActionManager access$getInteractionRequiredActionManager$p(com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager)>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setEventTimeMs(long)>
<com.airbnb.lottie.utils.LottieValueAnimator: void setSpeed(float)>
<ch.qos.logback.core.pattern.Converter: java.lang.String convert(java.lang.Object)>
<com.microsoft.brooklyn.ui.signin.SignInFragment_MembersInjector: void injectRegisterMsaAccountManager(com.microsoft.brooklyn.ui.signin.SignInFragment,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zau(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.react.uimanager.UIImplementation: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.gms.cloudmessaging.Rpc: void zza(com.google.android.gms.tasks.TaskCompletionSource)>
<com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()>
<com.google.android.gms.auth.api.signin.GoogleSignInClient: void <init>(android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.gms.internal.measurement.zziu: com.google.android.gms.internal.measurement.zzix zzb()>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isNotInDelayedStart()>
<com.google.android.material.chip.Chip$2: void <init>(com.google.android.material.chip.Chip)>
<com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()>
<com.google.android.gms.common.server.response.zan: void zab()>
<com.adjust.sdk.OnDeeplinkResponseListener: boolean launchReceivedDeeplink(android.net.Uri)>
<com.microsoft.authenticator.backup.entities.CloudBackup: java.lang.String getDeviceName()>
<com.google.android.gms.measurement.internal.zzkd: boolean zzai()>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzdf zzc(int)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzf()>
<com.adjust.sdk.RequestHandler: void sendNextPackageI(com.adjust.sdk.ActivityPackage,java.lang.String,java.lang.Throwable)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean loadMore()>
<com.google.android.gms.maps.internal.IMapViewDelegate: com.google.android.gms.dynamic.IObjectWrapper getView()>
<com.adjust.sdk.EventResponseData: com.adjust.sdk.AdjustEventSuccess getSuccessResponseData()>
<ch.qos.logback.core.net.AbstractSocketAppender: void <init>(ch.qos.logback.core.net.QueueFactory,ch.qos.logback.core.net.ObjectWriterFactory)>
<com.facebook.react.views.text.TextAttributeProps: void setTextShadowColor(int)>
<com.google.android.gms.common.server.response.FastJsonResponse: void setStringInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.lang.String)>
<android.view.autofill.AutofillManager: boolean hasEnabledAutofillServices()>
<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: int getResourceDrawableId(android.content.Context,java.lang.String)>
<com.facebook.systrace.Systrace: void beginSection(long,java.lang.String)>
<com.microsoft.onlineid.sdk.extension.SessionManager: void unregister(java.lang.String)>
<com.google.crypto.tink.proto.KeyData$Builder: com.google.crypto.tink.proto.KeyData$Builder setTypeUrl(java.lang.String)>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder: void <init>()>
<com.google.android.gms.measurement.internal.zzhu: void <init>(java.lang.String,java.lang.String,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_AssistedFactory access$15800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<android.widget.Button: void setCompoundDrawablePadding(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCBuilder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCBuilder activity(android.app.Activity)>
<com.adjust.sdk.UtilNetworking: java.lang.String buildAuthorizationHeader(java.util.Map,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.material.chip.ChipDrawable: void drawChipStroke(android.graphics.Canvas,android.graphics.Rect)>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: int getThemeColor(android.content.Context,java.lang.String)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void notifyAllListeners()>
<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>
<com.google.android.gms.internal.measurement.zzjw: java.lang.Object zzf(java.lang.Object,java.lang.Object)>
<android.graphics.Bitmap$Config: int ordinal()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void addViewportData()>
<com.microsoft.authenticator.backup.entities.CloudBackup: java.lang.String getCreationDate()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.CacheKeyFactory access$600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.adjust.sdk.SessionResponseData: com.adjust.sdk.AdjustSessionSuccess getSuccessResponseData()>
<com.facebook.react.ReactInstanceManager$3: void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.debug.interfaces.DeveloperSettings)>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_5_7$cp()>
<com.google.android.gms.auth.api.credentials.HintRequest: void <init>(com.google.android.gms.auth.api.credentials.HintRequest$Builder,com.google.android.gms.auth.api.credentials.zzi)>
<java.util.Arrays: boolean equals(byte[],byte[])>
<com.google.android.gms.measurement.internal.zzea: void <init>(com.google.android.gms.measurement.internal.zzfl,long)>
<com.google.android.gms.common.api.internal.zacv: void <init>(java.lang.ref.WeakReference)>
<com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent obtain(int,com.facebook.react.views.scroll.ScrollEventType,int,int,float,float,int,int,int,int)>
<com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toVoidTask(com.google.android.gms.common.api.PendingResult)>
<java.io.File: java.io.File getAbsoluteFile()>
<com.azure.authenticator.utils.TestActivity: void onCreate(android.os.Bundle)>
<java.net.URL: java.lang.String toExternalForm()>
<com.microsoft.authenticator.mfasdk.configuration.FeatureConfig: void <init>(android.content.Context)>
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)>
<com.google.common.collect.MapMakerInternalMap$1: com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getEntry()>
<com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateProperties(int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.material.timepicker.RadialViewGroup: void updateLayoutParams()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onLowMemory()>
<com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager: void setInAcquireTokenFlow(boolean)>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.ISdkClickHandler getSdkClickHandler(com.adjust.sdk.IActivityHandler,boolean)>
<com.azure.authenticator.databinding.FragmentSignInBinding: com.azure.authenticator.databinding.FragmentSignInBinding bind(android.view.View)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationUseCase: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.adapter.EditAccountViewHolder$configure$1: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.EditAccountViewHolder)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void handleDeletionTicketResult(com.microsoft.authenticator.msa.entities.GetMsaTicketResult)>
<android.text.StaticLayout$Builder: android.text.StaticLayout build()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void setEnabled(boolean)>
<com.facebook.imagepipeline.request.BasePostprocessor: void internalCopyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)>
<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()>
<com.google.android.gms.maps.GoogleMap$OnCameraMoveListener: void onCameraMove()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.LatLngBounds zza(android.content.Context,android.util.AttributeSet)>
<com.azure.authenticator.databinding.FragmentStopSyncAccountBinding: com.azure.authenticator.databinding.FragmentStopSyncAccountBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.maps.model.GroundOverlayOptions: com.google.android.gms.maps.model.GroundOverlayOptions zza(com.google.android.gms.maps.model.LatLng,float,float)>
<com.microsoft.authenticator.authentication.aad.entities.IAuthenticationResultWrapper: java.lang.String getUserId()>
<com.facebook.drawee.drawable.VisibilityCallback: void onVisibilityChange(boolean)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map getNativeProps(java.lang.Class,java.lang.Class)>
<com.google.android.gms.auth.api.proxy.zzb: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void <init>()>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)>
<com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaRegistrationUseCase: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate,com.microsoft.authenticator.mfasdk.configuration.SnoozeConfiguration,com.microsoft.authenticator.mfasdk.storage.MfaSdkAccountConfigurationStorage)>
<com.google.android.gms.common.logging.Logger: boolean isLoggable(int)>
<com.google.common.collect.MapMakerInternalMap$Segment: void runLockedCleanup()>
<com.google.android.material.chip.Chip: void setCloseIconVisible(int)>
<com.google.android.gms.measurement.internal.zzdz: void zzk(long,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.Button: void setAlpha(float)>
<com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding: void <init>(com.google.android.material.card.MaterialCardView,android.widget.CheckBox,android.widget.ImageView,android.widget.TextView,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.CheckBox,android.widget.ImageView,android.widget.TextView,android.widget.LinearLayout,android.widget.LinearLayout,com.google.android.material.button.MaterialButton,android.view.View,android.view.View,android.widget.TextView)>
<com.facebook.react.uimanager.events.EventDispatcher: void dispatchAllEvents()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity injectAddressSaveNudgeActivity2(com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void dropView(android.view.View)>
<ch.qos.logback.core.encoder.Encoder: byte[] footerBytes()>
<com.facebook.imagepipeline.memory.LruBitmapPool: android.graphics.Bitmap alloc(int)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzei zzf()>
<com.azure.authenticator.databinding.WebviewBinding: com.azure.authenticator.databinding.WebviewBinding bind(android.view.View)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: long getNextCallTime(com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.gms.internal.measurement.zzck: boolean zzf()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.adjust.sdk.AdjustFactory: void setGdprUrl(java.lang.String)>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: java.security.SecureRandom createSecureRandom(ch.qos.logback.core.spi.ContextAware)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_17_18$1: void <init>(int,int)>
<com.google.android.gms.location.zzaf: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.internal.location.zzba,android.app.PendingIntent)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ResizeAndRotateProducer)>
<com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzfg zzb(java.lang.String,boolean)>
<com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate: boolean isSliderAction(int)>
<com.google.android.datatransport.Transformer: java.lang.Object apply(java.lang.Object)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int findName(java.lang.String,com.airbnb.lottie.parser.moshi.JsonReader$Options)>
<com.google.android.gms.location.ActivityTransitionResult: void <init>(java.util.List)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.businessLogic.TokenParseUseCase tokenParseUseCase()>
<com.google.android.gms.ads.identifier.AdvertisingIdClient$Info: boolean isLimitAdTrackingEnabled()>
<java.lang.System: long currentTimeMillis()>
<com.google.android.gms.cloudmessaging.zzq: void zza(android.os.Bundle)>
<com.google.android.gms.auth.api.signin.SignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount getGoogleSignInAccount()>
<javax.mail.Transport: void send(javax.mail.Message)>
<com.facebook.react.modules.timepicker.TimePickerMode: void <init>(java.lang.String,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: com.microsoft.authenticator.backup.abstraction.AutoBackupManager getAutoBackupManager$app_productionRelease()>
<com.google.android.gms.internal.measurement.zzjk: int zzh(java.util.List)>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<com.facebook.react.uimanager.TransformHelper: double convertToRadians(com.facebook.react.bridge.ReadableMap,java.lang.String)>
<com.google.android.gms.common.internal.service.zae: com.google.android.gms.common.api.PendingResult zaa(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzB()>
<com.google.android.gms.measurement.internal.zzho: java.lang.String zzj()>
<com.google.android.gms.safetynet.zza: java.lang.String getJwsResult()>
<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.common.abstraction.BottomNavigationController bottomNavigationController()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.internal.measurement.zzcv: com.google.android.gms.internal.measurement.zzhw zzb()>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>
<androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)>
<com.google.android.gms.measurement.internal.zzfl: boolean zzE()>
<com.evernote.android.job.JobStorage: void store(com.evernote.android.job.JobRequest)>
<com.facebook.common.references.SharedReference: void ensureValid()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager aadTokenRefreshManager()>
<com.google.android.gms.internal.maps.zzw: void setGeodesic(boolean)>
<com.facebook.react.bridge.WritableNativeArray: void pushInt(int)>
<com.facebook.react.animated.AnimationDriver: void <init>()>
<com.facebook.react.views.text.CustomLineHeightSpan: void <init>(float)>
<com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)>
<android.view.ViewGroup: void draw(android.graphics.Canvas)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream)>
<com.facebook.imageformat.DefaultImageFormatChecker: boolean isBmpHeader(byte[],int)>
<android.view.Menu: void clear()>
<com.facebook.cache.disk.DiskStorageCache: java.util.concurrent.CountDownLatch access$300(com.facebook.cache.disk.DiskStorageCache)>
<ch.qos.logback.core.net.DefaultSocketConnector: void useDefaultsForMissingFields()>
<com.facebook.react.animated.NativeAnimatedModule$21: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,int)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: int[] findMinMaxLengthsInSymbols(java.lang.String[])>
<android.database.AbstractWindowedCursor: void fillWindow(int,android.database.CursorWindow)>
<ch.qos.logback.core.joran.util.StringToObjectConverter: boolean followsTheValueOfConvention(java.lang.Class)>
<com.google.android.gms.internal.location.zzam: void zzd(com.google.android.gms.location.GeofencingRequest,android.app.PendingIntent,com.google.android.gms.internal.location.zzak)>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
<okhttp3.Request$Builder: okhttp3.Request$Builder get()>
<android.text.Editable: void removeSpan(java.lang.Object)>
<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void <init>(java.lang.Object)>
<com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>
<com.microsoft.workaccount.workplacejoin.core.Util: com.microsoft.workaccount.workplacejoin.core.IDeviceControlledAPI createDeviceControlledAPI(android.content.Context)>
<com.google.android.gms.common.SupportErrorDialogFragment: com.google.android.gms.common.SupportErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)>
<ch.qos.logback.core.subst.NodeToStringTransformer: java.lang.String transform()>
<android.view.ViewGroup: void setNextFocusUpId(int)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: java.util.Map getExtraMapOnSuccess(com.facebook.common.references.CloseableReference)>
<com.google.android.material.shape.ShapeAppearanceModel: void <init>()>
<ch.qos.logback.classic.net.SimpleSocketServer: javax.net.ServerSocketFactory getServerSocketFactory()>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Token peekAtCurentToken()>
<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: android.app.Activity access$4700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zac(android.os.IBinder)>
<com.google.android.gms.internal.measurement.zzek: void <init>(android.content.Context,com.google.android.gms.internal.measurement.zzfo)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getDisplayContent()>
<com.facebook.imagepipeline.memory.BitmapCounter: int getMaxSize()>
<com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseMediumName(int)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: void <init>(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUIBlock(com.facebook.react.uimanager.UIBlock)>
<com.google.android.gms.internal.measurement.zzgf: int zza(byte[],int,com.google.android.gms.internal.measurement.zzge)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$10: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.evernote.android.job.gcm.JobProxyGcm: java.lang.String createTag(int)>
<com.google.crypto.tink.KeyManager: boolean doesSupport(java.lang.String)>
<com.google.android.datatransport.runtime.SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setEncoding(com.google.android.datatransport.Encoding)>
<com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzdq zzm()>
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void <init>()>
<com.google.android.gms.internal.measurement.zzn: void <init>(android.os.IBinder)>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void <init>(android.content.Context,com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshWorker access$500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.azure.authenticator.storage.Storage: java.lang.String readSerializedSessionRecordList()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: com.facebook.drawee.backends.pipeline.info.ImagePerfData snapshot()>
<com.adjust.sdk.ActivityHandler: void setPushTokenI(java.lang.String)>
<com.google.android.material.bottomappbar.BottomAppBar$7: void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean)>
<com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)>
<com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)>
<androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.facebook.react.bridge.queue.MessageQueueThread: void runOnQueue(java.lang.Runnable)>
<com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener: void <init>()>
<com.google.android.material.transformation.FabTransformationScrimBehavior: void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List)>
<java.io.IOException: java.lang.String toString()>
<com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable setRadius(com.facebook.react.bridge.ReadableMap,android.graphics.drawable.Drawable)>
<com.adjust.sdk.UtilNetworking: java.lang.String getValidIdentifier(java.util.Map)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void updatePathEffect()>
<com.google.android.material.shadow.ShadowRenderer: void setShadowColor(int)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromAsset(android.content.Context,java.lang.String,java.lang.String)>
<com.google.android.gms.maps.model.zzj: void <init>()>
<androidx.core.content.res.ResourcesCompat$FontCallback: void <init>()>
<com.facebook.imagepipeline.producers.JobScheduler$1: void <init>(com.facebook.imagepipeline.producers.JobScheduler)>
<com.adjust.sdk.IActivityHandler: void resetSessionCallbackParameters()>
<com.facebook.imagepipeline.producers.JobScheduler$JobRunnable: void run(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenDailyRetryRefreshWorker access$800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<android.graphics.drawable.Drawable: void clearColorFilter()>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void apply()>
<android.widget.TextView: void setJustificationMode(int)>
<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>
<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>
<com.google.android.gms.common.api.internal.zabl: void onConnectionSuspended(int)>
<com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)>
<com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getBubblingEventTypeConstants()>
<com.google.common.collect.MapMakerInternalMap$Segment: void runCleanup()>
<com.azure.authenticator.authentication.msa.MsaAccountManager$validateMsaAccounts$2: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getCountry()>
<com.google.android.gms.internal.ads_identifier.zza: android.os.Parcel transactAndReadException(int,android.os.Parcel)>
<com.google.android.gms.common.api.internal.zacx: void zaa(com.google.android.gms.common.api.internal.BasePendingResult)>
<com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader: void load()>
<com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()>
<com.facebook.react.ReactInstanceManager: void attachRootView(com.facebook.react.uimanager.ReactRoot)>
<com.azure.authenticator.ui.msa.'-$$Lambda$MsaProtectionActivity$yHzb-aevCh6SAZn5BiBdzU-0mXQ': void <init>(com.azure.authenticator.ui.msa.MsaProtectionActivity)>
<com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List access$600(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.google.android.gms.common.internal.zzb: boolean zzb(android.os.Message)>
<com.facebook.react.uimanager.ShadowNodeRegistry: int getRootNodeCount()>
<com.google.android.gms.measurement.internal.zzkk: int zzZ()>
<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void <init>(long,int,int,long,int,com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$1)>
<com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBooleanObject(android.os.Parcel,int,java.lang.Boolean,boolean)>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedBounds(int,int,int,int)>
<com.facebook.yoga.YogaNode: void setFlexBasisAuto()>
<com.google.android.gms.common.api.internal.zabu: void zan(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.gms.internal.measurement.zzkz: long zzF()>
<com.google.android.gms.measurement.internal.zzal: boolean zzc()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float)>
<com.facebook.react.ReactInstanceManager: void recreateReactContextInBackgroundFromBundleLoader()>
<com.google.android.gms.internal.measurement.zzcr: com.google.android.gms.internal.measurement.zzcr zzc()>
<java.util.Map: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentLinkedQueue: void clear()>
<com.google.android.material.chip.ChipDrawable: void onSizeChange()>
<com.facebook.react.modules.network.CookieJarContainer: void setCookieJar(okhttp3.CookieJar)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesConnection: android.os.IBinder getBinder()>
<java.lang.Math: float min(float,float)>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: void <init>(android.content.Context)>
<com.azure.authenticator.storage.database.DbAccount: void setActivatedDeviceToken(java.lang.String)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.imagepipeline.listener.RequestListener getRequestListener(com.facebook.drawee.interfaces.DraweeController)>
<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_AssistedFactory mfaNotificationActionWorker_AssistedFactory()>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder setAutoResolveMissingFeatures(boolean)>
<android.widget.LinearLayout: void setClickable(boolean)>
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
<ch.qos.logback.classic.html.HTMLLayout: java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.views.picker.ReactPicker: void setStagedPrimaryTextColor(java.lang.Integer)>
<com.airbnb.lottie.model.content.Repeater: java.lang.String getName()>
<com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)>
<com.facebook.react.uimanager.GuardedFrameCallback: void <init>(com.facebook.react.bridge.ReactContext)>
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu$OnDismissListener)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: void zza(boolean)>
<com.facebook.imagepipeline.listener.RequestListener: void onRequestCancellation(java.lang.String)>
<android.util.SparseIntArray: void put(int,int)>
<com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)>
<com.google.android.gms.internal.measurement.zzhh: com.google.android.gms.internal.measurement.zzhf zza()>
<com.microsoft.authenticator.core.graphics.BitmapConverter: void <init>(android.graphics.Bitmap)>
<com.airbnb.lottie.animation.LPaint: void <init>(android.graphics.PorterDuff$Mode)>
<android.widget.TextView: int getGravity()>
<com.facebook.react.uimanager.annotations.ReactProp: int defaultInt()>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getActivatedDeviceToken()>
<com.google.android.gms.internal.maps.zzu: com.google.android.gms.internal.maps.zzt zzg(android.os.IBinder)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: java.lang.Object refreshUserDa(com.azure.authenticator.authentication.msa.MsaAccountManager,java.lang.String,com.microsoft.onlineid.SecurityScope,kotlin.coroutines.Continuation)>
<java.util.Queue: java.lang.Object poll()>
<com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureEnterpriseControls$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.airbnb.lottie.parser.GradientColorParser: int getOpacityAtPosition(double,double[],double[])>
<com.adjust.sdk.AdjustInstance: void trackEvent(com.adjust.sdk.AdjustEvent)>
<com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: void <init>(int,java.lang.String)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String getExcludedProtocols()>
<android.text.TextPaint: android.graphics.Shader setShader(android.graphics.Shader)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegistrationMethods)>
<okio.Buffer: java.lang.String readUtf8()>
<com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>
<com.airbnb.lottie.animation.content.FillContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeFill)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: float readFloat(android.os.Parcel,int)>
<com.google.android.material.bottomappbar.BottomAppBar: void setActionMenuViewPosition()>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: void <init>(com.facebook.imagepipeline.memory.PoolConfig$1)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<com.evernote.android.job.JobExecutor$JobCallable: void <init>(com.evernote.android.job.JobExecutor,com.evernote.android.job.Job)>
<com.google.android.gms.measurement.internal.zzib: com.google.android.gms.measurement.internal.zzhu zzx(com.google.android.gms.measurement.internal.zzib)>
<com.google.common.collect.MapMaker: int getInitialCapacity()>
<com.google.android.gms.common.api.internal.zaab: void zaa(android.app.Activity,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.internal.ApiKey)>
<com.google.android.gms.auth.api.credentials.zzc: void <init>()>
<okhttp3.Response: okhttp3.Headers headers()>
<ch.qos.logback.core.joran.spi.InterpretationContext: void addSubstitutionProperty(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.producers.BaseProducerContext: void cancel()>
<com.google.android.material.badge.BadgeDrawable: void setTextAppearance(com.google.android.material.resources.TextAppearance)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getTenantId()>
<com.azure.authenticator.notifications.msa.Hilt_MsaNotificationActionBroadcastReceiver: void inject(android.content.Context)>
<com.airbnb.lottie.model.content.ShapePath: com.airbnb.lottie.model.animatable.AnimatableShapeValue getShapePath()>
<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>
<android.graphics.RectF: void set(android.graphics.RectF)>
<com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.model.animatable.AnimatablePointValue getSize()>
<androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>
<com.google.android.gms.common.api.internal.zak: com.google.android.gms.common.api.internal.zak zaa(com.google.android.gms.common.api.internal.LifecycleActivity)>
<com.microsoft.brooklyn.module.autofill.request.FillEventHistoryProcessor: void <init>(com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.repository.PaymentsRepository)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$onCreatePreferences$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment)>
<java.util.ArrayList: int indexOf(java.lang.Object)>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>
<com.google.android.gms.common.zzo: void <init>()>
<com.google.android.material.chip.ChipDrawable: float getChipCornerRadius()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void showErrorDialog(java.lang.String,android.content.DialogInterface$OnClickListener)>
<com.google.android.gms.measurement.internal.zzhn: java.lang.String zzj()>
<com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>
<com.azure.authenticator.ui.dialog.AppDialogFragments: void showLockScreenRequiredDialog$default(com.azure.authenticator.ui.dialog.AppDialogFragments,boolean,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,int,java.lang.Object)>
<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onResponse(java.io.InputStream,int)>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemTextColor(android.content.res.ColorStateList)>
<com.google.android.gms.internal.auth.zza: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)>
<java.util.concurrent.locks.Lock: boolean tryLock()>
<com.facebook.common.webp.WebpSupportStatus: boolean isWebpHeader(byte[],int,int)>
<com.google.android.gms.common.api.internal.zabl: void zaI(com.google.android.gms.common.api.Status)>
<com.google.android.gms.internal.base.zag: com.google.android.gms.internal.base.zag zaa()>
<com.facebook.react.viewmanagers.ModalHostViewManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyComplete$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods$Builder setMethodKey(int)>
<com.facebook.react.bridge.queue.MessageQueueThreadHandler: void <init>(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)>
<com.facebook.react.views.scroll.ReactScrollView: void flashScrollIndicators()>
<com.facebook.react.module.model.ReactModuleInfoProvider: java.util.Map getReactModuleInfos()>
<com.facebook.imagepipeline.producers.ProducerListener: void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCComment()>
<com.google.android.gms.internal.measurement.zzdf: int zzm()>
<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface: void setPageMargin(android.view.View,int)>
<com.azure.authenticator.storage.database.migration.Migration14To15$tryFixSingleQuoteBug$queryUseLambda$1: void <init>(java.lang.String,androidx.sqlite.db.SupportSQLiteDatabase)>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSyncToggleFragment_MembersInjector: void injectStorage(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSyncToggleFragment,com.azure.authenticator.storage.Storage)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd2()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.lang.Integer access$1200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton access$300(com.google.android.material.textfield.TextInputLayout)>
<okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()>
<android.app.Activity: void startActivity(android.content.Intent)>
<com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails: void setApplicationDisplayName(java.lang.String)>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: android.database.sqlite.SQLiteDatabase get()>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setPage(com.facebook.react.views.viewpager.ReactViewPager,int)>
<com.airbnb.lottie.model.animatable.AnimatableScaleValue: boolean isStatic()>
<com.google.android.gms.maps.zzo: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCircleClickListener)>
<com.google.android.gms.auth.account.WorkAccountApi: com.google.android.gms.common.api.PendingResult removeWorkAccount(com.google.android.gms.common.api.GoogleApiClient,android.accounts.Account)>
<com.facebook.imagepipeline.cache.BufferedDiskCache$2: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,java.util.concurrent.atomic.AtomicBoolean,com.facebook.cache.common.CacheKey)>
<com.google.android.gms.common.internal.BaseGmsClient: void checkAvailabilityAndConnect()>
<com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)>
<com.facebook.react.views.textinput.ReactEditText: void setInputType(int)>
<com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)>
<com.google.android.gms.common.internal.zzq: long zzh(com.google.android.gms.common.internal.zzq)>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL)>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<com.google.android.material.floatingactionbutton.MotionStrategy: void setMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkCallingOrSelfPermission(java.lang.String)>
<com.google.android.gms.location.zzau: void <init>()>
<java.io.FilterInputStream: void close()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon()>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: void initializeComponentContext()>
<ch.qos.logback.core.status.StatusManager: void remove(ch.qos.logback.core.status.StatusListener)>
<android.util.JsonReader: void <init>(java.io.Reader)>
<com.google.android.gms.location.LocationServices: com.google.android.gms.internal.location.zzaz zza(com.google.android.gms.common.api.GoogleApiClient)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.MutableLiveData access$get_graphPolicyResult$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<ch.qos.logback.classic.Logger: java.lang.String getName()>
<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>
<ch.qos.logback.core.util.DelayStrategy: long nextDelay()>
<com.adjust.sdk.AdjustInstance: void gdprForgetMe(android.content.Context)>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate)>
<ch.qos.logback.classic.pattern.NamedConverter: void <init>()>
<com.google.android.material.navigation.NavigationBarItemView: void setItemPosition(int)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$onTicketAcquired$2: void <init>(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback,com.microsoft.onlineid.UserAccount,com.microsoft.onlineid.Ticket,android.os.Bundle,kotlin.coroutines.Continuation)>
<com.facebook.react.modules.blob.BlobCollector$1: void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule)>
<ch.qos.logback.core.util.EnvUtil: boolean isJDK5()>
<javax.crypto.Cipher: byte[] wrap(java.security.Key)>
<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>
<android.content.res.ColorStateList: boolean isStateful()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: boolean getRetainImageOnFailure()>
<com.microsoft.authenticator.experimentation.storage.ExperimentationStorage: void <init>(android.content.Context)>
<com.google.android.gms.maps.model.PolylineOptions: java.util.List getPattern()>
<com.facebook.react.ReactInstanceManager: void logOnDestroy()>
<com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void <init>()>
<ch.qos.logback.core.pattern.CompositeConverter: void setChildConverter(ch.qos.logback.core.pattern.Converter)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.location.LocationManager locationManager()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: com.azure.authenticator.authentication.msa.MsaAccountManager getMsaAccountManager$app_productionRelease()>
<com.google.android.gms.internal.measurement.zzjr: void <init>(com.google.android.gms.internal.measurement.zzjs,com.google.android.gms.internal.measurement.zzjl)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.internal.measurement.zzkh: void zzk(java.lang.Object,long,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.common.AutofillPromotionManager autofillPromotionManager()>
<com.adjust.sdk.IPackageHandler: java.lang.String getGdprPath()>
<android.app.DialogFragment: android.app.Activity getActivity()>
<com.facebook.soloader.SoLoader: boolean isInitialized()>
<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>
<com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy: void <init>()>
<ch.qos.logback.core.subst.Node: int hashCode()>
<com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzi(com.google.android.gms.internal.measurement.zzde)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedInt(int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutY()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$InternalFactoryFactory getHiltInternalFactoryFactory()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _handleApos()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.PresentationUseCase presentationUseCase()>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setCornersRadius(float)>
<com.azure.authenticator.databinding.FragmentEnableAppLockBinding: com.azure.authenticator.databinding.FragmentEnableAppLockBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)>
<com.facebook.imagepipeline.image.ImageInfo: int getHeight()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.facebook.imagepipeline.memory.BufferMemoryChunkPool: com.facebook.imagepipeline.memory.BufferMemoryChunk alloc(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.businesslogic.RemoveLogsUseCase access$5400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)>
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void <init>()>
<ch.qos.logback.core.ContextBase: java.lang.Object getObject(java.lang.String)>
<com.google.android.gms.measurement.internal.zzcl: void <init>()>
<com.google.android.gms.common.internal.TelemetryLoggingOptions: com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder builder()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onFailure$1: void <init>(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback,com.microsoft.onlineid.exception.AuthenticationException,kotlin.coroutines.Continuation)>
<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetView(float[],android.view.ViewGroup)>
<com.facebook.react.ReactInstanceManager$1: void <init>(com.facebook.react.ReactInstanceManager)>
<com.google.android.material.button.MaterialButton: void setChecked(boolean)>
<ch.qos.logback.core.util.ContextUtil: void addHostNameAsProperty()>
<android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
<com.google.android.gms.common.data.DataBufferObserver: void onDataRangeRemoved(int,int)>
<com.facebook.soloader.SysUtil: java.lang.String[] getSupportedAbis()>
<java.lang.Math: double rint(double)>
<com.microsoft.brooklyn.module.autofill.response.abstraction.FillRequestFormHandlerFactory: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.SignInFormDatasetsUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.SignUpFormDatasetsUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.ChangePasswordFormDatasetUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressFormDatasetsUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.payment.PaymentFormDatasetsUseCase)>
<android.widget.AutoCompleteTextView: android.view.View$OnFocusChangeListener getOnFocusChangeListener()>
<com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.bridge.WritableArray createsPointersArray(int,com.facebook.react.uimanager.events.TouchEvent)>
<com.google.android.gms.internal.measurement.zzbr: void zzj(java.lang.String,java.lang.String,java.lang.Object,boolean)>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>
<java.util.LinkedHashSet: boolean remove(java.lang.Object)>
<ch.qos.logback.core.android.AndroidContextUtil: void <init>(android.content.ContextWrapper)>
<ch.qos.logback.core.util.ContentTypeUtil: java.lang.String getSubType(java.lang.String)>
<com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: void <init>(com.facebook.react.views.slider.ReactSliderManager$1)>
<com.google.firebase.encoders.json.JsonDataEncoderBuilder: void <init>()>
<android.content.res.ColorStateList: int getColorForState(int[],int)>
<com.google.android.gms.internal.auth-api.zzf: android.os.Parcelable zzc(android.os.Parcel,android.os.Parcelable$Creator)>
<com.google.android.gms.internal.measurement.zzdj: void zzaN(com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.gms.common.api.internal.zacv: com.google.android.gms.common.api.internal.zacu zad(com.google.android.gms.common.api.internal.zacv)>
<com.azure.authenticator.PhoneFactorApplication_GeneratedInjector: void injectPhoneFactorApplication(com.azure.authenticator.PhoneFactorApplication)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.backup.BackupFlowViewModel backupFlowViewModel()>
<android.os.Bundle: void remove(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.configuration.FeatureConfig featureConfig()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DiskCacheReadProducer newDiskCacheReadProducer(com.facebook.imagepipeline.producers.Producer)>
<com.azure.authenticator.jwe.AlgorithmEnum: com.azure.authenticator.jwe.AlgorithmEnum[] values()>
<com.adjust.sdk.ActivityHandler$7: void <init>(com.adjust.sdk.ActivityHandler,android.net.Uri,long)>
<com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: void <init>()>
<com.google.android.gms.common.api.GoogleApi$Settings$Builder: void <init>()>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: int access$1000(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString2()>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzfl zzab(com.google.android.gms.measurement.internal.zzkd)>
<com.facebook.react.bridge.ReadableArray: boolean isNull(int)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference access$302(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenWidth()>
<android.widget.ImageView: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<com.google.android.datatransport.runtime.backends.BackendResponse$Status: void <init>(java.lang.String,int)>
<ch.qos.logback.core.joran.util.Introspector: java.lang.String decapitalize(java.lang.String)>
<okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()>
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>
<com.google.common.net.InternetDomainName: boolean isTopPrivateDomain()>
<android.view.ViewGroup: void removeAllViews()>
<com.google.android.gms.common.api.internal.zal: void <init>(java.lang.Iterable)>
<android.view.MotionEvent: long getEventTime()>
<com.facebook.react.LazyReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.react.uimanager.Spacing: void <init>(float)>
<com.google.android.gms.cloudmessaging.zzq: void zza(com.google.android.gms.cloudmessaging.zzp)>
<android.widget.EditText: void setCursorVisible(boolean)>
<com.airbnb.lottie.LottieDrawable$3: void <init>(com.airbnb.lottie.LottieDrawable)>
<com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgs zzk(java.lang.String)>
<com.facebook.drawee.interfaces.SettableDraweeHierarchy: void reset()>
<com.adjust.sdk.Util$2: void <init>(com.adjust.sdk.OnDeviceIdsRead)>
<com.azure.authenticator.ui.fragment.main.ViewLogTask: void <init>(android.app.Activity,com.azure.authenticator.ui.fragment.main.ViewLogTask$ViewLogTaskCallback)>
<androidx.fragment.app.Fragment: android.os.Bundle getArguments()>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: android.graphics.Bitmap crop(android.graphics.BitmapFactory$Options)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setLoadBatchSize(int)>
<com.google.android.gms.common.internal.zak: void zaf(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)>
<com.google.android.gms.common.internal.zav: void <init>(int,android.os.IBinder,com.google.android.gms.common.ConnectionResult,boolean,boolean)>
<com.google.android.gms.internal.maps.zzh: boolean isVisible()>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolConfig$Builder newBuilder()>
<com.google.android.gms.common.stats.ConnectionTracker: void zzd(android.content.Context,android.content.ServiceConnection)>
<com.facebook.react.common.LongArray: void <init>(int)>
<com.airbnb.lottie.utils.LottieValueAnimator: void removeFrameCallback()>
<com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object)>
<com.facebook.react.views.textinput.ReactTextInputFocusEvent: java.lang.String getEventName()>
<com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.Button,android.widget.Button,androidx.cardview.widget.CardView)>
<com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)>
<javax.net.ssl.SSLSocket: int getSoLinger()>
<com.google.android.gms.internal.measurement.zzih: void zzf(com.google.android.gms.internal.measurement.zzgs)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptionsExtension: java.util.List getImpliedScopes()>
<com.facebook.react.uimanager.ReactShadowNode: int getChildCount()>
<com.google.android.datatransport.runtime.TransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntime getTransportRuntime()>
<android.view.accessibility.AccessibilityEvent: java.util.List getText()>
<com.airbnb.lottie.model.layer.TextLayer: java.util.List getContentsForCharacter(com.airbnb.lottie.model.FontCharacter)>
<com.facebook.imagepipeline.request.ImageRequest$CacheChoice: void <init>(java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzdj: int zzac()>
<com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()>
<com.google.common.collect.MapMakerInternalMap$Strength$2: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void handleFinalResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState)>
<androidx.collection.LruCache: void <init>(int)>
<com.facebook.imagepipeline.memory.BucketsBitmapPool: android.graphics.Bitmap getValue(com.facebook.imagepipeline.memory.Bucket)>
<com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)>
<com.google.android.gms.internal.measurement.zzai: void <init>(com.google.android.gms.internal.measurement.zzbr)>
<com.adjust.sdk.IAttributionHandler: void resumeSending()>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity$1: void <init>(com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity)>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback: java.lang.String access$getMsaCid$p(com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)>
<com.google.android.gms.internal.measurement.zzlk: void <init>()>
<java.lang.Process: void destroy()>
<com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding: void <init>(android.widget.FrameLayout,android.widget.LinearLayout,com.airbnb.lottie.LottieAnimationView,android.widget.TextView,com.microsoft.vienna.webviewclient.client.webview.ViennaWebView)>
<androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
<com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)>
<ch.qos.logback.core.joran.spi.Interpreter: void setDocumentLocator(org.xml.sax.Locator)>
<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>
<com.google.android.material.shape.MaterialShapeDrawable: void setShadowCompatRotation(int)>
<com.evernote.android.job.JobConfig: boolean isApiEnabled(com.evernote.android.job.JobApi)>
<com.azure.authenticator.logging.ExternalLogger$Companion: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzha: void zzi(int,int)>
<com.google.android.gms.measurement.internal.zzjh: int zzc(android.content.Intent,int,int)>
<com.facebook.drawee.backends.pipeline.Fresco: void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig)>
<com.google.android.gms.common.api.internal.zabl: void zad(com.google.android.gms.common.api.internal.zai)>
<com.google.android.gms.internal.measurement.zzfi: void <init>(com.google.android.gms.internal.measurement.zzfj)>
<com.azure.authenticator.databinding.FrxRestorePromptBinding: com.azure.authenticator.databinding.FrxRestorePromptBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.measurement.zzr: void <init>()>
<com.facebook.imagepipeline.producers.PostprocessorProducer: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$900(com.facebook.imagepipeline.producers.PostprocessorProducer)>
<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: void setPattern(java.lang.String)>
<com.facebook.shimmer.ShimmerDrawable: void setShimmer(com.facebook.shimmer.Shimmer)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.drawee.backends.pipeline.PipelineDraweeController internalCreateController(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList)>
<com.google.android.gms.cloudmessaging.zzl: void <init>(com.google.android.gms.cloudmessaging.zzf,com.google.android.gms.cloudmessaging.zzq)>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzk()>
<com.adjust.sdk.TrackingState: void <init>(java.lang.String,int,int)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$Companion: boolean isAuthenticatedUrl(java.lang.String)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback: androidx.appcompat.app.AppCompatActivity access$getParentActivity$p(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.facebook.yoga.YogaNode: void setFlexBasis(float)>
<com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextHeight()>
<com.google.android.gms.common.api.OptionalPendingResult: void <init>()>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zza(long)>
<com.airbnb.lottie.model.content.ShapeData: void interpolateBetween(com.airbnb.lottie.model.content.ShapeData,com.airbnb.lottie.model.content.ShapeData,float)>
<ch.qos.logback.core.rolling.helper.DateParser: java.lang.String findToken(java.lang.String)>
<com.google.android.material.datepicker.UtcDates: java.util.Calendar getTodayCalendar()>
<androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.FillResponseUnsignedUseCase fillResponseUnsignedUseCase()>
<com.google.android.datatransport.Encoding: com.google.android.datatransport.Encoding of(java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object getValue()>
<android.widget.EditText: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.android.gms.internal.measurement.zzha: void zzt(int)>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>
<java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>
<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<com.azure.authenticator.databinding.FrxSyncToggleScreenBinding: void <init>(android.widget.ScrollView,com.google.android.material.switchmaterial.SwitchMaterial,androidx.constraintlayout.widget.ConstraintLayout,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.TextView)>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node parse()>
<com.facebook.react.views.viewpager.PageScrollEvent: java.lang.String getEventName()>
<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>
<com.google.android.gms.maps.zzq: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPolylineClickListener)>
<com.microsoft.authenticator.graphclient.di.GraphModule_ProvideUserPolicyDatabaseFactory: com.microsoft.authenticator.graphclient.data.dataSource.AuthMethodsPolicyDatabase provideUserPolicyDatabase(com.microsoft.authenticator.graphclient.di.GraphModule,android.content.Context)>
<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface: void setSelected(android.view.View,int)>
<com.google.android.gms.tasks.Tasks: void zzb(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.zzab)>
<com.google.android.gms.common.api.Response: void <init>(com.google.android.gms.common.api.Result)>
<com.facebook.common.statfs.StatFsHelper: void <init>()>
<com.adjust.sdk.AttributionHandler$2: void <init>(com.adjust.sdk.AttributionHandler)>
<com.airbnb.lottie.model.content.GradientStroke: boolean isHidden()>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int)>
<com.adjust.sdk.IActivityHandler: void trackAdRevenue(java.lang.String,org.json.JSONObject)>
<com.airbnb.lottie.parser.PolystarShapeParser: com.airbnb.lottie.model.content.PolystarShape parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.common.api.internal.zac: com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.zabl)>
<com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,int,android.content.res.AssetManager)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzO()>
<java.util.List: java.util.List subList(int,int)>
<com.facebook.react.modules.network.RequestBodyUtil: java.io.InputStream getFileInputStream(android.content.Context,java.lang.String)>
<com.azure.authenticator.PhoneFactorApplication: void checkMfaTargetEnvironment()>
<com.facebook.react.views.view.MeasureUtil: int getMeasureSpec(float,com.facebook.yoga.YogaMeasureMode)>
<com.facebook.react.animated.SpringAnimation: void resetConfig(com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getAadTenantId()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onBatchComplete()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getScreenDisplayMetrics()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringASCII(int,int)>
<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)>
<ch.qos.logback.core.joran.util.MethodDescriptor: java.lang.String getName()>
<com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)>
<com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event coalesce(com.facebook.react.uimanager.events.Event)>
<com.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zza(com.google.android.gms.cloudmessaging.zzq)>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>
<java.lang.Enum: java.lang.String name()>
<com.adjust.sdk.Util: java.lang.Boolean isPlayTrackingEnabled(android.content.Context)>
<com.google.android.material.navigation.NavigationBarItemView: void setCheckable(boolean)>
<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String,java.util.List)>
<com.google.android.gms.internal.measurement.zzkx: boolean zzb()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void refreshView()>
<com.google.android.gms.internal.location.zzbp: void <init>()>
<com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$100(com.facebook.react.animated.NativeAnimatedModule)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity_MembersInjector: void injectMsaAccountManager(com.azure.authenticator.ui.backup.RestoreFlowActivity,com.azure.authenticator.authentication.msa.MsaAccountManager)>
<com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()>
<android.widget.Button: boolean performClick()>
<com.google.android.material.chip.ChipDrawable: int[] getCloseIconState()>
<com.azure.authenticator.databinding.SendFeedbackBinding: void <init>(android.widget.ScrollView,android.widget.LinearLayout,android.widget.Button,android.widget.EditText,android.widget.TextView,android.widget.TextView,android.widget.Button)>
<com.azure.authenticator.jobs.DeferrableWorkerTag: java.lang.String getValueForWorkerClass(java.lang.Class)>
<com.facebook.drawee.interfaces.SettableDraweeHierarchy: void setImage(android.graphics.drawable.Drawable,float,boolean)>
<com.facebook.react.bridge.WritableNativeArray: void <init>()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzo(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.google.android.gms.internal.safetynet.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)>
<com.google.android.gms.common.api.internal.zaaq: void <init>(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.common.api.internal.zaah)>
<com.airbnb.lottie.animation.content.TrimPathContent: void addListener(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getFilesDirectoryPath()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectRegisterMsaAccountManager(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager)>
<com.google.android.gms.common.internal.zak: void zai(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.google.android.gms.internal.measurement.zzp: void initForTests(java.util.Map)>
<java.lang.Thread: boolean isAlive()>
<com.facebook.cache.disk.DiskStorage: void purgeUnexpectedResources()>
<com.google.android.gms.measurement.internal.zzai: java.util.List zzl(java.lang.String)>
<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void <init>()>
<com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaNodeJNIBase removeChildAt(int)>
<com.google.android.gms.measurement.internal.zzkd: void zzA(com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.config.BrooklynAppUpgradeManager brooklynAppUpgradeManager()>
<com.google.android.gms.common.util.WorkSourceUtil: java.util.List getNames(android.os.WorkSource)>
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>
<com.facebook.drawee.components.DeferredReleaser: com.facebook.drawee.components.DeferredReleaser getInstance()>
<android.widget.LinearLayout: void requestLayout()>
<okhttp3.Headers: okhttp3.Headers$Builder newBuilder()>
<com.azure.authenticator.ui.fragment.main.ThirdPartyNoticeFragment: void <init>()>
<com.google.android.gms.tasks.zzw: void zzi()>
<com.google.android.material.button.MaterialButtonHelper: void setVerticalInsets(int,int)>
<ch.qos.logback.core.util.FileUtil: java.lang.String prefixRelativePath(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.auth-api.zzao: void <init>(android.app.Activity,com.google.android.gms.auth.api.identity.zzl)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnInfoWindowCloseListener(com.google.android.gms.maps.internal.zzad)>
<ch.qos.logback.core.joran.action.Action: int getLineNumber(ch.qos.logback.core.joran.spi.InterpretationContext)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzjb: void zzl(com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.Object,java.lang.Object)>
<com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)>
<android.widget.EditText: void onSelectionChanged(int,int)>
<dagger.hilt.android.internal.managers.FragmentComponentManager: java.lang.Object generatedComponent()>
<com.azure.authenticator.ui.fragment.accounts.BrokerMergeState: void <init>(java.lang.String,int)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)>
<com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: void <init>(com.airbnb.lottie.value.LottieValueCallback)>
<com.adjust.sdk.ActivityHandler: void disableThirdPartySharingI()>
<android.graphics.drawable.Drawable: boolean setLevel(int)>
<com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getFillColor()>
<com.google.android.gms.internal.maps.zzz: void zze(com.google.android.gms.dynamic.IObjectWrapper)>
<com.facebook.yoga.YogaJustify: void <init>(java.lang.String,int,int)>
<com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void scheduleCompletionCallback(long)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$1)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void access$generateBackupSilentlyAsync(com.azure.authenticator.ui.backup.RestoreFlowActivity,java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket)>
<com.adjust.sdk.ActivityHandler: void startForegroundTimerI()>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: void <init>(java.lang.String,int)>
<android.os.WorkSource: void <init>()>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: int getOverlayTop()>
<com.google.android.gms.internal.measurement.zzcf: boolean zzg()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$10: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(long,com.google.android.datatransport.runtime.TransportContext)>
<com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$onNeutralButtonClick$1: void invoke()>
<com.adjust.sdk.IActivityHandler: void onPause()>
<com.google.android.gms.measurement.internal.zzjr: boolean zzc(long)>
<javax.net.ssl.SSLSocket: java.net.InetAddress getInetAddress()>
<com.facebook.react.bridge.ModuleHolder: void <init>(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)>
<java.util.UUID: java.util.UUID randomUUID()>
<com.azure.authenticator.databinding.PaymentInfoBottomSheetLayoutBinding: com.azure.authenticator.databinding.PaymentInfoBottomSheetLayoutBinding bind(android.view.View)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$3: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$10: void <init>(long,com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate: int[] getState()>
<com.facebook.react.uimanager.events.EventDispatcher: void clearEventsToDispatch()>
<java.io.File: boolean setLastModified(long)>
<com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)>
<com.google.android.gms.cloudmessaging.zzv: void <init>(com.google.android.gms.cloudmessaging.Rpc,android.os.Bundle)>
<com.facebook.react.modules.camera.CameraRollManager$GetMediaTask: void <init>(com.facebook.react.bridge.ReactContext,int,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray,java.lang.String,java.lang.Integer,com.facebook.react.bridge.Promise)>
<com.facebook.soloader.SysUtil: int findAbiScore(java.lang.String[],java.lang.String)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInterface: java.lang.String getGpsAdid()>
<com.google.android.gms.measurement.internal.zzkk: boolean zzan(java.lang.String)>
<com.google.android.gms.internal.measurement.zzgs: java.lang.String zzg(java.nio.charset.Charset)>
<com.facebook.imageutils.JfifUtil: int getAutoRotateAngleFromOrientation(int)>
<com.google.android.gms.internal.auth.zzat: void <init>(com.google.android.gms.internal.auth.zzas)>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
<com.facebook.react.ReactInstanceManager: boolean access$1002(com.facebook.react.ReactInstanceManager,boolean)>
<com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: void <init>()>
<com.airbnb.lottie.model.layer.TextLayer: void applyJustification(com.airbnb.lottie.model.DocumentData$Justification,android.graphics.Canvas,float)>
<com.airbnb.lottie.model.layer.Layer: void <init>(java.util.List,com.airbnb.lottie.LottieComposition,java.lang.String,long,com.airbnb.lottie.model.layer.Layer$LayerType,long,java.lang.String,java.util.List,com.airbnb.lottie.model.animatable.AnimatableTransform,int,int,int,float,float,int,int,com.airbnb.lottie.model.animatable.AnimatableTextFrame,com.airbnb.lottie.model.animatable.AnimatableTextProperties,java.util.List,com.airbnb.lottie.model.layer.Layer$MatteType,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: boolean enableAndPromptAppLock(androidx.fragment.app.FragmentActivity)>
<com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String _addSymbol(char[],int,int,int,int)>
<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getTCL()>
<ch.qos.logback.core.pattern.parser.FormattingNode: void <init>(int,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzjg: java.lang.String zzg(int)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateClippingRect()>
<com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)>
<android.util.SparseArray: void <init>()>
<com.google.android.material.animation.AnimationUtils: int lerp(int,int,float)>
<com.google.android.material.chip.ChipGroup: int getChipCount()>
<com.google.android.gms.measurement.internal.zzai: long zzB()>
<com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeAndReplaceMenu(int,int)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$validateMsaAccounts$2: void <init>(com.azure.authenticator.authentication.msa.MsaAccountManager,kotlin.coroutines.Continuation)>
<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildByDays(double)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void injectFcmRegistrationManager(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<com.evernote.android.job.JobStorage: com.evernote.android.job.JobRequest access$400(com.evernote.android.job.JobStorage,int,boolean)>
<com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)>
<com.google.crypto.tink.PrimitiveSet$Entry: byte[] getIdentifier()>
<android.graphics.Bitmap$Config: java.lang.String name()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.cache.disk.FileCache getMainFileCache()>
<android.widget.CheckBox: void setTextAppearance(int)>
<android.text.StaticLayout: void draw(android.graphics.Canvas)>
<com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog zaf(android.content.Context,int,com.google.android.gms.common.internal.zag,android.content.DialogInterface$OnCancelListener)>
<com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions zze()>
<com.google.android.gms.measurement.internal.zzd: void zzh(long,com.google.android.gms.measurement.internal.zzhu)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: void setOverlayTop(int)>
<com.google.android.gms.internal.measurement.zzby: boolean zzf()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAddAccountCancel$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.react.modules.datepicker.DismissableDatePickerDialog: void fixSpinner(android.content.Context,int,int,int)>
<com.microsoft.authenticator.commonuilibrary.dialogqueue.DialogTaskQueue: boolean enqueueTask(com.microsoft.authenticator.commonuilibrary.dialogqueue.AbstractDialogTask)>
<com.google.android.gms.measurement.internal.zzjt: void zzh()>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectBrooklynConfig(com.azure.authenticator.PhoneFactorApplication,com.microsoft.brooklyn.config.BrooklynConfig)>
<com.adjust.sdk.AdjustFactory: long getMaxDelayStart()>
<ch.qos.logback.classic.net.server.SSLServerSocketAppender: void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setScrollEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean)>
<com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>
<com.facebook.react.modules.network.ResponseUtil: void onIncrementalDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String,long,long)>
<com.google.android.gms.internal.measurement.zzck: boolean zza()>
<com.facebook.react.modules.camera.CameraRollManager: void access$400(android.database.Cursor,com.facebook.react.bridge.WritableMap,int)>
<com.google.android.material.timepicker.TimePickerView$3: void <init>(com.google.android.material.timepicker.TimePickerView)>
<com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior getBehavior()>
<android.view.View: int combineMeasuredStates(int,int)>
<com.azure.authenticator.databinding.MsaSessionDialogBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.TextView,android.widget.ProgressBar)>
<com.google.crypto.tink.proto.KeyTemplate: java.lang.String getTypeUrl()>
<com.google.android.gms.measurement.internal.zzec: boolean zzi(com.google.android.gms.measurement.internal.zzas)>
<com.facebook.imagepipeline.memory.BitmapCounter$1: void release(android.graphics.Bitmap)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canDragView(com.google.android.material.appbar.AppBarLayout)>
<android.content.pm.PackageInstaller: java.util.List getAllSessions()>
<bolts.Task$10: void <init>(bolts.Task,bolts.TaskCompletionSource,bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>
<android.content.res.Resources$NotFoundException: void <init>()>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: int hashCode()>
<ch.qos.logback.classic.spi.StackTraceElementProxy: java.lang.String toString()>
<com.google.android.material.datepicker.TimeSource: void <init>(java.lang.Long,java.util.TimeZone)>
<java.net.URI: java.lang.String toString()>
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.google.android.gms.common.internal.zax: void <init>(int,int,int,com.google.android.gms.common.api.Scope[])>
<com.google.android.gms.maps.GoogleMapOptions: int getMapType()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void w(java.lang.String)>
<com.google.android.material.appbar.AppBarLayout: boolean hasChildWithInterpolator()>
<com.facebook.react.modules.camera.ImageEditingManager: java.io.File access$300(android.content.Context,android.graphics.Bitmap,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig: void <init>(com.google.android.datatransport.runtime.time.Clock,java.util.Map)>
<com.facebook.react.bridge.NativeModule: void initialize()>
<com.google.android.gms.internal.measurement.zzp: void setDataCollectionEnabled(boolean)>
<com.google.android.material.navigation.NavigationBarView$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.azure.authenticator.databinding.AadPhoneSignInCompleteBinding: com.azure.authenticator.databinding.AadPhoneSignInCompleteBinding bind(android.view.View)>
<com.azure.authenticator.databinding.FragmentAddressListBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
<com.facebook.fbreact.specs.NativeCameraRollManagerSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.transformation.FabTransformationBehavior: void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF)>
<com.google.android.gms.measurement.internal.zzfc: boolean zzm(java.lang.String)>
<com.google.android.material.internal.TextDrawableHelper: android.text.TextPaint getTextPaint()>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int)>
<android.text.DynamicLayout: void draw(android.graphics.Canvas)>
<com.airbnb.lottie.parser.moshi.JsonReader: boolean nextBoolean()>
<com.google.android.gms.internal.measurement.zzco: com.google.android.gms.internal.measurement.zzcn zzb(int)>
<com.airbnb.lottie.utils.Utils$4: void <init>()>
<ch.qos.logback.core.joran.action.ActionUtil: void setProperty(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,java.lang.String,ch.qos.logback.core.joran.action.ActionUtil$Scope)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void close()>
<com.google.android.gms.internal.safetynet.zzg: void zzb(com.google.android.gms.common.api.Status,boolean)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getPrimaryUrl()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String get()>
<com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context)>
<com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AnyClientKey zac()>
<com.airbnb.lottie.LottieComposition: androidx.collection.SparseArrayCompat getCharacters()>
<java.util.ArrayList: boolean remove(java.lang.Object)>
<com.facebook.imagepipeline.request.Postprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void updateNativeChildrenCountInParent(int)>
<com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.azure.authenticator.databinding.ToolbarLayoutBinding: com.azure.authenticator.databinding.ToolbarLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.common.api.internal.zaag: void <init>(com.google.android.gms.common.api.internal.zabd)>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>
<java.lang.String: java.lang.String valueOf(int)>
<com.google.android.material.navigation.NavigationBarItemView: void setShifting(boolean)>
<com.evernote.android.job.work.TransientBundleHolder: void putBundle(int,android.os.Bundle)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void upgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setInitialPage(com.facebook.react.views.viewpager.ReactViewPager,int)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.ChangePasswordFormDatasetUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations,com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()>
<com.airbnb.lottie.model.MutablePair: boolean objectsEqual(java.lang.Object,java.lang.Object)>
<ch.qos.logback.classic.joran.action.ConfigurationAction: ch.qos.logback.core.util.Duration getDurationOfScanPeriodAttribute(java.lang.String,ch.qos.logback.core.util.Duration)>
<com.facebook.react.views.textinput.ReactTextInputSelectionEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()>
<com.azure.authenticator.databinding.PasswordFabOptionBottomSheetBinding: com.azure.authenticator.databinding.PasswordFabOptionBottomSheetBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: boolean hasIntegerTokenCOnverter()>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)>
<com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)>
<com.evernote.android.job.util.JobPreconditions: long checkArgumentPositive(long,java.lang.String)>
<java.util.Collections: java.util.List singletonList(java.lang.Object)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.google.android.gms.measurement.internal.zzgc: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String,java.lang.String,java.lang.String,long)>
<ch.qos.logback.core.joran.spi.Interpreter: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.RuleStore,ch.qos.logback.core.joran.spi.ElementPath)>
<com.facebook.common.memory.PooledByteBufferInputStream: int available()>
<com.adjust.sdk.SharedPreferencesManager: void saveRawReferrer(java.lang.String,long)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$300(com.facebook.imagepipeline.cache.BufferedDiskCache)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaG(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjk: void zzN(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.google.android.gms.internal.measurement.zzjk: com.google.android.gms.internal.measurement.zzjw zzA()>
<com.evernote.android.job.JobRescheduleService: int rescheduleJobs(com.evernote.android.job.JobManager,java.util.Collection)>
<com.google.android.gms.measurement.internal.zzhn: void zzJ(com.google.android.gms.measurement.internal.zzgm)>
<FLOWDROID_EXCEPTIONS: void throw_java_lang_Exception_0()>
<okio.BufferedSink: long writeAll(okio.Source)>
<com.microsoft.authenticator.msa.entities.ValidateMsaAccountResult$AccountSignedOut: void <init>(java.lang.String,boolean,android.os.Bundle)>
<com.microsoft.did.di.VcWalletModule_ProvideIssuanceServiceFactory: com.microsoft.did.sdk.IssuanceService provideIssuanceService(com.microsoft.did.di.VcWalletModule)>
<android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
<androidx.navigation.NavController: void setGraph(androidx.navigation.NavGraph,android.os.Bundle)>
<com.facebook.react.bridge.Dynamic: void recycle()>
<com.google.android.gms.internal.maps.zzw: boolean zzb(com.google.android.gms.internal.maps.zzw)>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzx(boolean)>
<com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface: void setPeekEnabled(android.view.View,boolean)>
<java.nio.ByteBuffer: java.nio.Buffer limit(int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.callercontext.CallerContextVerifier getCallerContextVerifier()>
<com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAllSuccess(java.util.Collection)>
<com.facebook.imagepipeline.cache.MemoryCache: com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference)>
<com.google.android.gms.location.zzas: void <init>(java.util.List)>
<android.content.IntentFilter: void <init>(java.lang.String)>
<com.google.android.gms.common.data.DataBuffer: java.util.Iterator iterator()>
<com.airbnb.lottie.parser.AnimatableTextPropertiesParser: com.airbnb.lottie.model.animatable.AnimatableTextProperties parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.dynamite.zzb: void <init>()>
<com.azure.authenticator.databinding.ImportPasswordLoaderFragmentBinding: android.widget.RelativeLayout getRoot()>
<ch.qos.logback.core.util.OptionHelper: void setSystemProperties(ch.qos.logback.core.spi.ContextAware,java.util.Properties)>
<com.facebook.imagepipeline.platform.PlatformDecoder: com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,android.graphics.ColorSpace)>
<com.facebook.react.modules.core.PermissionAwareActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)>
<com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()>
<com.google.android.gms.tasks.zzo: void <init>(com.google.android.gms.tasks.zzp,com.google.android.gms.tasks.Task)>
<com.google.android.gms.maps.model.PolygonOptions: boolean isGeodesic()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager discoveryMetadataManager()>
<com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onHidden()>
<com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()>
<com.google.android.gms.common.api.GoogleApiClient: void unregisterConnectionFailedListener(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.google.crypto.tink.Registry$KeyManagerContainer: java.lang.Class publicKeyManagerClassOrNull()>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setProgress(float)>
<com.google.android.gms.common.internal.zac: java.lang.String zac(android.content.Context,int)>
<com.facebook.common.webp.WebpSupportStatus: boolean isAnimatedWebpHeader(byte[],int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String getViewClass()>
<java.lang.Character: char toLowerCase(char)>
<com.azure.authenticator.databinding.FragmentViewPaymentBinding: void <init>(android.widget.ScrollView,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout)>
<com.google.android.gms.measurement.internal.zzfc: void zzn(java.lang.String)>
<com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)>
<com.facebook.cache.disk.DiskStorage: com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object)>
<com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderStyle(java.lang.String)>
<com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInAccount getSavedDefaultGoogleSignInAccount()>
<com.google.common.base.CaseFormat: java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String)>
<androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>
<ch.qos.logback.core.pattern.parser.OptionTokenizer: void tokenize(char,java.util.List)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateShapeElevation(float)>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: long getLastEventBetweenTimestamps(com.facebook.react.common.LongArray,long,long)>
<com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager: void checkForAuths(androidx.fragment.app.FragmentActivity,boolean,boolean,boolean,com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager$AuthCallType,boolean)>
<android.widget.CheckBox: boolean onHoverEvent(android.view.MotionEvent)>
<com.google.android.gms.internal.measurement.zzmz: boolean zza()>
<com.google.android.material.transformation.ExpandableTransformationBehavior: android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)>
<com.google.android.material.button.MaterialButtonToggleGroup$2: void <init>(com.google.android.material.button.MaterialButtonToggleGroup)>
<java.io.Writer: void write(char[],int,int)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzp zzam(java.lang.String)>
<com.evernote.android.job.Job: long getFinishedTimeStamp()>
<com.google.android.gms.maps.model.CircleOptions: boolean isClickable()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean isEditable(android.widget.EditText)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: void <init>(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.airbnb.lottie.network.FileExtension: java.lang.String tempExtension()>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()>
<com.facebook.soloader.UnpackingSoSource$DsoManifest: void <init>(com.facebook.soloader.UnpackingSoSource$Dso[])>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.PointF getActualImageFocusPoint()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: void setUsername(java.lang.String)>
<androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzex: com.google.android.gms.measurement.internal.zzaf zzi()>
<com.google.android.gms.internal.measurement.zzen: void <init>(android.content.ContentResolver,android.net.Uri)>
<com.google.android.gms.internal.location.zzbp: int zzc()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketComplete$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<android.graphics.RectF: boolean intersect(float,float,float,float)>
<com.facebook.imagepipeline.producers.BaseConsumer: boolean isLast(int)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void getStreetViewPanoramaAsync(com.google.android.gms.maps.internal.zzbp)>
<android.widget.Button: void setTextColor(int)>
<com.facebook.react.uimanager.UIViewOperationQueue: boolean access$1600(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.google.android.gms.maps.internal.zzak: void <init>()>
<com.airbnb.lottie.model.content.GradientFill: boolean isHidden()>
<android.widget.LinearLayout: int[] mergeDrawableStates(int[],int[])>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void jumpDrawableToCurrentState()>
<bolts.Task: bolts.Task forError(java.lang.Exception)>
<com.airbnb.lottie.LottieDrawable: void setMinFrame(java.lang.String)>
<com.azure.authenticator.notifications.msa.MsaNotification: java.lang.Object handleRequestWithResult$suspendImpl(com.azure.authenticator.notifications.msa.MsaNotification,android.os.Bundle,kotlin.coroutines.Continuation)>
<com.facebook.react.uimanager.events.TouchEvent: float getViewY()>
<android.graphics.Rect: void setEmpty()>
<android.widget.EditText: void setShowSoftInputOnFocus(boolean)>
<com.airbnb.lottie.LottieAnimationView: void setAnimationFromJson(java.lang.String,java.lang.String)>
<com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String,java.lang.Object)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt)>
<com.facebook.imagepipeline.platform.PlatformDecoderFactory: com.facebook.imagepipeline.platform.PlatformDecoder buildPlatformDecoder(com.facebook.imagepipeline.memory.PoolFactory,boolean)>
<android.graphics.Path: void rewind()>
<com.facebook.drawee.backends.pipeline.DraweeConfig: com.facebook.common.internal.Supplier getDebugOverlayEnabledSupplier()>
<com.google.android.gms.common.internal.zaa: void <init>()>
<com.google.android.gms.internal.measurement.zzy: void <init>(long,long,boolean,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()>
<com.google.android.gms.measurement.internal.zzhn: java.util.Map zzQ(java.lang.String,java.lang.String,boolean)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void <init>()>
<com.facebook.drawee.controller.ControllerListener: void onFailure(java.lang.String,java.lang.Throwable)>
<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzgx: void zzm(int)>
<com.adjust.sdk.ActivityPackage: java.lang.String getExtendedString()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
<com.google.android.gms.internal.measurement.zzeu: java.lang.String zzb(java.lang.String)>
<com.azure.authenticator.jobs.DeferrableWorkerUtils: void cancelWork(java.lang.Class)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: void access$100(com.google.android.material.textfield.ClearTextEndIconDelegate,boolean)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion: void onAddAccountCancel()>
<com.facebook.imagepipeline.image.EncodedImage: java.lang.String getFirstBytesAsHexString(int)>
<com.google.android.material.textfield.IndicatorViewController: void setErrorContentDescription(java.lang.CharSequence)>
<com.google.android.material.navigation.NavigationBarView$1: void <init>(com.google.android.material.navigation.NavigationBarView)>
<com.facebook.soloader.UnpackingSoSource$InputDsoIterator: void <init>()>
<com.google.android.material.internal.ThemeEnforcement: android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>
<com.facebook.react.uimanager.UIManagerModule$3: void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.UIManager,int,com.facebook.react.bridge.ReadableMap)>
<com.adjust.sdk.scheduler.ThreadFactoryWrapper$1: void <init>(com.adjust.sdk.scheduler.ThreadFactoryWrapper)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker mfaSilentLocationWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.imagepipeline.producers.JobScheduler: long getQueuedTime()>
<com.airbnb.lottie.model.animatable.AnimatableFloatValue: java.util.List getKeyframes()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.passwordautochange.PasswordAutoChangeViewModel passwordAutoChangeViewModel()>
<com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask addListener(com.airbnb.lottie.LottieListener)>
<com.google.android.gms.internal.measurement.zzla: long zzp()>
<java.util.AbstractList: int size()>
<android.graphics.Rect: void offset(int,int)>
<com.google.android.gms.internal.measurement.zzp: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)>
<com.google.android.gms.common.internal.BaseGmsClient: android.accounts.Account getAccount()>
<com.azure.authenticator.databinding.FragmentEditAddAddressBinding: android.widget.ScrollView getRoot()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void setProgress(float)>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.adjust.sdk.OnDeviceIdsRead: void onGoogleAdIdRead(java.lang.String)>
<com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)>
<java.lang.String: boolean isEmpty()>
<com.google.android.gms.internal.auth.zzx: void zza(com.google.android.gms.auth.api.accounttransfer.DeviceMetaData)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.ui.MainActivity access$getMainActivity$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.microsoft.authenticator.reactnative.modules.SendFeedbackPackage: void <init>()>
<java.io.RandomAccessFile: byte readByte()>
<com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.RedBoxHandler getRedBoxHandler()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.lang.String zag(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.adjust.sdk.ActivityHandler: void writeSessionCallbackParametersI()>
<com.microsoft.powerlift.util.EasyIds: java.lang.String generate()>
<com.microsoft.brooklyn.ui.payment.PaymentViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: int getValue()>
<com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker: void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1)>
<kotlin.NoWhenBranchMatchedException: void <init>()>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int getSoftwareNumerator(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,boolean)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: java.lang.String getValueAsString(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$launchCheckWorkplaceJoinStatus$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.soloader.SoLoader: void init(android.content.Context,int)>
<com.google.android.gms.internal.measurement.zzjh: java.lang.String zzd()>
<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>
<com.azure.authenticator.ui.MainActivity: java.lang.Object promptForAppLockIfNecessary(kotlin.coroutines.Continuation)>
<android.content.ContentValues: void <init>()>
<java.util.ArrayList: void <init>(int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$startWorkplaceJoin$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: boolean isAuthActivityActive()>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>
<com.google.android.material.internal.FlowLayout: void setLineSpacing(int)>
<com.google.android.material.textfield.TextInputLayout: android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs: java.util.HashMap access$000(com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: void <init>()>
<com.airbnb.lottie.parser.LottieCompositionMoshiParser: com.airbnb.lottie.LottieComposition parse(com.airbnb.lottie.parser.moshi.JsonReader)>
<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: boolean containsSync(com.facebook.cache.common.CacheKey)>
<com.google.android.gms.maps.zzw: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveCanceledListener)>
<com.google.android.material.appbar.AppBarLayout: void onOffsetChanged(int)>
<com.google.android.gms.internal.auth.zzb: void <init>(java.lang.String)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void maybeNotifyExclusiveEntryRemoval(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.airbnb.lottie.LottieResult: java.lang.Throwable getException()>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: boolean zzd(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<com.google.android.gms.common.api.Api$AbstractClientBuilder: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity)>
<com.adjust.sdk.UtilNetworking$ConnectionOptions: void <init>()>
<com.google.android.material.chip.ChipDrawable: void setCloseIconSize(float)>
<com.google.android.gms.maps.model.MarkerOptions: float getZIndex()>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest: com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder zzc(com.google.android.gms.auth.api.identity.GetSignInIntentRequest)>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
<com.google.common.base.CharMatcher$IsNot: void <init>(char)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: androidx.lifecycle.LiveData getLeaveWpjStatus()>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getBearing()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.mfa.businessLogic.RegisterAadMfaAccountUseCase registerAadMfaAccountUseCase()>
<com.adjust.sdk.AdjustFactory: void setTimerStart(long)>
<com.google.android.gms.maps.model.SquareCap: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void animateToExpansionFraction(float)>
<com.google.android.gms.internal.measurement.zzkz: long zzd()>
<com.adjust.sdk.UtilNetworking: java.lang.String extractSecretId(java.util.Map)>
<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCComment()>
<com.microsoft.authenticator.notifications.controller.FcmTokenRefreshWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<javax.net.ssl.SSLSocket: java.lang.String toString()>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.ILogger getLogger()>
<com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isPlayServicesPossiblyUpdating(android.content.Context,int)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>
<com.google.android.gms.internal.measurement.zzgx: void zzj(byte)>
<com.google.android.gms.common.api.internal.zabd: com.google.android.gms.common.api.internal.zaba zau(com.google.android.gms.common.api.internal.zabd)>
<com.airbnb.lottie.parser.ScaleXYParser: com.airbnb.lottie.value.ScaleXY parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.facebook.react.views.view.ViewGroupClickEvent: java.lang.String getEventName()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnCameraMoveListener(com.google.android.gms.maps.internal.zzr)>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>
<com.google.android.gms.maps.model.BitmapDescriptorFactory: void zza(com.google.android.gms.internal.maps.zze)>
<com.facebook.imagepipeline.memory.MemoryChunk: long getNativePtr()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger access$100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<dummyMainClass: androidx.work.impl.diagnostics.DiagnosticsReceiver dummyMainMethod_androidx_work_impl_diagnostics_DiagnosticsReceiver(android.content.Intent)>
<com.google.android.material.bottomnavigation.BottomNavigationItemView: void <init>(android.content.Context)>
<com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()>
<com.google.android.gms.auth.api.credentials.HintRequest: boolean isEmailAddressIdentifierSupported()>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector)>
<com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onCreate(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdj: void zzaE(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.google.android.gms.common.internal.BaseGmsClient: void onConnectionSuspended(int)>
<android.app.ActivityManager$RunningAppProcessInfo: void <init>()>
<com.google.android.gms.location.zzak: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.common.api.internal.ListenerHolder)>
<ch.qos.logback.classic.spi.IThrowableProxy: int getCommonFrames()>
<com.google.android.gms.internal.measurement.zzih: java.lang.Object zzg(int)>
<ch.qos.logback.core.pattern.DynamicConverter: void stop()>
<androidx.lifecycle.ViewModelLazy: void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>
<com.google.android.gms.common.SignInButton: void zaa(android.content.Context)>
<com.google.android.gms.common.api.internal.ListenerHolders: void <init>()>
<com.facebook.imagepipeline.producers.DataFetchProducer: boolean isBase64(java.lang.String)>
<com.google.android.gms.auth.api.identity.zzk: void <init>()>
<com.azure.authenticator.databinding.AddNewMfaAccountBinding: void <init>(android.widget.ScrollView,android.widget.Button,android.widget.EditText,android.widget.EditText)>
<android.widget.FrameLayout: android.view.ViewTreeObserver getViewTreeObserver()>
<com.microsoft.authenticator.authentication.msa.entities.MsaSession: android.os.Bundle toBundle()>
<ch.qos.logback.core.rolling.helper.FileFinder: java.util.List splitPath(java.lang.String)>
<dummyMainClass: com.evernote.android.job.v14.PlatformAlarmServiceExact dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmServiceExact(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzkz: long zzB()>
<com.airbnb.lottie.animation.content.ContentGroup: com.airbnb.lottie.model.animatable.AnimatableTransform findTransform(java.util.List)>
<com.airbnb.lottie.value.ScaleXY: boolean equals(float,float)>
<com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager: void <init>(android.content.Context,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager,com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationUseCase)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$ensureBeginTransaction$15(android.database.sqlite.SQLiteDatabase)>
<ch.qos.logback.core.LayoutBase: void setContext(ch.qos.logback.core.Context)>
<java.lang.String: java.lang.String substring(int,int)>
<com.google.android.gms.measurement.internal.zzho: void zzd(com.google.android.gms.measurement.internal.zzgl)>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>
<com.facebook.react.modules.websocket.WebSocketModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.common.internal.BaseGmsClient: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailabilityLight,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener,java.lang.String)>
<com.google.android.gms.internal.maps.zzq: int zzj()>
<android.widget.CheckBox: void setTag(int,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzha: void zzm(int,java.lang.String)>
<androidx.transition.TransitionSet: androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks: void onSignOutComplete()>
<android.widget.FrameLayout: void setLayerType(int,android.graphics.Paint)>
<com.google.android.material.textfield.CutoutDrawable: boolean hasCutout()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$hideProgress(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<com.google.android.gms.location.zzf: void <init>(com.google.android.gms.location.ActivityTransitionRequest,android.app.PendingIntent)>
<ch.qos.logback.classic.util.ContextSelectorStaticBinder: ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String)>
<com.google.android.gms.common.api.internal.zaam: void <init>(com.google.android.gms.common.api.internal.zaar,java.util.ArrayList)>
<com.google.android.gms.common.api.internal.zabl: void zaw(com.google.android.gms.common.api.internal.zabl,com.google.android.gms.common.api.Status)>
<com.google.android.gms.internal.measurement.zzil: com.google.android.gms.internal.measurement.zzil zzc()>
<kotlin.collections.CollectionsKt: void throwCountOverflow()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.ImageCacheStatsTracker getImageCacheStatsTracker()>
<com.google.android.gms.maps.model.PolygonOptions: float getZIndex()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onStart()>
<com.google.android.gms.cloudmessaging.Rpc: void zza(java.lang.String,android.os.Bundle)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$showMsaErrorDialog(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,java.lang.Exception)>
<android.widget.HorizontalScrollView: void onDraw(android.graphics.Canvas)>
<com.google.android.gms.internal.measurement.zzgz: com.google.android.gms.internal.measurement.zzgz zzt(byte[])>
<android.widget.ImageButton: float getTranslationZ()>
<android.widget.HorizontalScrollView: int getHeight()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$$special$$inlined$viewModels$1: void <init>(androidx.activity.ComponentActivity)>
<com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace: boolean isTracing()>
<com.google.android.gms.internal.auth.zzaw: void <init>(com.google.android.gms.common.api.Status)>
<java.io.DataInputStream: java.lang.String readUTF()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean)>
<com.google.android.gms.location.zzc: void <init>(long,android.app.PendingIntent)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void handleGetMsaTicketResult(com.microsoft.authenticator.msa.entities.GetMsaTicketResult)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onUserCancel$1: void <init>(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback,kotlin.coroutines.Continuation)>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)>
<com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: int getMaxCacheSize()>
<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager)>
<com.google.android.gms.tasks.Task: void <init>()>
<com.facebook.soloader.FileLocker: com.facebook.soloader.FileLocker lock(java.io.File)>
<com.facebook.react.views.switchview.ReactSwitch: void <init>(android.content.Context)>
<com.google.android.material.datepicker.MaterialDatePicker: int getPaddedPickerWidth(android.content.Context)>
<com.facebook.react.ReactInstanceManager: void access$000(com.facebook.react.ReactInstanceManager)>
<androidx.work.Data$Builder: androidx.work.Data build()>
<com.google.android.gms.measurement.AppMeasurementJobService: com.google.android.gms.measurement.internal.zzjh zzd()>
<com.google.android.gms.common.stats.ConnectionTracker: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object)>
<com.azure.authenticator.databinding.ViewLogBinding: android.widget.RelativeLayout getRoot()>
<com.google.android.gms.measurement.internal.zzhn: void zzY(java.lang.Boolean,boolean)>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity: java.lang.Object generatedComponent()>
<com.google.android.gms.common.api.internal.RegistrationMethods: com.google.android.gms.common.api.internal.RegistrationMethods$Builder builder()>
<com.facebook.cache.common.CacheEventListener: void onWriteAttempt(com.facebook.cache.common.CacheEvent)>
<com.adjust.sdk.MacAddressUtil: java.lang.String loadAddress(java.lang.String)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.internal.ads_identifier.zze zza(android.content.Context,com.google.android.gms.common.BlockingServiceConnection)>
<com.azure.authenticator.databinding.FragmentSharedModeBinding: com.azure.authenticator.databinding.FragmentSharedModeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza(android.content.Context,java.lang.String)>
<com.google.android.gms.internal.location.zzam: void zzq(android.location.Location)>
<com.google.android.gms.common.api.internal.zas: void zaa(com.google.android.gms.common.api.internal.zat)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>
<com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient: int zzl()>
<com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)>
<com.adjust.sdk.IActivityHandler: void gotOptOutResponse()>
<java.util.zip.ZipFile: void <init>(java.io.File)>
<com.microsoft.authenticator.graphclient.GraphHelper: void <init>()>
<com.google.crypto.tink.proto.KeyTemplate$Builder: com.google.crypto.tink.proto.KeyTemplate$Builder setTypeUrl(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()>
<com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: void internalPrepareBitmap(com.facebook.common.references.CloseableReference)>
<com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.WritableNativeArray)>
<ch.qos.logback.core.util.Loader: java.lang.Class loadClass(java.lang.String,ch.qos.logback.core.Context)>
<com.google.android.gms.common.logging.Logger: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.facebook.drawee.controller.AbstractDraweeController: boolean isExpectedDataSource(java.lang.String,com.facebook.datasource.DataSource)>
<com.facebook.react.animated.NativeAnimatedModule$9: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,double)>
<com.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>
<com.facebook.react.views.scroll.ReactScrollView: void updateState(com.facebook.react.uimanager.StateWrapper)>
<com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forException(java.lang.Exception)>
<com.facebook.common.internal.Suppliers: com.facebook.common.internal.Supplier of(java.lang.Object)>
<com.facebook.drawee.controller.AbstractDraweeController: void access$000(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean)>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabCradleRoundedCornerRadius(float)>
<com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAll(java.util.Collection)>
<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.Converter compile()>
<java.lang.Boolean: boolean equals(java.lang.Object)>
<com.google.android.gms.common.util.MapUtils: void writeStringMapToJson(java.lang.StringBuilder,java.util.HashMap)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void ensureConfigured(android.database.sqlite.SQLiteDatabase)>
<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>
<com.google.android.gms.measurement.internal.zzhn: void zzU(android.os.Bundle)>
<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.azure.authenticator.ui.fragment.main.Hilt_SendFeedbackFragment: dagger.hilt.android.internal.managers.FragmentComponentManager createComponentManager()>
<androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$1902(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<com.facebook.imagepipeline.memory.BitmapPoolBackend: void <init>()>
<com.facebook.react.bridge.JavaJSExecutor: void close()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>
<android.view.View: void getLocationInWindow(int[])>
<com.microsoft.brooklyn.ui.credential.EditCredentialFragment_MembersInjector: void injectPasswordChangeAutomationSpecClient(com.microsoft.brooklyn.ui.credential.EditCredentialFragment,com.microsoft.vienna.sdk.AutomationSpecClient)>
<com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.OutputPrefixType getOutputPrefixType()>
<android.widget.CompoundButton: int getMeasuredWidth()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void access$showSignInButton(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,java.lang.String)>
<com.airbnb.lottie.animation.content.BaseStrokeContent: void applyTrimPath(android.graphics.Canvas,com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup,android.graphics.Matrix)>
<com.google.android.datatransport.runtime.backends.BackendRequest$Builder: void <init>()>
<com.google.android.gms.internal.measurement.zzjs: java.lang.Object zzf(java.lang.Comparable,java.lang.Object)>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<com.facebook.react.uimanager.TouchTargetHelper: android.view.View findClosestReactAncestor(android.view.View)>
<com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: boolean isExpectedFile(java.io.File)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.authentication.PaymentsAutofillAuthActivity injectPaymentsAutofillAuthActivity2(com.microsoft.brooklyn.module.autofill.authentication.PaymentsAutofillAuthActivity)>
<com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.measurement.zzla: long zzx()>
<com.evernote.android.job.JobProxy$Common: com.evernote.android.job.Job$Result executeJobRequest(com.evernote.android.job.JobRequest,android.os.Bundle)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig: void <init>(int,boolean,boolean,boolean,int)>
<com.azure.authenticator.jwe.CryptoHelper$Companion: void <init>()>
<com.facebook.react.views.text.ReactFontManager$FontFamily: void <init>(com.facebook.react.views.text.ReactFontManager$1)>
<com.azure.authenticator.OnAppUpgradeReceiver$setFingerprintPreferenceIfNecessary$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.datatransport.runtime.logging.Logging: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<com.github.amlcurran.showcaseview.ShowcaseView: void access$800(com.github.amlcurran.showcaseview.ShowcaseView,android.view.ViewGroup,int)>
<javax.net.ssl.SSLSocket: boolean getTcpNoDelay()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>
<com.google.android.gms.common.util.ProcessUtils: java.lang.String getMyProcessName()>
<com.google.android.gms.common.internal.zzac: void <init>(android.os.IBinder)>
<com.google.android.gms.internal.measurement.zzdq: java.util.List zza()>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.BackoffStrategy getSdkClickBackoffStrategy()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow,com.microsoft.onlineid.UserKey,kotlin.coroutines.Continuation)>
<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.producers.NetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int)>
<com.facebook.imagepipeline.memory.BitmapCounterProvider: com.facebook.imagepipeline.memory.BitmapCounter get()>
<com.google.android.gms.internal.measurement.zzja: int zzu(java.lang.Object,byte[],int,int,int,int,int,int,int,long,int,com.google.android.gms.internal.measurement.zzge)>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>
<com.facebook.drawee.controller.ForwardingControllerListener: void <init>()>
<android.app.PendingIntent: void send()>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void onResponse(com.facebook.imagepipeline.producers.FetchState,java.io.InputStream,int)>
<com.google.android.gms.internal.measurement.zzcq: void <init>(com.google.android.gms.internal.measurement.zzcl)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzY(java.lang.String)>
<com.airbnb.lottie.LottieComposition: java.util.List getPrecomps(java.lang.String)>
<java.security.GeneralSecurityException: void <init>(java.lang.String)>
<ch.qos.logback.core.subst.NodeToStringTransformer: void compileNode(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack)>
<com.microsoft.did.util.DidStorage: boolean readIsWelcomePageVisited(android.content.Context)>
<java.util.Collection: int size()>
<com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: com.azure.authenticator.storage.database.DbAccount copy$default(com.azure.authenticator.storage.database.DbAccount,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setFailedResult(com.google.android.gms.common.api.Status)>
<com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser getInstance()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void onSaveInstanceState(android.os.Bundle)>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()>
<dummyMainClass: com.azure.authenticator.ui.authentication.MsaSessionActivity dummyMainMethod_com_azure_authenticator_ui_authentication_MsaSessionActivity(android.content.Intent)>
<com.google.android.material.internal.ViewUtils: float dpToPx(android.content.Context,int)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase: void <init>()>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<com.google.android.gms.common.internal.GetServiceRequest: void <init>(int,java.lang.String)>
<com.google.android.datatransport.cct.internal.LogRequest: long getRequestUptimeMs()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: void <init>(com.azure.authenticator.ui.action.UserInteractionRequiredActionManager,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage)>
<com.evernote.android.job.JobExecutor$JobCallable: com.evernote.android.job.Job$Result call()>
<android.text.TextPaint: void <init>(int)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzy(com.google.android.gms.common.AccountPicker$AccountChooserOptions,java.lang.String)>
<com.google.android.gms.tasks.zzv: void zzb(com.google.android.gms.tasks.zzq)>
<java.lang.Character: boolean isJavaIdentifierPart(char)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: boolean isBuildingsEnabled()>
<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: void <init>(java.io.InputStream,byte[],com.facebook.common.references.ResourceReleaser)>
<com.google.android.gms.measurement.internal.zzjb: void zzm(com.google.android.gms.measurement.internal.zzaa)>
<com.facebook.soloader.SoLoader: boolean loadLibraryBySoNameImpl(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<com.google.android.material.navigation.NavigationBarItemView: void calculateTextScaleFactors(float,float)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem: int getActionContentDescriptionTextResourceId()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean getUseBitmapPrepareToDraw()>
<com.airbnb.lottie.LottieAnimationView: void enableOrDisableHardwareLayer()>
<com.facebook.react.modules.network.NetworkingModule$UriHandler: com.facebook.react.bridge.WritableMap fetch(android.net.Uri)>
<com.google.android.gms.internal.measurement.zzit: com.google.android.gms.internal.measurement.zzis zza()>
<ch.qos.logback.core.AsyncAppenderBase: boolean isQueueBelowDiscardingThreshold()>
<com.google.android.gms.auth.api.identity.SignInCredential: java.lang.String getDisplayName()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase,com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase,com.microsoft.authenticator.authentication.aad.businessLogic.AadPhoneSignInSessionUseCase,com.microsoft.authenticator.location.LocationManager,com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<com.google.android.gms.internal.measurement.zzgs: java.lang.String zzl(java.nio.charset.Charset)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$registerActivityLaunchers$6$SettingsFragment(androidx.activity.result.ActivityResult)>
<com.facebook.react.ReactInstanceManager: void showDevOptionsDialog()>
<com.adjust.sdk.Logger: void error(java.lang.String,java.lang.Object[])>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods$Builder register(com.google.android.gms.common.api.internal.RemoteCall)>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: void set(long,long)>
<com.azure.authenticator.storage.Storage: java.util.Set readAccountsMarkedForForceReregistration()>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.airbnb.lottie.LottieAnimationView: void setRepeatMode(int)>
<com.adjust.sdk.ActivityHandler$6: void <init>(com.adjust.sdk.ActivityHandler,boolean)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment$onCreateView$1: void <init>()>
<com.google.android.gms.tasks.zzac: void zza()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity_MembersInjector: void injectPowerLiftUseCase(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity,com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase)>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage getDefaultActivityPackage(com.adjust.sdk.ActivityKind)>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean access$602(com.github.amlcurran.showcaseview.ShowcaseView,boolean)>
<com.evernote.android.job.JobManagerCreateException: void <init>(java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNode: int getScreenWidth()>
<com.google.android.gms.measurement.internal.zzei: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel accountsViewModel()>
<com.google.android.gms.internal.base.zak: void <init>()>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int[] getMethodInvocationMethodKeyDisallowlist()>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider passwordAutoChangeViewModelProvider()>
<com.adjust.sdk.AttributionHandler$1: void <init>(com.adjust.sdk.AttributionHandler)>
<ch.qos.logback.core.util.COWArrayList: void addIfAbsent(java.lang.Object)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)>
<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>
<com.google.android.datatransport.runtime.backends.CreationContext: com.google.android.datatransport.runtime.time.Clock getWallClock()>
<com.airbnb.lottie.model.content.CircleShape: boolean isHidden()>
<com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>
<com.airbnb.lottie.model.content.CircleShape: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()>
<com.google.android.gms.common.api.internal.zaa: void zab(com.google.android.gms.common.api.internal.zaa,java.lang.Runnable)>
<com.github.amlcurran.showcaseview.ShowcaseView: void setEndButton(android.widget.Button)>
<com.adjust.sdk.PackageBuilder: void <init>(com.adjust.sdk.AdjustConfig,com.adjust.sdk.DeviceInfo,com.adjust.sdk.ActivityState,com.adjust.sdk.SessionParameters,long)>
<com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: java.io.FileDescriptor getMemoryFileDescriptor(android.os.MemoryFile)>
<com.google.android.gms.measurement.internal.zzfl: java.lang.String zzt()>
<com.google.android.material.shape.ShapePath$PathArcOperation: void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)>
<java.io.File: java.net.URI toURI()>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$Success: com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$Success copy(com.microsoft.ngc.aad.NgcSession)>
<com.google.android.gms.internal.measurement.zzja: int zzt(java.lang.Object,byte[],int,int,int,long,com.google.android.gms.internal.measurement.zzge)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getFailureImage()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)>
<com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.facebook.react.modules.network.ProgressResponseBody$1: void <init>(com.facebook.react.modules.network.ProgressResponseBody,okio.Source)>
<com.facebook.react.views.text.ReactTypefaceUtils: android.graphics.Typeface applyStyles(android.graphics.Typeface,int,int,java.lang.String,android.content.res.AssetManager)>
<com.google.android.gms.auth.api.accounttransfer.DeviceMetaData: boolean isLockScreenSolved()>
<com.google.android.gms.internal.location.zzam: void zzg(com.google.android.gms.location.zzbq,com.google.android.gms.internal.location.zzak)>
<com.google.android.material.snackbar.BaseTransientBottomBar$2: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<android.graphics.RectF: void inset(float,float)>
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: void zzal(com.google.android.gms.internal.measurement.zzdj,int)>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.layer.Layer$MatteType getMatteType()>
<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable)>
<com.google.android.gms.internal.firebase_messaging.zzn: void <init>()>
<com.google.android.material.internal.StateListAnimator$1: void <init>(com.google.android.material.internal.StateListAnimator)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler$$Lambda$2: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<com.microsoft.brooklyn.favicon.FaviconRefreshManager: void <init>(com.azure.authenticator.jobs.DeferrableWorkerUtils,com.microsoft.brooklyn.module.repository.CredentialsRepository)>
<com.facebook.react.uimanager.events.EventDispatcherListener: void onEventDispatch(com.facebook.react.uimanager.events.Event)>
<com.microsoft.did.feature.notifications.presentationlogic.CredentialNotificationsViewModel: void <init>(com.microsoft.did.businesslogic.NotificationUseCase,com.microsoft.did.feature.notifications.NotificationService)>
<com.github.amlcurran.showcaseview.targets.Target: android.graphics.Point getPoint()>
<android.os.Handler: void dispatchMessage(android.os.Message)>
<com.facebook.react.modules.debug.DevSettingsModule$1: void <init>(com.facebook.react.modules.debug.DevSettingsModule)>
<ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator: int computeDotIndexes(java.lang.String,int[])>
<android.graphics.Rect: void set(android.graphics.Rect)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void taskCompleted()>
<ch.qos.logback.classic.pattern.CallerDataConverter: java.lang.String[] splitRange(java.lang.String)>
<com.facebook.imagepipeline.memory.PoolConfig: boolean isRegisterLruBitmapPoolAsMemoryTrimmable()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.utils.TestActivity injectTestActivity2(com.azure.authenticator.utils.TestActivity)>
<com.google.android.gms.internal.location.zzav: void zzk(boolean)>
<android.widget.ImageButton: boolean post(java.lang.Runnable)>
<androidx.navigation.NavController: void setGraph(int,android.os.Bundle)>
<com.evernote.android.job.Job: boolean cancel(boolean)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs access$getArgs$p(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment)>
<com.facebook.react.views.drawer.ReactDrawerLayout: void openDrawer()>
<com.facebook.react.uimanager.ReactShadowNode: void calculateLayout()>
<com.adjust.sdk.ActivityHandler: void foregroundTimerFiredI()>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void addToWatchList(ch.qos.logback.core.Context,java.net.URL)>
<com.google.android.gms.tasks.zzw: void <init>()>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void disposeResult(com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.react.views.modal.ReactModalHostView: void updateState(com.facebook.react.uimanager.StateWrapper,int,int)>
<com.facebook.react.uimanager.MatrixMathHelper: void decomposeMatrix(double[],com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext)>
<com.azure.authenticator.ui.fragment.accounts.adapter.BrokerOnlyAccountViewHolder: void <init>(com.azure.authenticator.databinding.AccountListRowDefaultModeBinding)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onDrawableStateChanged(int[])>
<com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String[] names()>
<com.airbnb.lottie.animation.content.BaseStrokeContent: void applyDashPatternIfNeeded(android.graphics.Matrix)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)>
<com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()>
<androidx.work.impl.diagnostics.DiagnosticsReceiver: void <init>()>
<android.widget.ImageView: int getPaddingLeft()>
<com.facebook.yoga.YogaPositionType: int intValue()>
<com.google.android.material.tabs.TabLayout$TabView: void drawBackground(android.graphics.Canvas)>
<com.facebook.react.bridge.ModuleHolder: void destroy()>
<android.database.Cursor: byte[] getBlob(int)>
<com.google.android.material.internal.StateListAnimator: void start(com.google.android.material.internal.StateListAnimator$Tuple)>
<android.content.Intent: android.content.Intent setFlags(int)>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount accountWithUpdatedAadBrokerComponents(com.azure.authenticator.storage.database.DbAccount,com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.material.chip.ChipGroup: com.google.android.material.chip.ChipGroup$CheckedStateTracker access$1000(com.google.android.material.chip.ChipGroup)>
<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions ambientEnabled(boolean)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzl()>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)>
<com.evernote.android.job.JobStorageDatabaseErrorHandler: void <init>()>
<ch.qos.logback.core.filter.Filter: boolean isStarted()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketCancel$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.react.views.scroll.ReactScrollView: void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.views.scroll.FpsListener)>
<com.google.android.material.internal.ThemeEnforcement: boolean isTheme(android.content.Context,int[])>
<ch.qos.logback.core.joran.spi.ElementPath: boolean equalityCheck(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.internal.zzbj: void onStreetViewPanoramaChange(com.google.android.gms.maps.model.StreetViewPanoramaLocation)>
<com.google.android.gms.measurement.internal.zzg: void zzV(long)>
<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<com.google.android.gms.internal.measurement.zzjk: int zzr(java.util.List)>
<com.google.common.base.AbstractIterator: void <init>()>
<ch.qos.logback.core.status.StatusBase: void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable)>
<com.facebook.common.logging.FLog: void wtf(java.lang.String,java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writePPFieldName(java.lang.String)>
<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildByHours(double)>
<com.google.android.gms.internal.measurement.zzil: void zza(java.lang.Object,long)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableCollection createValues()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>
<com.google.android.gms.measurement.internal.zzay: void <init>()>
<bolts.BoltsExecutors: java.util.concurrent.Executor immediate()>
<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void setAnimatedNodeOffset(int,double)>
<com.google.android.gms.common.internal.GmsLogger: boolean canLog(int)>
<android.content.res.ColorStateList: void <init>(int[][],int[])>
<com.google.android.gms.tasks.zza: void <init>(com.google.android.gms.tasks.zzb,com.google.android.gms.tasks.OnTokenCanceledListener)>
<com.facebook.react.modules.timepicker.TimePickerDialogFragment: void setOnTimeSetListener(android.app.TimePickerDialog$OnTimeSetListener)>
<com.facebook.imagepipeline.common.RotationOptions: boolean useImageMetadata()>
<com.google.android.gms.internal.measurement.zzcj: com.google.android.gms.internal.measurement.zzcj zza(int)>
<com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding: void <init>(android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.widget.TextView)>
<com.google.android.gms.measurement.internal.zzfh: void zzb()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)>
<okio.ByteString: byte[] toByteArray()>
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>
<com.google.common.base.CharMatcher: boolean matches(char)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_16_17$cp()>
<com.facebook.datasource.DataSources: com.facebook.common.internal.Supplier getFailedDataSourceSupplier(java.lang.Throwable)>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.bridge.ReactContext access$300(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)>
<com.facebook.react.bridge.JSIModuleHolder: void <init>(com.facebook.react.bridge.JSIModuleSpec)>
<ch.qos.logback.core.Context: void putProperty(java.lang.String,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$19: void <init>()>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void refreshActiveActionList()>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>
<com.google.android.material.button.MaterialButtonHelper: void updateBackground()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$8: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.airbnb.lottie.TextDelegate: java.lang.String getTextInternal(java.lang.String)>
<com.google.android.material.snackbar.BaseTransientBottomBar$13: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.internal.location.zzam: void zzo(com.google.android.gms.internal.location.zzbc)>
<com.google.android.gms.common.server.converter.zaa: com.google.android.gms.common.server.converter.zaa zaa(com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter)>
<com.google.android.gms.dynamic.zah: void zab(com.google.android.gms.dynamic.LifecycleDelegate)>
<com.google.android.gms.internal.location.zzu: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,android.app.PendingIntent)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void addClient(ch.qos.logback.core.net.server.Client)>
<android.view.View$MeasureSpec: int getSize(int)>
<com.facebook.imagepipeline.cache.CountingLruMap: java.util.ArrayList getMatchingEntries(com.facebook.common.internal.Predicate)>
<com.google.android.gms.common.internal.BaseGmsClient: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>
<com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter: void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<android.widget.CheckBox: android.content.res.Resources getResources()>
<com.facebook.common.memory.PooledByteBuffer: int read(int,byte[],int,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$3: androidx.fragment.app.Fragment invoke()>
<com.google.android.gms.common.api.internal.zaj: void <init>(com.google.android.gms.common.api.internal.zak,int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getDatabasePath(java.lang.String)>
<com.google.android.gms.common.zzt: void <init>()>
<com.google.android.gms.internal.measurement.zzjk: void zzL(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int)>
<okio.Okio: okio.Source source(java.io.InputStream)>
<com.google.android.gms.auth.api.accounttransfer.zzd: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient,com.google.android.gms.internal.auth.zzaf)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setLogEvents(java.util.List)>
<com.airbnb.lottie.model.layer.Layer: java.util.List getShapes()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.GetEndpointManager: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage)>
<com.google.android.gms.internal.measurement.zzfd: void <init>(com.google.android.gms.internal.measurement.zzfe,java.lang.String,java.lang.String,boolean)>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcDenySessionResult$UnexpectedFailure: java.lang.Exception getException()>
<com.google.android.gms.common.ConnectionResult: boolean isSuccess()>
<androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)>
<android.widget.LinearLayout: void refreshDrawableState()>
<com.azure.authenticator.ui.MainActivity$onCreate$1: void <init>(com.azure.authenticator.ui.MainActivity,androidx.navigation.NavController)>
<com.google.android.gms.common.internal.zzy: int zze()>
<com.evernote.android.job.JobConfig: boolean isForceAllowApi14()>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzw(boolean)>
<com.fasterxml.jackson.core.JsonToken: java.lang.String asString()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthUseCase: void <init>(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configurePreviewCategory()>
<android.app.Fragment: void registerForContextMenu(android.view.View)>
<ch.qos.logback.core.subst.Parser: void advanceTokenPointer()>
<com.google.android.gms.measurement.internal.zzaq: android.os.Bundle zzf()>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType: void <init>(java.lang.String,int,java.lang.String)>
<com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setWorkerFactory(androidx.work.WorkerFactory)>
<com.facebook.imagepipeline.memory.Bucket: void release(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzcn: void zzg(com.google.android.gms.internal.measurement.zzcn,java.lang.String)>
<androidx.fragment.app.Fragment: boolean getUserVisibleHint()>
<com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)>
<com.google.android.gms.common.stats.WakeLockEvent: void <init>(int,long,int,java.lang.String,int,java.util.List,java.lang.String,long,int,java.lang.String,java.lang.String,float,long,java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzmm: void <init>()>
<android.view.Window: void setSoftInputMode(int)>
<com.google.android.gms.common.api.GoogleApiClient: java.util.Set zaq()>
<ch.qos.logback.core.net.SyslogAppenderBase: java.lang.String getSyslogHost()>
<com.google.android.datatransport.runtime.SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setTransportContext(com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzt()>
<android.app.Fragment: void onAttach(android.app.Activity)>
<com.google.android.material.snackbar.SnackbarManager: boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)>
<com.google.android.material.button.MaterialButtonToggleGroup: void updateChildOrder()>
<com.facebook.imagepipeline.producers.ProducerContext: boolean isPrefetch()>
<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButton getChildButton(int)>
<com.facebook.drawee.controller.ControllerListener: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)>
<ch.qos.logback.core.boolex.EventEvaluatorBase: void <init>()>
<com.google.android.gms.internal.measurement.zzb: boolean zza(int,android.os.Parcel,android.os.Parcel,int)>
<com.adjust.sdk.PackageFactory: boolean tryToSetAttribution(com.adjust.sdk.AdjustAttribution,java.lang.String,java.lang.String)>
<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray()>
<com.google.android.gms.common.util.ArrayUtils: void writeArray(java.lang.StringBuilder,int[])>
<com.google.android.material.badge.BadgeUtils: void updateBadgeBounds(android.graphics.Rect,float,float,float,float)>
<com.google.crypto.tink.PrimitiveWrapper: java.lang.Object wrap(com.google.crypto.tink.PrimitiveSet)>
<com.facebook.cache.disk.SettableCacheEvent: void recycle()>
<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<android.text.Spanned: int length()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void onActivityResult(int,int,android.content.Intent)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.graphics.BitmapRegionDecoder: void recycle()>
<com.google.android.material.bottomappbar.BottomAppBar: void access$1500(com.google.android.material.bottomappbar.BottomAppBar)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment2(char[],int,int)>
<java.util.Set: boolean add(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzae: boolean zzn(java.lang.String,com.google.android.gms.measurement.internal.zzdv)>
<com.google.android.gms.common.util.Clock: long nanoTime()>
<com.google.common.collect.Maps: java.lang.String toStringImpl(java.util.Map)>
<com.azure.authenticator.databinding.EnableRemoteNgcSuccessBinding: com.azure.authenticator.databinding.EnableRemoteNgcSuccessBinding bind(android.view.View)>
<com.azure.authenticator.ui.MainActivity: void onCreate(android.os.Bundle)>
<android.widget.HorizontalScrollView: void setScrollbarFadingEnabled(boolean)>
<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.graphics.drawable.Drawable getResourceDrawable(android.content.Context,java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setShouldNotifyOnLayout(boolean)>
<com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableArray copyWritableArray(com.facebook.react.bridge.WritableArray)>
<com.google.android.material.navigation.NavigationBarView$SavedState$1: void <init>()>
<com.facebook.react.uimanager.events.Event: void <init>(int)>
<com.fasterxml.jackson.core.io.JsonStringEncoder: int _convert(int,int)>
<com.google.android.material.shape.MaterialShapeUtils: void setElevation(android.view.View,float)>
<com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$$special$$inlined$viewModels$1: androidx.lifecycle.ViewModelProvider$Factory invoke()>
<com.azure.authenticator.databinding.AccountListRowDefaultModeBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1: void <init>()>
<com.google.common.collect.MapMakerInternalMap$Segment: void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float)>
<com.facebook.imagepipeline.common.RotationOptions: boolean canDeferUntilRendered()>
<com.github.amlcurran.showcaseview.ApiUtils: void <init>()>
<com.google.android.material.tabs.TabIndicatorInterpolator: android.graphics.RectF calculateIndicatorWidthForTab(com.google.android.material.tabs.TabLayout,android.view.View)>
<com.google.android.gms.common.stats.StatsEvent: long zzc()>
<com.facebook.react.uimanager.UIViewOperationQueue: void dispatchViewUpdates(int,long,long)>
<com.google.android.material.transformation.ExpandableTransformationBehavior: void <init>()>
<okhttp3.WebSocket: boolean send(java.lang.String)>
<com.google.android.gms.measurement.internal.zzx: void <init>(com.google.android.gms.measurement.internal.zzy,java.lang.String,int,com.google.android.gms.internal.measurement.zzcf)>
<com.google.android.gms.internal.auth-api.zzo: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setZIndex(android.view.View,float)>
<com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)>
<com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void showNewAlert(android.os.Bundle,com.facebook.react.bridge.Callback)>
<android.view.ViewGroup: android.content.res.Resources getResources()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: void <init>(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments$1)>
<com.google.android.gms.common.internal.service.zaj: void <init>()>
<com.google.android.datatransport.cct.CctTransportBackend: int getNetTypeValue(android.net.NetworkInfo)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onAttachedToWindow()>
<com.azure.authenticator.databinding.BottomNavigationLayoutBinding: com.azure.authenticator.databinding.BottomNavigationLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.views.text.ReactFontManager$FontFamily: void setTypeface(int,android.graphics.Typeface)>
<com.google.android.gms.internal.measurement.zzgz: boolean zzF()>
<com.google.android.gms.internal.auth-api.zzg: com.google.android.gms.internal.auth-api.zzg zzc(com.google.android.gms.common.api.Status)>
<com.airbnb.lottie.utils.MiscUtils: int lerp(int,int,float)>
<android.os.Parcel: void writeDoubleArray(double[])>
<com.azure.authenticator.databinding.AccountChooserActivityBinding: void <init>(android.widget.LinearLayout,android.widget.RelativeLayout,android.widget.ProgressBar,android.widget.Button,android.widget.TextView,android.widget.ListView,android.widget.LinearLayout,androidx.appcompat.widget.Toolbar)>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$InvalidSession: void <init>()>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>
<com.google.android.gms.common.api.internal.zaat: void <init>(com.google.android.gms.common.api.internal.zaaz)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)>
<ch.qos.logback.core.sift.SiftingAppenderBase: void setDiscriminator(ch.qos.logback.core.sift.Discriminator)>
<com.google.android.gms.internal.measurement.zzki: boolean zzg(byte)>
<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Level getEffectiveLevel()>
<com.facebook.react.uimanager.UIManagerModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)>
<com.google.android.material.shape.MaterialShapeUtils: com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment()>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)>
<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)>
<ch.qos.logback.core.rolling.helper.PathPart: boolean matches(java.io.File)>
<com.google.android.gms.internal.measurement.zzip: boolean zzb(com.google.android.gms.internal.measurement.zziu)>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<ch.qos.logback.classic.net.ReceiverBase: void onStop()>
<javax.mail.internet.MimeMessage: void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[])>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: dagger.hilt.android.internal.managers.FragmentComponentManager createComponentManager()>
<com.google.android.gms.internal.measurement.zzbr: void zzW(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,java.lang.Long)>
<com.facebook.react.modules.network.ForwardingCookieHandler: boolean isCookieHeader(java.lang.String)>
<ch.qos.logback.core.ContextBase: void stop()>
<com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void <init>()>
<android.view.ViewGroup: void setFocusableInTouchMode(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.address.AddressAddEditViewModel access$11200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForDeviceDimensionsChanges()>
<com.facebook.react.ReactInstanceManager: void processPackage(com.facebook.react.ReactPackage,com.facebook.react.NativeModuleRegistryBuilder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.accessibility.BrooklynAccessibilityService injectBrooklynAccessibilityService2(com.microsoft.brooklyn.module.accessibility.BrooklynAccessibilityService)>
<android.text.StaticLayout: int getHeight()>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: int getClientQueueSize()>
<com.facebook.drawee.components.DeferredReleaser$1: void <init>(com.facebook.drawee.components.DeferredReleaser)>
<com.google.android.gms.signin.zae: void zac()>
<android.widget.TextView: java.lang.Object getTag()>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.RotationOptions getRotationOptions()>
<com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: void close()>
<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)>
<com.azure.authenticator.accounts.GenericAccount: void clearSecretKey()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<com.facebook.drawee.view.DraweeHolder: boolean isControllerValid()>
<androidx.navigation.NavController: void navigate(int)>
<com.azure.authenticator.ui.Hilt_MainActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.google.android.gms.internal.measurement.zzp: void clearMeasurementEnabled(long)>
<com.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime get()>
<com.facebook.react.modules.timepicker.TimePickerDialogModule$TimePickerDialogListener: void <init>(com.facebook.react.modules.timepicker.TimePickerDialogModule,com.facebook.react.bridge.Promise)>
<com.evernote.android.job.JobStorage: boolean didFailToDelete(int)>
<java.io.ByteArrayOutputStream: void close()>
<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<com.google.android.material.appbar.ViewOffsetHelper: void onViewLayout()>
<com.evernote.android.job.JobRequest$Builder: long access$500(com.evernote.android.job.JobRequest$Builder)>
<com.microsoft.authenticator.core.common.AccessibilityUtils: void setAccessibilityHeading(android.view.View)>
<com.google.android.gms.maps.internal.zzbm: void <init>()>
<com.google.android.gms.common.internal.zaaa: void zaa(android.content.res.Resources,int,int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry()>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<android.database.ContentObserver: void <init>(android.os.Handler)>
<com.google.android.gms.measurement.internal.zzbf: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.EditCredentialViewModel access$12500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.material.badge.BadgeDrawable$1: void <init>(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>
<com.adjust.sdk.InstallReferrer: void retry()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.google.android.gms.internal.base.zaa: android.os.Parcel zab(int,android.os.Parcel)>
<com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.datepicker.DatePickerDialogModule)>
<com.google.android.gms.signin.internal.zaj: void <init>()>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueFindTargetForTouch(int,float,float,com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zze(long)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener: void onImageVisibilityUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfData,int)>
<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<com.google.android.material.floatingactionbutton.BorderDrawable: void setGradientColors(int,int,int,int)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: int getMinDecodeIntervalMs()>
<java.lang.Boolean: java.lang.String toString()>
<androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)>
<com.google.android.gms.internal.measurement.zzdz: void <init>()>
<com.github.amlcurran.showcaseview.ShowcaseView: void init()>
<android.view.ViewGroup: void setOnClickListener(android.view.View$OnClickListener)>
<com.evernote.android.job.JobRequest$Builder: void <init>(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.gms.internal.common.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.facebook.common.statfs.StatFsHelper: void updateStats()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1$dialogBackupAlreadyExistsDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
<ch.qos.logback.core.net.server.SSLServerSocketAppenderBase: void <init>()>
<com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getDBError(java.lang.String)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ThrottlingProducer newThrottlingProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.internal.measurement.zzp: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzx)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.action.ActionStateManager actionStateManager()>
<ch.qos.logback.core.helpers.CyclicBuffer: void init(int)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer)>
<com.google.android.gms.auth.api.identity.SignInCredential: java.lang.String getPassword()>
<androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureBatteryOptimizationPreference()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$validateWpjNgcAccount$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzfm: com.google.android.gms.internal.measurement.zzfm zzc()>
<com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: java.util.ArrayList trimExclusivelyOwnedEntries(int,int)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzJ(long)>
<com.facebook.drawee.generic.WrappingUtils: void resetRoundingParams(com.facebook.drawee.drawable.Rounded)>
<kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void onFailureImpl(java.lang.Throwable)>
<com.airbnb.lottie.LottieImageAsset: java.lang.String getFileName()>
<com.microsoft.authenticator.backup.entities.metadata.BackupMsaMetadata: java.lang.String getBackupAccountCID()>
<okhttp3.Request: java.lang.String method()>
<java.util.zip.Adler32: void <init>()>
<com.airbnb.lottie.LottieAnimationView: void setFallbackResource(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer lambdaFactory$(android.database.sqlite.SQLiteDatabase)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1: void <init>(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.ProducerContext,int)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getReplicationScope()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1$asyncResult$1: void <init>(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1,kotlin.coroutines.Continuation)>
<ch.qos.logback.classic.android.SystemClock: void <init>()>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.airbnb.lottie.animation.content.StrokeContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeStroke)>
<ch.qos.logback.core.spi.AbstractComponentTracker$Entry: void setTimestamp(long)>
<com.adjust.sdk.IActivityHandler: com.adjust.sdk.AdjustConfig getAdjustConfig()>
<androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()>
<com.google.android.gms.common.api.internal.ApiKey: java.lang.String zab()>
<ch.qos.logback.core.sift.SiftingJoranConfiguratorBase: void <init>(java.lang.String,java.lang.String,java.util.Map)>
<com.facebook.react.modules.network.ForwardingCookieHandler: void <init>(com.facebook.react.bridge.ReactContext)>
<com.google.android.gms.internal.measurement.zzjx: boolean equals(java.lang.Object)>
<com.adjust.sdk.Util: java.lang.String getReasonString(java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.LottieAnimationView$SavedState$1: com.airbnb.lottie.LottieAnimationView$SavedState createFromParcel(android.os.Parcel)>
<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>
<com.facebook.drawee.components.DeferredReleaser: void access$000()>
<kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>
<ch.qos.logback.core.rolling.RollingFileAppender: boolean innerCheckForFileNamePatternCollisionInPreviousRFA(ch.qos.logback.core.rolling.helper.FileNamePattern)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$3: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.adjust.sdk.DeviceInfo: java.lang.String getBuildName()>
<com.adjust.sdk.AttributionHandler: void access$700(com.adjust.sdk.AttributionHandler)>
<com.google.android.gms.maps.internal.zzaz: void onMyLocationClick(android.location.Location)>
<com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair touchSubsequence(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMarkerClickListener(com.google.android.gms.maps.internal.zzar)>
<java.lang.Long: java.lang.Long valueOf(long)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$2: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: java.lang.Object removeMsaAccount(java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.api.internal.zam: com.google.android.gms.common.ConnectionResult zab()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void makeOrphans(java.util.ArrayList)>
<com.google.android.gms.signin.internal.SignInClientImpl: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.ClientSettings,android.os.Bundle,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)>
<com.facebook.common.logging.LoggingDelegate: void d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzkz: long zzp()>
<com.adjust.sdk.ActivityHandler$27: void <init>(com.adjust.sdk.ActivityHandler)>
<com.adjust.sdk.SharedPreferencesManager: void setInstallTracked()>
<android.view.VelocityTracker: void recycle()>
<com.facebook.drawee.drawable.ForwardingDrawable: void draw(android.graphics.Canvas)>
<com.google.android.material.shape.MaterialShapeDrawable: void <init>()>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.airbnb.lottie.LottieAnimationView: void setImageResource(int)>
<com.google.android.material.navigation.NavigationBarItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>
<com.google.android.gms.measurement.internal.zzfz: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzkg,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.react.views.text.TextLayoutManager: android.text.Spannable createSpannableFromAttributedString(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.views.text.ReactTextViewManagerCallback)>
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void <init>()>
<com.facebook.imagepipeline.cache.MemoryCache: int removeAll(com.facebook.common.internal.Predicate)>
<com.google.android.gms.common.api.internal.zai: void zad(java.lang.Exception)>
<ch.qos.logback.core.ContextBase: java.lang.String getName()>
<com.google.android.gms.internal.safetynet.zzb: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setNetworkConnectionInfo(com.google.android.datatransport.cct.internal.NetworkConnectionInfo)>
<com.evernote.android.job.gcm.JobProxyGcm: void <init>(android.content.Context)>
<androidx.sqlite.db.SupportSQLiteProgram: void bindNull(int)>
<com.google.android.gms.common.api.internal.zabl: void zas()>
<com.google.android.gms.internal.measurement.zzmu: void <init>()>
<com.google.android.gms.common.api.zab: void <init>(com.google.android.gms.common.api.Batch)>
<com.google.android.material.shape.MaterialShapeDrawable: void setElevation(float)>
<ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: void <init>()>
<com.google.android.gms.measurement.internal.zzai: java.util.List zzq(java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)>
<com.microsoft.identity.client.Logger: com.microsoft.identity.client.Logger getInstance()>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,android.content.Intent)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken2(java.lang.String,int)>
<com.google.common.collect.MapMakerInternalMap$WeakValueReference: com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<android.widget.ImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.os.RemoteException: java.lang.String getLocalizedMessage()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.storage.MfaSdkAccountTranslator mfaSdkAccountTranslator()>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<com.facebook.react.uimanager.events.EventDispatcher: void maybePostFrameCallbackFromNonUI()>
<ch.qos.logback.core.status.StatusUtil: boolean noXMLParsingErrorsOccurred(long)>
<com.google.android.gms.tasks.zzn: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)>
<androidx.constraintlayout.widget.ConstraintLayout: void onLayout(boolean,int,int,int,int)>
<com.facebook.imagepipeline.memory.PoolBackend: java.lang.Object get(int)>
<ch.qos.logback.core.spi.ContextAwareBase: java.lang.Object getDeclaredOrigin()>
<com.google.crypto.tink.proto.Keyset$Key$Builder: com.google.crypto.tink.proto.Keyset$Key$Builder setKeyData(com.google.crypto.tink.proto.KeyData)>
<android.util.JsonWriter: void close()>
<com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.gms.internal.measurement.zza: android.os.Parcel zzz(int,android.os.Parcel)>
<com.google.android.gms.internal.auth-api.zzai: void zzc(com.google.android.gms.internal.auth-api.zzae,com.google.android.gms.auth.api.identity.GetSignInIntentRequest)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzab()>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzf()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _releaseBuffers()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void handleExtras(android.os.Bundle,android.os.Bundle)>
<java.lang.Long: java.lang.String toString(long)>
<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>
<com.google.android.material.textfield.TextInputLayout: boolean updateEditTextHeightBasedOnIcon()>
<com.google.android.gms.measurement.internal.zzfc: boolean zzj(java.lang.String,java.lang.String)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask$ImageResult: boolean isNewImageDownloaded()>
<com.azure.authenticator.jobs.DeferrableWorkerUtils: androidx.work.Constraints getNetworkConstraints()>
<com.facebook.react.bridge.Promise: void reject(java.lang.String)>
<com.facebook.react.modules.core.JavaTimerManager$1: void <init>(com.facebook.react.modules.core.JavaTimerManager)>
<android.graphics.RectF: void <init>(float,float,float,float)>
<android.graphics.Path: void offset(float,float)>
<com.adjust.sdk.scheduler.FutureScheduler: void teardown()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_10_11()>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromAssetSync(android.content.Context,java.lang.String)>
<com.google.android.gms.auth.api.accounttransfer.zzj: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient,com.google.android.gms.internal.auth.zzab)>
<com.google.crypto.tink.Registry$KeyManagerContainer: java.util.Set supportedPrimitives()>
<com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String nextString()>
<com.adjust.sdk.PackageBuilder: java.util.Map getDisableThirdPartySharingParameters()>
<com.adjust.sdk.AdjustEvent: boolean isValid()>
<com.google.android.gms.measurement.internal.zzdn: void <init>()>
<com.google.android.gms.internal.cloudmessaging.zza: com.google.android.gms.internal.cloudmessaging.zzb zza()>
<android.view.View: void setRotationX(float)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_GeneratedInjector: void injectAadRemoteNgcSessionActivity(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$1: void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig)>
<ch.qos.logback.core.util.StatusListenerConfigHelper: void initAndAddListener(ch.qos.logback.core.Context,ch.qos.logback.core.status.StatusListener)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: com.airbnb.lottie.value.Keyframe findKeyframe(float)>
<com.google.android.gms.internal.measurement.zzjk: com.google.android.gms.internal.measurement.zzjw zzab(boolean)>
<com.google.android.material.chip.ChipDrawable: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getHoveredFocusedTranslationZ()>
<com.evernote.android.job.JobExecutor: void markJobAsFinished(com.evernote.android.job.Job)>
<com.google.android.gms.measurement.internal.zzfc: boolean zzl(java.lang.String)>
<com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)>
<com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.io.File)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: androidx.appcompat.widget.ListPopupWindow access$getListPopupWindow$p(com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult: com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult copy(boolean,com.azure.authenticator.accounts.AccountType,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[])>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getOperatingSystem()>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository access$getAppPolicyRepository$p(com.azure.authenticator.ui.fragment.main.SettingsViewModel)>
<com.evernote.android.job.JobExecutor$JobCallable: void handleResult(com.evernote.android.job.Job,com.evernote.android.job.Job$Result)>
<com.google.android.gms.maps.model.Dash: void <init>(float)>
<com.azure.authenticator.accounts.AccountCapability: void <init>(int)>
<com.google.android.gms.internal.auth-api-phone.zzj: void <init>(android.app.Activity)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$recordNextCallTime$6(long,com.google.android.datatransport.runtime.TransportContext,android.database.sqlite.SQLiteDatabase)>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builderWithExpectedSize(int)>
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Companion: void <init>()>
<com.facebook.drawee.generic.RoundingParams: boolean getScaleDownInsideBorders()>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zzf(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.google.android.gms.safetynet.SafeBrowsingData: void <init>(java.lang.String,com.google.android.gms.common.data.DataHolder,android.os.ParcelFileDescriptor,long,byte[])>
<com.facebook.react.common.ClearableSynchronizedPool: java.lang.Object acquire()>
<javax.net.ssl.SSLSocket: void bind(java.net.SocketAddress)>
<android.widget.AutoCompleteTextView: void onMeasure(int,int)>
<com.google.android.gms.maps.model.StreetViewPanoramaCamera$Builder: void <init>(com.google.android.gms.maps.model.StreetViewPanoramaCamera)>
<com.google.android.gms.signin.internal.zah: void <init>()>
<java.util.Collections: void reverse(java.util.List)>
<com.google.android.gms.measurement.internal.zzai: android.os.Bundle zzI(java.lang.String)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getEncryptedCachedPin()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$buildDialog$8$AbstractAuthRequestActivity(android.content.DialogInterface)>
<com.google.android.material.internal.ParcelableSparseArray: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder tilt(float)>
<ch.qos.logback.core.joran.GenericConfigurator: void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL)>
<com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: void <init>(java.lang.String,com.facebook.drawee.backends.pipeline.info.ImageOriginListener)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void registerReceiverForUXUpdate(android.content.BroadcastReceiver)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zai(com.google.android.gms.common.server.response.FastJsonResponse$Field,double)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: boolean close()>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzc()>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: void onAttach(android.app.Activity)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: androidx.lifecycle.LiveData getBrokerMergeState()>
<com.google.android.material.shape.ShapePath$PathArcOperation: void setBottom(float)>
<com.google.android.gms.measurement.internal.zzam: long zzd()>
<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>
<com.google.android.gms.measurement.internal.zzfi: void zzav()>
<java.util.Arrays: int hashCode(float[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase access$7400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.evernote.android.job.JobStorage: int getMaxJobId()>
<com.google.android.gms.measurement.internal.zzec: boolean zzp()>
<android.text.SpannableStringBuilder: char charAt(int)>
<android.media.ExifInterface: void saveAttributes()>
<com.google.android.gms.internal.measurement.zzhj: void zzc(com.google.android.gms.internal.measurement.zzhi,java.lang.Object)>
<com.facebook.drawee.drawable.RoundedBitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Paint)>
<com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setThumbColor(android.view.View,java.lang.Integer)>
<com.google.android.gms.internal.measurement.zzjx: com.google.android.gms.internal.measurement.zzjx zzc(com.google.android.gms.internal.measurement.zzjx,com.google.android.gms.internal.measurement.zzjx)>
<ch.qos.logback.core.pattern.DynamicConverter: void addWarn(java.lang.String,java.lang.Throwable)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidth(float)>
<java.security.SecureRandom: long nextLong()>
<com.google.android.datatransport.cct.internal.ClientInfo: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: boolean zzC()>
<java.io.FileInputStream: void close()>
<com.facebook.common.util.ExceptionWithNoStacktrace: void <init>(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$Companion$AadNgcStateInvalidationReason: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$Companion$AadNgcStateInvalidationReason[] values()>
<android.app.Fragment: java.lang.String getTag()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createShadowNode(java.lang.String)>
<com.google.android.gms.internal.measurement.zzbj: void <init>(com.google.android.gms.internal.measurement.zzbq,android.os.Bundle,android.app.Activity)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$16: void <init>()>
<com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: void doFrame(long)>
<com.google.android.material.chip.ChipDrawable: float getTextStartPadding()>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.io.Writer: void close()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$7: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(java.lang.String)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: void <init>(int,int,int,int[],java.lang.String[],int,int)>
<com.google.android.gms.common.internal.BaseGmsClient: void zzp(int,android.os.IInterface)>
<com.google.android.gms.tasks.zzn: java.lang.Object zzc(com.google.android.gms.tasks.zzn)>
<android.widget.OverScroller: void <init>(android.content.Context)>
<com.google.android.gms.maps.internal.zzbh: void onStreetViewPanoramaCameraChange(com.google.android.gms.maps.model.StreetViewPanoramaCamera)>
<com.google.android.material.snackbar.BaseTransientBottomBar: com.google.android.material.snackbar.ContentViewCallback access$1600(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.material.internal.StateListAnimator: void jumpToCurrentState()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.webp.WebpBitmapFactory getWebpBitmapFactory()>
<com.azure.authenticator.storage.database.AccountDao_Impl$1: void <init>(com.azure.authenticator.storage.database.AccountDao_Impl,androidx.room.RoomDatabase)>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>
<com.facebook.react.ReactRootView: void handleException(java.lang.Throwable)>
<com.google.android.material.appbar.AppBarLayout: void setVisibility(int)>
<com.adjust.sdk.SessionParameters: void <init>()>
<com.facebook.react.fabric.mounting.MountingManager: void preallocateView(com.facebook.react.uimanager.ThemedReactContext,java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onSaveInstanceState(android.os.Bundle)>
<com.facebook.react.uimanager.events.EventDispatcher$1: void <init>()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int,int)>
<com.google.android.material.chip.ChipDrawable: void updateFrameworkCloseIconRipple()>
<com.facebook.react.touch.OnInterceptTouchEventListener: boolean onInterceptTouchEvent(android.view.ViewGroup,android.view.MotionEvent)>
<ch.qos.logback.classic.spi.LoggingEvent: java.lang.String getThreadName()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder requestScopes(com.google.android.gms.common.api.Scope,com.google.android.gms.common.api.Scope[])>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>
<com.google.android.gms.common.util.Hex: java.lang.String bytesToStringLowercase(byte[])>
<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.ngc.aad.NgcSession access$getNgcSession$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.facebook.react.bridge.ReactApplicationContext: void <init>(android.content.Context)>
<com.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zzb(int,android.os.Bundle)>
<com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()>
<com.google.crypto.tink.PrimitiveSet: void <init>(java.lang.Class)>
<com.airbnb.lottie.utils.LottieValueAnimator: boolean isRunning()>
<com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_4_7$1: void <init>(int,int)>
<com.adjust.sdk.IRequestHandler: void sendPackage(com.adjust.sdk.ActivityPackage,int)>
<com.google.android.gms.maps.model.StreetViewPanoramaOrientation: void <init>(float,float)>
<ch.qos.logback.classic.turbo.TurboFilter: void stop()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromRawResSync(android.content.Context,int)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer newBitmapMemoryCacheGetProducer(com.facebook.imagepipeline.producers.Producer)>
<com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int)>
<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void <init>(float,float,float)>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: void <init>(android.content.Context,com.microsoft.onlineid.ExtensionAccountManager,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.common.api.Status: void <init>(com.google.android.gms.common.ConnectionResult,java.lang.String)>
<com.evernote.android.job.JobProxy$Common: long getEndMs(com.evernote.android.job.JobRequest)>
<com.google.android.material.navigation.NavigationBarView: com.google.android.material.navigation.NavigationBarMenuView createNavigationBarMenuView(android.content.Context)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketCancel$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>
<ch.qos.logback.classic.spi.PackagingDataCalculator: void <init>()>
<com.evernote.android.job.JobCreatorHolder: boolean isEmpty()>
<com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForFalse(java.lang.Integer)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_14_15$cp()>
<com.github.amlcurran.showcaseview.ShowcaseView: void access$500(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager$Companion: void <init>()>
<com.adjust.sdk.AdjustSessionFailure: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getTenantCountryCode()>
<com.facebook.imagepipeline.memory.BufferMemoryChunk: void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)>
<com.google.android.material.datepicker.DateSelector: boolean isSelectionComplete()>
<com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.ProducerContext getContext()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerSubmitTimeMs(long)>
<java.text.Collator: java.text.Collator getInstance()>
<com.google.android.gms.gcm.PeriodicTask$Builder: com.google.android.gms.gcm.PeriodicTask$Builder setFlex(long)>
<com.microsoft.authenticator.core.logging.BaseLogger: void i(java.lang.String)>
<com.google.android.gms.internal.measurement.zzaf: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.Boolean)>
<com.google.android.material.timepicker.ClockHandView$OnRotateListener: void onRotate(float,boolean)>
<android.os.StatFs: int getBlockSize()>
<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<com.facebook.cache.disk.SettableCacheEvent: void <init>()>
<com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)>
<com.evernote.android.job.JobConfig: long getJobReschedulePause()>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object checkWpjStatus(kotlin.coroutines.Continuation)>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzz(android.content.Intent,int)>
<com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()>
<androidx.room.MultiInstanceInvalidationService: android.content.Intent getIntent()>
<com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()>
<com.google.android.material.navigation.NavigationBarItemView: int getSuggestedIconWidth()>
<com.facebook.react.views.swiperefresh.RefreshEvent: void <init>(int)>
<com.google.android.gms.common.api.internal.BasePendingResult: void zal(com.google.android.gms.common.api.Result)>
<ch.qos.logback.core.pattern.parser.CompositeNode: void setChildNode(ch.qos.logback.core.pattern.parser.Node)>
<com.facebook.imagepipeline.producers.ProducerListener: boolean requiresExtraMap(java.lang.String)>
<com.google.android.gms.internal.measurement.zzfr: void <init>(java.lang.Object)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void approveNgcSession(java.lang.String)>
<com.azure.authenticator.ui.action.ActionStateManager: boolean access$isAuthenticatorIgnoringBatteryOptimizations(com.azure.authenticator.ui.action.ActionStateManager)>
<com.google.android.gms.internal.measurement.zzma: void <init>()>
<com.google.android.material.navigation.NavigationBarItemView: void setTextAppearanceActive(int)>
<dalvik.system.DelegateLastClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>
<com.google.android.gms.internal.measurement.zzgz: void zzf(int,long)>
<com.google.android.material.behavior.SwipeDismissBehavior: float fraction(float,float,float)>
<com.google.android.gms.internal.measurement.zzdq: void zzt(com.google.android.gms.internal.measurement.zzdq,int)>
<com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromJS(com.facebook.react.views.text.ReactTextUpdate)>
<ch.qos.logback.core.pattern.parser.Node: boolean equals(java.lang.Object)>
<ch.qos.logback.core.status.Status: int getEffectiveLevel()>
<androidx.localbroadcastmanager.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.google.android.material.internal.StateListAnimator: void cancel()>
<com.google.android.gms.internal.maps.zzz: void setStartCap(com.google.android.gms.maps.model.Cap)>
<com.google.android.gms.location.zzg: void <init>(android.app.PendingIntent)>
<com.adjust.sdk.IActivityHandler: java.lang.String getAdid()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_Factory: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel newInstance(com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase)>
<java.lang.reflect.Field: boolean isSynthetic()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding access$getBinding$p(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment)>
<com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable)>
<ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer: java.io.Serializable transform(ch.qos.logback.classic.spi.ILoggingEvent)>
<ch.qos.logback.classic.pattern.SyslogStartConverter: java.lang.String computeTimeStampString(long)>
<com.google.android.gms.internal.maps.zzk: void setVisible(boolean)>
<com.azure.authenticator.storage.Storage: boolean readShowAllowBackgroundDataUsageAction()>
<android.view.ViewGroup: int getVisibility()>
<com.facebook.imagepipeline.producers.ProducerListener: void onUltimateProducerReached(java.lang.String,java.lang.String,boolean)>
<ch.qos.logback.classic.jul.LevelChangePropagator: void resetJULLevels()>
<com.facebook.yoga.YogaConfigJNIBase: void <init>(long)>
<com.google.android.gms.internal.auth.zzay: com.google.android.gms.internal.auth.zzay zzc(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: void <init>(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,android.app.AlarmManager,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)>
<javax.net.ssl.HttpsURLConnection: void setDoInput(boolean)>
<android.graphics.Matrix: void setTranslate(float,float)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: boolean isEntropyPresent()>
<com.azure.authenticator.databinding.AccountAddMethodListBinding: com.azure.authenticator.databinding.AccountAddMethodListBinding bind(android.view.View)>
<com.google.android.gms.internal.measurement.zzlp: boolean zzd()>
<ch.qos.logback.core.OutputStreamAppender: void setEncoder(ch.qos.logback.core.encoder.Encoder)>
<android.view.View: void setRotationY(float)>
<com.google.android.material.navigation.NavigationBarItemView: void setTitle(java.lang.CharSequence)>
<com.facebook.react.uimanager.DisplayMetricsHolder: void setWindowDisplayMetrics(android.util.DisplayMetrics)>
<ch.qos.logback.classic.pattern.CallerDataConverter: void checkRange()>
<com.evernote.android.job.util.Device: com.evernote.android.job.JobRequest$NetworkType getNetworkType(android.content.Context)>
<com.azure.authenticator.Hilt_OnAppUpgradeReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.google.android.gms.internal.auth.zzt: void <init>()>
<com.facebook.react.fabric.mounting.MountingManager: void updateLayout(int,int,int,int,int)>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectTelemetryManager(com.azure.authenticator.OnAppUpgradeReceiver,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.gms.common.internal.service.zac: void <init>(com.google.android.gms.common.internal.service.zae,com.google.android.gms.common.api.GoogleApiClient)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getSessionSubType()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectStorage(com.azure.authenticator.ui.MainActivity,com.azure.authenticator.storage.Storage)>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setAnimationType(android.view.View,java.lang.String)>
<com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase)>
<com.google.android.gms.internal.measurement.zzgg: void zzf(int)>
<com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void onClick(android.content.DialogInterface,int)>
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>
<com.azure.authenticator.databinding.DialogEditAccountNameBinding: void <init>(android.widget.ScrollView,android.widget.EditText)>
<ch.qos.logback.core.net.SyslogAppenderBase: boolean connect()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$initialize$3: void onChanged(com.microsoft.authenticator.authentication.aad.entities.AadNgcGraphPolicyResult)>
<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList getMaterialThemeColorsThumbTintList()>
<com.google.common.math.IntMath: int log2(int,java.math.RoundingMode)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException: void <init>()>
<com.airbnb.lottie.animation.content.BaseStrokeContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)>
<com.azure.authenticator.storage.database.DbAccount: void setAadAuthority(java.lang.String)>
<com.google.android.material.card.MaterialCardViewHelper: void setUserContentPadding(int,int,int,int)>
<android.view.ViewGroup: boolean isShown()>
<com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromValue(java.lang.String)>
<androidx.fragment.app.DialogFragment: int getTheme()>
<com.facebook.react.animated.NativeAnimatedModule$18: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int)>
<com.google.android.gms.internal.measurement.zzfq: void <init>(com.google.android.gms.internal.measurement.zzfo)>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean canUpdateBitmap()>
<com.google.android.gms.internal.measurement.zzjk: void zzJ(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.facebook.drawee.gestures.GestureDetector: void init()>
<com.azure.authenticator.jwe.JweEncryptionManager: java.lang.String getJweHeader()>
<com.google.android.material.datepicker.MaterialDatePicker: boolean isNestedScrollable(android.content.Context)>
<com.facebook.cache.disk.DiskStorage$Inserter: boolean cleanUp()>
<com.adjust.sdk.PackageHandler: void updatePackagesI(com.adjust.sdk.SessionParameters)>
<java.util.Calendar: java.util.Date getTime()>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>
<android.widget.Button: void onRestoreInstanceState(android.os.Parcelable)>
<com.google.android.gms.measurement.internal.zzco: void <init>()>
<com.google.android.gms.common.api.internal.zabm: void <init>(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.Feature,com.google.android.gms.common.api.internal.zabg)>
<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getStrokeColorStateList()>
<com.azure.authenticator.storage.Storage: void writeMacEndpointMap(com.microsoft.authenticator.mfasdk.entities.MfaSdkMacEndpointMap)>
<java.io.ObjectInputStream: java.lang.String readUTF()>
<com.google.android.gms.common.server.converter.StringToIntConverter: void <init>(int,java.util.ArrayList)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: byte readByte(android.os.Parcel,int)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zaI(com.google.android.gms.tasks.TaskCompletionSource,int,com.google.android.gms.common.api.GoogleApi)>
<com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)>
<android.app.job.JobService: void onCreate()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: float getPadding(int)>
<ch.qos.logback.core.UnsynchronizedAppenderBase: void append(java.lang.Object)>
<androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2000(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.facebook.react.uimanager.BaseViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable)>
<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Logger createChildByName(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>
<com.google.android.gms.internal.safetynet.zzi: void zzd(com.google.android.gms.internal.safetynet.zzg)>
<com.google.android.gms.common.internal.zai: void <init>(com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<com.google.android.gms.measurement.internal.zzg: long zzY()>
<com.google.android.gms.dynamic.IObjectWrapper$Stub: com.google.android.gms.dynamic.IObjectWrapper asInterface(android.os.IBinder)>
<com.google.android.material.internal.ParcelableSparseArray$1: com.google.android.material.internal.ParcelableSparseArray[] newArray(int)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzR(long)>
<com.facebook.common.logging.FLog: java.lang.String formatString(java.lang.String,java.lang.Object[])>
<com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams: int getMaxSizeHardCap()>
<com.google.android.gms.common.internal.BaseGmsClient: void zzo(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.internal.zzi)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setValue(android.view.View,double)>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void logCustomEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.lang.Exception)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase access$3400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzW(java.lang.String)>
<com.facebook.shimmer.Shimmer$Builder: void <init>()>
<com.adjust.sdk.ActivityHandler: void readOpenUrlI(android.net.Uri,long)>
<com.google.android.gms.internal.auth.zzs: void <init>()>
<android.graphics.Paint: float getStrokeWidth()>
<java.util.concurrent.BlockingQueue: java.lang.Object take()>
<java.lang.ref.WeakReference: void clear()>
<com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)>
<java.security.Key: byte[] getEncoded()>
<android.os.Parcel: float readFloat()>
<com.azure.authenticator.storage.database.migration.Migration14To15: void tryFixSingleQuoteBug(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>
<com.google.android.gms.internal.maps.zzz: boolean isClickable()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setLowResImageRequest(java.lang.Object)>
<bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: float calculateProgress(int,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: com.microsoft.authenticator.selfhost.SelfhostConfigManager access$getSelfhostConfigManager$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.google.android.gms.measurement.internal.zzas: void <init>(java.lang.String,com.google.android.gms.measurement.internal.zzaq,java.lang.String,long)>
<com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)>
<com.facebook.react.modules.camera.ImageEditingManager$CleanTask$1: void <init>(com.facebook.react.modules.camera.ImageEditingManager$CleanTask)>
<com.google.android.material.datepicker.YearGridAdapter: android.view.View$OnClickListener createYearClickListener(int)>
<com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzds zzj(int)>
<android.view.ViewGroup: void jumpDrawablesToCurrentState()>
<org.xml.sax.InputSource: void setSystemId(java.lang.String)>
<com.google.android.material.shape.MaterialShapeUtils: com.google.android.material.shape.CornerTreatment createCornerTreatment(int)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doWrite(com.google.android.gms.common.api.internal.TaskApiCall)>
<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.payment.PaymentFormDatasetsUseCase paymentFormDatasetsUseCase()>
<com.google.android.gms.measurement.internal.zzjq: android.os.Handler zzk(com.google.android.gms.measurement.internal.zzjq)>
<android.text.TextPaint: void set(android.text.TextPaint)>
<bolts.Task: void <init>(boolean)>
<com.facebook.imagepipeline.producers.MultiplexProducer: void removeMultiplexer(java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.facebook.react.views.text.ReactStrikethroughSpan: void <init>()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onPause()>
<com.adjust.sdk.ActivityHandler$18: void <init>(com.adjust.sdk.ActivityHandler,java.lang.String)>
<ch.qos.logback.core.rolling.helper.DefaultFileProvider: void <init>()>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getFlexByteArrayPoolParams()>
<com.google.android.material.bottomappbar.BottomAppBar: int access$2900(com.google.android.material.bottomappbar.BottomAppBar)>
<java.util.zip.ZipEntry: long getCompressedSize()>
<android.view.View: void setTranslationX(float)>
<com.azure.authenticator.databinding.FrxSetAsDefaultBinding: android.widget.ScrollView getRoot()>
<com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: int getCurrentInterruptionFilter()>
<com.azure.authenticator.notifications.aad.AadNgcNotification: void <init>(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.ngc.aad.AadNgcSessionUseCase)>
<com.facebook.common.internal.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)>
<com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>
<android.graphics.Paint: float measureText(java.lang.String)>
<com.google.android.material.datepicker.MonthAdapter: long getItemId(int)>
<com.google.android.gms.location.zzad: void <init>()>
<okhttp3.ResponseBody: void <init>()>
<com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)>
<com.airbnb.lottie.LottieDrawable: boolean isAnimating()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()>
<android.graphics.Paint: void setFilterBitmap(boolean)>
<com.google.android.datatransport.runtime.backends.CreationContextFactory: com.google.android.datatransport.runtime.backends.CreationContext create(java.lang.String)>
<android.widget.ImageView: void onDetachedFromWindow()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isMyLocationButtonEnabled()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$approveAadNgcSessionSuspend$2: java.lang.Object invokeSuspend(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase access$7600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.common.collect.ImmutableSet: boolean shouldTrim(int,int)>
<com.airbnb.lottie.LottieAnimationView: void setCompositionTask(com.airbnb.lottie.LottieTask)>
<androidx.cardview.widget.CardView: int getContentPaddingTop()>
<com.airbnb.lottie.ImageAssetDelegate: android.graphics.Bitmap fetchBitmap(com.airbnb.lottie.LottieImageAsset)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: void showTotp(java.lang.String)>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setHardwareAccelerated(android.view.View,boolean)>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.io.File convertToFile(java.net.URL)>
<ch.qos.logback.core.net.SMTPAppenderBase: void start()>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.Bitmap$Config getBitmapConfig()>
<java.util.LinkedHashMap: void <init>(int)>
<com.fasterxml.jackson.core.base.GeneratorBase: void close()>
<com.google.android.gms.common.internal.ClientIdentity: void <init>(int,java.lang.String)>
<com.azure.authenticator.databinding.FragmentEditAddPaymentBinding: void <init>(android.widget.ScrollView,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,android.widget.AutoCompleteTextView,com.google.android.material.textfield.TextInputLayout,android.widget.AutoCompleteTextView,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout)>
<com.google.crypto.tink.KeyTypeManager$KeyFactory: java.lang.Class getKeyFormatClass()>
<com.google.common.collect.ImmutableMap: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureOptionalTelemetry()>
<com.google.android.gms.measurement.internal.zzed: java.lang.String zzc(java.lang.String)>
<com.adjust.sdk.ActivityHandler$4: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.AdjustEvent)>
<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])>
<com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation access$000(com.airbnb.lottie.model.layer.BaseLayer)>
<java.net.Socket: void close()>
<com.airbnb.lottie.LottieOnCompositionLoadedListener: void onCompositionLoaded(com.airbnb.lottie.LottieComposition)>
<java.io.File: boolean equals(java.lang.Object)>
<com.google.android.material.timepicker.ClockHandView: void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener)>
<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>
<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.api.internal.BackgroundDetector: void addListener(com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener)>
<com.google.android.gms.internal.measurement.zzjw: void zza(java.lang.Object,int,long)>
<com.google.android.gms.auth.api.signin.internal.zzi: com.google.android.gms.auth.api.signin.GoogleSignInResult getSignInResultFromIntent(android.content.Intent)>
<com.google.android.material.datepicker.DateSelector: java.lang.Object getSelection()>
<com.azure.authenticator.databinding.AddAccountInfoDialogBinding: com.azure.authenticator.databinding.AddAccountInfoDialogBinding bind(android.view.View)>
<com.facebook.react.uimanager.UIImplementation: void removeRootView(int)>
<android.view.ViewGroup: void onFinishInflate()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.accounts.Account zah(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1: void <init>(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)>
<android.widget.LinearLayout: int getTop()>
<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: java.lang.Object getKey()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void updatePadding()>
<ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>
<com.google.android.gms.auth.api.signin.internal.zze: void <init>(java.lang.String)>
<com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zza()>
<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: int getLength(java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$1702(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void access$notifyAllListeners(com.azure.authenticator.ui.action.UserInteractionRequiredActionManager)>
<com.adjust.sdk.scheduler.TimerCycle: void teardown()>
<com.google.android.gms.maps.internal.zzal: void onMapLoaded()>
<com.airbnb.lottie.parser.RepeaterParser: com.airbnb.lottie.model.content.Repeater parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.internal.measurement.zzja: void zzL(java.lang.Object,int)>
<com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: java.lang.String access$000(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.request.ImageRequest)>
<com.facebook.react.views.image.ReactImageView: void updateCallerContext(java.lang.Object)>
<java.nio.ByteBuffer: byte[] array()>
<com.google.android.gms.auth.api.signin.internal.Storage: void clear()>
<com.microsoft.brooklyn.module.generatepasswords.viewlogic.GeneratePasswordAutofillActivity_MembersInjector: void injectAutofillSuggestionManager(com.microsoft.brooklyn.module.generatepasswords.viewlogic.GeneratePasswordAutofillActivity,com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager)>
<com.google.android.gms.internal.location.zzak: void zzc(int,java.lang.String[])>
<com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>
<com.google.android.gms.internal.measurement.zzla: java.lang.String zzH()>
<com.google.android.gms.maps.model.Cap: com.google.android.gms.maps.model.Cap zzh()>
<com.facebook.react.views.text.ReactTypefaceUtils: int parseNumericFontWeight(java.lang.String)>
<android.graphics.Paint: void <init>(int)>
<com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder: com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder setSignInPassword(com.google.android.gms.auth.api.identity.SignInPassword)>
<java.util.NoSuchElementException: void <init>(java.lang.String)>
<java.lang.Enum: boolean equals(java.lang.Object)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void <init>(android.view.View)>
<com.google.android.gms.measurement.internal.zzcs: void <init>()>
<com.facebook.systrace.Systrace: void registerListener(com.facebook.systrace.TraceListener)>
<com.airbnb.lottie.LottieDrawable: void setMinAndMaxFrame(java.lang.String)>
<androidx.lifecycle.LifecycleOwnerKt: androidx.lifecycle.LifecycleCoroutineScope getLifecycleScope(androidx.lifecycle.LifecycleOwner)>
<com.google.android.gms.measurement.internal.zzaa: void <init>(java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzkg,long,boolean,java.lang.String,com.google.android.gms.measurement.internal.zzas,long,com.google.android.gms.measurement.internal.zzas,long,com.google.android.gms.measurement.internal.zzas)>
<com.google.android.material.bottomappbar.BottomAppBar: void maybeAnimateModeChange(int)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: void invalidateMsaNgcServerKeyIdentifier(java.lang.String)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)>
<com.azure.authenticator.storage.database.DbAccount: void setAadNgcTotpEnabled(boolean)>
<com.airbnb.lottie.LottieImageAsset: int getHeight()>
<java.lang.Boolean: java.lang.String toString(boolean)>
<com.github.amlcurran.showcaseview.ShowcaseView: void fadeOutShowcase()>
<com.facebook.react.uimanager.ViewManagersPropertyCache: com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter createPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,java.lang.Class)>
<com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaF(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult)>
<com.google.android.gms.common.data.DataBufferObserver: void onDataRangeChanged(int,int)>
<com.google.android.material.circularreveal.CircularRevealHelper: void draw(android.graphics.Canvas)>
<com.azure.authenticator.accounts.AadAccount: void setRoutingHint(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadWorker_AssistedFactory powerLiftUploadWorker_AssistedFactory()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void maybeNotifyExclusiveEntryRemoval(java.util.ArrayList)>
<com.facebook.common.internal.Preconditions: int checkElementIndex(int,int)>
<com.google.android.gms.internal.measurement.zzja: int zzB(int)>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<com.google.common.io.BaseEncoding$Alphabet: void <init>(java.lang.String,char[])>
<android.content.Intent: android.net.Uri getData()>
<com.facebook.react.modules.timepicker.TimePickerMode: com.facebook.react.modules.timepicker.TimePickerMode valueOf(java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setDefaultPadding(int,float)>
<com.facebook.soloader.DirectorySoSource: int loadLibraryFrom(java.lang.String,int,java.io.File,android.os.StrictMode$ThreadPolicy)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newDiskCacheSequence(com.facebook.imagepipeline.producers.Producer)>
<com.adjust.sdk.PackageHandler: void access$000(com.adjust.sdk.PackageHandler)>
<com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: boolean canRetry()>
<java.lang.Object: void <init>()>
<com.google.android.material.navigation.NavigationBarItemView: void setItemBackground(android.graphics.drawable.Drawable)>
<com.facebook.common.references.SharedReference: void addReference()>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP: java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix()>
<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
<com.facebook.react.bridge.JavaMethodWrapper$1: void <init>()>
<com.airbnb.lottie.LottieAnimationView: void setProgress(float)>
<com.microsoft.brooklyn.telemetry.BrooklynLaunchTelemetryManager: void <init>(com.microsoft.brooklyn.notifications.BrooklynIntroNotificationManager)>
<com.microsoft.authenticator.core.logging.BaseLogger: java.io.File[] getLogFiles()>
<com.facebook.shimmer.ShimmerFrameLayout: com.facebook.shimmer.ShimmerFrameLayout setShimmer(com.facebook.shimmer.Shimmer)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setGestureInsetBottomIgnored(boolean)>
<okhttp3.CacheControl$Builder: void <init>()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs getArgs()>
<com.airbnb.lottie.L: com.airbnb.lottie.network.NetworkFetcher networkFetcher(android.content.Context)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_22_23$cp()>
<com.google.android.gms.internal.auth.zzaj: void <init>()>
<androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)>
<android.util.SparseIntArray: int get(int)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool)>
<com.google.android.material.timepicker.ChipTextInputComboView: java.lang.String formatText(java.lang.CharSequence)>
<ch.qos.logback.core.util.InterruptUtil: void unmaskInterruptFlag()>
<com.google.android.gms.cloudmessaging.zzy: void <init>(com.google.android.gms.cloudmessaging.Rpc,android.os.Looper)>
<com.google.android.gms.location.zzbt: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context)>
<com.google.android.material.appbar.AppBarLayout: void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)>
<com.airbnb.lottie.LottieCompositionFactory: java.util.Map access$000()>
<com.google.android.gms.cloudmessaging.Rpc: void zza(java.lang.String,java.util.concurrent.ScheduledFuture,com.google.android.gms.tasks.Task)>
<com.google.android.gms.common.util.Base64Utils: byte[] decodeUrlSafe(java.lang.String)>
<android.animation.ValueAnimator: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: void setTotpCodeShown(boolean)>
<android.util.SparseIntArray: int size()>
<com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.internal.maps.zzaf zza(com.google.android.gms.maps.model.TileOverlayOptions)>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasShowcaseView()>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)>
<com.evernote.android.job.JobManager: int cancelAllForTag(java.lang.String)>
<com.facebook.react.modules.systeminfo.AndroidInfoHelpers: boolean isRunningOnStockEmulator()>
<com.google.android.gms.common.api.internal.zabo: void zag()>
<com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadManager: void <init>(com.azure.authenticator.jobs.DeferrableWorkerUtils)>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider settingsViewModelProvider()>
<com.evernote.android.job.GcmAvailableHelper: java.lang.String getPlatformGcmServiceClassName()>
<ch.qos.logback.core.pattern.parser.Node: int hashCode()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemTextAppearanceInactive(int)>
<java.util.concurrent.BlockingQueue: java.lang.Object poll()>
<com.google.android.gms.internal.measurement.zzee: void <init>()>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal build()>
<com.google.android.gms.measurement.internal.zzhn: void zzK(com.google.android.gms.measurement.internal.zzgm)>
<com.google.android.gms.common.internal.ApiExceptionUtil: com.google.android.gms.common.api.ApiException fromStatus(com.google.android.gms.common.api.Status)>
<com.facebook.soloader.ApplicationSoSource: java.lang.String toString()>
<com.airbnb.lottie.model.content.PolystarShape: void <init>(java.lang.String,com.airbnb.lottie.model.content.PolystarShape$Type,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)>
<com.azure.authenticator.databinding.AccountActionLayoutBinding: com.azure.authenticator.databinding.AccountActionLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.adjust.sdk.ActivityHandler: void readSessionCallbackParametersI(android.content.Context)>
<ch.qos.logback.core.spi.AbstractComponentTracker: void removeStaleComponentsFromLingerersMap(long)>
<com.google.android.gms.internal.measurement.zzhb: void zzd(double)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<com.microsoft.did.feature.notifications.viewlogic.CredentialNotificationsFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.notifications.viewlogic.CredentialNotificationsFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.facebook.jni.CppException: void <init>(java.lang.String)>
<com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type forValue(int)>
<com.google.android.gms.auth.api.signin.zaa: void <init>()>
<com.fasterxml.jackson.core.JsonGenerator$Feature: int collectDefaults()>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity: void _initHiltInternal()>
<com.google.android.material.animation.DrawableAlphaProperty: java.lang.Integer get(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.net.server.RemoteReceiverServerListener: ch.qos.logback.core.net.server.RemoteReceiverClient createClient(java.lang.String,java.net.Socket)>
<com.google.android.gms.internal.measurement.zzha: void zzj(int,long)>
<com.facebook.react.views.art.ARTGroupViewManager: void <init>()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzea zzA()>
<com.facebook.imagepipeline.platform.DefaultDecoder: int getBitmapSize(int,int,android.graphics.BitmapFactory$Options)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy: java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix()>
<com.google.android.gms.internal.auth.zzar: void <init>()>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String prefixTag(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout$SavedState$1: com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)>
<com.google.android.gms.internal.maps.zzz: float getWidth()>
<android.widget.EditText: android.text.method.KeyListener getKeyListener()>
<ch.qos.logback.core.LayoutBase: java.lang.String getPresentationHeader()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider cardHistoryDetailViewModelProvider()>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.google.android.gms.measurement.internal.zzjr: void zzb()>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabCradleMargin()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_16_17$1: void <init>(int,int)>
<com.airbnb.lottie.LottieAnimationView: void setAnimation(java.lang.String)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.Class getDefaultClassNameByAnnonation(java.lang.String,java.lang.reflect.Method)>
<com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)>
<java.util.LinkedList: java.lang.Object pollLast()>
<com.azure.authenticator.authentication.msa.ui.AccountPickerCallback$ICompletion: void onAccountAcquired(java.lang.String)>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zzb: void <init>(android.app.Fragment)>
<com.azure.authenticator.databinding.AccountListBinding: void <init>(android.widget.FrameLayout,android.widget.FrameLayout,androidx.constraintlayout.widget.ConstraintLayout,com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding,com.azure.authenticator.databinding.FrxRestorePromptBinding,android.widget.ImageView,com.azure.authenticator.databinding.FrxRestorePromptBinding,androidx.recyclerview.widget.RecyclerView,android.widget.RelativeLayout,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.ScrollView)>
<com.google.android.gms.internal.safetynet.zzk$zza: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zza)>
<com.google.android.material.transformation.FabTransformationScrimBehavior$1: void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View)>
<com.google.android.material.timepicker.TimeModel: java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String)>
<com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(boolean)>
<android.widget.EditText: int getCompoundPaddingBottom()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromAsset(android.content.Context,java.lang.String)>
<com.google.android.material.transformation.FabTransformationBehavior: android.view.ViewGroup calculateChildContentContainer(android.view.View)>
<com.google.android.gms.common.data.DataHolder: android.os.Bundle getMetadata()>
<com.google.android.gms.measurement.internal.zzhl: void <init>(com.google.android.gms.measurement.internal.zzhm,boolean,android.net.Uri,java.lang.String,java.lang.String)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.util.ArrayList zac(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat 'from'(android.content.Context)>
<android.widget.LinearLayout: void setSelected(boolean)>
<com.azure.authenticator.databinding.EnableRemoteNgcCommonBinding: com.azure.authenticator.databinding.EnableRemoteNgcCommonBinding bind(android.view.View)>
<com.google.android.material.datepicker.DateStrings: java.lang.String getYearMonth(android.content.Context,long)>
<com.adjust.sdk.ActivityHandler: void teardownAllSessionParametersS()>
<com.azure.authenticator.OnAppUpgradeReceiver_GeneratedInjector: void injectOnAppUpgradeReceiver(com.azure.authenticator.OnAppUpgradeReceiver)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment)>
<com.facebook.drawee.drawable.FadeDrawable: void setTransitionDuration(int)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.maps.internal.zzby: android.os.Parcelable zza(android.os.Bundle,java.lang.String)>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment: void setDisableDismiss(boolean)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: void <init>(java.lang.String,java.util.TimeZone,java.util.Locale)>
<com.google.android.material.tabs.TabLayout$TabView: float approximateLineWidth(android.text.Layout,int,float)>
<com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)>
<com.google.android.gms.auth.api.signin.internal.zzq: com.google.android.gms.auth.api.signin.internal.zzq zze(android.content.Context)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setOrigin(java.lang.String)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)>
<android.widget.LinearLayout: void dispatchRestoreInstanceState(android.util.SparseArray)>
<com.google.android.gms.measurement.internal.zzal: void zzb(long)>
<com.google.android.material.internal.ParcelableSparseArray$1: void <init>()>
<android.widget.TextView: java.lang.CharSequence getContentDescription()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isLocalThumbnailPreviewsEnabled()>
<android.widget.Button: void setGravity(int)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager_Factory: com.azure.authenticator.ui.action.UserInteractionRequiredActionManager get()>
<com.facebook.react.ReactInstanceManager: void onNewIntent(android.content.Intent)>
<com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()>
<com.google.android.material.timepicker.TimeModel: void <init>(int)>
<com.facebook.datasource.AbstractDataSource: void closeResult(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>
<com.facebook.imagepipeline.memory.Bucket: void <init>(int,int,int,boolean)>
<com.azure.authenticator.databinding.DropdownWithIconBinding: android.widget.RelativeLayout getRoot()>
<com.google.android.gms.signin.zae: void zad()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.safetynet.zzc: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: void <init>()>
<com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void <init>(com.facebook.imagepipeline.cache.ValueDescriptor,com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy,com.facebook.common.internal.Supplier)>
<com.github.amlcurran.showcaseview.ShowcaseView: void updateBitmap()>
<android.view.Choreographer: android.view.Choreographer getInstance()>
<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>
<com.microsoft.authenticator.backup.entities.BackupRestoreError: int getMessage()>
<com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory newInstance(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)>
<com.facebook.imagepipeline.core.CloseableReferenceFactory: com.facebook.common.references.CloseableReference create(java.lang.Object,com.facebook.common.references.ResourceReleaser)>
<com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float,float)>
<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>
<android.view.View: boolean canScrollVertically(int)>
<com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList access$1500(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.airbnb.lottie.animation.content.CompoundTrimPathContent: void <init>()>
<com.google.android.gms.common.server.response.zaa: void <init>()>
<java.lang.Exception: java.lang.String getLocalizedMessage()>
<android.widget.EditText: void setGravity(int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: void <init>(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig)>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: java.lang.String zzi(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>
<java.util.Date: void setTime(long)>
<com.microsoft.authenticator.backup.businessLogic.BackupSerializer: void <init>(android.content.Context)>
<com.airbnb.lottie.model.layer.Layer: int getSolidHeight()>
<android.view.View: java.lang.Object getTag(int)>
<com.google.android.material.snackbar.SnackbarManager$Callback: void dismiss(int)>
<com.google.android.gms.internal.location.zzaz: void zzw(com.google.android.gms.location.zzbq,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.airbnb.lottie.model.Marker: boolean matchesName(java.lang.String)>
<com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()>
<com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase: void <init>(android.content.Context,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase)>
<com.fasterxml.jackson.core.json.JsonReadContext: void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)>
<com.google.android.gms.measurement.internal.zzu: com.google.android.gms.internal.measurement.zzdb zza(java.lang.String,com.google.android.gms.internal.measurement.zzdb)>
<com.facebook.drawee.drawable.DrawableUtils: void copyProperties(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<ch.qos.logback.core.ContextBase: ch.qos.logback.core.LifeCycleManager getLifeCycleManager()>
<com.google.android.material.internal.ThemeEnforcement: void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>
<androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.google.android.gms.measurement.internal.zzg: java.util.List zzaj()>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zzb: void zza(com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zzb,android.app.Activity)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)>
<com.google.android.gms.internal.safetynet.zzs: void <init>(com.google.android.gms.internal.safetynet.zzk$zzb)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.proto.KeyData newKeyData(com.google.crypto.tink.proto.KeyTemplate)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.microsoft.did.di.VcWalletModule_IssuanceReceiptDaoFactory: com.microsoft.did.datasource.db.dao.IssuanceReceiptDao issuanceReceiptDao(com.microsoft.did.di.VcWalletModule,com.microsoft.did.datasource.db.VcDatabase)>
<com.google.android.gms.internal.measurement.zzdd: void zzc(com.google.android.gms.internal.measurement.zzdd,java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$1000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<java.io.FileOutputStream: void close()>
<java.lang.Boolean: int compareTo(java.lang.Boolean)>
<com.google.android.gms.internal.measurement.zzjx: void zzd()>
<com.google.android.datatransport.runtime.backends.TransportBackend: com.google.android.datatransport.runtime.backends.BackendResponse send(com.google.android.datatransport.runtime.backends.BackendRequest)>
<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int)>
<com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)>
<android.view.ViewGroup: void invalidate()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$Companion: android.content.Intent getReEnableAutoBackupIntent(android.content.Context)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInterface: java.lang.Boolean getTrackingEnabled(boolean)>
<com.google.android.gms.maps.GoogleMap$OnPolygonClickListener: void onPolygonClick(com.google.android.gms.maps.model.Polygon)>
<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>
<com.google.android.gms.maps.zzt: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraChangeListener)>
<ch.qos.logback.core.recovery.ResilientFileOutputStream: void <init>(java.io.File,boolean,long)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetworkType(int)>
<com.facebook.common.memory.NoOpMemoryTrimmableRegistry: void <init>()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: void <init>(com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions,com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions,java.lang.String,boolean)>
<java.util.LinkedHashSet: void <init>(int)>
<android.widget.LinearLayout: int getHeight()>
<com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException: void <init>(java.lang.Throwable)>
<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.RuleStore getRuleStore()>
<com.android.installreferrer.api.InstallReferrerClientImpl: void <init>(android.content.Context)>
<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<com.facebook.imagepipeline.image.CloseableImage: boolean isStateful()>
<java.lang.Enum: int ordinal()>
<com.airbnb.lottie.LottieDrawable: void drawInternal(android.graphics.Canvas)>
<java.lang.Float: int floatToRawIntBits(float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase access$7300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy: java.lang.String getElapsedPeriodsFileName()>
<java.io.IOException: java.lang.String getMessage()>
<com.facebook.common.streams.LimitedInputStream: void <init>(java.io.InputStream,int)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.disk.DiskTrimmableRegistry access$900(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.IssuanceUseCase access$8400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.location.SettingsClient: void <init>(android.content.Context)>
<ch.qos.logback.core.spi.AbstractComponentTracker$2: void <init>(ch.qos.logback.core.spi.AbstractComponentTracker)>
<com.microsoft.authenticator.experimentation.ExperimentationManager: void <init>(android.content.Context,com.microsoft.authenticator.experimentation.storage.ExperimentationStorage)>
<com.azure.authenticator.logging.VerifiableCredentialTelemetryEventWrapper: void <init>(java.lang.String,boolean,com.microsoft.authenticator.core.telemetry.entities.FilteringStatus,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.microsoft.authenticator.backup.entities.CreateBackupResult$Error: java.lang.Exception getException()>
<com.microsoft.authenticator.msa.entities.ValidateMsaAccountResult$UiNeeded: void <init>(android.app.PendingIntent,android.os.Bundle)>
<com.google.android.gms.maps.internal.zzi: void <init>()>
<com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)>
<com.facebook.imagepipeline.producers.BaseConsumer: void onUnhandledException(java.lang.Exception)>
<com.google.android.gms.measurement.internal.zzcx: void <init>()>
<com.google.android.gms.internal.measurement.zzha: void zzA(int,java.util.List,boolean)>
<com.google.android.gms.location.zzba: void zzd(com.google.android.gms.location.LocationResult)>
<androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>
<com.google.android.gms.internal.location.zzbh: void <init>(com.google.android.gms.internal.location.zzbi,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationSettingsRequest,java.lang.String)>
<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int,int)>
<com.facebook.datasource.SimpleDataSource: void <init>()>
<com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<android.util.JsonWriter: android.util.JsonWriter endArray()>
<ch.qos.logback.core.joran.util.PropertySetter: void invokeMethodWithSingleParameterOnThisObject(java.lang.reflect.Method,java.lang.Object)>
<com.facebook.react.views.text.TextAttributes: void setFontSize(float)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<java.io.File: void <init>(java.lang.String)>
<com.google.android.gms.common.internal.zak: void zae(com.google.android.gms.common.ConnectionResult)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: int onStartCommand(android.content.Intent,int,int)>
<com.google.android.material.chip.ChipDrawable: boolean showsChipIcon()>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: long getAutoBackupLastExecutionTimestampMillis()>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>
<com.facebook.yoga.YogaFlexDirection: void <init>(java.lang.String,int,int)>
<com.google.android.gms.internal.measurement.zzjp: java.lang.Object getValue()>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectPowerLiftUseCase(com.azure.authenticator.PhoneFactorApplication,com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase)>
<com.evernote.android.job.Job: void onReschedule(int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: android.widget.EditText access$getEditText$p(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<android.widget.TextView: java.lang.CharSequence getText()>
<java.util.concurrent.CopyOnWriteArraySet: void clear()>
<android.graphics.drawable.Drawable: boolean setState(int[])>
<com.adjust.sdk.Util: java.lang.String getMcc(android.content.Context)>
<com.google.android.gms.internal.measurement.zzmj: boolean zze()>
<androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)>
<com.google.android.gms.internal.measurement.zzig: void <init>(int)>
<com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getMask(com.facebook.react.bridge.ReadableMap)>
<java.util.BitSet: int length()>
<com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry: void logActionTime(com.microsoft.authenticator.core.telemetry.TelemetryActionEnum)>
<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata$Companion: com.microsoft.authenticator.backup.entities.metadata.BackupMetadata getBackupMetadata(android.content.Context)>
<com.google.android.gms.internal.measurement.zzmj: com.google.android.gms.internal.measurement.zzmk zzf()>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: int zab()>
<com.google.android.material.textfield.TextInputLayout: void updateBoxUnderlineBounds(android.graphics.Rect)>
<com.facebook.cache.disk.DefaultDiskStorage: java.io.File access$300(com.facebook.cache.disk.DefaultDiskStorage)>
<com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: com.facebook.common.references.CloseableReference createFallbackBitmap(int,int,android.graphics.Bitmap$Config)>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectRootDetectionManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.rootdetection.RootDetectionManager)>
<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.google.android.material.textfield.TextInputLayout: void updateBoxCollapsedPaddingTop()>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: ch.qos.logback.core.Layout getLayout()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onSaveInstanceState(android.os.Bundle)>
<java.lang.RuntimeException: java.lang.String toString()>
<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewTouchBlocked(android.view.MotionEvent)>
<com.google.android.gms.common.server.response.zan: void <init>(java.lang.Class)>
<com.facebook.yoga.YogaNode: void setMaxWidth(float)>
<ch.qos.logback.core.pattern.FormatInfo: int getMax()>
<com.google.android.gms.location.LocationStatusCodes: int zza(int)>
<com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.datatransport.runtime.retries.RetryStrategy: java.lang.Object shouldRetry(java.lang.Object,java.lang.Object)>
<android.widget.Button: void setText(java.lang.CharSequence)>
<com.google.android.gms.measurement.internal.zzjb: boolean zzO()>
<ch.qos.logback.core.recovery.ResilientFileOutputStream: java.nio.channels.FileChannel getChannel()>
<androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)>
<com.azure.authenticator.OnAppUpgradeReceiver: android.content.Intent getIntent()>
<com.azure.authenticator.notifications.AbstractNotification: void <init>()>
<com.google.android.material.badge.BadgeDrawable: int readColorFromAttributes(android.content.Context,android.content.res.TypedArray,int)>
<org.slf4j.Logger: void info(java.lang.String)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getNetworkFetchSequence()>
<com.adjust.sdk.AdjustInstance: void addSessionCallbackParameter(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketError$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.signin.internal.zaf: void zae(int)>
<android.graphics.Point: void <init>()>
<android.os.Parcel: void writeInt(int)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingTaskCallback: void onComplete()>
<com.google.android.gms.auth.api.signin.zzd: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder requestId()>
<com.google.android.gms.auth.api.signin.internal.zzv: void zzt()>
<com.google.android.gms.internal.measurement.zzc: android.os.Parcelable zzc(android.os.Parcel,android.os.Parcelable$Creator)>
<android.widget.FrameLayout: int getChildCount()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void moveCamera(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.material.chip.ChipDrawable: void setIconEndPaddingResource(int)>
<com.google.android.gms.common.util.WorkSourceUtil: boolean hasWorkSourcePermission(android.content.Context)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogRequestEncoder: void encode(com.google.android.datatransport.cct.internal.LogRequest,com.google.firebase.encoders.ObjectEncoderContext)>
<com.azure.authenticator.databinding.AddNewAadMfaAccountBinding: void <init>(android.widget.ScrollView,android.widget.Button,android.widget.EditText,android.widget.EditText)>
<java.util.concurrent.atomic.AtomicInteger: void <init>()>
<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(long)>
<com.google.android.gms.internal.measurement.zzer: java.lang.Object zze(java.lang.String)>
<android.app.Dialog: void onAttachedToWindow()>
<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.databinding.FragmentEnableAppLockBinding: com.azure.authenticator.databinding.FragmentEnableAppLockBinding bind(android.view.View)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)>
<com.azure.authenticator.databinding.AadPhoneSignInOnPremQrBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.adjust.sdk.AdjustInstance: void saveRawReferrer(java.lang.String,long,android.content.Context)>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>
<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>
<com.fasterxml.jackson.core.util.TextBuffer: char[] resultArray()>
<com.google.android.gms.common.internal.GmsLogger: void d(java.lang.String,java.lang.String)>
<com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)>
<android.widget.AutoCompleteTextView: void showDropDown()>
<com.google.android.gms.internal.measurement.zzja: void <init>(int[],java.lang.Object[],int,int,com.google.android.gms.internal.measurement.zzix,boolean,boolean,int[],int,int,com.google.android.gms.internal.measurement.zzjc,com.google.android.gms.internal.measurement.zzil,com.google.android.gms.internal.measurement.zzjw,com.google.android.gms.internal.measurement.zzhf,com.google.android.gms.internal.measurement.zzis,byte[])>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()>
<com.google.android.gms.measurement.internal.zzfc: void zzo(java.lang.String,com.google.android.gms.internal.measurement.zzco)>
<com.google.android.material.navigation.NavigationBarMenuView: void setBadgeIfNeeded(com.google.android.material.navigation.NavigationBarItemView)>
<com.google.android.gms.internal.maps.zzw: java.util.List getHoles()>
<com.facebook.imageutils.WebpUtil: int getInt(java.io.InputStream)>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: void <init>()>
<ch.qos.logback.core.net.HardenedObjectInputStream: void addToWhitelist(java.util.List)>
<com.google.android.gms.common.api.internal.zabr: void zab()>
<com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()>
<com.adjust.sdk.ActivityHandler$25: void <init>(com.adjust.sdk.ActivityHandler,java.lang.String,org.json.JSONObject)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$1000(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexShrink(float)>
<com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList createDefaultColorStateList(int)>
<com.microsoft.onlineid.AccountManager: void <init>(android.content.Context,com.microsoft.onlineid.OnlineIdConfiguration)>
<com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)>
<com.facebook.react.modules.network.ProgressListener: void onProgress(long,long,boolean)>
<com.google.android.gms.auth.api.identity.zzh: void <init>()>
<org.json.JSONObject: long optLong(java.lang.String,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.commonuilibrary.util.NotificationHelper notificationHelper()>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void addWarn(ch.qos.logback.core.Context,java.lang.String)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void startFadeInAnimation()>
<android.graphics.drawable.Animatable: void stop()>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: void close(java.io.InputStream)>
<android.graphics.Matrix: float mapRadius(float)>
<com.facebook.react.uimanager.UIImplementation: void updateRootView(com.facebook.react.uimanager.ReactShadowNode,int,int)>
<com.google.android.material.textfield.TextInputLayout: void refreshEndIconDrawableState()>
<com.google.android.gms.cloudmessaging.zzj: void <init>(com.google.android.gms.cloudmessaging.zzf)>
<com.google.android.gms.measurement.internal.zzfc: java.lang.String zzc(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker access$1200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.uimanager.ShadowNodeRegistry: void <init>()>
<com.google.android.material.tabs.TabLayout$PagerAdapterObserver: void <init>(com.google.android.material.tabs.TabLayout)>
<android.os.Bundle: void putLong(java.lang.String,long)>
<com.evernote.android.job.JobRequest: long getMinFlex()>
<android.widget.AutoCompleteTextView: boolean requestFocus()>
<kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>
<com.google.common.collect.MapMakerInternalMap$DummyInternalEntry: com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext()>
<java.io.File: int hashCode()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$5: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzC(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>
<com.google.android.gms.internal.safetynet.zzk$zzj: void <init>(com.google.android.gms.common.api.Status,boolean)>
<com.google.android.material.chip.ChipGroup: boolean access$400(com.google.android.material.chip.ChipGroup)>
<com.google.android.gms.internal.measurement.zzgb: void <init>()>
<android.widget.LinearLayout: boolean isFocused()>
<com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getHeight()>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: void postProcessEvent(java.lang.Object)>
<com.azure.authenticator.databinding.FragmentStopSyncAccountBinding: void <init>(android.widget.ScrollView,android.widget.LinearLayout,android.widget.Button,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getSecretKeyBasedAccountByIdentityProvider(java.lang.String,java.lang.String)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzi()>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity: java.lang.Object generatedComponent()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>
<com.google.android.gms.dynamic.IFragmentWrapper: com.google.android.gms.dynamic.IObjectWrapper zzl()>
<com.google.android.datatransport.runtime.TransportContext$Builder: void <init>()>
<com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder: void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int)>
<androidx.work.impl.diagnostics.DiagnosticsReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)>
<android.view.View: void setPadding(int,int,int,int)>
<com.facebook.imageformat.DefaultImageFormatChecker: boolean isPngHeader(byte[],int)>
<ch.qos.logback.classic.net.SSLSocketReceiver: ch.qos.logback.core.net.ssl.SSLConfiguration getSsl()>
<com.google.android.gms.measurement.internal.zzdf: void <init>()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setImageDecodeOptions(com.facebook.imagepipeline.common.ImageDecodeOptions)>
<kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>
<ch.qos.logback.core.spi.PropertyContainer: java.lang.String getProperty(java.lang.String)>
<android.widget.CheckedTextView: void setText(java.lang.CharSequence)>
<android.content.pm.PackageManager: boolean isInstantApp(java.lang.String)>
<com.google.android.material.shape.ShapePath$PathArcOperation: float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation)>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zze(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: void leaveWorkplaceJoin(java.lang.String)>
<bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)>
<com.facebook.yoga.YogaNode: void setWidthPercent(float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzjb zzy()>
<com.google.android.gms.internal.measurement.zzjk: int zzq(int,java.util.List,boolean)>
<com.fasterxml.jackson.core.util.TextBuffer: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>
<com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.views.art.ARTRenderableViewManager createARTShapeViewManager()>
<com.google.android.gms.common.api.internal.zabl: void zaB()>
<com.google.common.collect.MapMaker: int getConcurrencyLevel()>
<com.airbnb.lottie.network.NetworkCache: java.io.File writeTempCacheFile(java.lang.String,java.io.InputStream,com.airbnb.lottie.network.FileExtension)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSBundleFile(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void registerEncodedMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache)>
<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: int getLoadBatchSize()>
<com.airbnb.lottie.network.NetworkCache: void renameTempFile(java.lang.String,com.airbnb.lottie.network.FileExtension)>
<androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)>
<com.google.android.gms.internal.measurement.zzbr: boolean zzK(com.google.android.gms.internal.measurement.zzbr)>
<ch.qos.logback.core.AsyncAppenderBase: void putUninterruptibly(java.lang.Object)>
<com.microsoft.did.businesslogic.RestoreUseCase: void <init>(com.microsoft.did.sdk.BackupService,com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao,com.microsoft.did.businesslogic.ReceiptUseCase)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<com.google.android.gms.measurement.internal.zzat: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: void zzaU(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getStartOpacity()>
<com.facebook.react.devsupport.LogBoxDialog: void <init>(android.app.Activity,android.view.View)>
<com.google.android.gms.measurement.internal.zzgv: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference,boolean)>
<com.google.android.material.timepicker.ChipTextInputComboView: java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence)>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)>
<com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: void <init>(com.facebook.react.animated.TransformAnimatedNode)>
<android.view.View: boolean requestFocus()>
<com.microsoft.did.util.VerifiableCredentialUtil: java.lang.String getAppInfo(android.content.Context)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonInputStreamSync(java.io.InputStream,java.lang.String,boolean)>
<com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)>
<com.google.android.material.chip.ChipGroup: void clearCheck()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.facebook.imagepipeline.systrace.FrescoSystrace: com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace getInstance()>
<com.google.android.gms.measurement.internal.zzib: void zzq(android.app.Activity)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _verifyNLZ2()>
<com.airbnb.lottie.LottieCompositionFactory$11: void onResult(java.lang.Throwable)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase msaRegistrationUseCase()>
<android.widget.FrameLayout: void setMeasuredDimension(int,int)>
<com.google.android.gms.cloudmessaging.zzq: boolean zza()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Long getTransportContextId(android.database.sqlite.SQLiteDatabase,com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Integer lambda$cleanUp$10(long,android.database.sqlite.SQLiteDatabase)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment: androidx.preference.Preference$OnPreferenceClickListener getOpenInBrowserOnClickListener(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$LINKS)>
<com.fasterxml.jackson.core.JsonStreamContext: void <init>()>
<com.google.android.gms.dynamite.zzo: com.google.android.gms.dynamic.IObjectWrapper zze(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int)>
<com.google.android.gms.internal.safetynet.zzk$zzh: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzf)>
<com.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int)>
<com.facebook.common.logging.LoggingDelegate: void e(java.lang.String,java.lang.String)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderRGB(int,float)>
<com.google.android.gms.internal.measurement.zzjk: int zzl(java.util.List)>
<java.lang.Double: double doubleValue()>
<com.microsoft.authenticator.core.algorithms.EstsGuidHashAlgorithm: java.lang.String calculateHash(java.lang.String)>
<com.google.android.gms.common.stats.zza: void <init>()>
<com.microsoft.authenticator.authentication.dialog.AuthDialogIntentProvider: android.content.Intent getAadRemoteNgcSessionIntent(android.content.Context,com.microsoft.ngc.aad.NgcSession,boolean,long)>
<com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)>
<android.content.Context: java.lang.ClassLoader getClassLoader()>
<com.airbnb.lottie.LottieDrawable: void clearComposition()>
<com.facebook.react.views.slider.ReactSlider: int getTotalSteps()>
<com.microsoft.authenticator.mfasdk.authentication.entities.GetCachedPolicyStatus$Success: void <init>(com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails)>
<android.widget.CheckBox: boolean performClick()>
<com.google.android.gms.internal.maps.zzt: void zzg(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.gms.dynamic.SupportFragmentWrapper: void <init>(androidx.fragment.app.Fragment)>
<com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>
<com.google.android.material.shape.ShapePath$PathLineOperation: float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)>
<ch.qos.logback.core.FileAppender: boolean checkForFileCollisionInPreviousFileAppenders()>
<com.facebook.react.bridge.CatalystInstanceImpl: boolean access$1102(com.facebook.react.bridge.CatalystInstanceImpl,boolean)>
<androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.facebook.react.uimanager.UIImplementation: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)>
<com.facebook.react.views.text.TextAttributeProps: void setBackgroundColor(java.lang.Integer)>
<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.Logger getLogger(java.lang.Class)>
<com.facebook.react.uimanager.events.EventDispatcher: boolean access$400(com.facebook.react.uimanager.events.EventDispatcher)>
<com.facebook.imagepipeline.producers.ProducerListener: void onProducerStart(java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.FragmentAddressListBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,androidx.recyclerview.widget.RecyclerView,android.widget.ImageView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.ScrollView,android.widget.FrameLayout,androidx.coordinatorlayout.widget.CoordinatorLayout,androidx.constraintlayout.widget.ConstraintLayout,com.facebook.shimmer.ShimmerFrameLayout,android.widget.TextView,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.widget.TextView)>
<com.facebook.imagepipeline.producers.FetchState: void setLastIntermediateResultTimeMs(long)>
<com.facebook.drawee.generic.WrappingUtils: void updateOverlayColorRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams)>
<ch.qos.logback.core.AppenderBase: java.lang.String getName()>
<com.google.android.gms.internal.measurement.zzim: void <init>(long[],int)>
<com.google.common.base.CharMatcher: boolean matchesNoneOf(java.lang.CharSequence)>
<com.azure.authenticator.storage.database.DbAccount: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<androidx.viewpager.widget.ViewPager: void onAttachedToWindow()>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void <init>(android.content.Context)>
<com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<com.google.android.gms.internal.measurement.zzds: long zze(int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.view.View$OnFocusChangeListener access$1100(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)>
<com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerProperties()>
<android.widget.EditText: int getCompoundPaddingRight()>
<com.google.android.gms.internal.measurement.zzey: void <init>(android.content.Context)>
<com.google.android.material.ripple.RippleDrawableCompat: com.google.android.material.ripple.RippleDrawableCompat mutate()>
<ch.qos.logback.classic.filter.LevelFilter: ch.qos.logback.core.spi.FilterReply decide(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.microsoft.brooklyn.ui.credential.AddCredentialViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.common.api.Status: com.google.android.gms.common.ConnectionResult getConnectionResult()>
<com.google.android.gms.internal.auth.zze: android.os.Bundle zza(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$9: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void maybeHandleIntermediateResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState)>
<com.azure.authenticator.accounts.GenericAccount: boolean isNgc()>
<com.facebook.react.views.viewpager.ReactViewPager: void addViewToAdapter(android.view.View,int)>
<com.facebook.cache.disk.FileCache: void clearAll()>
<com.google.android.gms.internal.measurement.zzba: void <init>(com.google.android.gms.internal.measurement.zzbr,android.os.Bundle)>
<com.google.android.gms.common.util.DefaultClock: com.google.android.gms.common.util.Clock getInstance()>
<com.adjust.sdk.SharedPreferencesManager: void <init>(android.content.Context)>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher is(char)>
<androidx.appcompat.widget.ListPopupWindow: java.lang.Object getSelectedItem()>
<com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()>
<com.azure.authenticator.databinding.PasswordAutoChangeDialogLayoutBinding: void <init>(android.widget.LinearLayout,com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding,com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding,com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding,com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding)>
<com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$1100(com.facebook.react.modules.core.JavaTimerManager)>
<com.facebook.common.webp.WebpBitmapFactory: void setBitmapCreator(com.facebook.common.webp.BitmapCreator)>
<android.widget.LinearLayout: android.view.View getChildAt(int)>
<java.util.PriorityQueue: java.lang.Object poll()>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF16(int)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int,int,int)>
<com.google.android.gms.internal.common.zza: void zzC(int,android.os.Parcel)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void showDialogIfNecessary()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getRetryImageScaleType()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onResume()>
<com.facebook.common.streams.TailAppendingInputStream: void <init>(java.io.InputStream,byte[])>
<com.facebook.cache.disk.DiskStorage: java.util.Collection getEntries()>
<com.google.android.material.chip.ChipDrawable: void setRippleColorResource(int)>
<com.google.android.material.card.MaterialCardViewHelper: void setStrokeWidth(int)>
<com.google.android.gms.internal.location.zzbs: com.google.android.gms.internal.location.zzbs zzj(java.util.Collection)>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onSaveInstanceState(android.os.Bundle)>
<com.azure.authenticator.databinding.FragmentMainBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardinfo.presentationlogic.detailedreceipts.CardHistoryDetailViewModel access$11800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>
<com.facebook.imagepipeline.producers.ProducerListener: void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void resetMinMaxZoomPreference()>
<com.fasterxml.jackson.core.base.ParserBase: void reportInvalidNumber(java.lang.String)>
<java.lang.Thread: void sleep(long)>
<ch.qos.logback.core.pattern.DynamicConverter: void <init>()>
<com.google.android.gms.tasks.zzz: void <init>(java.util.Collection)>
<com.google.android.material.circularreveal.CircularRevealHelper: void destroyCircularRevealCache()>
<com.google.android.material.tabs.TabLayout: void applyModeAndGravity()>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource submitFetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions$Builder: void <init>()>
<com.google.android.gms.measurement.internal.zzkd: java.lang.String zzD(com.google.android.gms.measurement.internal.zzaf)>
<com.google.android.gms.internal.auth-api.zzp: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getThumbnail(com.facebook.imagepipeline.common.ResizeOptions,int)>
<com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)>
<android.app.DialogFragment: void setShowsDialog(boolean)>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: void setTargetSize(int,int)>
<com.google.android.gms.internal.measurement.zzkg: void zzf(java.lang.Object,long,float)>
<com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory access$000()>
<com.microsoft.ngc.aad.NgcSession$Companion: com.microsoft.ngc.aad.NgcSession fromBundle(android.os.Bundle,com.microsoft.authenticator.core.telemetry.ITelemetryManager)>
<kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportInvalidEOFInValue()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showAadNgcSessionDialog$2: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<java.net.URL: void <init>(java.lang.String)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadImpl)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setBorder(int,float)>
<com.adjust.sdk.ActivityPackage: java.util.Map getCallbackParameters()>
<com.adjust.sdk.DeviceInfo: java.lang.String getScreenSize(int)>
<ch.qos.logback.classic.joran.action.ContextNameAction: void <init>()>
<com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.internal.measurement.zzbx: com.google.android.gms.internal.measurement.zzbx zza(java.lang.String)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvideAppIdDomainSvcRetrofitInterfaceFactory: com.microsoft.brooklyn.module.service.AppIdDomainMappingSvcInterface provideAppIdDomainSvcRetrofitInterface(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getMfaServiceUrl()>
<javax.net.ssl.SSLSocket: void setNeedClientAuth(boolean)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: boolean isHandlerThread()>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.authenticator.location.LocationManager access$getLocationManager$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.microsoft.brooklyn.module.common.BrooklynStorage getBrooklynStorage$app_productionRelease()>
<android.animation.ValueAnimator: void setFloatValues(float[])>
<com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation: void <init>(java.util.List)>
<com.azure.authenticator.accounts.RestoreCapability: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.location.zzbq: void <init>(java.util.List,android.app.PendingIntent,java.lang.String)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvideBrooklynConfigsServiceInterfaceFactory: com.microsoft.brooklyn.module.service.BrooklynConfigsServiceInterface provideBrooklynConfigsServiceInterface(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient: void <init>(android.app.Activity,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<androidx.core.view.WindowInsetsControllerCompat: void <init>(android.view.Window,android.view.View)>
<com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener: void <init>(com.facebook.react.modules.datepicker.DatePickerDialogModule,com.facebook.react.bridge.Promise)>
<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void access$100(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<com.facebook.react.modules.deviceinfo.DeviceInfoModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.measurement.internal.zzkd: void zzI(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>
<ch.qos.logback.core.joran.util.StringToObjectConverter: java.lang.Object convertByValueOfMethod(ch.qos.logback.core.spi.ContextAware,java.lang.Class,java.lang.String)>
<androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)>
<com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextRightBound(android.graphics.RectF,int,int)>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void onSetFailedResult(com.google.android.gms.common.api.Result)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>
<com.azure.authenticator.ui.RootActivityBase: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager getAadTokenRefreshManager()>
<com.google.android.gms.common.internal.zzm: void <init>(java.lang.String,java.lang.String,int,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.viewLogic.IMfaSdkDeviceGestureManager iMfaSdkDeviceGestureManager()>
<com.google.crypto.tink.proto.Keyset$Builder: com.google.crypto.tink.proto.Keyset$Builder addKey(com.google.crypto.tink.proto.Keyset$Key)>
<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzgf: int zzj(com.google.android.gms.internal.measurement.zzji,byte[],int,int,int,com.google.android.gms.internal.measurement.zzge)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchTrue()>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: ch.qos.logback.core.net.server.ServerListener createServerListener(java.net.ServerSocket)>
<com.google.android.gms.internal.measurement.zzbr: void zzS(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzbg)>
<android.widget.FrameLayout: void setMinimumWidth(int)>
<com.google.android.gms.common.util.concurrent.zza: void <init>(java.lang.Runnable,int)>
<com.google.android.gms.measurement.internal.zzgd: void zzx(com.google.android.gms.measurement.internal.zzp,boolean)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void access$handleAuthenticationException(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.onlineid.exception.AuthenticationException)>
<com.google.android.gms.common.internal.zzaj: void <init>()>
<com.google.android.gms.location.ActivityRecognitionClient: void <init>(android.app.Activity)>
<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>
<com.google.android.gms.maps.model.zzt: void <init>(com.google.android.gms.maps.model.TileOverlayOptions,com.google.android.gms.maps.model.TileProvider)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconSizeResource(int)>
<com.google.android.gms.measurement.internal.zzcy: void <init>()>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener)>
<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>
<com.google.android.material.shape.ShapePath: float getStartY()>
<com.airbnb.lottie.LottieCompositionFactory$2: com.airbnb.lottie.LottieResult call()>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void onNotificationOpen(android.content.Context,android.os.Bundle)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$$special$$inlined$navArgs$1: android.os.Bundle invoke()>
<com.google.android.gms.measurement.internal.zzib: void zzk(android.app.Activity,java.lang.String,java.lang.String)>
<android.view.View$OnClickListener: void onClick(android.view.View)>
<com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)>
<com.google.android.gms.internal.auth-api-phone.zzm: void zza(com.google.android.gms.internal.auth-api-phone.zze)>
<com.google.android.gms.common.Feature: void <init>(java.lang.String,long)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<com.facebook.react.ReactInstanceManager$7: void <init>(com.facebook.react.ReactInstanceManager)>
<com.google.android.material.chip.ChipDrawable: void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)>
<com.google.android.gms.signin.internal.zab: void <init>()>
<com.google.android.gms.internal.measurement.zzbr: void zzo(android.app.Activity,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.MatrixMathHelper: void applyRotateX(double[],double)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void leaveWorkplaceJoin()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzk(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeEndArray()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer lambdaFactory$(com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setRotateGesturesEnabled(boolean)>
<android.widget.CheckBox: void toggle()>
<com.google.android.material.snackbar.BaseTransientBottomBar: android.animation.ValueAnimator getAlphaAnimator(float[])>
<com.google.android.gms.common.api.internal.zae: void <init>(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager get()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType: int getValue()>
<com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager access$000(com.facebook.react.uimanager.UIViewOperationQueue)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.google.android.gms.internal.measurement.zzif: void zzc(com.google.android.gms.internal.measurement.zzix)>
<android.os.Parcel: byte readByte()>
<com.google.android.gms.common.internal.BaseGmsClient: void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener,java.lang.String)>
<com.google.android.gms.common.internal.zac: java.lang.String zad(android.content.Context,int)>
<com.facebook.react.uimanager.ReactRoot: java.lang.String getSurfaceID()>
<com.google.android.gms.internal.measurement.zzgf: int zzd(byte[],int)>
<android.widget.Button: void setPadding(int,int,int,int)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onDestroyView()>
<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: void closeDatabase()>
<androidx.hilt.work.WorkerFactoryModule_ProvideFactoryFactory: androidx.hilt.work.HiltWorkerFactory provideFactory(java.util.Map)>
<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void <init>(int)>
<com.google.android.gms.common.providers.zza: void <init>()>
<com.google.android.gms.common.api.internal.zabl: void zau(com.google.android.gms.common.api.internal.zabl,com.google.android.gms.common.api.internal.zabm)>
<com.google.android.gms.measurement.internal.zzdw: java.util.List zzc()>
<com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float,boolean)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: int getBorderColor(int)>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStyleWidth()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider fcmTokenRefreshWorker_AssistedFactoryProvider()>
<com.azure.authenticator.storage.Storage: boolean isMfaBiometricPreferenceSet(android.content.Context)>
<com.google.android.gms.internal.measurement.zzlc: boolean zzb()>
<com.google.android.material.snackbar.BaseTransientBottomBar$12: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.google.android.gms.common.internal.service.zae: void <init>()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _parseNegNumber()>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: android.graphics.Matrix getTransformationMatrixFromInvertedExif(int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<ch.qos.logback.classic.spi.ILoggingEvent: org.slf4j.Marker getMarker()>
<ch.qos.logback.core.spi.ContextAwareImpl: void addInfo(java.lang.String)>
<com.microsoft.authenticator.core.logging.BaseLogger: void log(int,java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_Factory: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel newInstance(com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.workaccount.businesslogic.DeviceRegistrationUseCase,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager,com.microsoft.authenticator.selfhost.SelfhostConfigManager)>
<com.facebook.react.modules.camera.CameraRollManager: boolean putImageInfo(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int)>
<com.google.android.material.internal.ThemeEnforcement: androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void <init>(ch.qos.logback.core.rolling.helper.FileNamePattern,ch.qos.logback.core.rolling.helper.RollingCalendar,ch.qos.logback.core.rolling.helper.FileProvider)>
<com.google.android.gms.common.data.AbstractDataBuffer: void release()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.service.BrooklynConfigsHandler brooklynConfigsHandler()>
<java.lang.Enum: int compareTo(java.lang.Enum)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: java.lang.Object restoreBackup(com.microsoft.onlineid.UserKey,com.microsoft.authenticator.backup.entities.CloudBackup,kotlin.coroutines.Continuation)>
<com.google.android.gms.maps.model.MarkerOptions: java.lang.String getTitle()>
<com.microsoft.brooklyn.ui.importCred.ImportPasswordsViewModel: void <init>(com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.repository.UtilitySDKRepository)>
<com.adjust.sdk.ActivityHandler: void gdprForgetMe()>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.IActivityHandler getActivityHandler(com.adjust.sdk.AdjustConfig)>
<com.google.android.material.timepicker.ClockFaceView$1: void <init>(com.google.android.material.timepicker.ClockFaceView)>
<com.microsoft.authenticator.selfhost.SelfhostConfigManager: void setupSelfhostFeatures()>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>
<com.facebook.react.views.art.PropHelper: float[] toFloatArray(com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository generatePasswordRepository()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel$launchGetDeviceId$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable)>
<com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List getMaskAnimations()>
<ch.qos.logback.classic.spi.ILoggingEvent: boolean hasCallerData()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: boolean isResizeAndRotateEnabledForNetwork()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback: void <init>(androidx.appcompat.app.AppCompatActivity,com.microsoft.onlineid.AccountManager,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase,com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion)>
<com.facebook.react.ReactActivityDelegate: void onPause()>
<android.app.AlertDialog: void cancel()>
<com.google.android.gms.common.stats.ConnectionTracker: void unbindService(android.content.Context,android.content.ServiceConnection)>
<ch.qos.logback.classic.boolex.OnErrorEvaluator: void <init>()>
<com.google.android.gms.auth.api.phone.SmsRetrieverClient: void <init>(android.app.Activity)>
<com.google.android.material.textfield.IndicatorViewController: void setHelperTextAppearance(int)>
<com.google.android.material.button.MaterialButtonToggleGroup: void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>
<com.adjust.sdk.IActivityHandler: void disableThirdPartySharing()>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>
<com.facebook.react.views.scroll.ScrollEvent: void init(int,com.facebook.react.views.scroll.ScrollEventType,int,int,float,float,int,int,int,int)>
<com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<com.google.android.gms.tasks.zzw: void zzg()>
<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<ch.qos.logback.core.pattern.SpacePadder: void rightPad(java.lang.StringBuilder,java.lang.String,int)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: long getEventCleanUpAge()>
<ch.qos.logback.core.rolling.RolloverFailure: void <init>(java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.auth.zzj: void <init>(com.google.android.gms.internal.auth.zzh,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.GoogleApiClient,java.lang.String)>
<androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()>
<java.util.concurrent.Semaphore: void <init>(int)>
<com.evernote.android.job.JobStorageDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>
<com.google.android.gms.common.internal.GmsClientSupervisor: boolean zzb(com.google.android.gms.common.internal.zzm,android.content.ServiceConnection,java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$getCachedPolicyForRichContext$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,kotlin.coroutines.Continuation)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()>
<com.microsoft.did.sdk.VerifiableCredentialSdk: void init$default(android.content.Context,java.lang.String,com.microsoft.did.sdk.util.log.SdkLog$Consumer,kotlinx.serialization.modules.SerializersModule,java.lang.String,java.lang.String,int,java.lang.Object)>
<android.content.res.TypedArray: android.content.res.Resources getResources()>
<com.microsoft.authenticator.msa.entities.GetMsaEncryptionKeyResult$Error: void <init>(com.microsoft.onlineid.exception.AuthenticationException)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>
<com.google.android.gms.internal.measurement.zzib: void <init>(java.lang.String)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectMfaSilentLocationManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationManager)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.repository.UtilitySDKRepository access$9100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<bolts.TaskCompletionSource: void setResult(java.lang.Object)>
<com.azure.authenticator.storage.database.migration.Migration12To13$migrateToVersion13$queryLambda$1: void <init>(com.azure.authenticator.storage.database.migration.Migration12To13,androidx.sqlite.db.SupportSQLiteDatabase)>
<com.google.android.gms.internal.measurement.zzp: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzv)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getDisplayID()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzi(int)>
<com.google.android.material.badge.BadgeDrawable: void setAdditionalHorizontalOffset(int)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolConfig build()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$onNeutralButtonClick$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.google.android.gms.internal.measurement.zzdf: void zzx(com.google.android.gms.internal.measurement.zzdf,java.lang.Iterable)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)>
<java.io.PrintStream: void print(java.lang.Object)>
<com.google.android.gms.common.internal.GmsClientSupervisor: void zza(java.lang.String,java.lang.String,int,android.content.ServiceConnection,java.lang.String,boolean)>
<android.widget.EditText: void onAttachedToWindow()>
<com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isPartiallyScrolledInView(android.view.View)>
<com.azure.authenticator.ui.MainActivity: com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler getActivityStartIntentHandler$app_productionRelease()>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectAuthenticatorMfaSdkStorage(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.azure.authenticator.storage.AuthenticatorMfaSdkStorage)>
<com.evernote.android.job.JobRequest$Builder: int access$100(com.evernote.android.job.JobRequest$Builder)>
<com.facebook.soloader.SoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<android.view.ViewGroup: android.view.View findViewById(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void showPartiallyRestoredAccountsWarningIfNecessary()>
<com.google.android.material.textfield.TextInputLayout$4: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.google.crypto.tink.PrimitiveSet$Entry: com.google.crypto.tink.proto.KeyStatusType getStatus()>
<com.google.android.gms.common.api.internal.BasePendingResult: void addStatusListener(com.google.android.gms.common.api.PendingResult$StatusListener)>
<com.evernote.android.job.JobRequest$Builder: long access$700(com.evernote.android.job.JobRequest$Builder)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)>
<com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()>
<java.lang.String: int lastIndexOf(java.lang.String)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getSkew()>
<com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()>
<com.google.android.gms.internal.measurement.zzcd: com.google.android.gms.internal.measurement.zzcd zzm()>
<com.google.android.gms.internal.measurement.zzju: java.lang.String zza(com.google.android.gms.internal.measurement.zzgs)>
<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>
<com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Map zaG(com.google.android.gms.common.api.internal.GoogleApiManager)>
<com.google.android.gms.common.internal.RootTelemetryConfiguration: int getVersion()>
<com.google.android.gms.internal.location.zzbo: void <init>(int,int)>
<com.google.android.gms.measurement.internal.zzah: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.os.Bundle: void putDouble(java.lang.String,double)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.adjust.sdk.ISdkClickHandler: void init(com.adjust.sdk.IActivityHandler,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshManager enterpriseDenyListRefreshManager()>
<com.facebook.react.views.slider.ReactSlider: void setStep(double)>
<ch.qos.logback.classic.Logger: boolean isRootLogger()>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildDisableThirdPartySharingPackage()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.abstraction.AdalTokenRefreshManager adalTokenRefreshManager()>
<dagger.hilt.android.internal.managers.ActivityRetainedComponentManager_Lifecycle_Factory: dagger.hilt.android.internal.managers.ActivityRetainedComponentManager$Lifecycle newInstance()>
<ch.qos.logback.core.rolling.helper.FileNamePattern: void parse()>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void <init>()>
<com.google.android.gms.internal.safetynet.zzi: void zza(com.google.android.gms.internal.safetynet.zzg,java.lang.String)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture submit(java.lang.Runnable,java.lang.Object)>
<android.os.Bundle: long getLong(java.lang.String)>
<com.google.android.a.a: android.os.Parcel a()>
<com.google.android.gms.internal.maps.zzz: void setColor(int)>
<com.google.android.material.transformation.FabTransformationBehavior: void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>
<android.graphics.drawable.Animatable: void start()>
<com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)>
<com.airbnb.lottie.LottieAnimationView$3: void onResult(java.lang.Throwable)>
<com.airbnb.lottie.utils.Utils: int hashFor(float,float,float,float)>
<com.facebook.react.uimanager.ViewManagersPropertyCache: void clear()>
<com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.ui.backup.BackupFlowActivity injectBackupFlowActivity2(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.google.android.gms.common.internal.zzah: void <init>()>
<android.app.Activity: android.view.View getCurrentFocus()>
<okhttp3.Headers: java.lang.String get(java.lang.String)>
<com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.proto.KeyData$KeyMaterialType getKeyMaterialType()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: androidx.lifecycle.LiveData getMsaSessionResponseStatus()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<com.google.android.gms.internal.measurement.zzkc: sun.misc.Unsafe zza()>
<com.google.android.gms.auth.api.credentials.IdToken: void <init>(java.lang.String,java.lang.String)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment)>
<com.facebook.common.references.CloseableReference$LeakHandler: boolean requiresStacktrace()>
<android.widget.SeekBar: android.graphics.drawable.Drawable getThumb()>
<java.text.NumberFormat: java.text.NumberFormat getInstance()>
<ch.qos.logback.core.util.CachingDateFormatter: void <init>(java.lang.String,java.util.Locale)>
<com.facebook.imagepipeline.producers.ProducerContext: com.facebook.imagepipeline.producers.ProducerListener getListener()>
<com.google.android.material.snackbar.SnackbarManager: void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate$3: void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate)>
<com.google.android.gms.maps.zzu: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener)>
<com.azure.authenticator.databinding.EmptyHistoryLayoutBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.measurement.internal.zzho: java.util.List zzp(java.lang.String,java.lang.String)>
<java.util.HashMap: void putAll(java.util.Map)>
<android.view.View: void clearAnimation()>
<com.google.android.gms.dynamic.IFragmentWrapper: int zzd()>
<com.microsoft.authenticator.commonuilibrary.network.CustomNoNetworkSnackbar: void onResumeActivity()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])>
<ch.qos.logback.core.joran.spi.Interpreter: ch.qos.logback.core.joran.spi.EventPlayer getEventPlayer()>
<com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>
<com.google.common.collect.MapMakerInternalMap$HashIterator: boolean nextInChain()>
<com.google.common.collect.ForwardingObject: java.lang.Object delegate()>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToCredentialListFragment: void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$1)>
<com.google.android.gms.internal.location.zzap: void <init>(com.google.android.gms.internal.location.zzar,com.google.android.gms.location.LocationResult)>
<com.adjust.sdk.ActivityHandler$12: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.SdkClickResponseData)>
<com.google.common.io.BaseEncoding$StandardBaseEncoding: void encodeChunkTo(java.lang.Appendable,byte[],int,int)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: void <init>(int,java.util.ArrayList,android.accounts.Account,boolean,boolean,boolean,java.lang.String,java.lang.String,java.util.Map,java.lang.String)>
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void handleExtras(android.os.Bundle)>
<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab)>
<ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter: void recursiveAppendRootCauseFirst(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthenticationTimeTelemetry: void setIsNgc(boolean)>
<com.google.android.gms.internal.measurement.zzkh: void zzi(java.lang.Object,long,boolean)>
<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<com.google.android.material.navigation.NavigationBarItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()>
<com.evernote.android.job.work.JobProxyWorkManager: androidx.work.NetworkType mapNetworkType(com.evernote.android.job.JobRequest$NetworkType)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: com.facebook.common.references.CloseableReference detachBitmapReference()>
<ch.qos.logback.core.util.DatePatternToRegexUtil: java.lang.String toRegex()>
<java.util.Queue: java.lang.Object remove()>
<ch.qos.logback.core.net.AutoFlushingObjectWriter: void preventMemoryLeak()>
<java.lang.Double: long doubleToLongBits(double)>
<com.google.android.gms.internal.auth.zzl: void <init>(com.google.android.gms.internal.auth.zzh,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.GoogleApiClient,android.accounts.Account)>
<com.facebook.imagepipeline.cache.BufferedDiskCache$5: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setJustificationMode(int)>
<android.widget.CheckBox: boolean isChecked()>
<android.view.View: android.graphics.Matrix getMatrix()>
<ch.qos.logback.core.spi.FilterAttachableImpl: ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object)>
<com.facebook.react.animated.NativeAnimatedNodesManager$1: void <init>(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2: void <init>(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_27_28()>
<com.google.android.gms.measurement.internal.zzv: boolean zzd(java.lang.Long,java.lang.Long,com.google.android.gms.internal.measurement.zzdb,long,com.google.android.gms.measurement.internal.zzao,boolean)>
<com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder: com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder setStatus(com.google.crypto.tink.proto.KeyStatusType)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerFinalImageSetTimeMs(long)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String absPath(java.io.File)>
<com.google.android.gms.common.api.Api$Client: void disconnect()>
<com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zaab zay(com.google.android.gms.common.api.internal.GoogleApiManager)>
<com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JSIModulePackage getJSIModulePackage()>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<com.google.android.gms.common.api.internal.zaar: void zau(com.google.android.gms.common.api.internal.zaar)>
<com.facebook.imagepipeline.cache.CacheKeyFactory: com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)>
<ch.qos.logback.classic.net.server.RemoteAppenderServerRunner: void <init>(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider appIdDomainRefreshWorker_AssistedFactoryProvider()>
<com.airbnb.lottie.LottieLogger: void warning(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()>
<com.microsoft.authenticator.registration.msa.businesslogic.TransferTokenParametersParser: void <init>()>
<com.microsoft.brooklyn.module.autofill.BrooklynAutofillService_MembersInjector: void injectFillEventHistoryProcessor(com.microsoft.brooklyn.module.autofill.BrooklynAutofillService,com.microsoft.brooklyn.module.autofill.request.FillEventHistoryProcessor)>
<com.facebook.common.references.OOMSoftReference: java.lang.Object get()>
<com.facebook.react.views.textinput.ReactTextInputBlurEvent: java.lang.String getEventName()>
<com.google.android.gms.measurement.internal.zzea: int zzn()>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.ThreadLocal: void remove()>
<com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding: android.widget.LinearLayout getRoot()>
<com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)>
<android.content.BroadcastReceiver$PendingResult: void setResultCode(int)>
<java.lang.String: void <init>(byte[])>
<ch.qos.logback.core.status.Status: int getLevel()>
<com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)>
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object get(java.lang.Object,int)>
<android.animation.Animator: long getDuration()>
<com.google.android.gms.internal.maps.zzz: java.lang.String getId()>
<com.google.android.datatransport.cct.CctTransportBackend$$Lambda$1: com.google.android.datatransport.runtime.retries.Function lambdaFactory$(com.google.android.datatransport.cct.CctTransportBackend)>
<com.android.installreferrer.api.ReferrerDetails: void <init>(android.os.Bundle)>
<com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: void <init>(int,int,android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzf: void zzd()>
<com.google.android.material.snackbar.BaseTransientBottomBar$4: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result getResult()>
<com.google.common.base.Ascii: boolean isUpperCase(char)>
<com.google.android.gms.internal.measurement.zzcx: boolean zzf()>
<com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec: void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.lang.String error(java.lang.String,java.lang.Object[])>
<com.azure.authenticator.databinding.MsaSessionDialogBinding: com.azure.authenticator.databinding.MsaSessionDialogBinding bind(android.view.View)>
<java.lang.reflect.Method: java.lang.String getName()>
<com.google.android.gms.measurement.internal.zzfh: void <init>(com.google.android.gms.measurement.internal.zzfi,java.lang.String,java.util.concurrent.BlockingQueue)>
<com.google.android.material.card.MaterialCardView: void toggle()>
<com.google.android.gms.common.server.converter.zad: void <init>()>
<ch.qos.logback.classic.html.DefaultThrowableRenderer: void printFirstLine(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback: com.microsoft.onlineid.Ticket access$getMsaTicket$p(com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback)>
<com.airbnb.lottie.value.Keyframe: void <init>(com.airbnb.lottie.LottieComposition,java.lang.Object,java.lang.Object,android.view.animation.Interpolator,float,java.lang.Float)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketComplete$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void onSaveInstanceState(android.os.Bundle)>
<com.facebook.common.util.HashCodeUtil: int hashCode(int,int)>
<androidx.fragment.app.DialogFragment: void onStart()>
<com.facebook.imagepipeline.memory.BitmapCounter: int getCount()>
<com.google.android.material.chip.ChipDrawable: void setIconStartPaddingResource(int)>
<android.widget.EditText: int getMinLines()>
<androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresCharging(boolean)>
<java.lang.Math: long max(long,long)>
<com.azure.authenticator.accounts.GenericAccount: java.lang.String getAccountName()>
<android.view.ViewGroup: void setMeasuredDimension(int,int)>
<android.widget.ImageView: void setSelected(boolean)>
<com.facebook.react.fabric.mounting.MountingManager: long measure(android.content.Context,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,int[])>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialRequest$Builder setPasswordLoginSupported(boolean)>
<com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point getModalHostSize(android.content.Context)>
<ch.qos.logback.classic.spi.LoggingEvent: java.util.Map getMDCPropertyMap()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.String getContentDescription()>
<com.facebook.common.logging.LoggingDelegate: void w(java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionManager mfaNotificationActionManager()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>
<com.azure.authenticator.databinding.ImportPasswordBannerBinding: com.azure.authenticator.databinding.ImportPasswordBannerBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<ch.qos.logback.core.spi.PropertyDefiner: java.lang.String getPropertyValue()>
<okio.BufferedSink: okio.BufferedSink writeByte(int)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager_Factory: com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager get()>
<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>
<com.google.android.gms.internal.measurement.zzcx: boolean zzg()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void toggleAutofillAuthPreference(boolean)>
<android.graphics.Rect: boolean isEmpty()>
<ch.qos.logback.core.net.SyslogAppenderBase: java.lang.String getFacility()>
<com.microsoft.authenticator.rootdetection.di.RootDetectionModule_ProvideGoogleApiAvailabilityFactory: com.google.android.gms.common.GoogleApiAvailability provideGoogleApiAvailability(com.microsoft.authenticator.rootdetection.di.RootDetectionModule)>
<com.google.android.material.shape.MaterialShapeDrawable: void updateZ()>
<android.database.CursorWindow: void close()>
<com.evernote.android.job.JobRequest$JobScheduledCallback: void onJobScheduled(int,java.lang.String,java.lang.Exception)>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: void createMainNotificationChannel()>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: dagger.hilt.android.internal.managers.FragmentComponentManager componentManager()>
<com.google.android.material.badge.BadgeDrawable: void setTextAppearanceResource(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showReRegisterAadNgcScreen$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.facebook.react.views.imagehelper.ImageSource: android.net.Uri getUri()>
<com.facebook.imagepipeline.memory.BasePool: void logStats()>
<ch.qos.logback.core.rolling.helper.FileSorter$1: int compare(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnCameraMoveStartedListener(com.google.android.gms.maps.internal.zzt)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void refreshActions()>
<com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountViewModel: void <init>(android.content.Context,com.microsoft.authenticator.registration.thirdparty.businessLogic.AddThirdPartyAccountUseCase,com.microsoft.authenticator.registration.thirdparty.businessLogic.ActivationParametersParserThirdParty,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.adjust.sdk.Adjust: void trackEvent(com.adjust.sdk.AdjustEvent)>
<com.facebook.react.fabric.mounting.mountitems.UpdatePropsMountItem: void <init>(int,com.facebook.react.bridge.ReadableMap)>
<com.microsoft.authenticator.commonuilibrary.ui.localauth.DeviceScreenUnlockActivity_MembersInjector: void injectDeviceScreenLockConfigChecker(com.microsoft.authenticator.commonuilibrary.ui.localauth.DeviceScreenUnlockActivity,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<com.google.android.datatransport.cct.internal.LogResponse: com.google.android.datatransport.cct.internal.LogResponse fromJson(java.io.Reader)>
<android.widget.FrameLayout: void refreshDrawableState()>
<com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object[])>
<com.facebook.react.modules.network.RequestBodyUtil$1: void <init>(okhttp3.MediaType,java.io.InputStream)>
<android.view.accessibility.AccessibilityEvent: void setCurrentItemIndex(int)>
<com.google.android.gms.internal.measurement.zzha: void zzK(int,java.util.List,boolean)>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity$1: void <init>(com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity)>
<com.facebook.drawee.controller.BaseControllerListener: com.facebook.drawee.controller.ControllerListener getNoOpListener()>
<com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment_MembersInjector: void injectRegisterAadMfaAccountManager(com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment,com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager)>
<com.google.android.gms.internal.measurement.zzgf: int zzh(byte[],int,com.google.android.gms.internal.measurement.zzge)>
<android.widget.EditText: android.content.res.Resources getResources()>
<com.google.android.gms.internal.measurement.zzei: java.lang.String zza(android.content.ContentResolver,java.lang.String,java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$Segment self()>
<com.fasterxml.jackson.core.json.JsonReadContext: void <init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int)>
<android.widget.ListAdapter: int getCount()>
<com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void logSuccessfulFinalResult(com.microsoft.authenticator.core.telemetry.TelemetryResultEnum)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder builder()>
<com.google.android.datatransport.runtime.EncodedPayload: void <init>(com.google.android.datatransport.Encoding,byte[])>
<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>
<ch.qos.logback.classic.layout.TTLLLayout: java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.maps.internal.IMapViewDelegate: void getMapAsync(com.google.android.gms.maps.internal.zzap)>
<com.google.android.material.datepicker.MaterialDatePicker: void updateHeader()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zae(android.accounts.Account,java.util.Set)>
<com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)>
<com.airbnb.lottie.model.layer.BaseLayer: void setParentLayer(com.airbnb.lottie.model.layer.BaseLayer)>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()>
<com.airbnb.lottie.animation.content.EllipseContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.CircleShape)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void showRegisterButton(java.lang.String)>
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>
<android.widget.GridView: void setNumColumns(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showDeleteBackupResultDialog$deleteBackupResultDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,int)>
<android.widget.FrameLayout: android.content.res.Resources getResources()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: void <init>()>
<com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>
<ch.qos.logback.classic.spi.ClassPackagingData: void <init>(java.lang.String,java.lang.String,boolean)>
<com.google.android.gms.measurement.internal.zzev: long zzd()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Bundle createBundle(android.os.Parcel,int)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.MemoryCache getBitmapMemoryCache()>
<com.facebook.fbreact.specs.NativeDevSettingsSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.measurement.internal.zzhq: void zzb(int,java.lang.Exception,byte[],java.util.Map)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider aadPhoneSignInUnregistrationViewModelProvider()>
<com.facebook.common.executors.UiThreadImmediateExecutorService: void <init>()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1)>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableFloatValue parseFloat(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,boolean)>
<android.graphics.Canvas: void scale(float,float,float,float)>
<ch.qos.logback.core.util.StatusPrinter: void print(ch.qos.logback.core.status.StatusManager)>
<com.google.android.gms.internal.measurement.zzdj: void zzaF(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize)>
<com.google.android.datatransport.cct.internal.ClientInfo$Builder: void <init>()>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzh)>
<com.microsoft.authenticator.commonuilibrary.util.ActivityUtils: void setAccessibilityFocusOnToolbar(androidx.appcompat.app.AppCompatActivity,android.view.ViewGroup)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportInvalidEOF(java.lang.String)>
<com.evernote.android.job.JobExecutor$JobCallable: void <init>(com.evernote.android.job.JobExecutor,com.evernote.android.job.Job,com.evernote.android.job.JobExecutor$1)>
<com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMaxSize(int)>
<com.google.common.base.CharMatcher$Is: void <init>(char)>
<com.google.android.gms.internal.measurement.zzhs: java.lang.Object zzbA(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<com.azure.authenticator.databinding.DropdownWithIconBinding: void <init>(android.widget.RelativeLayout,android.widget.TextView,android.widget.ImageView,android.widget.RelativeLayout)>
<com.google.android.gms.auth.api.identity.zzm: void <init>()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzp(com.google.android.gms.common.AccountPicker$AccountChooserOptions,java.util.ArrayList)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: android.widget.Button getButton()>
<com.google.android.gms.measurement.internal.zzkf: com.google.android.gms.internal.measurement.zziw zzt(com.google.android.gms.internal.measurement.zziw,byte[])>
<com.azure.authenticator.notifications.msa.MsaNotification: void logTelemetryForResult(com.azure.authenticator.notifications.msa.MsaSessionProcessingResult)>
<android.view.ViewGroup: void setNextFocusForwardId(int)>
<com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)>
<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$$special$$inlined$viewModels$2: void <init>(kotlin.jvm.functions.Function0)>
<com.facebook.imageutils.JfifUtil: int moveToAPP1EXIF(java.io.InputStream)>
<com.google.android.gms.maps.StreetViewPanoramaOptions: java.lang.Integer getRadius()>
<com.google.android.gms.measurement.internal.zzbj: void <init>()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeGenericEscape(int,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectBottomNavigationController(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.microsoft.authenticator.common.abstraction.BottomNavigationController)>
<com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.common.CacheErrorLogger getCacheErrorLogger()>
<android.util.Base64OutputStream: void write(byte[],int,int)>
<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>
<java.lang.String: boolean startsWith(java.lang.String)>
<com.google.android.gms.measurement.internal.zzhf: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference)>
<ch.qos.logback.core.spi.AbstractComponentTracker: boolean isTooSoonForRemovalIteration(long)>
<android.widget.ImageView: void setImageResource(int)>
<com.airbnb.lottie.model.layer.Layer: boolean isHidden()>
<com.facebook.cache.disk.DefaultDiskStorage: java.io.File getSubdirectory(java.lang.String)>
<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>
<com.adjust.sdk.ActivityPackage: int getRetries()>
<androidx.work.impl.foreground.SystemForegroundService: int onStartCommand(android.content.Intent,int,int)>
<com.evernote.android.job.JobStorage: void update(com.evernote.android.job.JobRequest,android.content.ContentValues)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: dagger.hilt.android.internal.managers.FragmentComponentManager componentManager()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$showDeleteBackupConfirmDialog$4$SettingsFragment(android.content.DialogInterface,int)>
<java.util.Properties: void load(java.io.InputStream)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: java.util.List findEmptyDirs()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zza(int)>
<com.google.android.gms.internal.auth-api.zzv: void zzc(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.credentials.Credential)>
<ch.qos.logback.core.helpers.CyclicBuffer: java.util.List asList()>
<com.fasterxml.jackson.core.json.DupDetector: void reset()>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction$onActionTriggered$backgroundDataUsageDialogBuilder$3: void <init>()>
<com.adjust.sdk.ActivityHandler: void addSessionPartnerParameterI(java.lang.String,java.lang.String)>
<android.app.Activity: void onWindowFocusChanged(boolean)>
<com.google.android.gms.measurement.internal.zzae: boolean zzt()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: boolean arrayContains(int[],int)>
<com.airbnb.lottie.parser.ColorParser: void <init>()>
<android.text.style.CharacterStyle: void <init>()>
<com.google.android.gms.internal.measurement.zzla: long zzB()>
<com.google.android.gms.internal.measurement.zzmd: boolean zzb()>
<com.azure.authenticator.logging.VerifiableCredentialSdkLogConsumer: int getAndroidLogLevel(com.microsoft.did.sdk.util.log.SdkLog$Level)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void access$300(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)>
<com.airbnb.lottie.parser.JsonUtils: java.util.List jsonToPoints(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.google.android.gms.location.zzam: void <init>(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.location.zzan)>
<com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()>
<com.google.common.collect.MapMakerInternalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.android.gms.auth.api.identity.zzl$zzc: com.google.android.gms.auth.api.identity.zzl$zzc zzh(java.lang.String)>
<com.google.android.gms.internal.measurement.zzhd: void <init>(java.lang.Object,int)>
<com.google.android.gms.measurement.internal.zzg: void zzk(java.lang.String)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)>
<com.airbnb.lottie.LottieDrawable$9: void <init>(com.airbnb.lottie.LottieDrawable,java.lang.String)>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<java.io.ByteArrayOutputStream: int size()>
<com.facebook.react.views.picker.ReactPicker: void <init>(android.content.Context,int)>
<android.widget.AutoCompleteTextView: java.lang.CharSequence getHint()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressSuggestionHelper: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgs zzj(byte[],int,int)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean shouldShowCancelButton()>
<com.google.android.gms.common.internal.ClientSettings: java.util.Set getApplicableScopes(com.google.android.gms.common.api.Api)>
<com.azure.authenticator.storage.Storage: void setShowAllowBackgroundDataUsageAction(boolean)>
<okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()>
<com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: com.google.android.datatransport.cct.CctTransportBackend$HttpRequest withUrl(java.net.URL)>
<com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void showPendingAlert()>
<android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<android.widget.FrameLayout: boolean isSelected()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)>
<java.nio.channels.ReadableByteChannel: void close()>
<com.azure.authenticator.databinding.AadPhoneSignInCompleteBinding: com.azure.authenticator.databinding.AadPhoneSignInCompleteBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<java.io.BufferedReader: int read(char[])>
<com.google.android.gms.measurement.internal.zzhn: java.lang.String zzT()>
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
<androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
<com.azure.authenticator.databinding.TestActivityLayoutBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<ch.qos.logback.core.boolex.EventEvaluatorBase: void setName(java.lang.String)>
<com.google.android.material.bottomsheet.BottomSheetDialog: int getThemeResId(android.content.Context,int)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void updateInternal()>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: android.graphics.drawable.Drawable createThemedBackground()>
<android.widget.Button: void setMaxLines(int)>
<com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.Continuation zzd(com.google.android.gms.tasks.zzd)>
<androidx.cardview.widget.CardView: float getRadius()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void handleApproveNgcResult(com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult)>
<com.airbnb.lottie.utils.LottieValueAnimator: void setFrame(float)>
<ch.qos.logback.core.rolling.RollingPolicyBase: boolean isParentPrudent()>
<android.widget.CompoundButton: int getMeasuredHeight()>
<com.facebook.react.modules.network.ForwardingCookieHandler$1: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)>
<com.airbnb.lottie.parser.moshi.JsonReader: boolean hasNext()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void validateMfaAccountsIfNecessary()>
<com.google.crypto.tink.Util: void validateKeyset(com.google.crypto.tink.proto.Keyset)>
<java.lang.String: void <init>(char[])>
<com.adjust.sdk.IPackageHandler: void sendNextPackage(com.adjust.sdk.ResponseData)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: boolean isCallerInstantApp()>
<android.widget.HorizontalScrollView: void getDrawingRect(android.graphics.Rect)>
<com.facebook.react.jstasks.HeadlessJsTaskEventListener: void onHeadlessJsTaskFinish(int)>
<com.google.android.gms.internal.measurement.zzji: void zzd(java.lang.Object,java.lang.Object)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: java.lang.Integer getImageTranscoderType()>
<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)>
<java.util.zip.ZipFile: java.util.Enumeration entries()>
<com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String getIdTokenNonce()>
<com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: void <init>(javax.inject.Provider)>
<android.widget.Button: int getVisibility()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$$special$$inlined$viewModels$1: void <init>(androidx.activity.ComponentActivity)>
<ch.qos.logback.core.util.DefaultInvocationGate: void <init>(long,long,long)>
<com.facebook.common.time.SystemClock: com.facebook.common.time.SystemClock get()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.LiveData getDenySessionResult()>
<com.azure.authenticator.accounts.GenericAccount: void setSecretKey(java.lang.String)>
<com.facebook.react.views.drawer.events.DrawerClosedEvent: java.lang.String getEventName()>
<com.google.android.gms.internal.location.zzaf: com.google.android.gms.common.api.PendingResult zza(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.zzbq)>
<com.azure.authenticator.storage.database.DbAccount: void setAccountCapability(int)>
<com.azure.authenticator.storage.database.AccountDao_Impl$3: void <init>(com.azure.authenticator.storage.database.AccountDao_Impl,androidx.room.RoomDatabase)>
<com.facebook.react.modules.core.DeviceEventManagerModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)>
<com.google.android.gms.location.zzaj: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.TaskCompletionSource)>
<com.airbnb.lottie.parser.PointFParser: void <init>()>
<com.google.android.gms.measurement.internal.zzfy: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<com.google.android.gms.common.api.Scope: void <init>(int,java.lang.String)>
<com.facebook.react.common.futures.SimpleSettableFuture: void set(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzco: com.google.android.gms.internal.measurement.zzco zzc(int,com.google.android.gms.internal.measurement.zzcm)>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>
<com.adjust.sdk.ActivityHandler$InternalState: boolean hasFirstSdkStartOcurred()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.common.BrooklynMSASignInUseCase brooklynMSASignInUseCase()>
<com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock eventClock()>
<com.google.android.gms.internal.measurement.zzja: boolean zzz(java.lang.Object,int,com.google.android.gms.internal.measurement.zzji)>
<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context)>
<com.google.android.gms.maps.model.Cap: void <init>(int,com.google.android.gms.maps.model.BitmapDescriptor,java.lang.Float)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$setCustomOnBackPressedBehavior$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.airbnb.lottie.model.KeyPath: int incrementDepthBy(java.lang.String,int)>
<com.facebook.react.uimanager.UIViewOperationQueue: void access$2600(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.google.android.gms.internal.measurement.zzby: boolean zze()>
<com.google.android.gms.internal.maps.zzw: int zzj()>
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>
<com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga zzat(com.google.android.gms.internal.measurement.zzgb)>
<java.util.HashSet: boolean isEmpty()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void <init>()>
<com.facebook.imagepipeline.memory.BufferMemoryChunk: boolean isClosed()>
<androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gms.internal.auth.zzz: void zza(com.google.android.gms.internal.auth.zzx,com.google.android.gms.internal.auth.zzad)>
<com.adjust.sdk.ActivityHandler$14: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.AttributionResponseData)>
<ch.qos.logback.core.joran.spi.InterpretationContext: java.util.Map getObjectMap()>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>
<com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)>
<com.fasterxml.jackson.core.util.TextBuffer: int getCurrentSegmentSize()>
<com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback access$000(com.google.android.material.bottomsheet.BottomSheetDialog)>
<com.google.android.gms.measurement.internal.zzkd: void zzT(com.google.android.gms.measurement.internal.zzaa)>
<ch.qos.logback.core.BasicStatusManager: void <init>()>
<com.airbnb.lottie.LottieDrawable: android.content.Context getContext()>
<com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: int getIntValue(com.airbnb.lottie.value.Keyframe,float)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: java.lang.String getAddress()>
<com.google.android.gms.tasks.CancellationToken: void <init>()>
<com.google.android.datatransport.runtime.EventInternal: long getUptimeMillis()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource getAndClearDataSource(int)>
<java.util.Collections: void swap(java.util.List,int,int)>
<com.evernote.android.job.JobRescheduleService: android.os.IBinder onBind(android.content.Intent)>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zziw: com.google.android.gms.internal.measurement.zziw zzaw(byte[])>
<com.google.android.gms.cloudmessaging.zzr: android.content.pm.PackageInfo zza(java.lang.String)>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<com.google.android.gms.auth.zzh: void <init>(android.accounts.Account)>
<androidx.appcompat.view.menu.MenuBuilder: int size()>
<com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$200(com.facebook.react.uimanager.UIManagerModule)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean enableLocalFallback()>
<com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieComposition fetchFromCache(java.lang.String,java.lang.String)>
<com.adjust.sdk.SharedPreferencesManager: void removeDisableThirdPartySharing()>
<com.facebook.imagepipeline.request.ImageRequest: boolean isDiskCacheEnabled()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$restoreBackupAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<androidx.lifecycle.ViewModelKt: kotlinx.coroutines.CoroutineScope getViewModelScope(androidx.lifecycle.ViewModel)>
<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: void <init>(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureBrooklynEnterprise()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidthPercent(float)>
<com.microsoft.brooklyn.config.BrooklynAppUpgradeManager: void <init>(com.microsoft.brooklyn.config.BrooklynConfig,com.microsoft.brooklyn.common.BrooklynMSASignOutUseCase,com.microsoft.brooklyn.common.BrooklynBGTaskScheduler)>
<com.azure.authenticator.storage.Storage: boolean readShowPrivacyConsent()>
<com.facebook.react.views.modal.ReactModalHostView: void <init>(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.backup.RestoreFlowViewModel access$13800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.common.internal.zaw: void <init>()>
<com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>
<ch.qos.logback.core.util.DatePatternToRegexUtil: void <init>(java.lang.String)>
<com.facebook.common.executors.StatefulRunnable: void onFailure(java.lang.Exception)>
<com.adjust.sdk.PackageFactory: com.adjust.sdk.PackageBuilder queryStringClickPackageBuilder(java.util.List,com.adjust.sdk.ActivityState,com.adjust.sdk.AdjustConfig,com.adjust.sdk.DeviceInfo,com.adjust.sdk.SessionParameters)>
<com.facebook.imagepipeline.producers.LocalFetchProducer: java.lang.String getProducerName()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig getProgressiveJpegConfig()>
<com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)>
<android.util.SparseLongArray: int size()>
<com.adjust.sdk.ActivityHandler: void readOpenUrl(android.net.Uri,long)>
<com.google.android.gms.maps.model.PolylineOptions: void <init>(java.util.List,float,int,float,boolean,boolean,boolean,com.google.android.gms.maps.model.Cap,com.google.android.gms.maps.model.Cap,int,java.util.List)>
<androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.facebook.drawee.view.DraweeView: void setImageResource(int)>
<com.google.android.material.button.MaterialButton$SavedState$1: com.google.android.material.button.MaterialButton$SavedState[] newArray(int)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setBytesRange(com.facebook.imagepipeline.common.BytesRange)>
<com.azure.authenticator.storage.database.DbAccount: int getUxPosition()>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: java.lang.Object handleValidationResult(com.microsoft.authenticator.msa.entities.ValidateMsaAccountResult,kotlin.coroutines.Continuation)>
<com.facebook.react.uimanager.events.EventDispatcher: void unregisterEventEmitter(int)>
<com.google.android.gms.measurement.internal.zzkk: int zzq(java.lang.String)>
<com.facebook.react.views.text.TextInlineViewPlaceholderSpan: void <init>(int,int,int)>
<com.google.android.gms.common.api.internal.zaaz: void zam(int)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean removeAll(java.util.Collection)>
<android.view.View: java.lang.CharSequence getContentDescription()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)>
<com.google.android.gms.measurement.internal.zzho: void zzl(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updatePadding()>
<java.lang.Exception: void printStackTrace()>
<androidx.core.util.Pools$SimplePool: java.lang.Object acquire()>
<java.nio.ByteBuffer: java.nio.Buffer position(int)>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>
<com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)>
<com.google.android.gms.measurement.internal.zzeb: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$7CqYNjfQXiG0d01yPfDwogbp-w8': void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.fasterxml.jackson.core.util.BufferRecycler: int charBufferLength(int)>
<com.google.android.gms.internal.measurement.zzdj: long zzF()>
<com.google.android.material.shape.ShapeAppearancePathProvider: float angleOfEdge(int)>
<com.google.android.gms.internal.safetynet.zza: android.os.Parcel obtainAndWriteInterfaceToken()>
<com.google.android.gms.internal.measurement.zzha: void zzf(int,double)>
<com.microsoft.did.feature.cardflow.viewlogic.LoadRequestFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.cardflow.viewlogic.LoadRequestFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<com.google.android.gms.internal.location.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.google.android.gms.internal.auth-api.zzm: void <init>(com.google.android.gms.internal.auth-api.zzj,com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.datatransport.Event: java.lang.Integer getCode()>
<com.google.android.material.card.MaterialCardViewHelper: boolean isBackgroundOverwritten()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void showGooglePlayUnavailableMessage(android.widget.FrameLayout)>
<com.android.installreferrer.api.InstallReferrerClientImpl: com.google.android.finsky.externalreferrer.IGetInstallReferrerService access$102(com.android.installreferrer.api.InstallReferrerClientImpl,com.google.android.finsky.externalreferrer.IGetInstallReferrerService)>
<com.airbnb.lottie.PerformanceTracker: void recordRenderTime(java.lang.String,float)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: boolean maybeDirty()>
<com.facebook.react.uimanager.UIImplementation: void notifyOnBeforeLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode)>
<com.facebook.react.views.text.TextAttributes: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AccountPickerCallback$ICompletion: void onFailed(com.microsoft.onlineid.exception.AuthenticationException)>
<java.util.concurrent.locks.ReentrantLock: void lock()>
<com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)>
<androidx.activity.ComponentActivity: void onBackPressed()>
<com.google.android.material.button.MaterialButton: boolean isUsingOriginalBackground()>
<com.google.android.gms.internal.measurement.zzjk: void zzM(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setService(java.lang.Class)>
<com.google.common.net.InternetDomainName: boolean isUnderPublicSuffix()>
<com.google.android.gms.internal.measurement.zzgo: byte zza()>
<java.util.AbstractList: boolean addAll(java.util.Collection)>
<com.google.android.gms.internal.safetynet.zzp: void <init>(com.google.android.gms.internal.safetynet.zzk,com.google.android.gms.common.api.GoogleApiClient)>
<ch.qos.logback.core.rolling.RollingPolicyBase: java.lang.String getParentsRawFileProperty()>
<android.widget.LinearLayout: void draw(android.graphics.Canvas)>
<com.facebook.imagepipeline.producers.FetchState: void setOnNewResultStatusFlags(int)>
<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig: void <init>()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void lambda$static$3(android.database.sqlite.SQLiteDatabase)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)>
<com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromViewManagerClassDefinition(java.lang.Class,java.util.Map)>
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>
<com.facebook.react.fabric.Binding: void uninstallFabricUIManager()>
<android.widget.ImageView: android.view.ViewParent getParent()>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder title(java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: void setAccountType(int)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)>
<com.facebook.drawee.drawable.DrawableProperties: void setFilterBitmap(boolean)>
<com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormat getImageFormat(java.io.InputStream)>
<com.google.android.datatransport.cct.CCTDestination: java.lang.String getEndPoint()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>
<javax.mail.internet.MimeMessage: void setSentDate(java.util.Date)>
<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$300(com.google.android.material.tabs.TabLayout$Tab)>
<com.facebook.imagepipeline.producers.SettableProducerContext: void <init>(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.android.gms.common.internal.IGmsCallbacks: void zzc(int,android.os.IBinder,com.google.android.gms.common.internal.zzi)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>
<com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object get(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzg(java.lang.Iterable)>
<com.google.android.gms.auth.api.identity.zzl: com.google.android.gms.auth.api.identity.zzl$zzc zzj()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent persist(com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<com.azure.authenticator.accounts.GenericAccount: java.lang.String getSecretKey()>
<java.util.List: boolean add(java.lang.Object)>
<com.google.android.gms.common.api.internal.BasePendingResult: void <init>(com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getPlaceholderImage()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.cache.common.CacheKey getCacheKey()>
<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInputData(androidx.work.Data)>
<com.evernote.android.job.JobRequest: android.content.ContentValues toContentValues()>
<com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: void <init>(com.facebook.react.animated.TransformAnimatedNode)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationManager: void <init>(android.content.Context,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate)>
<com.facebook.common.util.HashCodeUtil: int hashCode(java.lang.Object,java.lang.Object)>
<com.google.android.gms.gcm.OneoffTask$Builder: void <init>()>
<com.azure.authenticator.notifications.AbstractNotification$Action: com.azure.authenticator.notifications.AbstractNotification$Action[] values()>
<com.facebook.systrace.Systrace: void traceInstant(long,java.lang.String,com.facebook.systrace.Systrace$EventScope)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long getPageCount()>
<ch.qos.logback.core.rolling.RollingFileAppender: boolean checkForCollisionsInPreviousRollingFileAppenders()>
<com.google.android.gms.internal.maps.zzq: void activate()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzed zzm()>
<com.google.android.material.internal.CollapsingTextHelper: void getCollapsedTextActualBounds(android.graphics.RectF,int,int)>
<com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker)>
<dummyMainClass: com.azure.authenticator.ui.backup.BackupFlowActivity dummyMainMethod_com_azure_authenticator_ui_backup_BackupFlowActivity(android.content.Intent)>
<android.view.View: void setLayerType(int,android.graphics.Paint)>
<com.google.android.gms.auth.api.accounttransfer.zzf: void <init>(com.google.android.gms.auth.api.accounttransfer.zze,com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb)>
<java.lang.Object: void finalize()>
<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>
<com.facebook.react.views.text.ReactTextUpdate: int getSelectionEnd()>
<com.adjust.sdk.PackageBuilder: void addLong(java.util.Map,java.lang.String,long)>
<com.google.android.gms.internal.measurement.zzdj: long zzaf()>
<com.facebook.common.file.FileTree: boolean deleteRecursively(java.io.File)>
<com.google.android.gms.internal.measurement.zzkj: int zzd(java.lang.CharSequence,byte[],int,int)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: int getInUseSizeInBytes()>
<com.google.android.gms.auth.TokenData: com.google.android.gms.auth.TokenData zza(android.os.Bundle,java.lang.String)>
<com.google.android.gms.internal.measurement.zzhl: int indexOf(java.lang.Object)>
<com.google.android.datatransport.runtime.AutoValue_EventInternal: void <init>(java.lang.String,java.lang.Integer,com.google.android.datatransport.runtime.EncodedPayload,long,long,java.util.Map,com.google.android.datatransport.runtime.AutoValue_EventInternal$1)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$10: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker create(android.content.Context,androidx.work.WorkerParameters)>
<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>
<com.facebook.react.views.view.ReactViewBackgroundManager: void <init>(android.view.View)>
<com.google.android.gms.common.util.UidVerifier: boolean uidHasPackageName(android.content.Context,int,java.lang.String)>
<androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)>
<com.google.android.material.tabs.TabLayout$Tab: int access$000(com.google.android.material.tabs.TabLayout$Tab)>
<android.content.Context: java.io.File getFilesDir()>
<androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)>
<com.google.android.material.tabs.TabLayout: void setTabTextColors(android.content.res.ColorStateList)>
<com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: float getFloatValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.gms.maps.GoogleMap$OnCameraChangeListener: void onCameraChange(com.google.android.gms.maps.model.CameraPosition)>
<android.widget.EditText: boolean isFocused()>
<com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)>
<com.google.android.gms.internal.maps.zzn: java.util.List getLevels()>
<com.facebook.react.module.model.ReactModuleInfo: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)>
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<com.facebook.react.uimanager.ReactRoot: int getRootViewTag()>
<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.signin.internal.zak: com.google.android.gms.common.internal.zav zab()>
<com.google.android.gms.measurement.internal.zzkk: void zzM(com.google.android.gms.measurement.internal.zzkj,java.lang.String,int,java.lang.String,java.lang.String,int)>
<com.airbnb.lottie.LottieDrawable: float getProgress()>
<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<com.google.android.gms.internal.measurement.zzjk: void zzS(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<android.text.Layout: int getOffsetForHorizontal(int,float)>
<com.facebook.imagepipeline.image.ImageInfo: int getWidth()>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb: void zza(com.google.android.gms.common.api.Status)>
<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.runtime.SendRequest$Builder builder()>
<com.google.android.gms.internal.measurement.zznq: void <init>()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$denyAadNgcSession$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.api.internal.zabd: java.util.concurrent.locks.Lock zat(com.google.android.gms.common.api.internal.zabd)>
<com.evernote.android.job.v21.TransientBundleCompat: void cancel(android.content.Context,int,android.app.PendingIntent)>
<org.json.JSONObject: int length()>
<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config[] values()>
<android.widget.EditText: void onStartTemporaryDetach()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$MsaTicketCallback: void <init>(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment)>
<android.view.ViewStructure: void setHint(java.lang.CharSequence)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void closeSafely(com.facebook.datasource.DataSource)>
<com.facebook.react.views.text.TextAttributeProps: java.lang.String getStringProp(java.lang.String)>
<androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.adjust.sdk.IActivityHandler: void addSessionPartnerParameter(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.zzai: void <init>()>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: void recordFailure(java.lang.Iterable)>
<ch.qos.logback.core.joran.spi.InterpretationContext: void pushObject(java.lang.Object)>
<com.adjust.sdk.AttributionHandler: void checkSessionResponseI(com.adjust.sdk.IActivityHandler,com.adjust.sdk.SessionResponseData)>
<ch.qos.logback.core.rolling.helper.PeriodicityType: void <init>(java.lang.String,int)>
<java.io.InputStream: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar: void access$1300(com.google.android.material.bottomappbar.BottomAppBar)>
<com.microsoft.authenticator.reactnative.modules.BatteryOptimizationPackage: void <init>()>
<com.evernote.android.job.JobRescheduleService: void <init>()>
<com.facebook.soloader.Api18TraceUtils: void beginTraceSection(java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.core.ProducerFactory: void <init>(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int,com.facebook.imagepipeline.core.CloseableReferenceFactory)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<com.facebook.react.common.LongArray: com.facebook.react.common.LongArray createWithInitialCapacity(int)>
<com.facebook.react.views.text.TextAttributes: float getLetterSpacing()>
<com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.content.GradientType getGradientType()>
<com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)>
<com.google.android.material.animation.MotionSpec: void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)>
<com.google.android.gms.internal.location.zzaz: void zzv(com.google.android.gms.location.GeofencingRequest,android.app.PendingIntent,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.facebook.react.views.text.DefaultStyleValuesUtil: int getDefaultTextColorHighlight(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_AssistedFactory mfaSilentLocationWorker_AssistedFactory()>
<com.facebook.react.modules.core.JavaTimerManager: void maybeSetChoreographerIdleCallback()>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void close()>
<com.google.android.datatransport.cct.CctTransportBackend$$Lambda$1: void <init>(com.google.android.datatransport.cct.CctTransportBackend)>
<com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])>
<com.google.android.material.bottomappbar.BottomAppBar: void dispatchAnimationStart()>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInSetupViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.google.android.gms.internal.common.zzp: void <init>()>
<com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onPaddingUpdated(android.graphics.Rect)>
<com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource getBestResult()>
<com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzg: void zzg(java.lang.String)>
<com.evernote.android.job.GcmAvailableHelper: boolean isGcmApiSupported(android.content.Context)>
<com.google.android.gms.maps.internal.zzag: void <init>()>
<com.google.android.gms.auth.zzd: java.lang.Object zzb(java.lang.Object)>
<android.widget.FrameLayout: void getLocationOnScreen(int[])>
<com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>
<kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>
<android.animation.Animator: android.animation.Animator setDuration(long)>
<com.google.android.gms.maps.model.PatternItem: void <init>(int,java.lang.Float)>
<com.google.android.gms.measurement.internal.zzdz: void zzu(com.google.android.gms.measurement.internal.zzp)>
<ch.qos.logback.core.ContextBase: void initCollisionMaps()>
<com.facebook.imagepipeline.producers.BaseProducerContext: void callOnIsPrefetchChanged(java.util.List)>
<com.google.android.gms.internal.measurement.zzml: void <init>()>
<com.facebook.yoga.YogaEdge: int intValue()>
<com.google.android.gms.internal.measurement.zzgs: int zzc()>
<androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>
<com.fasterxml.jackson.core.JsonFactory$Feature: void <init>(java.lang.String,int,boolean)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void denyMsaSession()>
<ch.qos.logback.classic.turbo.TurboFilter: ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<ch.qos.logback.core.status.StatusListener: void addStatusEvent(ch.qos.logback.core.status.Status)>
<com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onLayout(boolean,int,int,int,int)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: void addError(java.lang.String,java.lang.Throwable)>
<com.facebook.react.views.picker.ReactPickerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup,boolean)>
<com.facebook.react.uimanager.UIImplementation: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)>
<com.google.android.gms.auth.api.signin.internal.zzr: void zzc(com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.common.api.Status)>
<com.adjust.sdk.ActivityHandler: void sendFirstPackagesI()>
<com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>
<com.azure.authenticator.storage.Storage_Factory: com.azure.authenticator.storage.Storage newInstance(android.content.Context)>
<com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder setRealClientPackageName(java.lang.String)>
<com.google.android.material.shape.ShapeAppearancePathProvider: void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF)>
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>
<java.text.NumberFormat: java.lang.String format(long)>
<com.azure.authenticator.databinding.FragmentEditAddPaymentBinding: com.azure.authenticator.databinding.FragmentEditAddPaymentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.views.scroll.ReactScrollView: boolean access$200(com.facebook.react.views.scroll.ReactScrollView)>
<com.google.common.collect.ImmutableCollection: int copyIntoArray(java.lang.Object[],int)>
<com.google.android.gms.maps.internal.zzt: void onCameraMoveStarted(int)>
<com.google.android.gms.internal.auth.zzf: com.google.android.gms.internal.auth.zze zza(android.os.IBinder)>
<com.google.android.gms.common.api.internal.zaa: com.google.android.gms.common.api.internal.zaa zaa(android.app.Activity)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)>
<ch.qos.logback.core.subst.Node$Type: void <init>(java.lang.String,int)>
<com.facebook.soloader.DirectorySoSource: java.lang.String toString()>
<com.facebook.react.uimanager.events.EventDispatcher: boolean access$402(com.facebook.react.uimanager.events.EventDispatcher,boolean)>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: void onAttach(android.app.Activity)>
<com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getCheckedIconTint()>
<com.adjust.sdk.ActivityPackage: java.lang.String getPath()>
<com.facebook.react.modules.statusbar.StatusBarModule$3: void <init>(com.facebook.react.modules.statusbar.StatusBarModule,boolean,android.app.Activity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$14: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.common.api.internal.BasePendingResult: void zab(com.google.android.gms.common.api.Result)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.util.exceptions.ExceptionProcessor access$8600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.MfaSdkManager access$6800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion: void onSignOutSuccess()>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: dagger.hilt.android.internal.managers.FragmentComponentManager componentManager()>
<com.facebook.soloader.UnpackingSoSource$Unpacker: void <init>()>
<com.microsoft.authenticator.workaccount.businesslogic.Broker$Companion: boolean isCompanyPortalInstalled(android.content.Context)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()>
<com.facebook.soloader.Api18TraceUtils: void endSection()>
<android.widget.FrameLayout: int getVisibility()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setFingerprint(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: dagger.hilt.android.internal.managers.FragmentComponentManager componentManager()>
<com.evernote.android.job.JobApi: boolean isBroadcastEnabled(android.content.Context,java.lang.Class)>
<ch.qos.logback.core.pattern.parser.CompositeNode: void <init>(java.lang.String)>
<com.google.android.gms.measurement.internal.zzai: java.lang.Object zzA(android.database.Cursor,int)>
<com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager createReactInstanceManager()>
<com.google.android.gms.common.api.internal.LifecycleActivity: android.app.Activity asActivity()>
<com.google.android.datatransport.runtime.EncodedDestination: java.util.Set getSupportedEncodings()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3: void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)>
<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.Event getEvent()>
<com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isPartialImageCachingEnabled()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.databinding.AccountListBinding getBinding()>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: java.util.Collection copyClients()>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: com.microsoft.authenticator.backup.entities.metadata.BackupMetadata getBackupMetadata(android.content.Context)>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void <init>(com.facebook.react.ReactRootView)>
<com.facebook.react.util.ExceptionDataHelper: java.lang.String getExtraDataAsJson(com.facebook.react.bridge.ReadableMap)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setRepeatMode(int)>
<com.google.android.gms.internal.base.zab: boolean zaa(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity: void onActivityResult(int,int,android.content.Intent)>
<com.adjust.sdk.ActivityKind: void <init>(java.lang.String,int)>
<com.adjust.sdk.ActivityHandler: void launchEventResponseTasks(com.adjust.sdk.EventResponseData)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.payment.PaymentFormDatasetsUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.PaymentsRepository)>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: void inject()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.MutableLiveData access$get_denySessionResult$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.azure.authenticator.accounts.GenericAccount: void setPosition(int)>
<com.google.android.material.card.MaterialCardViewHelper: int getCheckedIconSize()>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2102(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<com.airbnb.lottie.SimpleColorFilter: void <init>(int)>
<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void <init>()>
<com.google.android.gms.auth.api.signin.internal.zzl: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.azure.authenticator.databinding.FrxSetAsDefaultBinding: void <init>(android.widget.ScrollView,android.widget.Button,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>
<com.google.android.gms.internal.measurement.zzhb: void zzf(int)>
<com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: void <init>(int,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory,java.lang.Integer)>
<androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueClearJSResponder()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.config.BrooklynConfig brooklynConfig()>
<ch.qos.logback.core.net.SyslogOutputStream: void flush()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_AssistedFactory access$15900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.KeyManager getUntypedKeyManager(java.lang.String)>
<com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,byte[],int)>
<com.microsoft.brooklyn.ui.address.AddressViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.datatransport.cct.internal.LogEvent: java.lang.String getSourceExtensionJsonProto3()>
<javax.net.ssl.SSLServerSocket: void setEnabledProtocols(java.lang.String[])>
<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>
<com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List setIsIntermediateResultExpectedNoCallbacks(boolean)>
<com.facebook.shimmer.ShimmerDrawable$1: void <init>(com.facebook.shimmer.ShimmerDrawable)>
<com.evernote.android.job.util.BatteryStatus: boolean isCharging()>
<com.google.android.gms.maps.model.CircleOptions: java.util.List getStrokePattern()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>
<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>
<com.facebook.react.modules.core.JavaTimerManager: boolean hasActiveTimersInRange(long)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setIntensity(float)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$new$0$AbstractAuthRequestActivity(android.view.View,boolean)>
<com.airbnb.lottie.utils.Utils: void saveLayerCompat(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint)>
<com.facebook.drawee.view.DraweeView: void onDetach()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzag()>
<com.azure.authenticator.databinding.AadPhoneSignInCompleteBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<android.widget.RadioButton: android.content.Context getContext()>
<ch.qos.logback.core.joran.spi.ElementSelector: boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath)>
<com.google.common.collect.ImmutableCollection: boolean contains(java.lang.Object)>
<com.azure.authenticator.notifications.aad.AadNgcNotification_Factory: com.azure.authenticator.notifications.aad.AadNgcNotification get()>
<com.google.android.gms.internal.measurement.zzjk: int zzo(int,java.util.List,boolean)>
<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()>
<android.widget.ImageView: int getMeasuredWidth()>
<com.google.android.gms.internal.maps.zzz: com.google.android.gms.maps.model.Cap getStartCap()>
<androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()>
<com.google.android.material.navigation.NavigationBarMenuView: int getSelectedItemPosition()>
<com.facebook.react.views.text.TextInlineImageSpan: void <init>()>
<com.facebook.react.ReactInstanceManager: void access$1500(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.drawee.backends.pipeline.info.ImageOriginListener: void onImageLoaded(java.lang.String,int,boolean,java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void markLayoutSeen()>
<com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.maps.zzk: int zzj()>
<com.facebook.react.ReactRootView: void init()>
<com.facebook.imagepipeline.cache.StagingArea: void <init>()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: void validate()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showMsaAccountChooserDialog$msaAccountChooserDialogBuilder$2: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: void <init>(java.util.concurrent.Executor,android.content.ContentResolver)>
<com.google.android.gms.common.api.internal.zabm: com.google.android.gms.common.api.internal.ApiKey zaa(com.google.android.gms.common.api.internal.zabm)>
<com.airbnb.lottie.model.layer.Layer: float getStartProgress()>
<com.google.android.gms.internal.measurement.zzir: boolean zze()>
<com.facebook.binaryresource.FileBinaryResource: com.facebook.binaryresource.FileBinaryResource createOrNull(java.io.File)>
<com.adjust.sdk.UtilNetworking: android.net.Uri buildUri(java.lang.String,java.util.Map,java.lang.String)>
<android.database.CursorWindow: boolean putDouble(double,int,int)>
<android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>
<com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: void <init>(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1)>
<com.facebook.react.modules.network.ForwardingCookieHandler: void addCookieAsync(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzja: boolean zzH(java.lang.Object,long)>
<android.view.View: void setTag(int,java.lang.Object)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void doTransform(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder)>
<com.google.android.gms.internal.measurement.zzkh: int zzC(java.lang.Class)>
<android.text.Spannable: int getSpanStart(java.lang.Object)>
<android.widget.ImageView: void buildDrawingCache(boolean)>
<com.google.android.material.card.MaterialCardViewHelper: void updateStroke()>
<com.google.android.material.datepicker.MonthAdapter: void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long)>
<com.adjust.sdk.Util: boolean equalObject(java.lang.Object,java.lang.Object)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getRotation()>
<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingInsideCardBackground()>
<com.facebook.imagepipeline.core.PriorityThreadFactory: int access$000(com.facebook.imagepipeline.core.PriorityThreadFactory)>
<com.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector getInstance()>
<com.google.android.gms.internal.auth.zzam: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.importCred.ImportPasswordsViewModel importPasswordsViewModel()>
<com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: void <init>(java.util.List)>
<android.widget.ScrollView: void scrollBy(int,int)>
<android.widget.Button: int getId()>
<com.google.android.gms.internal.measurement.zzja: int zzy(java.lang.Object,byte[],int,int,com.google.android.gms.internal.measurement.zzge)>
<com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fetchFromNetwork(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.model.LatLngBounds$Builder: void <init>()>
<java.security.KeyStoreException: void <init>(java.lang.String)>
<com.google.android.datatransport.runtime.retries.Function: java.lang.Object apply(java.lang.Object)>
<com.facebook.react.views.art.ARTSurfaceViewManager$1: void <init>()>
<com.google.common.base.Splitter: com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter)>
<com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue getStart()>
<com.google.android.gms.maps.zzs: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPoiClickListener)>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager,int)>
<com.facebook.react.views.textinput.ReactEditText: void setBorderColor(int,float,float)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getCloudAadMfaAccount(java.lang.String,java.lang.String)>
<com.google.android.gms.cloudmessaging.zze: com.google.android.gms.tasks.Task zza(int,android.os.Bundle)>
<java.lang.Double: float floatValue()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeightPercent(float)>
<com.google.android.gms.measurement.internal.zzkd: void zzS(com.google.android.gms.measurement.internal.zzp)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase access$getMsaRegistrationUseCase$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean)>
<android.view.View: void getLocationOnScreen(int[])>
<com.google.common.collect.MapMakerInternalMap: boolean containsValue(java.lang.Object)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.GenericDraweeHierarchy build()>
<com.airbnb.lottie.model.content.CircleShape: java.lang.String getName()>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper newLatLng(com.google.android.gms.maps.model.LatLng)>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: boolean endsWithEOI(com.facebook.common.references.CloseableReference,int)>
<androidx.loader.content.AsyncTaskLoader: void <init>(android.content.Context)>
<com.facebook.react.bridge.LifecycleEventListener: void onHostPause()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity$onCreate$1$1: void <init>(androidx.appcompat.widget.Toolbar)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void enableBrowserAccess()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.producers.NetworkFetcher access$1700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.gms.internal.measurement.zzcf: boolean zzh()>
<com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<com.google.android.gms.common.internal.GmsClient: void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: java.util.List sortAccountsByPosition(java.util.List)>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$da7AkMgAkEcRbFBrs01o3ax8ZTQ': void <init>()>
<com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker: void trackCloseableReferenceLeak(com.facebook.common.references.SharedReference,java.lang.Throwable)>
<com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener: void onIndoorBuildingFocused()>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: int determineOverlayColor(int,int,com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment_MembersInjector: void injectCardFlowRules(com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment,com.microsoft.did.feature.cardflow.presentationlogic.CardFlowRules)>
<java.util.concurrent.ThreadPoolExecutor: void shutdown()>
<ch.qos.logback.core.joran.action.ActionUtil$Scope: ch.qos.logback.core.joran.action.ActionUtil$Scope[] values()>
<android.widget.FrameLayout: void setScaleY(float)>
<com.azure.authenticator.databinding.AccountListMenuItemBinding: android.widget.TextView getRoot()>
<com.google.android.gms.internal.location.zzae: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)>
<ch.qos.logback.core.rolling.helper.FileSorter: void <init>(ch.qos.logback.core.rolling.helper.FilenameParser[])>
<java.util.Arrays: boolean equals(float[],float[])>
<java.util.zip.Adler32: void update(byte[])>
<android.os.StrictMode$ThreadPolicy$Builder: void <init>(android.os.StrictMode$ThreadPolicy)>
<com.google.android.gms.internal.measurement.zzdb: void zzn(com.google.android.gms.internal.measurement.zzdb,int,com.google.android.gms.internal.measurement.zzdf)>
<com.google.common.collect.UnmodifiableIterator: void <init>()>
<com.azure.authenticator.accounts.AadAccount: void setNgcKeyId(java.lang.String)>
<ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State: java.net.URL getUrl()>
<com.facebook.react.animated.MultiplicationAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zzi()>
<ch.qos.logback.core.UnsynchronizedAppenderBase: boolean isStarted()>
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance()>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zal(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
<com.facebook.common.references.SharedReference: void removeLiveReference(java.lang.Object)>
<com.google.android.gms.maps.model.Polyline: void <init>(com.google.android.gms.internal.maps.zzz)>
<androidx.core.util.Pair: androidx.core.util.Pair create(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: java.lang.Object updateForegroundInfoWithErrorAndDelay(androidx.work.ForegroundInfo,int,java.lang.String,kotlin.coroutines.Continuation)>
<androidx.work.impl.foreground.SystemForegroundService: void onDestroy()>
<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>
<java.lang.String: boolean matches(java.lang.String)>
<com.google.android.material.datepicker.Month$1: com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel)>
<com.azure.authenticator.databinding.AddNewMfaAccountBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.measurement.internal.zzgf: void zzay()>
<android.graphics.Bitmap: int getRowBytes()>
<com.google.android.gms.common.zzw: com.google.android.gms.common.zzw zzb()>
<com.google.android.gms.maps.SupportMapFragment$zzb: void zza(com.google.android.gms.maps.SupportMapFragment$zzb,android.app.Activity)>
<com.google.android.material.tabs.TabLayout$TabView: void setSelected(boolean)>
<com.google.android.material.datepicker.YearGridAdapter$1: void <init>(com.google.android.material.datepicker.YearGridAdapter,int)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void close()>
<android.graphics.PointF: void set(android.graphics.PointF)>
<com.airbnb.lottie.parser.ScaleXYParser: void <init>()>
<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>
<com.microsoft.onlineid.AccountManager: void getAccountPickerIntent(java.lang.Iterable,android.os.Bundle)>
<android.widget.Button: boolean isClickable()>
<com.facebook.imagepipeline.common.TooManyBitmapsException: void <init>(java.lang.String)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropType()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$deleteBackupForCachedMsa$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference)>
<com.google.common.collect.MapMakerInternalMap$InternalEntryHelper: com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.ValueAnimator getAlphaAnimator(float[])>
<com.google.android.material.shape.ShapePath$PathArcOperation: float getTop()>
<java.util.Arrays: int hashCode(java.lang.Object[])>
<com.google.android.gms.common.api.internal.IStatusCallback: void onResult(com.google.android.gms.common.api.Status)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.accounts.Account zzv(com.google.android.gms.common.AccountPicker$AccountChooserOptions,android.accounts.Account)>
<com.google.android.gms.common.internal.StringResourceValueReader: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzbw: void <init>()>
<com.google.android.material.internal.CheckableImageButton$SavedState: void <init>(android.os.Parcelable)>
<com.google.android.gms.measurement.internal.zzfl: boolean zzF()>
<com.microsoft.authenticator.msa.AcquireMsaKeyCallback: void setInteractive(int)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onDiskCacheGetFail()>
<com.google.crypto.tink.PrimitiveSet: java.lang.Class getPrimitiveClass()>
<androidx.fragment.app.Fragment: void <init>()>
<com.google.android.gms.common.api.internal.GoogleServices: void <init>(android.content.Context)>
<com.google.common.collect.MapMakerInternalMap$SafeToArraySet: void <init>(com.google.common.collect.MapMakerInternalMap$1)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _verifySharing()>
<com.facebook.common.util.HashCodeUtil: int hashCode(int,int,int,int,int,int)>
<com.facebook.react.animated.AnimatedNode: void onAttachedToNode(com.facebook.react.animated.AnimatedNode)>
<android.view.View: int getPaddingRight()>
<android.os.Parcel: void writeLongArray(long[])>
<ch.qos.logback.core.rolling.RollingFileAppender: boolean checkForFileAndPatternCollisions()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier: boolean access$000(com.facebook.datasource.IncreasingQualityDataSourceSupplier)>
<kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>
<com.google.android.gms.location.zzat: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<android.view.ViewGroup: void setClipChildren(boolean)>
<com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.Bucket getBucket(int)>
<com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory: void <init>(com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator,com.facebook.imagepipeline.platform.PlatformDecoder,com.facebook.imagepipeline.core.CloseableReferenceFactory)>
<com.google.android.gms.common.api.internal.BackgroundDetector: void initialize(android.app.Application)>
<com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.WritableNativeMap)>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void disconnect()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.address.ViewAddressFragment injectViewAddressFragment2(com.microsoft.brooklyn.ui.address.ViewAddressFragment)>
<com.google.android.gms.common.images.ImageManager$ImageReceiver: void zac()>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$600(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair removeTouchesAtIndices(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)>
<org.xml.sax.SAXParseException: int getColumnNumber()>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$leaveWorkplaceJoin$1: void onChanged(com.microsoft.authenticator.workaccount.entities.LeaveWpjStatus)>
<com.facebook.react.uimanager.FloatUtil: boolean floatsEqual(float,float)>
<com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)>
<java.lang.Math: int max(int,int)>
<com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToVerifiedAncestor(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.BrooklynAutofillService injectBrooklynAutofillService2(com.microsoft.brooklyn.module.autofill.BrooklynAutofillService)>
<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledByDefault()>
<com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: void onDismissed(java.lang.Object,int)>
<com.airbnb.lottie.model.content.GradientStroke: java.util.List getLineDashPattern()>
<com.airbnb.lottie.model.layer.TextLayer$2: void <init>(com.airbnb.lottie.model.layer.TextLayer,int)>
<com.google.android.gms.common.server.response.FastJsonResponse: void setBooleanInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,boolean)>
<com.facebook.yoga.YogaConfigFactory: com.facebook.yoga.YogaConfig create()>
<ch.qos.logback.classic.android.SQLiteAppender: void insertProperties(java.util.Map,long)>
<com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory create(javax.inject.Provider)>
<com.adjust.sdk.AdjustFactory: void setBaseUrl(java.lang.String)>
<java.nio.CharBuffer: char[] array()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshWorker appIdDomainRefreshWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.fabric.mounting.MountingManager: void addViewAt(int,int,int)>
<com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: void doInBackgroundGuarded(java.lang.Void[])>
<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: void add(java.lang.Class,java.lang.String,java.lang.Class)>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void setPaddingForPosition(android.view.View)>
<com.google.android.gms.internal.measurement.zzll: boolean zzb()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardinfo.presentationlogic.detailedreceipts.CardHistoryDetailViewModel cardHistoryDetailViewModel()>
<com.google.android.gms.location.zzo: void <init>()>
<com.facebook.yoga.YogaAlign: void <init>(java.lang.String,int,int)>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
<ch.qos.logback.classic.spi.ClassPackagingData: java.lang.String getVersion()>
<com.google.android.gms.common.internal.zzl: void zza(com.google.android.gms.common.internal.GetServiceRequest,android.os.Parcel,int)>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int getBestScanNumber()>
<com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>
<com.google.android.gms.internal.measurement.zzfe: void <init>(android.net.Uri)>
<com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>
<ch.qos.logback.core.spi.AppenderAttachableImpl: java.util.Iterator iteratorForAppenders()>
<com.google.android.gms.common.server.response.SafeParcelResponse: void zaH(java.lang.StringBuilder,java.util.Map,android.os.Parcel)>
<ch.qos.logback.classic.pattern.EnsureExceptionHandling: boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter)>
<android.widget.FrameLayout: void setClickable(boolean)>
<com.facebook.react.views.art.ARTTextShadowNode: void <init>()>
<com.facebook.cache.disk.DefaultDiskStorage$InserterImpl: void <init>(com.facebook.cache.disk.DefaultDiskStorage,java.lang.String,java.io.File)>
<com.airbnb.lottie.model.layer.ImageLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)>
<com.facebook.react.modules.network.ProgressRequestBody$1: void <init>(com.facebook.react.modules.network.ProgressRequestBody,java.io.OutputStream)>
<com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)>
<com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable: void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean)>
<com.adjust.sdk.Reflection: java.lang.Object getAdvertisingInfoObject(android.content.Context)>
<com.fasterxml.jackson.core.util.BufferRecycler: int byteBufferLength(int)>
<com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask addFailureListener(com.airbnb.lottie.LottieListener)>
<com.google.android.gms.common.images.ImageManager$ImageReceiver: void zaa(com.google.android.gms.common.images.zag)>
<com.google.android.gms.internal.measurement.zzhi: int zza()>
<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getHelperText()>
<com.facebook.common.internal.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.android.material.textview.MaterialTextView: boolean canApplyTextAppearanceLineHeight(android.content.Context)>
<com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED(java.io.File)>
<com.google.android.gms.measurement.internal.zzah: void <init>(com.google.android.gms.measurement.internal.zzai,android.content.Context,java.lang.String)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$getOpenInBrowserOnClickListener$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment,com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$LINKS)>
<com.google.android.gms.measurement.internal.zzao: com.google.android.gms.measurement.internal.zzao zzc(java.lang.Long,java.lang.Long,java.lang.Boolean)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment_MembersInjector: void <init>(javax.inject.Provider)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void start()>
<com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)>
<androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>
<com.facebook.react.views.text.CustomStyleSpan: void apply(android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)>
<android.widget.TextView: void <init>(android.content.Context)>
<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext build()>
<com.adjust.sdk.UtilNetworking: com.adjust.sdk.ResponseData createGETHttpsURLConnection(com.adjust.sdk.ActivityPackage,java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: void <init>(com.azure.authenticator.storage.database.AppDatabase)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void withErrors()>
<com.airbnb.lottie.utils.BaseLottieAnimator: void notifyUpdate()>
<com.google.android.gms.measurement.internal.zzy: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<ch.qos.logback.classic.LoggerContext: boolean isPackagingDataEnabled()>
<com.google.android.material.button.MaterialButtonToggleGroup: void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener)>
<androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity$onCreate$$inlined$apply$lambda$1: void onClick(android.view.View)>
<com.google.android.material.internal.CollapsingTextHelper: float getCollapsedTextLeftBound(int,int)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$602(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.google.android.gms.internal.common.zzb: void <init>(java.lang.String)>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
<com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getImageTranscoderWithType(com.facebook.imageformat.ImageFormat,boolean)>
<android.app.Activity: boolean requestWindowFeature(int)>
<com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>
<com.google.android.gms.measurement.internal.zzfn: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzaa,com.google.android.gms.measurement.internal.zzp)>
<androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)>
<java.util.LinkedHashSet: void <init>()>
<com.airbnb.lottie.LottieDrawable: void updateBounds()>
<com.airbnb.lottie.model.content.ShapeFill: void <init>(java.lang.String,boolean,android.graphics.Path$FillType,com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,boolean)>
<com.google.android.gms.internal.auth-api.zzv: void zzc(com.google.android.gms.common.api.Status,java.lang.String)>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToState(android.view.View,int)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getTitle()>
<com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()>
<com.google.android.gms.internal.measurement.zzmg: com.google.android.gms.internal.measurement.zzmh zzd()>
<com.google.android.gms.internal.location.zzab: void <init>()>
<com.facebook.react.uimanager.ReactStylesDiffMap: void <init>(com.facebook.react.bridge.ReadableMap)>
<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)>
<com.azure.authenticator.OnAppUpgradeReceiver: void migrateMsaSdkNgcServerKeyIdentifierIfNecessary()>
<com.google.android.material.bottomappbar.BottomAppBar$AnimationListener: void onAnimationStart(com.google.android.material.bottomappbar.BottomAppBar)>
<com.google.android.material.shape.MaterialShapeDrawable: float getParentAbsoluteElevation()>
<ch.qos.logback.classic.spi.STEUtil: int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[])>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>
<androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<com.google.android.gms.common.internal.zzt: void <init>(java.lang.String,java.lang.String,boolean,int,boolean)>
<com.google.android.gms.tasks.zzw: boolean zze()>
<com.google.android.gms.internal.measurement.zzds: void <init>()>
<com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)>
<com.facebook.react.uimanager.MatrixMathHelper: double[] inverse(double[])>
<com.google.android.gms.measurement.internal.zzbv: void <init>()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab getTabAt(int)>
<android.os.ResultReceiver: void <init>(android.os.Handler)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder$coroutineTimer$1: void invoke()>
<androidx.recyclerview.widget.GridLayoutManager: int getSpanCount()>
<com.google.android.material.snackbar.BaseTransientBottomBar$18: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<ch.qos.logback.classic.net.SocketReceiver: void <init>()>
<com.google.android.gms.maps.model.TileOverlayOptions: void <init>(android.os.IBinder,boolean,float,boolean,float)>
<com.google.android.gms.internal.measurement.zzjk: void zzF(com.google.android.gms.internal.measurement.zzjw,java.lang.Object,java.lang.Object)>
<com.airbnb.lottie.utils.LottieValueAnimator: void endAnimation()>
<com.google.android.gms.internal.measurement.zzdb: boolean zze()>
<com.azure.authenticator.ui.backup.BackupFlowActivity_GeneratedInjector: void injectBackupFlowActivity(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.google.android.gms.measurement.internal.zzce: void <init>()>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$500(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler activityStartIntentHandler()>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: com.google.android.gms.common.api.Api$AnyClientKey getClientKey()>
<com.google.android.gms.internal.measurement.zzgz: void zzD(java.lang.String,com.google.android.gms.internal.measurement.zzkl)>
<com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)>
<android.app.Activity: void <init>()>
<com.google.android.gms.common.api.internal.OptionalPendingResultImpl: void <init>(com.google.android.gms.common.api.PendingResult)>
<android.view.ViewGroup: void setEnabled(boolean)>
<com.azure.authenticator.databinding.FragmentImportFromChromeBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.Button,android.widget.RelativeLayout,android.widget.ImageView,androidx.cardview.widget.CardView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,androidx.cardview.widget.CardView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,androidx.cardview.widget.CardView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,androidx.cardview.widget.CardView,android.widget.TextView,android.widget.TextView,android.view.View,android.widget.ImageView,android.widget.RelativeLayout,android.widget.TextView,android.widget.ImageView,android.widget.RelativeLayout,android.widget.TextView,android.widget.ImageView,android.widget.RelativeLayout,android.widget.TextView,android.widget.ImageView,android.widget.RelativeLayout,android.widget.TextView)>
<com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)>
<com.facebook.imagepipeline.core.ImagePipeline: void clearCaches()>
<com.fasterxml.jackson.core.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.google.android.gms.common.api.UnsupportedApiCallException: void <init>(com.google.android.gms.common.Feature)>
<com.azure.authenticator.ui.action.UserInteractionRequiredAction: int getActionResourceId()>
<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<ch.qos.logback.classic.Logger: void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent)>
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: int getBestScanEndOffset()>
<com.facebook.react.views.textinput.ReactTextInputEvent: void <init>(int,java.lang.String,java.lang.String,int,int)>
<com.google.android.gms.internal.measurement.zzio: void <init>(com.google.android.gms.internal.measurement.zziv[])>
<android.app.UiModeManager: int getCurrentModeType()>
<com.google.android.material.chip.ChipDrawable: com.google.android.material.animation.MotionSpec getHideMotionSpec()>
<com.google.android.gms.measurement.internal.zzfo: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzaa)>
<com.google.android.gms.measurement.internal.zzgb: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.navigation.NavigationBarView: com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context)>
<android.widget.Toast: void setGravity(int,int,int)>
<android.widget.ImageButton: void setTag(java.lang.Object)>
<ch.qos.logback.core.Context: java.lang.String getProperty(java.lang.String)>
<com.facebook.imagepipeline.memory.BasePool$Counter: void <init>()>
<android.content.Intent: void <init>(android.content.Intent)>
<com.google.android.material.chip.ChipDrawable: void drawDebug(android.graphics.Canvas,android.graphics.Rect)>
<androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context)>
<com.microsoft.authenticator.registration.'unknown'.abstraction.ScanUnknownQrCodeManager: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.internal.location.zzbp: com.google.android.gms.internal.location.zzbu zza()>
<com.facebook.react.uimanager.ReactShadowNode: void setMeasureSpecs(int,int)>
<com.google.android.gms.cloudmessaging.zza$zza: void <init>()>
<com.facebook.imagepipeline.memory.BasePool$InvalidSizeException: void <init>(java.lang.Object)>
<com.facebook.drawee.view.DraweeHolder: void onAttach()>
<java.util.LinkedList: boolean contains(java.lang.Object)>
<ch.qos.logback.core.LogbackException: void <init>(java.lang.String)>
<com.google.android.material.chip.ChipDrawable: void setChipIconSize(float)>
<com.facebook.react.views.image.ReactImageView: void setSourceImage()>
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getWidth()>
<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<ch.qos.logback.core.net.server.RemoteReceiverStreamClient: java.io.ObjectOutputStream createObjectOutputStream()>
<com.facebook.react.uimanager.events.EventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)>
<com.google.crypto.tink.proto.KeyTemplate$Builder: com.google.crypto.tink.proto.KeyTemplate$Builder setOutputPrefixType(com.google.crypto.tink.proto.OutputPrefixType)>
<com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase: void <init>(android.content.Context,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<android.os.Messenger: android.os.IBinder getBinder()>
<com.google.android.gms.common.api.internal.zaar: boolean zaz()>
<com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType[] values()>
<java.util.concurrent.CountDownLatch: void <init>(int)>
<com.google.android.gms.measurement.internal.zzg: void zzac(java.lang.String)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)>
<com.airbnb.lottie.animation.content.GradientStrokeContent: android.graphics.RadialGradient getRadialGradient()>
<com.google.android.material.circularreveal.CircularRevealHelper: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)>
<com.airbnb.lottie.model.animatable.AnimatableTextFrame: void <init>(java.util.List)>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: int getRetries()>
<com.google.android.gms.internal.measurement.zzdj: int zzN()>
<com.facebook.react.uimanager.events.TouchesHelper: void sendTouchEvent(com.facebook.react.uimanager.events.RCTEventEmitter,com.facebook.react.uimanager.events.TouchEventType,int,com.facebook.react.uimanager.events.TouchEvent)>
<com.google.android.gms.auth.account.zza: void zza(boolean)>
<com.google.android.gms.location.ActivityTransition: int getTransitionType()>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder positiveButtonAction(java.lang.String,android.content.DialogInterface$OnClickListener)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1$2: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1,kotlin.coroutines.Continuation)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: void <init>(java.lang.Class,java.lang.String)>
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>
<com.azure.authenticator.ui.RootActivityBase: void <init>()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_AssistedFactory_Impl: void <init>(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_Factory)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: android.database.sqlite.SQLiteDatabase getDb()>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printIgnoredCount(java.lang.StringBuilder,int)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: void <init>(com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase,com.azure.authenticator.storage.database.AccountStorage)>
<java.io.OutputStream: void write(byte[],int,int)>
<com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri)>
<com.google.android.material.appbar.AppBarLayout: boolean isLiftOnScroll()>
<com.google.android.gms.auth.api.credentials.HintRequest: boolean isIdTokenRequested()>
<com.airbnb.lottie.parser.GradientFillParser: com.airbnb.lottie.model.content.GradientFill parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.airbnb.lottie.parser.AnimatableValueParser: java.util.List parse(com.airbnb.lottie.parser.moshi.JsonReader,float,com.airbnb.lottie.LottieComposition,com.airbnb.lottie.parser.ValueParser)>
<com.facebook.react.modules.network.NetworkingModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.resources.TextAppearance: boolean access$102(com.google.android.material.resources.TextAppearance,boolean)>
<com.airbnb.lottie.LottieComposition: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()>
<java.lang.Math: double abs(double)>
<ch.qos.logback.core.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.core.Context)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>
<ch.qos.logback.core.spi.ContextAwareImpl: java.lang.Object getOrigin()>
<com.google.android.gms.maps.internal.zzr: void onCameraMove()>
<com.facebook.shimmer.Shimmer: void updateColors()>
<com.google.android.material.textfield.IndicatorViewController: void setErrorViewTextColor(android.content.res.ColorStateList)>
<com.facebook.react.views.scroll.ReactScrollView: void setBorderColor(int,float,float)>
<com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: java.util.Map getHeaders(com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])>
<com.google.android.gms.measurement.internal.zzjv: void zzY()>
<com.google.android.gms.internal.auth-api.zzd: void <init>(android.os.IBinder,java.lang.String)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6: java.lang.Float get(android.view.View)>
<com.google.android.gms.common.api.internal.zaar: boolean zas(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.common.ConnectionResult)>
<com.google.android.gms.measurement.internal.zzho: java.lang.Object zzr(int)>
<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
<com.facebook.imagepipeline.producers.LocalResourceFetchProducer: int getLength(com.facebook.imagepipeline.request.ImageRequest)>
<com.google.android.material.stateful.ExtendableSavedState$1: com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: javax.net.ServerSocketFactory getServerSocketFactory()>
<com.facebook.common.internal.Preconditions: void checkState(boolean,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdo: void <init>()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$startWorkplaceJoin(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,boolean)>
<com.google.common.base.CaseFormat$1: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>
<ch.qos.logback.core.subst.Parser: boolean isDefaultToken(ch.qos.logback.core.subst.Token)>
<com.facebook.common.statfs.StatFsHelper: long getAvailableStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType)>
<com.facebook.react.views.picker.events.PickerItemSelectEvent: void <init>(int,int)>
<ch.qos.logback.core.spi.ContextAwareImpl: ch.qos.logback.core.Context getContext()>
<com.google.android.gms.internal.safetynet.zzx: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.google.android.gms.measurement.internal.zzg: long zzI()>
<android.graphics.Bitmap: int getByteCount()>
<com.azure.authenticator.PhoneFactorApplication$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.azure.authenticator.databinding.FragmentMsaProtectionBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout)>
<com.facebook.react.uimanager.ViewAtIndex$1: void <init>()>
<com.google.android.gms.internal.measurement.zzho: com.google.android.gms.internal.measurement.zzhs zzaA()>
<ch.qos.logback.core.OutputStreamAppender: void subAppend(java.lang.Object)>
<com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1: void <init>(com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor,java.lang.Runnable)>
<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.common.references.CloseableReference getCachedImage()>
<ch.qos.logback.core.OutputStreamAppender: java.io.OutputStream getOutputStream()>
<android.content.pm.PackageManager: boolean isInstantApp()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.viewlogic.PinFragment injectPinFragment2(com.microsoft.did.feature.cardflow.viewlogic.PinFragment)>
<com.google.android.datatransport.cct.internal.LogResponse: long getNextRequestWaitMillis()>
<ch.qos.logback.classic.joran.action.ConditionalIncludeAction: java.net.URL peekPath(ch.qos.logback.core.joran.spi.InterpretationContext)>
<com.facebook.soloader.SoLoader: void init(android.content.Context,boolean)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getLeftEdge()>
<com.google.android.gms.internal.location.zzbj: android.os.Looper zzb()>
<com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)>
<com.google.android.gms.internal.measurement.zzja: long zzG(java.lang.Object,long)>
<com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)>
<com.google.android.material.internal.CollapsingTextHelper: void recalculate(boolean)>
<com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.backup.RestoreFlowViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.adjust.sdk.AdjustFactory: void teardown(android.content.Context)>
<com.google.android.datatransport.runtime.backends.CreationContext: java.lang.String getBackendName()>
<com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void <init>(android.view.View,androidx.core.view.WindowInsetsCompat)>
<com.airbnb.lottie.LottieDrawable: void enableMergePathsForKitKatAndAbove(boolean)>
<com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getStartServicePackage()>
<com.google.android.gms.measurement.internal.zzdw: com.google.android.gms.measurement.internal.zzdv zzb(java.lang.String,java.lang.Object,java.lang.Object,com.google.android.gms.measurement.internal.zzdt)>
<com.facebook.react.uimanager.events.EventDispatcher: long getEventCookie(int,short,short)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<ch.qos.logback.core.OutputStreamAppender: void setImmediateFlush(boolean)>
<com.facebook.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromZipStreamSync(java.util.zip.ZipInputStream,java.lang.String)>
<com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory: void <init>()>
<com.airbnb.lottie.parser.GradientColorParser: void <init>(int)>
<com.google.android.gms.internal.auth.zzp: void <init>(com.google.android.gms.common.api.Status)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzq(long)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void setSourceImageRef(com.facebook.common.references.CloseableReference)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzI()>
<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int)>
<com.facebook.jni.DestructorThread$1: void <init>(java.lang.String)>
<com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void logAndUpdateState(com.google.android.datatransport.runtime.TransportContext,int)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.storage.Storage,com.microsoft.onlineid.sdk.extension.NgcManager,com.microsoft.onlineid.sdk.extension.SessionManager,com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager,com.microsoft.authenticator.logging.businesslogic.RemoveLogsUseCase)>
<com.facebook.imagepipeline.memory.PoolConfig: int getBitmapPoolMaxBitmapSize()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_2(int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setRequestId(java.lang.String)>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.azure.authenticator.notifications.aad.AadNgcNotification: com.azure.authenticator.accounts.AadAccount getAadNgcAccount(java.lang.String)>
<android.widget.LinearLayout: android.content.res.Resources getResources()>
<com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.LottieDrawable: boolean enableMergePathsForKitKatAndAbove()>
<com.google.android.gms.common.ConnectionResult: java.lang.String zza(int)>
<com.google.android.gms.internal.measurement.zzht: void zzh(int)>
<com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getServerIpAddress(int)>
<com.adjust.sdk.ActivityHandler: void gdprForgetMeI()>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<android.app.NotificationChannel: java.lang.CharSequence getName()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setOsBuild(java.lang.String)>
<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean)>
<com.google.android.gms.internal.measurement.zzeu: void <init>()>
<ch.qos.logback.classic.pattern.CallerDataConverter: void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator)>
<androidx.room.migration.Migration: void <init>(int,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.microsoft.authenticator.common.abstraction.BottomNavigationController getBottomNavigationController$app_productionRelease()>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: com.azure.authenticator.profile.AbstractGetProfileImageTask$ImageResult fetchAccountProfileImage()>
<ch.qos.logback.core.joran.util.PropertySetter: void <init>(java.lang.Object)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)>
<com.evernote.android.job.JobConfig: com.evernote.android.job.util.Clock getClock()>
<com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.android.gms.measurement.internal.zzh: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzs)>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOuterRoundedness()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String getLatestLogsFromFile(java.io.File)>
<com.google.android.gms.internal.auth.zzay: com.google.android.gms.internal.auth.zzay[] values()>
<com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener: void onDoubleTap()>
<com.google.android.material.snackbar.BaseTransientBottomBar: int getSnackbarBaseLayoutResId()>
<com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zaz(com.google.android.gms.common.api.internal.GoogleApiManager)>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<okio.Okio: okio.BufferedSink buffer(okio.Sink)>
<com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: void <init>(com.google.android.material.bottomsheet.BottomSheetDialogFragment)>
<ch.qos.logback.classic.Level: int toInt()>
<android.net.Uri: java.util.Set getQueryParameterNames()>
<com.google.android.gms.maps.internal.zzbr: void <init>(android.os.IBinder)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: boolean isEditMode()>
<com.adjust.sdk.DeviceInfo: void <init>(android.content.Context,java.lang.String)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void setAppLaunchedFromLaunchActivity(boolean)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureSelfhostControls$$inlined$CoroutineExceptionHandler$1: void <init>(kotlinx.coroutines.CoroutineExceptionHandler$Key)>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getEnd()>
<com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite: com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite getEmptyRegistry()>
<com.adjust.sdk.AdjustInstance$10: void <init>(com.adjust.sdk.AdjustInstance,android.content.Context)>
<javax.net.ssl.SSLSocket: boolean isConnected()>
<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values()>
<android.widget.ImageButton: void setBackgroundColor(int)>
<com.facebook.imagepipeline.memory.PoolParams: void <init>(int,int,android.util.SparseIntArray)>
<com.facebook.react.uimanager.MeasureSpecAssertions: void assertExplicitMeasureSpec(int,int)>
<androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<com.facebook.react.views.image.ReactImageView: boolean hasMultipleSources()>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.manager.ImageAssetManager getImageAssetManager()>
<android.text.TextPaint: float getFontMetrics(android.graphics.Paint$FontMetrics)>
<ch.qos.logback.core.joran.action.IADataForComplexProperty: java.lang.String getComplexPropertyName()>
<com.facebook.react.uimanager.ViewManagersPropertyCache: void createPropSetters(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,java.lang.Class,java.util.Map)>
<android.widget.ImageButton: void drawableStateChanged()>
<com.google.android.gms.common.api.internal.zaaz: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<androidx.room.MultiInstanceInvalidationService: void <init>()>
<com.google.android.gms.internal.measurement.zzbp: void <init>(com.google.android.gms.internal.measurement.zzbq,android.app.Activity)>
<com.google.android.gms.internal.measurement.zzjk: int zzm(int,java.util.List,boolean)>
<com.facebook.react.views.slider.ReactSlider: void updateValue()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<com.google.android.gms.common.zzj: void <init>(byte[])>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void notifyConsumer(com.facebook.common.memory.PooledByteBufferOutputStream,int,com.facebook.imagepipeline.common.BytesRange,com.facebook.imagepipeline.producers.Consumer)>
<com.google.android.datatransport.cct.internal.QosTier: void <init>(java.lang.String,int,int)>
<androidx.work.impl.foreground.SystemForegroundService: android.os.IBinder onBind(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzjk: void zza(java.lang.Class)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketError$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieTask fromAssets(java.lang.String)>
<com.facebook.systrace.Systrace: void endAsyncFlow(long,java.lang.String,int)>
<com.facebook.imageutils.ImageMetaData: android.util.Pair getDimensions()>
<android.os.Parcel: android.os.IBinder readStrongBinder()>
<com.google.android.material.chip.Chip: com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip)>
<com.google.android.gms.internal.measurement.zzdj: void zzaK(com.google.android.gms.internal.measurement.zzdj,long)>
<com.google.android.material.textfield.TextInputLayout: boolean shouldUpdateEndDummyDrawable()>
<android.widget.TextView: void setEnabled(boolean)>
<com.google.android.gms.auth.api.identity.zzl$zzc: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.microsoft.authenticator.common.businessLogic.AuthenticatorState getAuthenticatorState$app_productionRelease()>
<ch.qos.logback.core.util.Duration: void <init>(long)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _verifyRootSpace(int)>
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object remove(java.lang.Object,int)>
<com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderRadius(float)>
<com.facebook.react.views.text.ReactFontManager$FontFamily: android.graphics.Typeface getTypeface(int)>
<com.google.android.gms.internal.measurement.zzmw: double zzb()>
<com.google.android.gms.maps.model.MarkerOptions: float getAnchorU()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.importCred.ImportPasswordsViewModel access$12900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.evernote.android.job.JobProxy: void plantPeriodic(com.evernote.android.job.JobRequest)>
<com.evernote.android.job.v21.TransientBundleCompat: void persistBundle(android.content.Context,com.evernote.android.job.JobRequest)>
<com.facebook.react.module.annotations.ReactModule: boolean isCxxModule()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _parseNegNumber()>
<com.google.android.gms.internal.measurement.zzdj: boolean zzM()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.adjust.sdk.AdjustFactory: void setPackageHandlerBackoffStrategy(com.adjust.sdk.BackoffStrategy)>
<com.google.android.gms.cloudmessaging.zzt: void <init>()>
<android.widget.Toast: void show()>
<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onCancellation()>
<java.util.concurrent.BlockingQueue: boolean remove(java.lang.Object)>
<com.google.android.gms.location.SleepSegmentEvent: long getStartTimeMillis()>
<com.google.android.gms.common.util.concurrent.NumberedThreadFactory: void <init>(java.lang.String)>
<com.microsoft.authenticator.graphclient.GraphConstantsKt: com.microsoft.authenticator.graphclient.GraphApiEndPoint getGraphApiEndPointByCloudEnvironment(com.microsoft.authenticator.core.protocol.CloudEnvironment)>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount copyValuesFromExistingAccount(com.azure.authenticator.storage.database.DbAccount,com.azure.authenticator.storage.database.DbAccount)>
<com.facebook.react.views.image.ReactImageView: boolean shouldResize(com.facebook.react.views.imagehelper.ImageSource)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionManager: void <init>(com.azure.authenticator.jobs.DeferrableWorkerUtils,com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase)>
<com.google.android.gms.auth.zzd: java.lang.Object zza(android.content.Context,android.content.ComponentName,com.google.android.gms.auth.zzj)>
<com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void <init>(android.content.Context)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment)>
<com.google.android.material.navigation.NavigationBarView$2: void <init>(com.google.android.material.navigation.NavigationBarView)>
<javax.mail.internet.MimeBodyPart: void <init>()>
<android.app.Fragment: void onDestroy()>
<com.azure.authenticator.storage.Storage: void setNotificationDisabledDialogAppLaunchKey(int)>
<android.app.Activity: android.content.Intent getIntent()>
<com.google.android.material.datepicker.MaterialCalendar$2: void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void attachBaseContext(android.content.Context)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: int parseOverScrollMode(java.lang.String)>
<com.azure.authenticator.databinding.FragmentMsaProtectionBinding: android.widget.LinearLayout getRoot()>
<com.google.android.gms.internal.measurement.zzcj: void <init>(java.lang.String,int,int)>
<com.google.android.gms.internal.measurement.zzjs: java.lang.Object zzk(int)>
<com.google.android.gms.common.api.ResultCallbacks: void onFailure(com.google.android.gms.common.api.Status)>
<com.facebook.react.modules.camera.ImageEditingManager: java.io.File access$400(android.content.Context,android.graphics.Bitmap,java.lang.String)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] finishCurrentSegment()>
<com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>
<com.facebook.react.bridge.AssertionException: void <init>(java.lang.String)>
<com.google.android.gms.internal.measurement.zzlm: boolean zza()>
<ch.qos.logback.classic.net.SimpleSocketServer: void configureLC(ch.qos.logback.classic.LoggerContext,java.lang.String)>
<com.google.android.gms.location.zzah: void <init>(boolean)>
<android.net.Uri: boolean isHierarchical()>
<com.azure.authenticator.storage.Storage: void writeIsFcmTokenAadServiceFailedRetry(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.microsoft.authenticator.di.ActivityModule,android.app.Activity,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNodeImpl)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)>
<com.google.android.gms.maps.zzal: void <init>(com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zza,com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.airbnb.lottie.LottieAnimationView: void setAnimation(java.io.InputStream,java.lang.String)>
<com.microsoft.authenticator.authentication.mfa.viewLogic.MfaSdkDeviceGestureManager: void <init>(com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<com.adjust.sdk.IActivityHandler: void onResume()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void access$100(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: java.lang.CharSequence getApplicationLabel(java.lang.String)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.core.ChoreographerCompat access$002(com.facebook.react.modules.debug.FpsDebugFrameCallback,com.facebook.react.modules.core.ChoreographerCompat)>
<java.nio.ByteBuffer: boolean hasRemaining()>
<com.google.android.gms.internal.measurement.zzdd: void <init>()>
<com.microsoft.authenticator.commonuilibrary.util.ActivityUtils: void enableActionBarHomeButtonAsUp(androidx.appcompat.app.AppCompatActivity)>
<com.google.android.gms.internal.maps.zzz: int zzj()>
<com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()>
<com.google.android.gms.measurement.internal.zzgr: void <init>(com.google.android.gms.measurement.internal.zzhn)>
<com.facebook.drawee.drawable.DrawableProperties: void setDither(boolean)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$onTicketAcquired$2: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback,com.microsoft.onlineid.UserAccount,com.microsoft.onlineid.Ticket,android.os.Bundle,kotlin.coroutines.Continuation)>
<com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()>
<com.facebook.debug.debugoverlay.model.DebugOverlayTag: void <init>(java.lang.String,java.lang.String,int)>
<com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void <init>()>
<com.adjust.sdk.PackageBuilder: java.util.Map getEventParameters(com.adjust.sdk.AdjustEvent,boolean)>
<com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()>
<kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zzb: void <init>(androidx.fragment.app.Fragment)>
<com.google.android.gms.common.api.internal.zabd: void onConnectionSuspended(int)>
<com.google.android.gms.maps.GoogleMap$OnInfoWindowLongClickListener: void onInfoWindowLongClick(com.google.android.gms.maps.model.Marker)>
<android.view.ViewGroup: int getMeasuredWidth()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setDraggable(boolean)>
<com.adjust.sdk.AdjustInstance: void onCreate(com.adjust.sdk.AdjustConfig)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback: com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry access$getMsaAddAccountFlowTelemetry$p(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel addMsaAccountViewModel()>
<com.google.android.gms.internal.maps.zzb: void <init>(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: int zzy()>
<com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()>
<com.google.android.gms.auth.account.WorkAccountApi: com.google.android.gms.common.api.PendingResult setWorkAuthenticatorEnabledWithResult(com.google.android.gms.common.api.GoogleApiClient,boolean)>
<com.facebook.react.modules.i18nmanager.I18nUtil: boolean isPrefSet(android.content.Context,java.lang.String,boolean)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment: void <init>()>
<com.google.android.gms.measurement.AppMeasurementService: com.google.android.gms.measurement.internal.zzjh zzd()>
<com.google.android.material.shape.ShapeAppearanceModel: void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1)>
<com.google.android.material.snackbar.BaseTransientBottomBar$1: void <init>()>
<com.facebook.drawee.drawable.Rounded: void setScaleDownInsideBorders(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: long getMaxStorageSizeInBytes()>
<com.facebook.react.views.text.ReactTextInlineImageShadowNode: void <init>()>
<android.widget.FrameLayout: boolean isEnabled()>
<com.google.android.gms.auth.api.proxy.ProxyResponse: android.os.Bundle zza(java.util.Map)>
<ch.qos.logback.core.spi.CyclicBufferTracker: void processPriorToRemoval(ch.qos.logback.core.helpers.CyclicBuffer)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)>
<com.evernote.android.job.JobRequest$Builder: void <init>(android.database.Cursor)>
<android.content.BroadcastReceiver: void <init>()>
<com.google.android.gms.dynamic.zac: void <init>(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.os.Bundle)>
<com.google.android.gms.maps.model.PolylineOptions: java.util.List getPoints()>
<com.facebook.yoga.YogaNodeJNIBase: void <init>()>
<com.google.android.gms.dynamite.zzo: void <init>(android.os.IBinder)>
<com.google.android.gms.internal.safetynet.zzc: boolean zza(android.os.Parcel)>
<com.google.android.material.chip.ChipDrawable: void setShowMotionSpecResource(int)>
<com.google.android.gms.internal.measurement.zzeg: void <init>()>
<com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAfterAnimation()>
<android.widget.ScrollView: void smoothScrollTo(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_AssistedFactory msaNotificationActionWorker_AssistedFactory()>
<com.google.android.gms.location.zzz: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showSignInToUpdateBackupDialog$signInToUpdateBackupDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.backup.entities.metadata.BackupMetadata)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationManager access$9400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<ch.qos.logback.core.joran.spi.ElementPath: void <init>(java.lang.String)>
<com.facebook.infer.'annotation'.Assertions: java.lang.Object assertNotNull(java.lang.Object,java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()>
<java.util.LinkedHashMap: java.util.Set entrySet()>
<com.google.android.datatransport.AutoValue_Event: void <init>(java.lang.Integer,java.lang.Object,com.google.android.datatransport.Priority)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: void setValue(java.lang.Object)>
<com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])>
<com.facebook.datasource.AbstractDataSource: void <init>()>
<ch.qos.logback.core.util.OptionHelper: java.lang.String[] extractDefaultReplacement(java.lang.String)>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment_MembersInjector: void injectStorage(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment,com.azure.authenticator.storage.Storage)>
<com.facebook.react.bridge.JavaMethodWrapper$5: void <init>()>
<com.google.android.gms.dynamic.LifecycleDelegate: void onCreate(android.os.Bundle)>
<com.facebook.common.logging.FLog: boolean isLoggable(int)>
<ch.qos.logback.classic.Logger: ch.qos.logback.classic.LoggerContext getLoggerContext()>
<com.google.android.gms.internal.measurement.zzfa: void <init>(com.google.android.gms.internal.measurement.zzfe,java.lang.String,java.lang.Long,boolean)>
<com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.views.art.ARTRenderableViewManager createARTGroupViewManager()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>
<ch.qos.logback.classic.jul.LevelChangePropagator: void propagate(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level)>
<com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener: void onViewFound(android.view.View)>
<com.airbnb.lottie.utils.Utils$1: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$mergeBrokerAccounts$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,java.util.List,kotlin.coroutines.Continuation)>
<com.google.android.gms.auth.api.identity.SignInCredential: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,java.lang.String)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setHighlightAlpha(float)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate: boolean isInputTypePassword(android.widget.EditText)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzt(com.google.android.gms.common.AccountPicker$AccountChooserOptions,java.lang.String)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteBuffer readFromDiskCache(com.facebook.cache.common.CacheKey)>
<com.facebook.react.devsupport.LogBoxModule$1: void <init>(com.facebook.react.devsupport.LogBoxModule)>
<com.google.android.material.navigation.NavigationBarMenuView: void buildMenuView()>
<com.facebook.react.modules.camera.CameraRollManager$GetMediaTask: void <init>(com.facebook.react.bridge.ReactContext,int,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray,java.lang.String,java.lang.Integer,com.facebook.react.bridge.Promise,com.facebook.react.modules.camera.CameraRollManager$1)>
<com.google.android.gms.common.api.internal.zaae: void <init>(com.google.android.gms.common.api.internal.zaag,com.google.android.gms.common.api.internal.zaba)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs$Builder: void <init>(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.core.io.UTF32Reader: void reportStrangeStream()>
<com.facebook.react.uimanager.ReactShadowNode: void setIsLayoutOnly(boolean)>
<com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipQuotedValue(okio.ByteString)>
<com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener: void onDismiss(android.view.View)>
<com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.IMapFragmentDelegate zzc(com.google.android.gms.dynamic.IObjectWrapper)>
<java.io.File: java.lang.String getName()>
<com.google.android.material.shape.ShapePath$PathLineOperation: float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)>
<com.facebook.react.modules.core.JavaTimerManager: boolean isTimerInRange(com.facebook.react.modules.core.JavaTimerManager$Timer,long)>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection$OnScanCompletedListener)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureEnterpriseControls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.LottieAnimationView$1: void onResult(java.lang.Throwable)>
<com.google.android.gms.common.zzy: com.google.android.gms.common.zzz zze()>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void removeViewAt(com.facebook.react.views.viewpager.ReactViewPager,int)>
<com.google.android.gms.internal.measurement.zzdj: void zzbg(com.google.android.gms.internal.measurement.zzdj,int)>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>
<com.adjust.sdk.ActivityHandler: void resetSessionCallbackParametersI()>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<android.icu.text.DateFormat: void setTimeZone(android.icu.util.TimeZone)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int)>
<com.airbnb.lottie.model.layer.BaseLayer: boolean hasMasksOnThisLayer()>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzM()>
<com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: boolean isRecentFile(java.io.File)>
<java.io.PrintStream: void print(java.lang.String)>
<com.google.android.gms.internal.measurement.zznb: com.google.android.gms.internal.measurement.zznc zzd()>
<com.google.android.material.chip.Chip: void updateTextPaintDrawState()>
<ch.qos.logback.core.rolling.helper.PeriodicityType: ch.qos.logback.core.rolling.helper.PeriodicityType[] values()>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: com.microsoft.authenticator.msa.AcquireMsaKeyCallback setKeyCallback(android.content.Context,java.lang.String,com.microsoft.authenticator.msa.AcquireMsaKeyCallback$ICompletion)>
<com.microsoft.did.feature.notifications.presentationlogic.CredentialNotificationsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.maps.internal.zzat: void zzd(com.google.android.gms.internal.maps.zzt)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>
<com.adjust.sdk.scheduler.TimerOnce: void teardown()>
<com.google.android.gms.internal.measurement.zzdj: void zzbe(com.google.android.gms.internal.measurement.zzdj,long)>
<com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTL(android.content.Context)>
<ch.qos.logback.core.joran.event.EndEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator)>
<android.os.Handler: void <init>()>
<com.google.android.gms.internal.measurement.zzkh: void zzg(java.lang.Object,long,long)>
<com.google.android.material.shape.EdgeTreatment: boolean forceIntersection()>
<com.google.android.material.chip.ChipDrawable: boolean setCloseIconState(int[])>
<com.google.android.gms.measurement.internal.zzdz: void zzd(com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void readEntries(java.io.ObjectInputStream)>
<com.google.android.gms.measurement.internal.zzeg: void zzd(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity$1: void <init>(com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzj(java.lang.String,java.lang.String)>
<android.widget.Button: android.content.res.Resources getResources()>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabDiameter(float)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter$AccountsListMenuViewHolder: com.azure.authenticator.databinding.AccountListMenuItemBinding getBinding()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder zzc(com.google.android.gms.auth.api.identity.BeginSignInRequest)>
<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable)>
<com.google.common.base.CharMatcher$Negated: void <init>(com.google.common.base.CharMatcher)>
<com.adjust.sdk.scheduler.TimerCycle: java.lang.Runnable access$200(com.adjust.sdk.scheduler.TimerCycle)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)>
<java.util.concurrent.atomic.AtomicBoolean: boolean get()>
<com.google.crypto.tink.Registry: java.lang.Object getPrimitive(java.lang.String,com.google.crypto.tink.shaded.protobuf.ByteString,java.lang.Class)>
<android.content.ComponentName: java.lang.String flattenToShortString()>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: boolean isOptional()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: com.facebook.common.references.CloseableReference newClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.google.android.gms.measurement.internal.zzem: void <init>(java.lang.String,com.google.android.gms.measurement.internal.zzel,int,java.lang.Throwable,byte[],java.util.Map,com.google.android.gms.measurement.internal.zzek)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: void finish()>
<com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)>
<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<java.lang.Double: java.lang.String toString(double)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzq()>
<com.adjust.sdk.IActivityHandler: void init(com.adjust.sdk.AdjustConfig)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: com.azure.authenticator.storage.database.AccountStorage access$getAccountStorage$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.google.common.base.Equivalence: int doHash(java.lang.Object)>
<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeController buildController()>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>
<com.airbnb.lottie.LottieDrawable$7: void <init>(com.airbnb.lottie.LottieDrawable,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.policyChannel.businessLogic.AuthAppStateUseCase authAppStateUseCase()>
<com.microsoft.authenticator.reactnative.ReactNativeApplication: com.facebook.react.ReactNativeHost getReactNativeHost()>
<com.azure.authenticator.logging.ExternalLogger$MsaLogInstance: void <init>()>
<com.google.android.material.tabs.TabLayout$TabView: boolean access$500(com.google.android.material.tabs.TabLayout$TabView)>
<com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean requirePreDrawListener()>
<com.google.android.gms.internal.measurement.zzjk: com.google.android.gms.internal.measurement.zzjw zzB()>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButton: void updateIcon(boolean)>
<androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
<ch.qos.logback.core.spi.ContextAware: void setContext(ch.qos.logback.core.Context)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float)>
<ch.qos.logback.core.AsyncAppenderBase: void preprocess(java.lang.Object)>
<com.google.android.gms.internal.location.zzi: void zzp(com.google.android.gms.internal.location.zzi)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: boolean isTrafficEnabled()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeight(float)>
<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>
<com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.EncryptedKeyset$Builder newBuilder()>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$onTicketAcquired$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory create()>
<com.google.android.gms.internal.measurement.zzic: com.google.android.gms.internal.measurement.zzic zza()>
<com.google.android.gms.measurement.internal.zzed: boolean zzb()>
<android.widget.ArrayAdapter: int getItemViewType(int)>
<com.azure.authenticator.authentication.msa.ui.AccountPickerCallback$ICompletion: void onUserCancelled()>
<com.google.android.gms.common.api.GoogleApiClient: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.facebook.imagepipeline.memory.BasePool: java.lang.Object alloc(int)>
<ch.qos.logback.core.util.Duration: java.lang.String toString()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void setDrawDebugOverlay(boolean)>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getChildAt(int)>
<android.graphics.Bitmap: int getWidth()>
<javax.net.ssl.SSLSocket: void setEnableSessionCreation(boolean)>
<com.facebook.drawee.drawable.TransformCallback: void getTransform(android.graphics.Matrix)>
<com.facebook.react.uimanager.DisplayMetricsHolder: java.util.Map getPhysicalPixelsMap(android.util.DisplayMetrics,double)>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<com.google.android.gms.internal.measurement.zzjk: int zzd(java.util.List)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)>
<androidx.customview.view.AbsSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String symbolArrayToRegex(java.lang.String[])>
<java.lang.String: char[] toCharArray()>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: com.facebook.react.modules.storage.ReactDatabaseSupplier getInstance(android.content.Context)>
<com.google.android.gms.auth.api.signin.zab: void <init>()>
<com.google.android.gms.measurement.internal.zzq: void <init>()>
<com.facebook.react.uimanager.ShadowNodeRegistry: void removeRootNode(int)>
<com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface: void setKeyboardDismissMode(android.view.View,java.lang.String)>
<com.google.android.gms.maps.zzc: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMarkerDragListener)>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<bolts.TaskCompletionSource: bolts.Task getTask()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity_GeneratedInjector: void injectSignOutMsaAccountActivity(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity)>
<com.google.android.gms.internal.measurement.zzfg: java.lang.Object zza(java.lang.Object)>
<com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri,java.lang.Object)>
<com.google.android.gms.auth.api.signin.internal.zzi: void zzc(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$13: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
<com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: void setValue(java.lang.Object,java.lang.ref.ReferenceQueue)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$11: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext)>
<java.lang.Object: void notifyAll()>
<ch.qos.logback.classic.pattern.LineSeparatorConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.views.scroll.ReactScrollView: void scrollToChild(android.view.View)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: boolean isExpired()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity: void setResultAndFinish(com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: androidx.lifecycle.LiveData getMsaNgcGenerationStatus()>
<com.google.android.gms.measurement.internal.zzjp: void zzc(long,boolean)>
<com.google.android.gms.measurement.internal.zzkd: void zzu(com.google.android.gms.measurement.internal.zzp)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCBuilder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCBuilder view(android.view.View)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$1002(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzfv: void <init>()>
<com.azure.authenticator.storage.Storage: boolean isAddAccountAdjustUniqueEventSet()>
<com.facebook.imagepipeline.producers.JobScheduler: boolean updateJob(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.react.views.switchview.ReactSwitchEvent: void <init>(int,boolean)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)>
<com.facebook.react.ReactNativeHost: com.facebook.react.uimanager.UIImplementationProvider getUIImplementationProvider()>
<com.facebook.react.views.picker.ReactPickerManager: void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean)>
<com.google.android.material.elevation.ElevationOverlayProvider: void <init>(android.content.Context)>
<java.lang.String: void getChars(int,int,char[],int)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod: void <init>()>
<com.google.android.material.textfield.ClearTextEndIconDelegate$1: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.SaveResponseUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.response.abstraction.SaveDatasetManager,com.microsoft.brooklyn.module.autofill.FormInfoHelper,com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider)>
<com.google.android.datatransport.runtime.EventInternal: void <init>()>
<com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)>
<com.google.android.gms.internal.measurement.zzdq: void zzp(com.google.android.gms.internal.measurement.zzdq)>
<com.facebook.imageformat.DefaultImageFormatChecker: boolean isGifHeader(byte[],int)>
<kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: void clearNotification(int)>
<com.google.android.gms.maps.internal.zzav: boolean onMyLocationButtonClick()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthenticationTimeTelemetry getTelemetry()>
<android.widget.LinearLayout: int getPaddingTop()>
<com.google.android.gms.internal.maps.zzac: int zzj()>
<com.facebook.drawee.components.RetryManager: boolean shouldRetryOnTap()>
<com.google.android.gms.measurement.internal.zzae: long zzj(java.lang.String,com.google.android.gms.measurement.internal.zzdv)>
<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>
<com.google.android.gms.maps.internal.zzbx: void <init>(android.os.IBinder)>
<com.azure.authenticator.databinding.AddAccountInfoDialogBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.TextView)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[])>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.evernote.android.job.v14.JobProxy14: android.app.PendingIntent getPendingIntent(int,boolean,android.os.Bundle,int)>
<ch.qos.logback.classic.filter.ThresholdFilter: ch.qos.logback.core.spi.FilterReply decide(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.RadialGradient getRadialGradient()>
<com.google.android.gms.maps.internal.zzbn: void onStreetViewPanoramaLongClick(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)>
<ch.qos.logback.core.rolling.TriggeringPolicyBase: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardlist.presentationlogic.CardListViewModel access$12000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.internal.measurement.zzis: int zza(int,java.lang.Object,java.lang.Object)>
<android.widget.EditText: void setPadding(int,int,int,int)>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getAnchorV()>
<com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment$Companion: void <init>()>
<java.lang.ref.SoftReference: void <init>(java.lang.Object)>
<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>
<com.google.android.gms.common.api.GoogleApi$Settings: void <init>(com.google.android.gms.common.api.internal.StatusExceptionMapper,android.accounts.Account,android.os.Looper)>
<com.google.android.gms.common.util.DeviceProperties: boolean isWearableWithoutPlayStore(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdj: void zzaH(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.azure.authenticator.ui.action.UserInteractionRequiredAction: boolean evaluateCondition(android.content.Context)>
<com.github.amlcurran.showcaseview.ShowcaseView: void clearBitmap()>
<com.google.android.material.shape.MaterialShapeDrawable: void setParentAbsoluteElevation(float)>
<com.google.android.material.navigation.NavigationBarMenuView: void tryRestoreSelectedItemId(int)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)>
<androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result success()>
<com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List getOpacityAnimations()>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode removeChildAt(int)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task getAsync(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean)>
<com.microsoft.brooklyn.ui.generatepasswords.viewlogic.GeneratorHistoryFragment_MembersInjector: void injectGeneratePasswordInfoHelper(com.microsoft.brooklyn.ui.generatepasswords.viewlogic.GeneratorHistoryFragment,com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper)>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage: java.lang.Object updateUsernameMigration(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount,kotlin.coroutines.Continuation)>
<okio.GzipSource: void <init>(okio.Source)>
<java.lang.Integer: int numberOfLeadingZeros(int)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void destroyRootView(android.view.View)>
<com.facebook.react.modules.network.ProgressResponseBody: okio.Source source(okio.Source)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: void zad(com.google.android.gms.common.server.response.zan)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections$ActionAccountListFragmentToFullscreenAccountPage: long getAccountId()>
<com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context,int)>
<com.facebook.react.views.viewpager.PageScrollStateChangedEvent: java.lang.String getEventName()>
<java.math.BigInteger: byte[] toByteArray()>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider generatePasswordAutofillViewModelProvider()>
<com.facebook.drawee.drawable.FadeDrawable: void <init>(android.graphics.drawable.Drawable[],boolean)>
<com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendarOf(java.util.Calendar)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void animateCameraWithCallback(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.internal.zzc)>
<java.util.List: boolean equals(java.lang.Object)>
<com.google.android.gms.common.server.response.zae: void <init>()>
<com.android.installreferrer.api.InstallReferrerStateListener: void onInstallReferrerServiceDisconnected()>
<com.facebook.common.internal.CountingOutputStream: long getCount()>
<androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>
<com.facebook.common.statfs.StatFsHelper: boolean testLowDiskSpace(com.facebook.common.statfs.StatFsHelper$StorageType,long)>
<android.widget.ImageView$ScaleType: int ordinal()>
<androidx.room.RoomDatabase: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)>
<com.google.android.gms.maps.GoogleMap$OnPoiClickListener: void onPoiClick(com.google.android.gms.maps.model.PointOfInterest)>
<javax.net.ssl.SSLSocket: void connect(java.net.SocketAddress,int)>
<com.google.android.material.textfield.EndIconDelegate: void initialize()>
<com.google.android.gms.stats.WakeLock: void zza(int)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzmb: boolean zza()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutWidth()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.facebook.react.fabric.FabricUIManager: java.util.List getAndResetMountItems()>
<com.google.android.gms.common.util.ClientLibraryUtils: boolean isPackageSide()>
<com.google.android.gms.internal.location.zzac: void <init>(com.google.android.gms.internal.location.zzaf,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.GeofencingRequest,android.app.PendingIntent)>
<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>
<java.io.InputStream: int available()>
<com.google.android.gms.internal.maps.zzac: float getZIndex()>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<androidx.fragment.app.Fragment: void onDestroy()>
<com.google.android.gms.common.api.internal.zaaz: android.os.Looper getLooper()>
<com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: void <init>(com.facebook.react.modules.camera.ImageStoreManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$onTicketAcquired$2: java.lang.Object invokeSuspend(java.lang.Object)>
<kotlin.jvm.functions.Function0: java.lang.Object invoke()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void log(int,java.lang.String,java.lang.String,java.lang.Throwable,int)>
<com.google.android.gms.common.api.Api$Client: boolean isConnected()>
<com.google.android.gms.measurement.internal.zzp: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,java.lang.String,boolean,boolean,long,java.lang.String,long,long,int,boolean,boolean,java.lang.String,java.lang.Boolean,long,java.util.List,java.lang.String,java.lang.String)>
<com.azure.authenticator.storage.database.AccountDao_Impl: androidx.room.RoomDatabase access$000(com.azure.authenticator.storage.database.AccountDao_Impl)>
<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: void updateMaskIfNecessary(long)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getStartDelayProgress()>
<com.google.android.gms.common.api.internal.zal: com.google.android.gms.tasks.Task zab()>
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>
<com.google.android.gms.common.util.DefaultClock: void <init>()>
<com.microsoft.brooklyn.module.accessibility.BrooklynAccessibilityService_MembersInjector: void injectSyncSDKConnector(com.microsoft.brooklyn.module.accessibility.BrooklynAccessibilityService,com.microsoft.brooklyn.module.sync.SyncSDKConnector)>
<com.google.android.gms.common.zzm: boolean zzd()>
<com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()>
<com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildAdRevenuePackage(java.lang.String,org.json.JSONObject)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: boolean isEmpty()>
<com.adjust.sdk.Util: boolean equalLong(java.lang.Long,java.lang.Long)>
<com.google.android.gms.common.internal.zzo: int zzf()>
<ch.qos.logback.core.joran.action.ConversionRuleAction: void <init>()>
<com.google.android.gms.internal.measurement.zzgs: byte zza(int)>
<android.graphics.Matrix: void setScale(float,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$2: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.airbnb.lottie.model.Font: java.lang.String getName()>
<com.google.android.gms.internal.measurement.zzgz: void zzm(int)>
<ch.qos.logback.core.spi.ContextAwareImpl: void addStatus(ch.qos.logback.core.status.Status)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$1500(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.microsoft.onlineid.AccountManager: com.microsoft.onlineid.AccountManager setAccountCallback(com.microsoft.onlineid.IAccountCallback)>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: com.google.android.gms.maps.model.StreetViewPanoramaOrientation pointToOrientation(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.gms.measurement.internal.zzkk: java.lang.Object zzao(int,java.lang.Object,boolean,boolean)>
<com.facebook.react.views.image.ImageResizeMethod: void <init>(java.lang.String,int)>
<android.os.Handler: android.os.Message obtainMessage(int)>
<com.google.android.material.internal.TextDrawableHelper: void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context)>
<com.microsoft.onlineid.OnlineIdConfiguration: void <init>()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zay(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,double)>
<com.facebook.soloader.UnpackingSoSource: void <init>(android.content.Context,java.lang.String)>
<com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: void <init>(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void injectSelfhostConfig(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig)>
<android.widget.ImageView: int getPaddingRight()>
<com.azure.authenticator.databinding.SettingsPreferenceButtonRedBinding: com.azure.authenticator.databinding.SettingsPreferenceButtonRedBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.datatransport.runtime.SendRequest: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean access$2600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.gms.internal.measurement.zzjk: void zzV(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String toString()>
<com.adjust.sdk.IActivityHandler: void launchAttributionResponseTasks(com.adjust.sdk.AttributionResponseData)>
<com.adjust.sdk.AdjustEvent: void <init>(java.lang.String)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: void <init>(java.lang.String,int)>
<com.azure.authenticator.databinding.AccountFullscreenInfoFragmentBinding: com.azure.authenticator.databinding.AccountFullscreenInfoFragmentBinding bind(android.view.View)>
<com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.disk.DefaultDiskStorage$FileInfo getShardFileInfo(java.io.File)>
<com.google.android.gms.internal.measurement.zzp: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzy,long)>
<sun.misc.Unsafe: long getLong(java.lang.Object,long)>
<com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configurePicDevOptionsCategory()>
<com.google.android.gms.internal.maps.zzl: com.google.android.gms.internal.maps.zzk zzd(android.os.IBinder)>
<ch.qos.logback.core.rolling.helper.RenameUtil: void rename(java.lang.String,java.lang.String)>
<com.google.android.gms.common.internal.BaseGmsClient: void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)>
<com.azure.authenticator.storage.database.AppDatabase: void access$setINSTANCE$cp(com.azure.authenticator.storage.database.AppDatabase)>
<android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.adjust.sdk.SdkClickHandler$4: void <init>(com.adjust.sdk.SdkClickHandler,com.adjust.sdk.ActivityPackage)>
<com.facebook.react.uimanager.UIImplementation: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<android.widget.HorizontalScrollView: int getChildMeasureSpec(int,int,int)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype getMobileSubtype()>
<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
<ch.qos.logback.core.joran.action.Action: void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>
<bolts.Task: void runContinuations()>
<com.google.android.gms.measurement.internal.zzkf: java.util.List zzo(java.util.List,java.util.List)>
<android.widget.EditText: void setTypeface(android.graphics.Typeface)>
<com.google.android.gms.internal.auth.zzy: void <init>()>
<androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()>
<com.google.android.gms.measurement.internal.zzkf: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToCredentialListFragment: com.microsoft.brooklyn.module.model.credentials.CredAutofillSaveMetadata getCredentialSaveMetaData()>
<com.google.android.gms.common.api.Status: void <init>(int)>
<com.google.android.gms.internal.maps.zzz: void setClickable(boolean)>
<com.google.android.gms.measurement.internal.zzhn: void zzt(java.lang.String,java.lang.String,long,android.os.Bundle)>
<androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2202(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase$1: void visit(ch.qos.logback.core.net.server.RemoteReceiverClient)>
<com.google.android.datatransport.cct.StringMerger: java.lang.String mergeStrings(java.lang.String,java.lang.String)>
<android.view.animation.Animation: boolean hasEnded()>
<com.azure.authenticator.accounts.AccountCapability: boolean isMfa()>
<com.google.android.gms.maps.MapFragment$zza: void onExitAmbient()>
<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object)>
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()>
<android.widget.ImageButton: void setStateListAnimator(android.animation.StateListAnimator)>
<com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.cct.internal.BatchedLogRequest getRequestBody(com.google.android.datatransport.runtime.backends.BackendRequest)>
<com.google.android.material.internal.ManufacturerUtils: boolean isMeizuDevice()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setShape(int)>
<com.facebook.drawee.drawable.ScaleTypeDrawable: void configureBoundsIfUnderlyingChanged()>
<java.lang.Class: java.lang.String getCanonicalName()>
<com.google.android.gms.internal.measurement.zzdj: void zzaI(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<java.lang.Thread: void setDaemon(boolean)>
<com.google.crypto.tink.Util: com.google.crypto.tink.proto.KeysetInfo$KeyInfo getKeyInfo(com.google.crypto.tink.proto.Keyset$Key)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasis(float)>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzag zzv(long,java.lang.String,long,boolean,boolean,boolean,boolean,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.main.SettingsViewModel settingsViewModel()>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<android.widget.ImageButton: void onAttachedToWindow()>
<com.evernote.android.job.v21.PlatformJobService$1: void <init>(com.evernote.android.job.v21.PlatformJobService,android.app.job.JobParameters)>
<android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
<java.util.Queue: boolean remove(java.lang.Object)>
<ch.qos.logback.classic.util.ContextInitializer: java.net.URL getResource(java.lang.String,java.lang.ClassLoader,boolean)>
<com.google.android.gms.common.data.DataHolder: boolean hasNull(java.lang.String,int,int)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.disk.EntryEvictionComparatorSupplier access$600(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void getMeasuredContentRect(android.graphics.Rect)>
<com.google.android.material.tabs.TabLayout$Tab: int getPosition()>
<com.adjust.sdk.ActivityHandler: void access$2000(com.adjust.sdk.ActivityHandler,com.adjust.sdk.AttributionResponseData)>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.airbnb.lottie.model.content.ShapeData: void <init>()>
<androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<dalvik.system.PathClassLoader: java.lang.Class findClass(java.lang.String)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<com.facebook.react.modules.network.ForwardingCookieHandler: com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver access$100(com.facebook.react.modules.network.ForwardingCookieHandler)>
<com.google.android.gms.common.internal.zak: void zab()>
<com.google.common.collect.Maps: com.google.common.base.Function valueFunction()>
<com.microsoft.onlineid.sdk.extension.storage.StorageMigrationManager: void <init>(android.content.Context)>
<android.view.View: float getX()>
<com.facebook.react.views.drawer.events.DrawerStateChangedEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.google.android.gms.common.api.internal.GoogleServices: com.google.android.gms.common.api.Status checkGoogleAppId(java.lang.String)>
<com.google.android.material.chip.ChipDrawable: android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)>
<com.facebook.drawee.drawable.VisibilityAwareDrawable: void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback)>
<com.facebook.imagepipeline.request.RepeatedPostprocessor: void setCallback(com.facebook.imagepipeline.request.RepeatedPostprocessorRunner)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<com.google.android.material.shape.ShapePath$PathArcOperation: void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)>
<com.facebook.react.uimanager.ReactClippingViewGroup: void getClippingRect(android.graphics.Rect)>
<com.google.common.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.jni.DestructorThread$Terminus: void <init>(com.facebook.jni.DestructorThread$1)>
<com.google.android.gms.measurement.internal.zzhx: void <init>(com.google.android.gms.measurement.internal.zzib)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getEncryptedOathSecretKey()>
<com.google.android.material.chip.Chip: void validateAttributes(android.util.AttributeSet)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow: void <init>(java.lang.String,int)>
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>
<com.google.android.gms.measurement.internal.zzkk: long zzd()>
<com.adjust.sdk.SdkClickHandler: void sendSdkClickI(com.adjust.sdk.ActivityPackage)>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] access$100(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)>
<com.google.android.material.navigation.NavigationBarView: void inflateMenu(int)>
<ch.qos.logback.classic.android.SQLiteAppender: void bindCallerData(android.database.sqlite.SQLiteStatement,java.lang.StackTraceElement[])>
<com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzH(java.lang.String)>
<com.google.android.gms.internal.measurement.zzja: void zzo(java.lang.Object,java.lang.Object,int)>
<com.google.android.gms.measurement.internal.zzjj: void <init>(com.google.android.gms.measurement.internal.zzjq,long)>
<com.microsoft.did.feature.cardflow.viewlogic.CompleteRequestFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.cardflow.viewlogic.CompleteRequestFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<java.io.FileReader: void close()>
<android.view.ViewGroup: void setNextFocusDownId(int)>
<com.google.android.gms.common.api.Status: boolean hasResolution()>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void ensureValid()>
<java.util.Arrays: void fill(byte[],byte)>
<ch.qos.logback.classic.jul.JULHelper: java.util.logging.Logger asJULLogger(ch.qos.logback.classic.Logger)>
<android.widget.EditText: int getWidth()>
<com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>
<com.google.android.gms.measurement.internal.zzkk: android.os.Bundle zzi(android.net.Uri)>
<com.google.android.gms.maps.model.StreetViewPanoramaLocation: void <init>(com.google.android.gms.maps.model.StreetViewPanoramaLink[],com.google.android.gms.maps.model.LatLng,java.lang.String)>
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: void initialize(android.content.Context)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$showRestoreFailedDialog$restoreFailedDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$700(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.facebook.react.uimanager.NativeViewHierarchyManager$1: void <init>(com.facebook.react.uimanager.NativeViewHierarchyManager,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup,android.view.View,java.util.Set,int)>
<android.widget.EditText: void setTextColor(int)>
<com.google.android.material.shape.MaterialShapeDrawable: int getShadowOffsetX()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: void onDestroy()>
<com.google.android.gms.maps.zzi: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMyLocationButtonClickListener)>
<com.facebook.react.uimanager.UIImplementation: void removeShadowNodeRecursive(com.facebook.react.uimanager.ReactShadowNode)>
<com.google.android.material.button.MaterialButtonToggleGroup: void clearChecked()>
<com.google.android.gms.internal.measurement.zzhf: boolean zza(com.google.android.gms.internal.measurement.zzix)>
<com.adjust.sdk.SharedPreferencesManager: void setDisableThirdPartySharing()>
<com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getCloseIconTint()>
<com.google.android.gms.measurement.internal.zzd: void zzi(java.lang.String,long,com.google.android.gms.measurement.internal.zzhu)>
<android.os.Parcel: void writeStringList(java.util.List)>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.common.base.AbstractIterator: boolean hasNext()>
<com.google.common.collect.Platform: java.lang.Object[] newArray(java.lang.Object[],int)>
<com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor executor()>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectNgcManager(com.azure.authenticator.OnAppUpgradeReceiver,com.microsoft.onlineid.sdk.extension.NgcManager)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrolledInView(android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.mfasdk.authentication.viewLogic.MfaAuthHiltViewModel mfaAuthHiltViewModel()>
<com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: com.google.android.datatransport.runtime.EventInternal getEvent()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromAssetSync(android.content.Context,java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_Factory: com.azure.authenticator.ui.fragment.main.SettingsViewModel get()>
<com.google.android.gms.common.internal.zaaa: int zab(int,int,int,int)>
<com.google.android.datatransport.cct.CctTransportBackend$$Lambda$4: com.google.android.datatransport.runtime.retries.RetryStrategy lambdaFactory$()>
<com.facebook.react.ReactInstanceManager: java.lang.Boolean access$900(com.facebook.react.ReactInstanceManager)>
<com.google.android.gms.measurement.internal.zzhn: void zzq(com.google.android.gms.measurement.internal.zzaf,int,long)>
<com.google.android.gms.common.internal.service.zak: void zab(int)>
<com.google.android.gms.safetynet.SafetyNetApi$HarmfulAppsResponse: void <init>()>
<com.google.android.gms.common.internal.zzo: void onServiceDisconnected(android.content.ComponentName)>
<com.microsoft.onlineid.sdk.extension.SessionManager: java.lang.String parseCidFromNotification(android.os.Bundle)>
<com.airbnb.lottie.parser.moshi.JsonReader: int selectName(com.airbnb.lottie.parser.moshi.JsonReader$Options)>
<com.microsoft.authenticator.core.telemetry.AbstractTimeTelemetry: void logEvent(java.lang.Enum)>
<com.google.android.material.internal.ViewUtils$3: void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker injectMfaSilentLocationWorker(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker)>
<com.google.android.material.chip.Chip: void setTextAppearance(android.content.Context,int)>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: java.net.URL attributeToURL(java.lang.String)>
<com.google.android.material.shape.MaterialShapeDrawable: float getInterpolation()>
<java.io.ObjectStreamClass: java.lang.String getName()>
<com.google.android.material.appbar.ViewOffsetBehavior: int getLeftAndRightOffset()>
<com.google.android.gms.internal.measurement.zzcp: long zzb()>
<com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void <init>(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)>
<com.google.android.gms.internal.auth.zzaw: void <init>(com.google.android.gms.auth.api.proxy.ProxyResponse)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel accountsListViewModel()>
<com.google.android.gms.measurement.internal.zzhn: void zzN(android.os.Bundle,long)>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>
<com.airbnb.lottie.LottieDrawable: void setScaleType(android.widget.ImageView$ScaleType)>
<android.view.ViewGroup: void getDrawingRect(android.graphics.Rect)>
<androidx.work.Constraints$Builder: void <init>()>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.storage.AuthenticatorMfaSdkStorage authenticatorMfaSdkStorage()>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$Settable: void getProperties(java.util.Map)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer newAddImageTransformMetaDataProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.internal.auth-api-phone.zzj: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzX(boolean)>
<com.facebook.yoga.YogaDisplay: void <init>(java.lang.String,int,int)>
<com.google.android.gms.internal.measurement.zzjh: com.google.android.gms.internal.measurement.zzix zzb()>
<com.google.android.gms.location.GeofencingClient: void <init>(android.content.Context)>
<com.google.android.gms.measurement.internal.zzae: void zza(com.google.android.gms.measurement.internal.zzad)>
<javax.inject.Provider: java.lang.Object get()>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: void postProcessEvent(java.lang.Object)>
<java.io.EOFException: java.lang.String getLocalizedMessage()>
<com.google.android.gms.maps.model.MarkerOptions: boolean isDraggable()>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcDenySessionResult$AadServiceFailure: com.microsoft.authenticator.core.protocol.exception.GenericServiceException getException()>
<com.google.android.gms.common.api.internal.zap: void zab(com.google.android.gms.common.ConnectionResult,int)>
<com.google.android.gms.internal.measurement.zzdb: int zzb()>
<com.google.android.gms.dynamite.zzn: void <init>()>
<ch.qos.logback.classic.jul.JULHelper: java.util.logging.Logger asJULLogger(java.lang.String)>
<com.google.android.gms.internal.measurement.zzp: void getGmpAppId(com.google.android.gms.internal.measurement.zzs)>
<com.facebook.react.ReactInstanceManager: void moveToBeforeResumeLifecycleState()>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int onMessageReceive(android.content.Context,com.google.android.gms.cloudmessaging.CloudMessage)>
<com.facebook.react.views.slider.ReactSlidingCompleteEvent: void <init>(int,double)>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()>
<com.azure.authenticator.MainNavDirections: androidx.navigation.NavDirections toViewLogsFragment()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_Factory: void <init>(javax.inject.Provider)>
<com.google.android.gms.ads.identifier.zzb: void <init>(android.content.Context)>
<com.adjust.sdk.ActivityHandler: void access$800(com.adjust.sdk.ActivityHandler)>
<com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig: void <init>(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1)>
<android.view.Window: android.view.View getDecorView()>
<com.airbnb.lottie.model.layer.BaseLayer: void setOutlineMasksAndMattes(boolean)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newEncodedCacheMultiplexToTranscodeSequence(com.facebook.imagepipeline.producers.Producer)>
<com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshManager: void <init>(com.azure.authenticator.jobs.DeferrableWorkerUtils,com.microsoft.brooklyn.module.persistence.AppIdDomainStorage)>
<com.google.android.gms.internal.measurement.zzbr: void zzV(java.lang.Exception,boolean,boolean)>
<com.facebook.react.animated.DecayAnimation: void resetConfig(com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.maps.StreetViewPanoramaView$zza: void getStreetViewPanoramaAsync(com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.google.android.material.card.MaterialCardViewHelper$1: void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int)>
<com.google.android.gms.measurement.internal.zzaf: java.lang.Boolean zzo(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: void zzap(com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)>
<com.facebook.common.executors.CallerThreadExecutor: com.facebook.common.executors.CallerThreadExecutor getInstance()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.common.webp.WebpBitmapFactory access$300(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.dynamic.RemoteCreator$RemoteCreatorException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.concurrent.Semaphore: int drainPermits()>
<com.google.android.gms.internal.measurement.zzlg: boolean zza()>
<java.lang.Math: int abs(int)>
<com.google.android.material.chip.ChipDrawable: void setChipCornerRadiusResource(int)>
<kotlin.coroutines.SafeContinuation: void <init>(kotlin.coroutines.Continuation)>
<com.google.android.gms.common.server.response.FastJsonResponse: void setStringsInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.google.android.gms.maps.model.zza: void <init>()>
<com.facebook.react.modules.core.ReactChoreographer: void maybeRemoveFrameCallback()>
<com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener createInternal(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener)>
<com.google.android.gms.internal.measurement.zzp: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)>
<com.microsoft.authenticator.mfasdk.account.entities.AccountCapability: boolean isTotp()>
<com.google.android.gms.common.zac: void <init>(com.google.android.gms.common.GoogleApiAvailability,android.content.Context)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getManufacturer()>
<com.google.android.gms.measurement.internal.zzhe: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference)>
<com.google.android.material.datepicker.MaterialCalendar$4: void <init>(com.google.android.material.datepicker.MaterialCalendar)>
<com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onInflate(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle)>
<com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$enableBrowserAccess(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.google.android.gms.internal.measurement.zzji: int zze(java.lang.Object)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: boolean access$000(android.text.Editable)>
<android.widget.ImageView: void <init>(android.content.Context)>
<com.google.android.gms.common.api.internal.zar: void <init>(com.google.android.gms.common.api.internal.BasePendingResult,com.google.android.gms.common.api.internal.zaq)>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart: void <init>()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap access$000(com.facebook.react.uimanager.NativeViewHierarchyManager)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.sdk.AutomationSpecClient access$6200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void stopAnimation(int)>
<com.facebook.react.modules.storage.AsyncLocalStorageUtil: void deepMergeInto(org.json.JSONObject,org.json.JSONObject)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void access$200(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource)>
<com.google.android.gms.measurement.internal.zzjo: boolean zzd(boolean,boolean,long)>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzc()>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onDiskCacheMiss()>
<com.google.crypto.tink.shaded.protobuf.ByteString: com.google.crypto.tink.shaded.protobuf.ByteString copyFrom(byte[])>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
<com.azure.authenticator.databinding.FragmentSharedModeBinding: android.widget.LinearLayout getRoot()>
<com.google.crypto.tink.KeyTypeManager$KeyFactory: void validateKeyFormat(com.google.crypto.tink.shaded.protobuf.MessageLite)>
<java.util.PriorityQueue: boolean remove(java.lang.Object)>
<com.google.android.material.shape.ShapePath$PathArcOperation: float getRight()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.android.material.textfield.TextInputLayout: void removePlaceholderTextView()>
<com.facebook.react.views.image.MultiPostprocessor: com.facebook.imagepipeline.request.Postprocessor 'from'(java.util.List)>
<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>
<com.google.android.gms.measurement.internal.zzai: boolean zzH(java.lang.String,java.lang.Long,long,com.google.android.gms.internal.measurement.zzdb)>
<android.widget.HorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)>
<ch.qos.logback.core.rolling.helper.Compressor: void compress(java.lang.String,java.lang.String,java.lang.String)>
<com.evernote.android.job.JobStorage: java.util.Set access$100(com.evernote.android.job.JobStorage)>
<androidx.core.os.TraceCompat: void endSection()>
<ch.qos.logback.core.rolling.helper.FileFinder: void <init>(ch.qos.logback.core.rolling.helper.FileProvider)>
<com.facebook.cache.disk.DiskCacheConfig$Builder$1: void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: void stop()>
<com.google.android.gms.common.api.PendingResult$StatusListener: void onComplete(com.google.android.gms.common.api.Status)>
<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>
<androidx.appcompat.app.AppCompatActivity: void onContentChanged()>
<com.google.android.gms.measurement.internal.zzeb: void <init>(com.google.android.gms.measurement.internal.zzec,android.content.Context,java.lang.String)>
<com.evernote.android.job.JobRequest: void <init>(com.evernote.android.job.JobRequest$Builder,com.evernote.android.job.JobRequest$1)>
<com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.navigation.InterModuleNavigator interModuleNavigator()>
<com.facebook.react.views.text.TextTransform: void <init>(java.lang.String,int)>
<com.facebook.react.views.view.ReactViewManager: void <init>()>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>
<android.view.ViewStructure: void setChildCount(int)>
<com.google.android.gms.internal.auth.zzas: void <init>(com.google.android.gms.internal.auth.zzar,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.proxy.ProxyRequest)>
<ch.qos.logback.core.PropertyDefinerBase: void <init>()>
<com.facebook.imagepipeline.memory.FlexByteArrayPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManager$ReactContextInitParams access$1300(com.facebook.react.ReactInstanceManager)>
<com.google.crypto.tink.Aead: byte[] decrypt(byte[],byte[])>
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener: void <init>(com.google.android.material.tabs.TabLayout)>
<org.slf4j.event.LoggingEvent: org.slf4j.event.Level getLevel()>
<com.google.android.gms.common.providers.PooledExecutorsProvider: com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory getInstance()>
<com.google.android.gms.internal.measurement.zzja: void zzT(int,java.lang.Object,com.google.android.gms.internal.measurement.zzha)>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean isShownOrQueued()>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<android.graphics.drawable.Drawable: int getAlpha()>
<com.google.android.material.badge.BadgeDrawable: void loadDefaultStateFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$trackDndSettingState$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.location.zzap: void <init>()>
<com.google.android.gms.internal.measurement.zzp: void setUserId(java.lang.String,long)>
<android.view.TextureView: void setOpaque(boolean)>
<com.azure.authenticator.storage.database.AccountTranslator: com.azure.authenticator.accounts.GenericAccount extractAccountGeneric$app_productionRelease(com.azure.authenticator.storage.database.DbAccount)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$900(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.internal.measurement.zzja: int zzO(int)>
<android.widget.ScrollView: boolean awakenScrollBars()>
<android.webkit.WebView: void setVisibility(int)>
<androidx.cardview.widget.CardView: void setMaxCardElevation(float)>
<com.google.android.gms.internal.auth.zzaa: void <init>(android.os.IBinder)>
<com.facebook.react.views.drawer.events.DrawerStateChangedEvent: java.lang.String getEventName()>
<com.facebook.react.views.text.TextInlineImageSpan: void onStartTemporaryDetach()>
<android.widget.LinearLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig zzc(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>
<com.fasterxml.jackson.core.JsonParser: void <init>(int)>
<androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)>
<com.facebook.soloader.SoLoader$Api14Utils: java.lang.String getClassLoaderLdLoadLibrary()>
<android.media.ExifInterface: boolean hasThumbnail()>
<android.content.SharedPreferences: int getInt(java.lang.String,int)>
<com.microsoft.authenticator.authentication.aad.abstraction.AdalTokenRefreshManager: void <init>(android.content.Context,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase,com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager)>
<java.lang.String: java.lang.String trim()>
<androidx.appcompat.widget.SwitchCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.material.color.MaterialColors: int getColor(android.view.View,int)>
<com.facebook.imagepipeline.common.ResizeOptions: void <init>(int,int,float)>
<ch.qos.logback.core.pattern.util.IEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean _skipYAMLComment()>
<com.azure.authenticator.storage.database.AccountWriter_Factory: com.azure.authenticator.storage.database.AccountWriter get()>
<com.google.android.gms.internal.location.zzam: com.google.android.gms.location.LocationAvailability zzs(java.lang.String)>
<com.azure.authenticator.storage.Storage: void writeInvalidDosPreventer(boolean)>
<org.json.JSONArray: org.json.JSONArray put(int,long)>
<ch.qos.logback.core.rolling.RollingPolicyBase: boolean isStarted()>
<androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<android.graphics.drawable.Drawable: int[] getState()>
<com.google.android.datatransport.runtime.TransportImpl$$Lambda$1: com.google.android.datatransport.TransportScheduleCallback lambdaFactory$()>
<com.google.android.gms.internal.auth-api.zzal: void <init>(android.os.IBinder)>
<androidx.fragment.app.Fragment: void onStart()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void injectTelemetryManager(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.internal.measurement.zzfm: void <init>()>
<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<com.facebook.react.ReactInstanceManager$5: void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)>
<com.google.android.gms.internal.measurement.zzej: boolean zza()>
<com.facebook.react.modules.network.CookieJarContainer: void removeCookieJar()>
<com.google.android.gms.auth.api.accounttransfer.zzk: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzc)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzA(com.google.android.gms.common.AccountPicker$AccountChooserOptions,java.lang.String)>
<java.util.Calendar: void set(int,int,int)>
<com.facebook.react.uimanager.ShadowNodeRegistry: void addNode(com.facebook.react.uimanager.ReactShadowNode)>
<com.facebook.react.views.common.ContextUtils: java.lang.Object findContextOfType(android.content.Context,java.lang.Class)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: boolean access$isUserSignedIn(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<com.airbnb.lottie.utils.BaseLottieAnimator: void notifyEnd(boolean)>
<com.google.android.gms.internal.maps.zzc: void writeBoolean(android.os.Parcel,boolean)>
<android.widget.EditText: boolean post(java.lang.Runnable)>
<android.view.MotionEvent: float getY(int)>
<com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()>
<com.google.android.material.shape.CornerTreatment: void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize)>
<com.google.android.gms.signin.zae: void zaa(com.google.android.gms.signin.internal.zae)>
<java.io.RandomAccessFile: void write(byte[])>
<com.google.android.gms.common.server.response.FastJsonResponse: void addConcreteTypeArrayInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.azure.authenticator.accounts.GenericAccount: boolean isPartiallyRestored()>
<com.azure.authenticator.databinding.ImportPasswordBannerBinding: com.azure.authenticator.databinding.ImportPasswordBannerBinding bind(android.view.View)>
<com.google.android.gms.internal.measurement.zzby: java.lang.String zzh()>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()>
<com.google.android.material.color.MaterialColors: int layer(int,int,float)>
<com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String getEventName()>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
<ch.qos.logback.core.Context: void putObject(java.lang.String,java.lang.Object)>
<com.facebook.imagepipeline.memory.BitmapCounter: int getMaxCount()>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType: com.azure.authenticator.notifications.AbstractNotification$NotificationType valueOf(java.lang.String)>
<com.azure.authenticator.databinding.PasswordFabOptionBottomSheetBinding: com.azure.authenticator.databinding.PasswordFabOptionBottomSheetBinding bind(android.view.View)>
<ch.qos.logback.core.net.SyslogAppenderBase: int getPort()>
<com.fasterxml.jackson.core.io.IOContext: byte[] allocReadIOBuffer()>
<com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInSetupUseCase: void <init>(android.content.Context,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.authentication.aad.businessLogic.TokenParseUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase,com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase,com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager,com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager,com.microsoft.authenticator.core.telemetry.TelemetryManager,com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase)>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean doParseMoreData(java.io.InputStream)>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void addAsFileToWatch(java.net.URL)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)>
<com.facebook.react.views.art.ARTGroupShadowNode: android.graphics.RectF createClipping(float[])>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>
<com.google.android.material.chip.ChipDrawable: void drawText(android.graphics.Canvas,android.graphics.Rect)>
<com.google.android.gms.internal.measurement.zzig: java.lang.String zzd(int)>
<com.facebook.imagepipeline.cache.MemoryCacheParams: void <init>(int,int,int,int,int,long)>
<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName 'from'(java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$500(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)>
<com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,boolean)>
<com.google.android.gms.measurement.internal.zzz: void <init>(android.content.Context)>
<com.facebook.imagepipeline.memory.PoolConfig: void <init>(com.facebook.imagepipeline.memory.PoolConfig$Builder,com.facebook.imagepipeline.memory.PoolConfig$1)>
<com.facebook.imagepipeline.animated.factory.AnimatedFactory: com.facebook.imagepipeline.decoder.ImageDecoder getGifDecoder(android.graphics.Bitmap$Config)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<com.google.android.gms.internal.measurement.zzgu: void <init>(byte[],int,int,boolean,com.google.android.gms.internal.measurement.zzgt)>
<com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<java.io.DataInput: byte readByte()>
<com.google.android.gms.measurement.internal.zzho: java.lang.String zzi()>
<com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zzh(int)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field forStrings(java.lang.String,int)>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int)>
<com.google.android.gms.internal.auth-api.zzai: void zzc(com.google.android.gms.internal.auth-api.zzaa,com.google.android.gms.auth.api.identity.BeginSignInRequest)>
<android.widget.SeekBar: void setStateListAnimator(android.animation.StateListAnimator)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode$Companion: void <init>()>
<com.google.android.gms.auth.api.credentials.zze: void <init>()>
<com.google.android.material.expandable.ExpandableWidgetHelper: void setExpandedComponentIdHint(int)>
<android.widget.LinearLayout: void setClipToPadding(boolean)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onLowMemory()>
<com.facebook.drawee.controller.AbstractDraweeController: void onImageLoadedFromCacheImmediately(java.lang.String,java.lang.Object)>
<com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)>
<com.facebook.imagepipeline.decoder.DecodeException: void <init>(java.lang.String,com.facebook.imagepipeline.image.EncodedImage)>
<com.airbnb.lottie.LottieAnimationView$SavedState$1: com.airbnb.lottie.LottieAnimationView$SavedState[] newArray(int)>
<java.lang.Thread: void join()>
<com.google.android.gms.maps.model.GroundOverlayOptions: com.google.android.gms.maps.model.LatLng getLocation()>
<android.graphics.Matrix: boolean preRotate(float,float,float)>
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManager build()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void displayAutofillDisableBannerIfRequired()>
<com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)>
<android.view.MotionEvent: long getDownTime()>
<com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextAttribute(android.content.Context,int)>
<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>
<com.azure.authenticator.databinding.FragmentImportFromChromeBinding: com.azure.authenticator.databinding.FragmentImportFromChromeBinding bind(android.view.View)>
<ch.qos.logback.core.pattern.parser.Node: java.lang.Object getValue()>
<com.google.android.material.shape.ShapePath$PathArcOperation: void setRight(float)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_Factory: com.azure.authenticator.ui.backup.BackupFlowViewModel newInstance(com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase,com.azure.authenticator.storage.database.AccountStorage)>
<com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void <init>(com.airbnb.lottie.model.animatable.AnimatableTransform)>
<com.google.android.gms.internal.measurement.zzla: long zzC()>
<com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] $values()>
<com.azure.authenticator.databinding.DropdownWithIconBinding: com.azure.authenticator.databinding.DropdownWithIconBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<java.lang.Class: java.lang.String getSimpleName()>
<android.location.Location: long getTime()>
<com.google.android.gms.maps.GoogleMap$zza: void <init>(com.google.android.gms.maps.GoogleMap$CancelableCallback)>
<com.fasterxml.jackson.core.io.JsonStringEncoder: void _illegal(int)>
<com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$checkForIsSharedDeviceStatusAsync$$inlined$let$lambda$1: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>
<androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)>
<ch.qos.logback.core.joran.util.Introspector: ch.qos.logback.core.joran.util.MethodDescriptor[] getMethodDescriptors(java.lang.Class)>
<com.facebook.datasource.SimpleDataSource: com.facebook.datasource.SimpleDataSource create()>
<com.google.android.gms.maps.internal.zzc: void onFinish()>
<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory buildPlatformBitmapFactory(com.facebook.imagepipeline.memory.PoolFactory,com.facebook.imagepipeline.platform.PlatformDecoder,com.facebook.imagepipeline.core.CloseableReferenceFactory)>
<com.google.android.gms.internal.measurement.zzir: int zzf(java.lang.Object)>
<com.google.android.material.ripple.RippleDrawableCompat: void setTintList(android.content.res.ColorStateList)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onStart()>
<com.evernote.android.job.util.JobPreconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzjb: void zzB()>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)>
<com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText)>
<com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener: void <init>()>
<com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse ok(long)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: int getCriticalSectionEnterTimeoutMs()>
<com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)>
<okio.BufferedSource: java.io.InputStream inputStream()>
<com.azure.authenticator.databinding.ImportPasswordLoaderFragmentBinding: com.azure.authenticator.databinding.ImportPasswordLoaderFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<java.util.IdentityHashMap: void <init>()>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void <init>()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult$KeyInvalidated: com.microsoft.ngc.provider.exceptions.UnrecoverableNgcCredentialException getException()>
<android.graphics.Canvas: void translate(float,float)>
<com.google.android.gms.common.server.response.SafeParcelResponse: void zaF(com.google.android.gms.common.server.response.zan,com.google.android.gms.common.server.response.FastJsonResponse)>
<com.google.android.gms.dynamite.zzh: void <init>()>
<com.facebook.react.views.progressbar.ProgressBarShadowNode: void <init>()>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder: com.google.android.gms.auth.api.identity.GetSignInIntentRequest build()>
<com.google.android.gms.internal.measurement.zzdj: void zzaY(com.google.android.gms.internal.measurement.zzdj,java.lang.Iterable)>
<android.graphics.Path: boolean isEmpty()>
<ch.qos.logback.core.util.InterruptUtil: void maskInterruptFlag()>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getRightEdge()>
<android.widget.CheckBox: int getId()>
<com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>
<com.azure.authenticator.ui.MainActivity: void handleBackupRestore(int)>
<com.google.android.gms.maps.OnMapReadyCallback: void onMapReady(com.google.android.gms.maps.GoogleMap)>
<com.github.amlcurran.showcaseview.ShowcaseView$1: void <init>(com.github.amlcurran.showcaseview.ShowcaseView,com.github.amlcurran.showcaseview.targets.Target,boolean)>
<com.google.android.gms.common.api.GoogleApiClient: com.google.android.gms.common.api.Api$Client getClient(com.google.android.gms.common.api.Api$AnyClientKey)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.location.zzr: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$15: void <init>(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,java.util.List,com.google.android.datatransport.runtime.TransportContext)>
<android.widget.EditText: android.text.Editable getText()>
<com.facebook.react.modules.timepicker.TimePickerDialogFragment: android.app.Dialog createDialog(android.os.Bundle,android.content.Context,android.app.TimePickerDialog$OnTimeSetListener)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvideSyncManagerInstanceFactory: com.microsoft.rialto.RialtoSyncManager provideSyncManagerInstance(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.azure.authenticator.databinding.QrScannerBinding: com.azure.authenticator.databinding.QrScannerBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.bottomappbar.BottomAppBar: float access$2300(com.google.android.material.bottomappbar.BottomAppBar)>
<com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.internal.measurement.zzdu: boolean zzh()>
<com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>
<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<java.util.Date: boolean after(java.util.Date)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$902(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.google.android.material.badge.BadgeDrawable: void setMaxCharacterCount(int)>
<com.google.android.material.circularreveal.CircularRevealHelper: void setCircularRevealScrimColor(int)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzh()>
<com.google.android.gms.stats.WakeLock: java.lang.String zza(java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>(com.google.common.base.MoreObjects$1)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$3: void onChanged(com.microsoft.brooklyn.ui.UiEvent)>
<com.google.android.material.timepicker.ClockHandView: void setHandRotationInternal(float,boolean)>
<com.google.android.gms.internal.measurement.zzjd: com.google.android.gms.internal.measurement.zzjc zzb()>
<com.azure.authenticator.storage.database.DbAccount: void setGroupKey(java.lang.String)>
<com.google.android.gms.internal.location.zzay: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.azure.authenticator.ui.backup.BackupFlowActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)>
<android.widget.LinearLayout: void jumpDrawablesToCurrentState()>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: android.content.Intent getMsaProtectionSessionIntent(android.content.Context,com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeDoubleArray(android.os.Parcel,int,double[],boolean)>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: void onAttach(android.app.Activity)>
<okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$handleDenyNgcResult$1: java.lang.Object invokeSuspend(java.lang.Object)>
<ch.qos.logback.core.boolex.EventEvaluator: void setName(java.lang.String)>
<ch.qos.logback.core.joran.GenericConfigurator: void <init>()>
<com.google.android.gms.measurement.internal.zzkd: void zzJ(java.lang.Runnable)>
<android.content.res.ColorStateList: int getDefaultColor()>
<com.adjust.sdk.scheduler.FutureScheduler: java.util.concurrent.ScheduledFuture scheduleFuture(java.lang.Runnable,long)>
<com.adjust.sdk.PackageBuilder: void addMapJson(java.util.Map,java.lang.String,java.util.Map)>
<com.facebook.react.views.text.ReactTextUpdate: float getPaddingBottom()>
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[])>
<com.google.crypto.tink.KeyTypeManager$KeyFactory: com.google.crypto.tink.shaded.protobuf.MessageLite parseKeyFormat(com.google.crypto.tink.shaded.protobuf.ByteString)>
<com.google.android.gms.internal.measurement.zzjz: void <init>(com.google.android.gms.internal.measurement.zzkb,int)>
<com.google.android.gms.measurement.internal.zzhn: void zzx(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)>
<com.google.android.gms.internal.measurement.zznh: void <init>()>
<com.microsoft.onlineid.sts.ExtensionDeviceIdentityManager: void <init>(android.content.Context)>
<com.facebook.drawee.components.DeferredReleaser: void cancelDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$Companion$AadNgcStateInvalidationReason: void <init>(java.lang.String,int)>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<com.google.android.material.button.MaterialButton$OnPressedChangeListener: void onPressedChanged(com.google.android.material.button.MaterialButton,boolean)>
<com.facebook.cache.common.NoOpCacheErrorLogger: void <init>()>
<com.facebook.imageformat.DefaultImageFormatChecker: void <init>()>
<com.azure.authenticator.databinding.DataPlaceholderLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTextProperties getTextProperties()>
<com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: com.google.android.gms.auth.api.credentials.CredentialsOptions build()>
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<ch.qos.logback.classic.android.SQLiteAppender: short computeReferenceMask(ch.qos.logback.classic.spi.ILoggingEvent)>
<android.widget.EditText: void selectAll()>
<com.google.android.gms.auth.AccountChangeEventsRequest: void <init>(int,int,java.lang.String,android.accounts.Account)>
<com.google.android.gms.location.zzab: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.CancellationToken,com.google.android.gms.internal.location.zzba)>
<ch.qos.logback.core.rolling.helper.ArchiveRemover: java.util.concurrent.Future cleanAsynchronously(java.util.Date)>
<com.facebook.imagepipeline.memory.LruBucketsPoolBackend: void <init>()>
<com.google.android.gms.auth.zzd: com.google.android.gms.auth.TokenData zzb(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzjv: void zzX()>
<com.google.android.datatransport.cct.CctTransportBackend: int getPackageVersionCode(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.storage.database.AccountStorage getAccountStorage()>
<com.google.android.gms.internal.common.zzo: void zzb(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showAddMsaAccountDialog$addMsaAccountDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.abstraction.AutoBackupWorker access$300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.azure.authenticator.databinding.AadRemoteNgcSessionDialogBinding: com.azure.authenticator.databinding.AadRemoteNgcSessionDialogBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void <init>(long,long,java.util.Set)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$500(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.internal.common.zzn: boolean hasNext()>
<androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: float getBorderRadius(com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation)>
<android.widget.TextView: void setSingleLine(boolean)>
<com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage$DefaultImpls: java.lang.Object deleteRegistrationPromptInfo(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.internal.service.zam: void <init>(com.google.android.gms.common.internal.TelemetryData)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zab(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.Long,java.lang.String,java.util.Set)>
<androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context)>
<com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.measurement.internal.zzr: boolean zze()>
<com.adjust.sdk.ActivityHandler: boolean checkEventI(com.adjust.sdk.AdjustEvent)>
<com.microsoft.identity.broker4j.workplacejoin.AccountInfo: java.lang.String getDisplayableId()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$12: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getCheckedIconTint()>
<com.google.android.gms.internal.measurement.zzbr: java.lang.String zzA()>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer toByteBuffer()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean isForceCodeForRefreshToken()>
<com.google.common.collect.MapMakerInternalMap$KeyIterator: void <init>(com.google.common.collect.MapMakerInternalMap)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: ch.qos.logback.core.joran.event.SaxEvent getLastEvent()>
<com.google.android.material.shape.MaterialShapeDrawable: void setCornerSize(com.google.android.material.shape.CornerSize)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyError$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.azure.authenticator.storage.database.AppDatabase: com.azure.authenticator.storage.database.AccountDao getAccountDao()>
<com.google.android.gms.internal.tasks.zza: void <init>(android.os.Looper)>
<com.google.android.gms.internal.measurement.zzdi: java.util.List zzj()>
<com.airbnb.lottie.LottieDrawable: java.lang.String getImageAssetsFolder()>
<com.microsoft.authenticator.registration.msa.entities.RegisterMsaNgcKeyStatus$Success: java.lang.String getServerKeyIdentifier()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: boolean shouldRotateUsingExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getError(java.lang.String,java.lang.String)>
<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>
<androidx.core.os.TraceCompat: void beginSection(java.lang.String)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void markAccountForForceReRegistration()>
<com.facebook.react.views.slider.ReactSlidingCompleteEvent: double getValue()>
<com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getFragment(com.google.android.gms.common.api.internal.LifecycleActivity)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: void <init>(int,int,boolean,int,boolean,java.lang.String,int,java.lang.String,com.google.android.gms.common.server.converter.zaa)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zzb()>
<androidx.room.RoomDatabase: boolean isOpen()>
<com.google.android.gms.common.api.internal.zabw: com.google.android.gms.tasks.Task zab()>
<com.google.android.gms.auth.api.signin.GoogleSignIn: boolean hasPermissions(com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.common.api.Scope[])>
<com.google.android.material.snackbar.ContentViewCallback: void animateContentOut(int,int)>
<androidx.lifecycle.MutableLiveData: void <init>(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzkk: int zzJ(java.lang.String,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzx()>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.favicon.FaviconRefreshManager faviconRefreshManager()>
<okhttp3.ResponseBody: okhttp3.MediaType contentType()>
<com.google.android.gms.internal.auth-api.zzu: void <init>()>
<com.facebook.imagepipeline.producers.SwallowResultProducer: void <init>(com.facebook.imagepipeline.producers.Producer)>
<android.widget.Spinner: int getRight()>
<com.airbnb.lottie.manager.FontAssetManager: void setDelegate(com.airbnb.lottie.FontAssetDelegate)>
<com.google.android.gms.location.LocationSettingsStates: boolean isGpsPresent()>
<com.google.android.gms.common.internal.service.zal: void <init>(android.os.IBinder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadWorker access$1500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean)>
<ch.qos.logback.core.android.SystemPropertiesProxy: java.lang.String get(java.lang.String,java.lang.String)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzhr zzo()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getMfaServiceUrl()>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer)>
<com.microsoft.onlineid.sts.exception.StsException: com.microsoft.onlineid.sts.StsErrorCode getCode()>
<android.view.ViewGroup: void onDetachedFromWindow()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: java.lang.Float get(android.view.View)>
<com.airbnb.lottie.model.animatable.AnimatablePathValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.facebook.soloader.SoLoader: java.lang.reflect.Method getNativeLoadRuntimeMethod()>
<com.google.android.gms.dynamite.zzo: int zzh(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean)>
<com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>
<com.facebook.react.views.picker.ReactPickerManager: void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String)>
<com.airbnb.lottie.parser.ShapeTrimPathParser: com.airbnb.lottie.model.content.ShapeTrimPath parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<okhttp3.OkHttpClient: int connectTimeoutMillis()>
<com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.lang.Integer access$3100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectFcmRegistrationManager(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<ch.qos.logback.core.rolling.RollingPolicy: ch.qos.logback.core.rolling.helper.CompressionMode getCompressionMode()>
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
<com.google.android.gms.common.internal.BaseGmsClient: void disconnect()>
<androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getNetworkFetchToEncodedMemoryPrefetchSequence()>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<com.airbnb.lottie.utils.LottieValueAnimator: void setComposition(com.airbnb.lottie.LottieComposition)>
<com.google.android.datatransport.runtime.EventInternal: com.google.android.datatransport.runtime.EventInternal$Builder toBuilder()>
<com.facebook.react.modules.storage.AsyncStorageModule$3: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)>
<com.android.installreferrer.api.InstallReferrerStateListener: void onInstallReferrerSetupFinished(int)>
<com.google.android.gms.internal.measurement.zzic: void <init>(java.lang.String)>
<com.google.android.gms.common.api.internal.zam: void <init>(com.google.android.gms.common.ConnectionResult,int)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions mapToolbarEnabled(boolean)>
<com.azure.authenticator.storage.database.DbAccount: void setCachedPin(java.lang.String)>
<android.widget.ImageButton: void onDetachedFromWindow()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: java.lang.Object handleBackupTicketResult(com.microsoft.authenticator.msa.entities.GetMsaTicketResult,java.lang.String,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow,kotlin.coroutines.Continuation)>
<com.facebook.cache.disk.DefaultDiskStorage: java.lang.Class access$900()>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)>
<com.facebook.drawee.generic.WrappingUtils: com.facebook.drawee.drawable.ScaleTypeDrawable wrapChildWithScaleType(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<com.azure.authenticator.databinding.QrScannerBinding: void <init>(android.widget.RelativeLayout,com.journeyapps.barcodescanner.DecoratedBarcodeView,android.widget.TextView,android.widget.Button)>
<com.facebook.react.uimanager.ReactShadowNode: boolean isVirtual()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onFailure$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.adjust.sdk.ActivityState: void addOrderId(java.lang.String)>
<com.google.android.gms.internal.measurement.zzir: void zzd()>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_24_25$cp()>
<com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum: int getValue()>
<com.google.android.gms.internal.measurement.zzjs: java.util.Set entrySet()>
<com.google.crypto.tink.KeyTypeManager: java.lang.Object getPrimitive(com.google.crypto.tink.shaded.protobuf.MessageLite,java.lang.Class)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_17_18()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptionsExtension: android.os.Bundle toBundle()>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy getRetryPolicy()>
<android.widget.OverScroller: void setFriction(float)>
<com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)>
<ch.qos.logback.core.pattern.PatternLayoutBase: void setPostCompileProcessor(ch.qos.logback.core.pattern.PostCompileProcessor)>
<com.google.android.gms.measurement.internal.zzib: void zzt(android.app.Activity)>
<android.widget.GridView: int getSelectedItemPosition()>
<okhttp3.Headers$Builder: java.lang.String get(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider aadAddAccountViewModelProvider()>
<com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)>
<com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()>
<android.widget.CheckBox: java.lang.CharSequence getText()>
<com.google.android.gms.internal.measurement.zzp: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzs)>
<com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$202(com.facebook.react.devsupport.LogBoxModule,com.facebook.react.devsupport.LogBoxDialog)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: void onCreate()>
<androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()>
<com.facebook.yoga.YogaNode: void setMargin(com.facebook.yoga.YogaEdge,float)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float)>
<com.google.android.material.datepicker.MaterialCalendar$8: void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter)>
<com.google.android.gms.common.zzv: void <init>(java.util.concurrent.Callable,com.google.android.gms.common.zzu)>
<com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder: void onViewDetachedFromWindow()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void release()>
<com.adjust.sdk.ActivityHandler: void teardownAttributionS()>
<com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)>
<com.facebook.react.ReactInstanceManager: void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams)>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker concurrencyLevel(int)>
<com.adjust.sdk.ActivityHandler: void access$600(com.adjust.sdk.ActivityHandler)>
<com.facebook.imagepipeline.producers.ThreadHandoffProducer: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue access$100(com.facebook.imagepipeline.producers.ThreadHandoffProducer)>
<com.azure.authenticator.logging.ExternalLogger: void v(java.lang.String)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float,int)>
<android.widget.Button: void setPaddingRelative(int,int,int,int)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setZoomControlsEnabled(boolean)>
<com.azure.authenticator.databinding.AddAccountInfoDialogBinding: android.widget.ScrollView getRoot()>
<com.facebook.react.uimanager.UIImplementation: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,int,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: void <init>()>
<android.text.Spannable: void removeSpan(java.lang.Object)>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: java.lang.String getOpenIdUrl()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.android.gms.measurement.internal.zzfc: boolean zzi(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$initialize$1: void onChanged(kotlin.Pair)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.ExperimentationManager access$3900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.util.concurrent.TimeUnit: int ordinal()>
<android.view.ViewStructure: void setAutofillId(android.view.autofill.AutofillId)>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zzd(java.lang.String,com.google.android.gms.internal.measurement.zzcj,boolean,java.lang.String,java.util.List,java.lang.String,com.google.android.gms.measurement.internal.zzei)>
<android.widget.HorizontalScrollView: void setMeasuredDimension(int,int)>
<com.evernote.android.job.JobApi: boolean isFlexSupport()>
<com.google.android.gms.measurement.internal.zzhc: void <init>(com.google.android.gms.measurement.internal.zzhn)>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
<com.facebook.imagepipeline.memory.PoolFactory: int getFlexByteArrayPoolMaxNumThreads()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isTiltGesturesEnabled()>
<com.google.android.gms.safetynet.zzh: void <init>(int,boolean)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: boolean isOathEnabled()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: boolean childrenNeedLayout()>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void postIOFailure(java.io.IOException)>
<com.facebook.drawee.view.DraweeHolder: void attachOrDetachController()>
<androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.reflect.Method getRelevantMethod(java.lang.String,ch.qos.logback.core.util.AggregationType)>
<android.widget.GridView: android.view.View findViewById(int)>
<com.google.android.gms.internal.measurement.zzbw: boolean zza()>
<android.graphics.Bitmap: int getHeight()>
<com.facebook.common.webp.WebpSupportStatus: byte[] asciiBytes(java.lang.String)>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.util.Map getExtraMapOnCancellation()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: float getMinZoomLevel()>
<com.google.android.gms.measurement.internal.zzaj: void zza(com.google.android.gms.measurement.internal.zzei,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.google.android.material.card.MaterialCardViewHelper: void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int)>
<java.lang.Throwable: void printStackTrace()>
<com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzes: void <init>(com.google.android.gms.internal.measurement.zzeu,java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount genericAccountToDbAccount(com.azure.authenticator.accounts.GenericAccount)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$processFREArguments$$inlined$navArgs$1: android.os.Bundle invoke()>
<com.evernote.android.job.JobCreatorHolder: void addJobCreator(com.evernote.android.job.JobCreator)>
<com.azure.authenticator.databinding.FragmentImportPasswordsBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.Button,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.ProgressBar,android.widget.TextView,android.widget.RelativeLayout)>
<com.adjust.sdk.ActivityHandler: void checkAfterNewStartI(com.adjust.sdk.SharedPreferencesManager)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Long lambda$persist$1(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal,android.database.sqlite.SQLiteDatabase)>
<com.google.android.material.chip.ChipDrawable: void setChipMinHeightResource(int)>
<com.facebook.common.logging.FLog: void e(java.lang.String,java.lang.String)>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectExperimentationManager(com.azure.authenticator.PhoneFactorApplication,com.microsoft.authenticator.experimentation.ExperimentationManager)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.material.datepicker.MaterialDatePicker: void initHeaderToggle(android.content.Context)>
<com.adjust.sdk.ISdkClickHandler: void sendReftagReferrers()>
<com.facebook.react.modules.camera.CameraRollManager: java.lang.String[] access$200()>
<com.adjust.sdk.AdjustEventFailure: void <init>()>
<com.adjust.sdk.AdjustInstance: boolean checkActivityHandler()>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: java.lang.String getNotificationId()>
<com.google.android.gms.internal.measurement.zzdq: int zzi()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Double readDoubleObject(android.os.Parcel,int)>
<com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: boolean isDownsampleEnabled()>
<com.facebook.jni.DestructorThread$Destructor: void <init>(com.facebook.jni.DestructorThread$1)>
<com.google.android.material.internal.ViewUtils: void removeOnGlobalLayoutListener(android.view.View,android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void settleToStatePendingLayout(int)>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>
<com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: void <init>()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerId(java.lang.String)>
<com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)>
<androidx.fragment.app.FragmentManager: boolean isStateSaved()>
<com.azure.authenticator.databinding.AccountListMenuItemBinding: com.azure.authenticator.databinding.AccountListMenuItemBinding bind(android.view.View)>
<com.google.android.gms.internal.maps.zzag: com.google.android.gms.internal.maps.zzaf zzk(android.os.IBinder)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.facebook.yoga.YogaNode: void setPadding(com.facebook.yoga.YogaEdge,float)>
<com.google.android.gms.internal.measurement.zzja: com.google.android.gms.internal.measurement.zzjx zzf(java.lang.Object)>
<com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)>
<com.google.android.gms.internal.measurement.zzdj: void zzaD(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.google.android.gms.internal.auth.zzab: void <init>(int,java.lang.String,int)>
<com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.accountFullscreen.abstraction.ActionViewHolderFactory actionViewHolderFactory()>
<com.google.android.gms.measurement.internal.zzkd: void zzV(com.google.android.gms.measurement.internal.zzaa)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions: boolean isSupported()>
<android.os.Parcel: void writeByteArray(byte[])>
<com.facebook.datasource.AbstractDataSource: boolean isFinished()>
<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int)>
<android.widget.HorizontalScrollView: int getPaddingRight()>
<com.adjust.sdk.SdkClickHandler: void sendNextSdkClick()>
<com.microsoft.brooklyn.module.sync.AddressesSDKConnector: void <init>(com.microsoft.rialto.RialtoSyncManager)>
<com.google.common.base.CharMatcher$FastMatcher: void <init>()>
<com.google.android.material.drawable.DrawableUtils: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatusIfCountNotOverLimit(ch.qos.logback.core.status.Status)>
<com.google.android.gms.maps.model.zzu: void <init>()>
<com.azure.authenticator.databinding.EmptyHistoryLayoutBinding: com.azure.authenticator.databinding.EmptyHistoryLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.facebook.common.memory.PooledByteBufferInputStream: void <init>(com.facebook.common.memory.PooledByteBuffer)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: boolean hasPartiallyRestoredAccounts()>
<android.database.Cursor: int getType(int)>
<com.facebook.react.animated.NativeAnimatedNodesManager: boolean hasActiveAnimations()>
<com.google.android.gms.internal.measurement.zzkg: void zzb(java.lang.Object,long,byte)>
<com.google.android.material.bottomappbar.BottomAppBar: boolean isFabVisibleOrWillBeShown()>
<androidx.navigation.ActionOnlyNavDirections: void <init>(int)>
<com.airbnb.lottie.parser.KeyframesParser: java.util.List parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,float,com.airbnb.lottie.parser.ValueParser)>
<com.google.android.datatransport.runtime.time.WallTimeClock: void <init>()>
<com.google.android.gms.common.api.internal.zag: void zac(com.google.android.gms.common.api.Status)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.os.Bundle zzh(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.google.android.material.chip.ChipGroup: void access$600(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$2: void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)>
<com.facebook.jni.DestructorThread$DestructorStack: void <init>(com.facebook.jni.DestructorThread$1)>
<com.facebook.react.modules.dialog.AlertFragment: void <init>(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setKeyboardDismissMode(com.facebook.react.views.viewpager.ReactViewPager,java.lang.String)>
<android.widget.CheckBox: int[] onCreateDrawableState(int)>
<com.facebook.imagepipeline.image.EncodedImage: void setSampleSize(int)>
<com.evernote.android.job.v21.PlatformJobService: android.os.Bundle access$100(com.evernote.android.job.v21.PlatformJobService,android.app.job.JobParameters)>
<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildByMilliseconds(double)>
<com.facebook.imagepipeline.image.EncodedImage: void setRotationAngle(int)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
<java.net.HttpURLConnection: java.lang.String getContentType()>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory()>
<java.util.Arrays: void sort(int[])>
<com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
<android.os.HandlerThread: void start()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectMfaSdkHostAppDelegate(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate)>
<java.util.HashMap: int size()>
<com.google.android.gms.maps.internal.zzb: void <init>(android.os.IBinder)>
<com.google.android.gms.common.api.internal.zaav: void <init>(com.google.android.gms.common.api.internal.zaaz,com.google.android.gms.common.api.internal.StatusPendingResult)>
<com.azure.authenticator.storage.Storage: int getNotificationDisabledDialogAppLaunchKey()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$12: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zza(android.content.Context,java.lang.String)>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setCornersRadii(float,float,float,float)>
<com.facebook.react.devsupport.ViewHierarchyUtil: android.util.Pair getDeepestLeaf(android.view.View)>
<java.util.Stack: java.lang.Object get(int)>
<com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzbw zzo()>
<com.google.android.gms.internal.maps.zzk: com.google.android.gms.maps.model.LatLng getPosition()>
<android.view.accessibility.AccessibilityManager: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener)>
<com.google.android.gms.auth.api.accounttransfer.zzh: void <init>(com.google.android.gms.auth.api.accounttransfer.zzg,com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$700(com.google.android.material.snackbar.BaseTransientBottomBar)>
<android.os.SystemClock: long currentThreadTimeMillis()>
<com.google.android.gms.tasks.CancellationToken: com.google.android.gms.tasks.CancellationToken onCanceledRequested(com.google.android.gms.tasks.OnTokenCanceledListener)>
<ch.qos.logback.core.rolling.RollingPolicy: java.lang.String getActiveFileName()>
<com.google.android.datatransport.runtime.synchronization.SynchronizationException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzd)>
<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<com.google.android.gms.tasks.TaskCompletionSource: void <init>()>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zzg(long,com.google.android.gms.internal.measurement.zzcd)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: ch.qos.logback.core.rolling.helper.DateParser access$000(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover)>
<com.google.android.gms.internal.maps.zzt: void setVisible(boolean)>
<android.graphics.RectF: boolean contains(float,float)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: void configureSelfhostControls()>
<java.util.Locale: void <init>(java.lang.String)>
<androidx.collection.LongSparseArray: int size()>
<com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager getAuthMethodsPolicyManager$app_productionRelease()>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig,int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)>
<com.airbnb.lottie.model.content.ShapePath: boolean isHidden()>
<com.airbnb.lottie.model.content.ShapeStroke: float getMiterLimit()>
<com.google.android.material.snackbar.SnackbarManager: void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.content.res.Resources getResources()>
<com.google.android.material.datepicker.DateValidatorPointForward$1: void <init>()>
<com.microsoft.authenticator.logging.powerLift.businesslogic.SendLogsIncidentListener: void <init>(android.app.Activity,java.util.HashMap)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectMfaUpdater(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater)>
<com.fasterxml.jackson.core.json.JsonWriteContext: void appendDesc(java.lang.StringBuilder)>
<com.google.android.gms.internal.auth.zzh: com.google.android.gms.common.api.Status zzc()>
<com.google.android.gms.internal.measurement.zzdj: long zzZ()>
<com.google.android.material.chip.ChipGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.io.InvalidClassException: void <init>(java.lang.String,java.lang.String)>
<com.airbnb.lottie.network.FileExtension: void <init>(java.lang.String,int,java.lang.String)>
<com.microsoft.authenticator.graphclient.entities.Settings: com.microsoft.authenticator.graphclient.entities.EnabledState getDisplayLocationInformationRequiredState()>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void setPrimaryButton(android.app.AlertDialog$Builder)>
<com.azure.authenticator.databinding.FrxSetAsDefaultBinding: com.azure.authenticator.databinding.FrxSetAsDefaultBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(long,boolean)>
<java.util.List: java.lang.Object[] toArray()>
<kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>
<ch.qos.logback.core.spi.AbstractComponentTracker: void genericStaleComponentRemover(java.util.LinkedHashMap,long,ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator)>
<com.google.android.gms.internal.maps.zzk: com.google.android.gms.dynamic.IObjectWrapper zzk()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<org.xml.sax.SAXParseException: int getLineNumber()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)>
<com.google.android.gms.internal.measurement.zzgz: int zzw(int)>
<com.facebook.cache.disk.DiskCacheConfig: android.content.Context getContext()>
<ch.qos.logback.core.spi.AbstractComponentTracker: boolean access$100(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long)>
<com.microsoft.brooklyn.module.service.BrooklynConfigsHandler: void <init>(com.microsoft.brooklyn.module.service.BrooklynConfigsServiceInterface)>
<com.azure.authenticator.jobs.DeferrableWorkerUtils: void <init>(android.content.Context)>
<com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])>
<ch.qos.logback.core.android.SystemPropertiesProxy: ch.qos.logback.core.android.SystemPropertiesProxy getInstance()>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: java.lang.String access$800(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.facebook.imageutils.HeifExifUtil: int getOrientation(java.io.InputStream)>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])>
<com.facebook.react.views.drawer.events.DrawerOpenedEvent: java.lang.String getEventName()>
<com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)>
<com.azure.authenticator.storage.ImageStorage: boolean writeFile(android.graphics.Bitmap,java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueConfigureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<com.adjust.sdk.ActivityHandler: void access$1600(com.adjust.sdk.ActivityHandler,java.lang.String,long,long)>
<com.google.android.material.ripple.RippleDrawableCompat: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.facebook.react.animated.StyleAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void animateCameraWithDurationAndCallback(com.google.android.gms.dynamic.IObjectWrapper,int,com.google.android.gms.maps.internal.zzc)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.facebook.react.modules.image.ImageLoaderModule$4: void doInBackgroundGuarded(java.lang.Void[])>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$200(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineConfig$1)>
<com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)>
<com.airbnb.lottie.model.layer.CompositionLayer: void setProgress(float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$2: com.microsoft.authenticator.backup.abstraction.AutoBackupWorker create(android.content.Context,androidx.work.WorkerParameters)>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.abstraction.SaveRequestFormHandlerFactory saveRequestFormHandlerFactory()>
<com.google.android.gms.auth.account.zze: void <init>(android.os.IBinder)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>
<com.facebook.react.ReactActivityDelegate: boolean onKeyLongPress(int,android.view.KeyEvent)>
<com.google.android.material.navigation.NavigationBarItemView: void setItemBackground(int)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient$Info: void <init>(java.lang.String,boolean)>
<com.google.android.gms.common.server.zaa: void <init>()>
<ch.qos.logback.core.ContextBase: void reset()>
<com.azure.authenticator.ui.RootActivityBase: void onResume()>
<com.google.android.gms.common.util.IOUtils: byte[] readInputStreamFully(java.io.InputStream,boolean)>
<com.google.android.gms.internal.location.zzbo: java.lang.Object zza(int)>
<com.google.android.gms.dynamite.DynamiteModule: void zze(java.lang.ClassLoader)>
<com.google.android.gms.common.internal.IAccountAccessor$Stub: com.google.android.gms.common.internal.IAccountAccessor asInterface(android.os.IBinder)>
<com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>
<com.google.android.gms.common.internal.zzs: android.content.Intent zza(java.lang.String)>
<com.google.android.gms.measurement.internal.zzkd: void zzac(com.google.android.gms.internal.measurement.zzda,int,java.lang.String)>
<com.google.android.material.resources.TextAppearance: void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: short readShort(android.os.Parcel,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6: void set(android.view.View,java.lang.Float)>
<com.facebook.react.uimanager.ReactClippingViewGroup: boolean getRemoveClippedSubviews()>
<com.google.android.gms.auth.api.accounttransfer.zzc: void <init>()>
<com.facebook.yoga.YogaNode: void setAlignSelf(com.facebook.yoga.YogaAlign)>
<com.facebook.soloader.DirectorySoSource: java.lang.String[] getDependencies(java.io.File)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void <init>()>
<android.widget.HorizontalScrollView: void postInvalidateOnAnimation()>
<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptionsExtension: int getExtensionType()>
<com.google.android.gms.measurement.internal.zzcq: void <init>()>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getPoints()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setBorderBottomLeftRadius(android.view.View,float)>
<com.adjust.sdk.ActivityHandler: void addSessionCallbackParameterI(java.lang.String,java.lang.String)>
<com.adjust.sdk.AdjustAttribution: void <init>()>
<com.google.android.gms.measurement.internal.zzkk: android.os.Bundle zzF(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean)>
<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: void <init>()>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateHalfExpandedOffset()>
<com.google.android.gms.internal.measurement.zzgs: int zzn(int,int,int)>
<okhttp3.WebSocket: boolean send(okio.ByteString)>
<com.google.android.a.c: void b(android.os.Parcel,android.os.Parcelable)>
<android.webkit.WebViewClient: void <init>()>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzgk: void <init>()>
<com.google.android.material.navigation.NavigationBarMenuView: void setLabelVisibilityMode(int)>
<java.lang.String: char charAt(int)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzB(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.react.views.text.ReactTextView: void setBorderColor(int,float,float)>
<android.widget.EditText: void setImeOptions(int)>
<com.google.android.gms.internal.maps.zzc: void zzb(android.os.Parcel,android.os.Parcelable)>
<com.facebook.imagepipeline.cache.BitmapMemoryCacheKey: void <init>(java.lang.String,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ImageDecodeOptions,com.facebook.cache.common.CacheKey,java.lang.String,java.lang.Object)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>
<com.airbnb.lottie.animation.keyframe.ScaleKeyframeAnimation: com.airbnb.lottie.value.ScaleXY getValue(com.airbnb.lottie.value.Keyframe,float)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)>
<com.google.android.gms.common.internal.ClientSettings: java.util.Set getRequiredScopes()>
<com.google.android.gms.common.api.internal.zaar: android.content.Context zai(com.google.android.gms.common.api.internal.zaar)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.facebook.imagepipeline.producers.MultiplexProducer: void <init>(com.facebook.imagepipeline.producers.Producer)>
<androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>
<com.azure.authenticator.databinding.FragmentAddressListBinding: com.azure.authenticator.databinding.FragmentAddressListBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.measurement.internal.zzid: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp,boolean,com.google.android.gms.measurement.internal.zzkg)>
<com.facebook.imagepipeline.platform.PlatformDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: androidx.work.ForegroundInfo createForegroundInfo(com.microsoft.authenticator.authentication.msa.entities.MsaSession,com.azure.authenticator.notifications.AbstractNotification$Action)>
<com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList getItemTextColor()>
<ch.qos.logback.core.pattern.CompositeConverter: java.lang.String transform(java.lang.Object,java.lang.String)>
<com.google.android.gms.measurement.internal.zzg: boolean zzaf()>
<com.facebook.react.ReactRootView: java.lang.String getJSModuleName()>
<com.facebook.common.internal.Supplier: java.lang.Object get()>
<com.google.common.collect.AbstractIndexedListIterator: void <init>(int,int)>
<ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.security.SecureRandom createSecureRandom()>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void handleMsaSessionResult(com.microsoft.authenticator.authentication.msa.entities.MsaOperationResult,com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType)>
<com.google.android.gms.maps.MapFragment: void <init>()>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()>
<android.widget.Spinner: boolean post(java.lang.Runnable)>
<com.facebook.cache.disk.DiskStorageCache: void updateFileCacheSizeLimit()>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.measurement.internal.zzai: void zzJ(java.lang.String,java.util.List)>
<android.widget.ImageView: int getVisibility()>
<com.adjust.sdk.Adjust: void onPause()>
<com.google.android.gms.internal.measurement.zzv: void zzd(java.lang.String,java.lang.String,android.os.Bundle,long)>
<com.google.android.gms.internal.base.zao: com.google.android.gms.internal.base.zal zaa()>
<com.airbnb.lottie.utils.LottieValueAnimator: float getFrame()>
<com.google.android.gms.tasks.zzk: void <init>(com.google.android.gms.tasks.zzl,com.google.android.gms.tasks.Task)>
<com.facebook.imagepipeline.producers.PostprocessorProducer: void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,java.util.concurrent.Executor)>
<com.google.android.material.circularreveal.CircularRevealCompat$1: void <init>(com.google.android.material.circularreveal.CircularRevealWidget)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabledDuringRotateOrZoom(boolean)>
<com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onSaveInstanceState(android.os.Bundle)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper generatePasswordInfoHelper()>
<android.widget.ScrollView: int getScrollX()>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: android.content.Context access$getContext$p(com.azure.authenticator.ui.fragment.main.SettingsViewModel)>
<com.facebook.react.fabric.mounting.MountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)>
<android.text.SpannableString: int length()>
<com.azure.authenticator.ui.backup.BackupFlowActivity_MembersInjector: void injectAutoBackupManager(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.backup.abstraction.AutoBackupManager)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: android.app.AlertDialog buildDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.view.View)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: java.lang.Object updateForegroundInfoWithErrorAndDelay$default(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker,androidx.work.ForegroundInfo,int,java.lang.String,kotlin.coroutines.Continuation,int,java.lang.Object)>
<com.facebook.imagepipeline.producers.LocalFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(java.io.InputStream,int)>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd: void <init>()>
<com.adjust.sdk.SessionResponseData: com.adjust.sdk.AdjustSessionFailure getFailureResponseData()>
<com.azure.authenticator.storage.database.migration.Migration10To11: void <init>()>
<com.microsoft.brooklyn.ui.address.AddressAddEditViewModel: void <init>(com.microsoft.brooklyn.module.repository.AddressesRepository)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchToken(java.lang.String,int)>
<com.google.android.gms.internal.location.zzba: com.google.android.gms.internal.location.zzba zzb(long)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: boolean access$602(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,boolean)>
<com.google.android.material.datepicker.DaysOfWeekAdapter: java.lang.Integer getItem(int)>
<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>
<com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder enableTls12OnPreLollipop(okhttp3.OkHttpClient$Builder)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<java.util.Map$Entry: java.lang.Object getValue()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd()>
<com.google.common.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setSourceExtension(byte[])>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaA(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.math.BigDecimal)>
<com.google.android.material.transformation.FabTransformationBehavior: float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float)>
<android.content.Intent: java.lang.String getAction()>
<java.io.InputStream: void close()>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.android.gms.common.api.internal.zaci: void <init>(com.google.android.gms.common.api.internal.RegistrationMethods$Builder,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<com.google.crypto.tink.Util: void validateKey(com.google.crypto.tink.proto.Keyset$Key)>
<com.google.android.gms.internal.measurement.zzjk: int zzv(int,java.util.List)>
<com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>
<com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>
<com.facebook.react.ViewManagerOnDemandReactPackage: com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)>
<com.facebook.react.fabric.mounting.mountitems.MountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)>
<com.google.android.gms.internal.measurement.zzgc: boolean equals(java.lang.Object)>
<com.google.android.gms.common.api.GoogleApi: java.lang.String zaf(java.lang.Object)>
<com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext,int)>
<com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<androidx.core.view.MarginLayoutParamsCompat: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)>
<com.google.android.gms.internal.maps.zzk: boolean zzb(com.google.android.gms.internal.maps.zzk)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onResume()>
<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.authentication.CredentialsAutofillAuthActivity injectCredentialsAutofillAuthActivity2(com.microsoft.brooklyn.module.autofill.authentication.CredentialsAutofillAuthActivity)>
<com.azure.authenticator.ui.dialog.AppDialogFragments: void showUpgradeInfoDialogIfNecessary()>
<com.facebook.react.uimanager.ReactStylesDiffMap: float getFloat(java.lang.String,float)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)>
<ch.qos.logback.core.BasicStatusManager: boolean checkForPresence(java.util.List,java.lang.Class)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler: void <init>(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)>
<com.google.android.gms.internal.measurement.zzas: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzm)>
<com.google.android.gms.location.ActivityRecognitionResult: void <init>(java.util.List,long,long,int,android.os.Bundle)>
<ch.qos.logback.classic.android.SQLiteAppender: void insertException(android.database.sqlite.SQLiteStatement,java.lang.String,short,long)>
<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>
<com.microsoft.brooklyn.module.autofill.response.abstraction.SaveDatasetManager: void <init>(com.microsoft.brooklyn.module.autofill.response.abstraction.SaveRequestFormHandlerFactory)>
<android.widget.ScrollView: int getScrollY()>
<android.os.PowerManager$WakeLock: void acquire(long)>
<com.evernote.android.job.JobApi: boolean isSupported(android.content.Context)>
<com.airbnb.lottie.animation.content.GradientStrokeContent: int[] applyDynamicColorsIfNeeded(int[])>
<com.google.android.material.tabs.TabLayout$1: void <init>(com.google.android.material.tabs.TabLayout)>
<com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)>
<com.google.android.material.card.MaterialCardViewHelper: float calculateHorizontalBackgroundPadding()>
<ch.qos.logback.core.net.SocketConnectorBase: void signalConnected()>
<com.adjust.sdk.ActivityHandler: void preLaunchActionsI(java.util.List)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment: com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment setCallerFragmentInfo(java.lang.String)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)>
<com.google.android.gms.measurement.internal.zzfr: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String,java.lang.String,java.lang.String)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void clean(java.util.Date)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment injectAccountFullscreenSettingsFragment2(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment)>
<com.google.common.base.AbstractIterator: java.lang.Object endOfData()>
<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<com.azure.authenticator.databinding.CredentialListRowLayoutBinding: void <init>(android.widget.RelativeLayout,android.widget.ImageView,android.view.View,android.widget.TextView,androidx.cardview.widget.CardView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,androidx.cardview.widget.CardView,android.widget.RelativeLayout,android.widget.TextView)>
<com.facebook.soloader.MergedSoMapping: java.lang.String mapLibName(java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNode: boolean dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: boolean hasActiveTasks()>
<androidx.appcompat.widget.AppCompatButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<ch.qos.logback.classic.Logger: void info(java.lang.String)>
<com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.Class getClassNameViaImplicitRules(java.lang.String,ch.qos.logback.core.util.AggregationType,ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>
<android.content.Intent: android.content.Intent addFlags(int)>
<com.azure.authenticator.storage.database.AccountDao_Impl$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.azure.authenticator.storage.database.DbAccount)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.accountFullscreen.abstraction.AccountActionsAdapter accountActionsAdapter()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.material.navigation.NavigationBarView: int getSelectedItemId()>
<com.facebook.drawee.components.RetryManager: void reset()>
<ch.qos.logback.core.sift.SiftingAppenderBase: void <init>()>
<com.google.android.gms.common.data.BitmapTeleporter: void zaa(java.io.Closeable)>
<com.adjust.sdk.UtilNetworking: java.lang.String getPostDataString(java.util.Map,int)>
<com.google.android.gms.measurement.internal.zzfg: void <init>(com.google.android.gms.measurement.internal.zzfi,java.lang.Runnable,boolean,java.lang.String)>
<androidx.preference.PreferenceGroup: boolean removePreference(androidx.preference.Preference)>
<com.azure.authenticator.notifications.msa.MsaNotification_Factory: com.azure.authenticator.notifications.msa.MsaNotification newInstance(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.onlineid.sdk.extension.SessionManager)>
<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)>
<android.widget.TextView: void setTextColor(int)>
<com.microsoft.identity.broker4j.workplacejoin.AccountInfo: java.lang.String getTenantId()>
<com.google.android.material.chip.Chip: void ensureChipDrawableHasCallback()>
<com.google.android.material.datepicker.MonthAdapter: boolean isFirstInRow(int)>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.util.Map getExtraMapOnFailure(java.lang.Exception)>
<com.google.android.gms.location.ActivityRecognitionResult: boolean hasResult(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzdj: void zzaA(com.google.android.gms.internal.measurement.zzdj,long)>
<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>
<com.microsoft.did.util.exceptions.ExceptionProcessor: void <init>(android.content.Context)>
<com.google.android.material.tabs.TabLayout: void removeTabViewAt(int)>
<com.google.android.material.shape.MaterialShapeDrawable: boolean hasFill()>
<com.google.android.gms.measurement.internal.zzca: void <init>()>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getPhoneAppDetailId()>
<com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.google.android.gms.internal.measurement.zzgy: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzm(java.util.Collection)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: void validate()>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: void <init>(com.facebook.react.uimanager.ViewGroupDrawingOrderHelper)>
<ch.qos.logback.core.util.Loader$1: void <init>()>
<com.google.android.gms.measurement.internal.zzfa: boolean zzb()>
<com.facebook.imagepipeline.memory.PoolFactory: void <init>(com.facebook.imagepipeline.memory.PoolConfig)>
<com.google.android.material.floatingactionbutton.MotionStrategy: void onAnimationCancel()>
<java.util.ArrayDeque: java.lang.Object peekLast()>
<android.animation.ValueAnimator$AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>
<com.fasterxml.jackson.core.base.ParserBase: void close()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: android.content.Intent getIntent()>
<com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)>
<com.microsoft.authenticator.policyChannel.repository.AuthAppStateRepository: void <init>()>
<com.google.android.gms.safetynet.zze: void <init>()>
<com.google.android.gms.measurement.internal.zzdz: java.util.List zzp(java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.facebook.shimmer.ShimmerDrawable: void <init>()>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList asList()>
<com.google.android.gms.internal.location.zzav: void zzd(com.google.android.gms.location.LocationRequest,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzai)>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void <init>(int)>
<com.azure.authenticator.databinding.SendFeedbackBinding: android.widget.ScrollView getRoot()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$generateBackupAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<android.os.Parcel: void enforceInterface(java.lang.String)>
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()>
<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<com.google.android.gms.measurement.internal.zzei: long zzt(com.google.android.gms.measurement.internal.zzei,long)>
<android.graphics.Rect: void <init>(int,int,int,int)>
<com.google.android.gms.internal.location.zzbp: int zzd()>
<com.google.android.gms.internal.measurement.zzcx: void zzm(com.google.android.gms.internal.measurement.zzcx,com.google.android.gms.internal.measurement.zzdq)>
<com.facebook.datasource.AbstractDataSource: boolean setResultInternal(java.lang.Object,boolean)>
<java.util.Scanner: java.lang.String next()>
<com.google.android.gms.internal.measurement.zzdj: long zzo()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier: com.facebook.datasource.DataSource get()>
<android.view.animation.Animation: long getDuration()>
<android.content.res.Resources: float getDimension(int)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String getPattern()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>
<com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Animatable getAnimatable()>
<com.facebook.react.views.drawer.events.DrawerStateChangedEvent: void <init>(int,int)>
<com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()>
<com.google.android.material.bottomsheet.BottomSheetDialog: void cancel()>
<com.adjust.sdk.ActivityHandler$9: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: int access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior)>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: void <init>(ch.qos.logback.core.Context)>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void access$300(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zza(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener access$200()>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: java.net.URL filePathAsURL(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder builder()>
<com.microsoft.authenticator.location.di.LocationModule: void <init>()>
<ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void refreshStartIconDrawableState()>
<com.facebook.react.ReactActivityDelegate: android.app.Activity getPlainActivity()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$11: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)>
<com.microsoft.authenticator.mfasdk.authentication.viewLogic.MfaAuthHiltViewModel: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.MfaSdkManager,com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSessionUseCase,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase,com.microsoft.authenticator.rootdetection.RootDetectionManager,com.microsoft.authenticator.location.LocationManager,com.microsoft.authenticator.mfasdk.authentication.viewLogic.IMfaSdkDeviceGestureManager,com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig,com.microsoft.authenticator.mfasdk.authentication.businessLogic.EntropyUseCase)>
<ch.qos.logback.classic.net.SimpleSocketServer: int parsePortNumber(java.lang.String)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzn()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig access$3800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<ch.qos.logback.classic.joran.action.ConditionalIncludeAction: java.net.URL pushPath(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void addAnimatedEventToView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager access$getAuthMethodsPolicyManager$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setApplicationBuild(java.lang.String)>
<com.facebook.common.file.FileUtils$ParentDirNotFoundException: void <init>(java.lang.String)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void setIsDiscrete()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String slowParseName()>
<android.view.animation.LinearInterpolator: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_20_21()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void onStart()>
<ch.qos.logback.classic.pattern.SyslogStartConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzm(java.lang.String,int,java.lang.String)>
<com.google.android.material.shape.ShapeAppearancePathProvider: float getEdgeCenterForIndex(android.graphics.RectF,int)>
<com.google.android.gms.measurement.internal.zzjb: void zzL(com.google.android.gms.measurement.internal.zzjb)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzq(int)>
<com.fasterxml.jackson.core.JsonGenerator: void writeBoolean(boolean)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setProgressiveRenderingEnabled(boolean)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: java.lang.String has(char[],int,int)>
<okhttp3.Headers: java.lang.String name(int)>
<com.azure.authenticator.databinding.AddMsaActivityLayoutBinding: android.widget.LinearLayout getRoot()>
<com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.disk.EntryEvictionComparatorSupplier getEntryEvictionComparatorSupplier()>
<com.google.android.gms.internal.measurement.zzic: com.google.android.gms.internal.measurement.zzic zzb()>
<com.adjust.sdk.ActivityHandler: void teardownActivityStateS()>
<com.google.crypto.tink.KeyTemplate: com.google.crypto.tink.proto.OutputPrefixType toProto(com.google.crypto.tink.KeyTemplate$OutputPrefixType)>
<ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String getName()>
<com.google.android.gms.internal.location.zzbo: boolean hasPrevious()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_2_7$1: void <init>(int,int)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setUseLineSpacingFromFallbacks(boolean)>
<com.google.android.gms.common.api.internal.RegistrationMethods: void <init>(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod,java.lang.Runnable,com.google.android.gms.common.api.internal.zacd)>
<com.facebook.react.views.text.ReactTextView: void updateView()>
<com.facebook.react.fabric.mounting.LayoutMetricsConversions: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)>
<com.google.android.material.math.MathUtils: float max(float,float,float,float)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zac()>
<com.airbnb.lottie.model.content.GradientStroke: void <init>(java.lang.String,com.airbnb.lottie.model.content.GradientType,com.airbnb.lottie.model.animatable.AnimatableGradientColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.content.ShapeStroke$LineCapType,com.airbnb.lottie.model.content.ShapeStroke$LineJoinType,float,java.util.List,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)>
<com.facebook.datasource.DataSubscriber: void onFailure(com.facebook.datasource.DataSource)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordsViewModel generatePasswordsViewModel()>
<com.google.android.gms.internal.measurement.zzgc: java.lang.Object remove(int)>
<android.content.ComponentName: java.lang.String flattenToString()>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount findMatchingBrokerAccount(com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.gms.internal.measurement.zzcp: boolean zzc()>
<com.adjust.sdk.AttributionHandler$4: void <init>(com.adjust.sdk.AttributionHandler,com.adjust.sdk.SdkClickResponseData)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder$configure$2: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder)>
<com.google.android.datatransport.cct.internal.LogEvent: void <init>()>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2900(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingTaskCallback access$getStoreRatingCallback$p(com.azure.authenticator.ui.dialog.StoreRatingTask)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints()>
<com.microsoft.authenticator.mfasdk.account.entities.AccountCapability: void <init>(com.microsoft.authenticator.mfasdk.account.entities.AccountCapability$AccountCapabilityEnum)>
<com.facebook.react.util.JSStackTrace: java.lang.String format(java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: android.graphics.Paint$Join toPaintJoin()>
<android.widget.CompoundButton: boolean isChecked()>
<com.facebook.react.uimanager.Spacing: float getRaw(int)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipWSOrEnd2()>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.crypto.tink.KeyManagerImpl: java.lang.Object validateKeyAndGetPrimitive(com.google.crypto.tink.shaded.protobuf.MessageLite)>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showUpgradeInfoDialogIfNecessary$upgradeInformationDialogBuilder$2: void <init>(com.azure.authenticator.ui.dialog.AppDialogFragments)>
<ch.qos.logback.core.FileAppender: void setFile(java.lang.String)>
<com.google.android.material.navigation.NavigationBarItemView: void tryRemoveBadgeFromAnchor(android.view.View)>
<com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFullFormat(java.util.Locale)>
<com.airbnb.lottie.model.content.GradientColor: void <init>(float[],int[])>
<com.airbnb.lottie.parser.PathParser: android.graphics.PointF parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<android.app.AlertDialog: void show()>
<com.facebook.cache.disk.DefaultDiskStorage$FileInfo: com.facebook.cache.disk.DefaultDiskStorage$FileInfo fromFile(java.io.File)>
<com.google.android.gms.measurement.internal.zzjm: void zzb(long)>
<com.google.android.gms.internal.measurement.zzjk: void zzE(com.google.android.gms.internal.measurement.zzhf,java.lang.Object,java.lang.Object)>
<com.microsoft.authenticator.core.graphics.DrawableConverter: android.graphics.Bitmap getSizedBitmapFromDrawable(android.util.Size)>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase: void <init>(android.content.Context,com.microsoft.onlineid.sdk.extension.storage.StorageMigrationManager,com.microsoft.onlineid.sdk.extension.SessionManager,com.microsoft.onlineid.sdk.extension.NgcManager,com.azure.authenticator.storage.Storage,com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.material.datepicker.MonthAdapter: void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints)>
<com.azure.authenticator.common.Util$Companion: void <init>()>
<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransition(int)>
<com.evernote.android.job.v14.JobProxy14: void plantOneOffFlexSupport(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void lambda$setSecondaryButton$1$MsaProtectionActivity(android.content.DialogInterface,int)>
<android.widget.EditText: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter: int zab()>
<com.facebook.drawee.view.DraweeHolder: void attachController()>
<com.facebook.imagepipeline.memory.PoolBackend: int getSize(java.lang.Object)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator)>
<com.google.android.material.shape.ShapePath$PathArcOperation: void setStartAngle(float)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_Factory: com.azure.authenticator.ui.authentication.MsaAuthViewModel newInstance(com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.notifications.msa.MsaNotificationActionManager msaNotificationActionManager()>
<com.facebook.systrace.Systrace: void endAsyncSection(long,java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzdu: long zzb()>
<android.os.Bundle: void putInt(java.lang.String,int)>
<dummyMainClass: com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity dummyMainMethod_com_azure_authenticator_ui_fragment_sharedDeviceMode_SharedDeviceModeActivity(android.content.Intent)>
<com.facebook.react.modules.network.ForwardingCookieHandler$4: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.ReactContext,java.lang.Runnable)>
<com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,android.graphics.ColorSpace)>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.common.api.internal.zaar: java.util.Set zap(com.google.android.gms.common.api.internal.zaar)>
<com.google.android.gms.common.api.internal.GoogleApiManager: java.lang.Object zax()>
<ch.qos.logback.classic.LoggerContext: void resetAllListeners()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void configureEnterpriseControls()>
<com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>
<com.google.android.material.button.MaterialButtonHelper: void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.gms.maps.MapFragment$zzb: void zza(com.google.android.gms.maps.MapFragment$zzb,android.app.Activity)>
<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: void <init>()>
<com.google.android.gms.internal.measurement.zznn: void <init>()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<android.widget.ImageButton: int getMeasuredHeight()>
<com.microsoft.authenticator.authentication.msa.entities.MsaSession: com.microsoft.onlineid.sdk.extension.Session getSession()>
<com.google.android.material.textfield.TextInputLayout: int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase$1: void <init>(ch.qos.logback.core.net.server.ServerSocketAppenderBase,java.io.Serializable)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries access$getAccountStorageCustomQueries$p(com.azure.authenticator.ui.fragment.main.SettingsViewModel)>
<com.azure.authenticator.storage.Storage: com.microsoft.authenticator.mfasdk.entities.MfaSdkMacEndpointMap readMacEndpointMap()>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getNgcKeyId()>
<com.facebook.imagepipeline.memory.BasePool: boolean canAllocate(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>
<androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<androidx.fragment.app.FragmentActivity: void onResume()>
<com.facebook.react.modules.debug.FpsDebugFrameCallback$1: void <init>(com.facebook.react.modules.debug.FpsDebugFrameCallback,com.facebook.react.modules.debug.FpsDebugFrameCallback)>
<com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.common.businessLogic.AuthenticatorState authenticatorState()>
<java.net.URI: java.net.URL toURL()>
<android.widget.EditText: void requestLayout()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.google.android.gms.common.server.response.FastJsonResponse: void <init>()>
<com.google.android.material.internal.FlowLayout: int getRowCount()>
<com.google.android.gms.gcm.GcmTaskService: void <init>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean isOrWillBeShown()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)>
<com.google.android.gms.internal.measurement.zzdd: void zzd(com.google.android.gms.internal.measurement.zzdd,long)>
<com.google.common.math.IntMath: boolean isPowerOfTwo(int)>
<com.adjust.sdk.AdjustFactory: void setTimerInterval(long)>
<com.google.android.gms.internal.measurement.zzgd: boolean zza()>
<com.facebook.react.uimanager.annotations.ReactProp: float defaultFloat()>
<com.google.android.gms.common.api.internal.zabq: void <init>()>
<com.google.android.gms.internal.measurement.zzla: long zzi()>
<androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)>
<android.view.MotionEvent: float getRawX()>
<android.media.MediaMetadataRetriever: void release()>
<com.facebook.react.module.model.ReactModuleInfo: boolean needsEagerInit()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment injectAbstractMfaAuthFragment2(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment)>
<com.airbnb.lottie.LottieDrawable: boolean useTextGlyphs()>
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String)>
<com.facebook.react.modules.dialog.AlertFragment: android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener)>
<com.google.android.gms.internal.measurement.zzdj: java.util.List zzf()>
<com.google.android.gms.measurement.internal.zzkk: boolean zzs(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzb: void <init>(com.google.android.gms.measurement.internal.zzd,java.lang.String,long)>
<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void <init>()>
<com.microsoft.authenticator.workaccount.entities.InstallCertificateStatus$Success: boolean isCertInstalled()>
<com.google.android.gms.internal.location.zzbm: int zzb(int,int,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$ActivityC build()>
<ch.qos.logback.core.util.COWArrayList: void refreshCopyIfNecessary()>
<com.google.android.gms.internal.measurement.zzp: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)>
<com.facebook.cache.disk.DiskStorage$Entry: long getTimestamp()>
<com.facebook.imagepipeline.producers.ThumbnailBranchProducer: boolean produceResultsFromThumbnailProducer(int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.android.material.chip.ChipDrawable: void setChipStrokeWidth(float)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getEncryptedCachedPin()>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment_MembersInjector: void injectRegisterMsaAccountManager(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager)>
<com.google.android.gms.internal.measurement.zzif: int zza()>
<com.google.android.gms.internal.measurement.zznu: boolean zza()>
<com.google.android.material.textfield.TextInputLayout: void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)>
<com.fasterxml.jackson.core.util.TextBuffer: void resetWithString(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase access$getWorkplaceJoinUseCase$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.google.android.gms.measurement.internal.zzan: void <init>(com.google.android.gms.measurement.internal.zzfl,java.lang.String,java.lang.String,java.lang.String,long,long,android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzkd: void zzz(com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task: void <init>(com.facebook.react.modules.camera.ImageStoreManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback,com.facebook.react.modules.camera.ImageStoreManager$1)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: float getTargetShadowSize()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzy(long)>
<com.google.crypto.tink.Registry: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.android.gms.common.util.ArrayUtils: void writeStringArray(java.lang.StringBuilder,java.lang.String[])>
<com.google.android.material.datepicker.MaterialCalendar: android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: void zzam(com.google.android.gms.internal.measurement.zzdj,int,com.google.android.gms.internal.measurement.zzdb)>
<com.evernote.android.job.v21.PlatformJobService: com.evernote.android.job.util.JobCat access$000()>
<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean,boolean)>
<com.azure.authenticator.databinding.FrxSetAsDefaultBinding: com.azure.authenticator.databinding.FrxSetAsDefaultBinding bind(android.view.View)>
<com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerIfExists(java.lang.String)>
<com.microsoft.onlineid.sdk.extension.NgcManager: boolean canGenerateHardwareBackedKeyPairSilently()>
<android.widget.HorizontalScrollView: void setFadingEdgeLength(int)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<com.google.android.gms.measurement.internal.zzkk: int zzn(java.lang.String)>
<com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,float,float)>
<com.google.android.gms.internal.measurement.zzkk: void <init>()>
<com.google.android.gms.internal.ads_identifier.zze: boolean zzc()>
<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void cleanUp(com.facebook.react.common.LongArray,long)>
<com.facebook.react.uimanager.ReactShadowNode: boolean shouldNotifyOnLayout()>
<com.google.android.gms.common.api.GoogleApi: void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$$special$$inlined$viewModels$1: androidx.lifecycle.ViewModelProvider$Factory invoke()>
<com.github.amlcurran.showcaseview.ShowcaseView$4: void <init>(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.adjust.sdk.SharedPreferencesManager: long getDeeplinkClickTime()>
<com.facebook.react.views.text.ReactVirtualTextViewManager: void <init>()>
<android.widget.Button: void setActivated(boolean)>
<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec)>
<com.google.android.material.chip.ChipDrawable: void setUseCompatRipple(boolean)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzk(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.action.UserInteractionRequiredAction: void onActionTriggered(android.content.Context)>
<com.google.common.base.CharMatcher$InRange: void <init>(char,char)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult doInBackground(java.lang.Void[])>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean isDropdownPopupActive()>
<com.google.android.gms.internal.measurement.zzkh: boolean zzh(java.lang.Object,long)>
<com.facebook.drawee.drawable.RoundedColorDrawable: boolean getPaintFilterBitmap()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.facebook.drawee.generic.RoundingParams: boolean getRoundAsCircle()>
<com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getEnd()>
<com.facebook.react.uimanager.ReactRoot: int getWidthMeasureSpec()>
<android.text.style.ForegroundColorSpan: void <init>(int)>
<com.google.android.gms.location.zzbe: void <init>()>
<android.app.Activity: android.view.Window getWindow()>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.location.zzbu: void <init>()>
<com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)>
<android.widget.SeekBar: int getProgress()>
<com.google.android.gms.common.zzy: com.google.android.gms.common.zzy zzc(java.util.List)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getHideMotionSpec()>
<com.facebook.soloader.ExoSoSource$ExoUnpacker: void <init>(com.facebook.soloader.ExoSoSource,com.facebook.soloader.UnpackingSoSource)>
<com.google.common.collect.ImmutableMap$SerializedForm: com.google.common.collect.ImmutableMap$Builder makeBuilder(int)>
<com.google.android.gms.internal.common.zzy: void <init>()>
<com.airbnb.lottie.utils.Logger: void warning(java.lang.String,java.lang.Throwable)>
<com.google.common.collect.RegularImmutableMap: void <init>(java.lang.Object,java.lang.Object[],int)>
<com.google.android.gms.common.internal.BaseGmsClient: int getGCoreServiceId()>
<com.google.android.gms.internal.measurement.zzht: int zzg(int)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()>
<com.google.android.gms.location.zzbf: void <init>()>
<com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType[] values()>
<android.content.ClipData$Item: java.lang.CharSequence getText()>
<com.google.android.gms.common.zzk: byte[] zzb()>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateLayout(int,int,int,int,int,int)>
<com.facebook.react.shell.MainReactPackage$1: void <init>(com.facebook.react.shell.MainReactPackage,java.util.Map)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void ensureAtEnd(android.os.Parcel,int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: void setActivityState(com.azure.authenticator.authentication.msa.ui.ActivityState)>
<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()>
<android.widget.GridView: void setNextFocusLeftId(int)>
<com.google.android.gms.location.zzbd: void zzd(android.location.Location)>
<java.lang.Integer: java.lang.String toString(int)>
<com.google.android.material.chip.ChipGroup: int access$700(com.google.android.material.chip.ChipGroup)>
<com.microsoft.onlineid.RequestOptions: com.microsoft.onlineid.RequestOptions setPrefillUsername(java.lang.String)>
<com.fasterxml.jackson.core.io.MergedStream: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int)>
<okio.ByteString: okio.ByteString of(byte[])>
<com.google.android.gms.common.GoogleApiAvailability: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<com.google.android.gms.common.api.internal.zabl: void zaJ()>
<java.util.concurrent.Semaphore: void acquire()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: com.azure.authenticator.authentication.msa.MsaAccountManager getMsaAccountManager$app_productionRelease()>
<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int)>
<com.google.common.base.Splitter$Strategy: java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: com.azure.authenticator.authentication.msa.MsaAccountManager access$getMsaAccountManager$p(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker)>
<com.azure.authenticator.ui.MainActivity: void setOnBackPressedCallback(com.azure.authenticator.ui.MainActivity$OnBackPressedCallback)>
<java.math.BigInteger: void <init>(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>
<com.google.android.gms.internal.measurement.zzkz: long zzh()>
<ch.qos.logback.core.net.SMTPAppenderBase: void fillBuffer(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.StringBuffer)>
<com.facebook.react.modules.i18nmanager.I18nUtil: boolean doLeftAndRightSwapInRTL(android.content.Context)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getMsaAccountWithCid(java.lang.String)>
<com.microsoft.authenticator.features.did.DidAccountAndAuthenticationProvider: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<com.azure.authenticator.accounts.GenericAccount: java.lang.String getDefaultAccountNameFromUsername(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()>
<com.google.android.gms.internal.ads_identifier.zze: java.lang.String getId()>
<com.google.android.gms.measurement.internal.zzaf: com.google.android.gms.measurement.internal.zzaf zzb(android.os.Bundle)>
<android.view.ViewGroup: void addView(android.view.View,int)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzaq(android.content.Context,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: void zzaw(com.google.android.gms.internal.measurement.zzdj,long)>
<com.google.android.gms.measurement.internal.zzaf: java.lang.String zzd()>
<com.google.android.gms.common.server.converter.zae: void <init>()>
<com.google.android.material.button.MaterialButton: void toggle()>
<com.azure.authenticator.storage.MfaSdkAccountTranslator_Factory: com.azure.authenticator.storage.MfaSdkAccountTranslator get()>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setUseDeveloperSupport(boolean)>
<java.util.Stack: java.lang.Object pop()>
<com.google.android.gms.internal.measurement.zzkq: void <init>()>
<javax.net.ssl.SSLSocket: void setWantClientAuth(boolean)>
<com.google.android.gms.measurement.internal.zzfa: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.google.android.datatransport.cct.internal.BatchedLogRequest: java.util.List getLogRequests()>
<com.facebook.react.views.textinput.ReactTextInputShadowNode: void <init>()>
<java.util.concurrent.FutureTask: boolean isCancelled()>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setExpirationDuration(long)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onDetachedFromWindow()>
<ch.qos.logback.core.html.HTMLLayoutBase: void buildHeaderRowForTable(java.lang.StringBuilder)>
<com.google.android.gms.measurement.internal.zzes: boolean zza()>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void lambda$setPrimaryButton$0$MsaProtectionActivity(android.content.DialogInterface,int)>
<com.google.android.gms.internal.measurement.zzkh: void zzs(java.lang.Throwable)>
<ch.qos.logback.core.net.server.RemoteReceiverServerListener: void <init>(java.net.ServerSocket)>
<com.microsoft.authenticator.mfasdk.MfaSdkManager: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthUseCase,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaRegistrationUseCase,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaDeleteRegistrationUseCase,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckManager,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationUseCase,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotification,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaValidateDeviceNotification,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.mfasdk.account.businessLogic.MfaStateUseCase)>
<com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)>
<com.microsoft.did.sdk.util.log.SdkLog$Level: int severity()>
<com.google.android.material.badge.BadgeDrawable: void setVisible(boolean)>
<com.google.android.gms.common.server.response.FastJsonResponse: boolean isPrimitiveFieldSet(java.lang.String)>
<com.google.android.gms.measurement.internal.zzec: android.database.sqlite.SQLiteDatabase zzo()>
<com.google.android.gms.internal.measurement.zzmm: com.google.android.gms.internal.measurement.zzmn zzd()>
<java.util.concurrent.BlockingDeque: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>
<com.evernote.android.job.JobExecutor: java.util.Set getAllJobsForTag(java.lang.String)>
<android.widget.RelativeLayout$LayoutParams: void addRule(int)>
<com.google.android.gms.measurement.internal.zzkd: void zzao(com.google.android.gms.measurement.internal.zzjv)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setUIImplementationProvider(com.facebook.react.uimanager.UIImplementationProvider)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void handleReloadJS()>
<com.facebook.imagepipeline.listener.ForwardingRequestListener: void <init>(com.facebook.imagepipeline.listener.RequestListener[])>
<com.google.android.gms.internal.measurement.zzkz: long zzC()>
<com.google.android.gms.common.zzw: com.google.android.gms.common.zzw zzc(java.util.concurrent.Callable)>
<com.google.android.material.chip.ChipGroup: void access$900(com.google.android.material.chip.ChipGroup,int)>
<android.graphics.Paint: void setARGB(int,int,int,int)>
<com.adjust.sdk.ActivityHandler: void updateStatusI(boolean,java.lang.String,java.lang.String,java.lang.String)>
<android.content.SharedPreferences: boolean contains(java.lang.String)>
<com.facebook.react.jscexecutor.JSCExecutorFactory: java.lang.String toString()>
<com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: java.util.List getEntries()>
<com.google.android.material.textfield.TextInputLayout: void drawHint(android.graphics.Canvas)>
<com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()>
<android.widget.FrameLayout: void setClipToPadding(boolean)>
<com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga zzas(byte[],int,int,com.google.android.gms.internal.measurement.zzhe)>
<androidx.customview.widget.ViewDragHelper$Callback: void <init>()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromRawRes(android.content.Context,int,java.lang.String)>
<com.facebook.react.modules.network.ForwardingCookieHandler$3: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,java.util.List,android.webkit.CookieManager,java.lang.String)>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.view.MotionEvent: void setAction(int)>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>
<com.google.android.gms.measurement.internal.zzjo: void zzc()>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void fetchWithRequest(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback,okhttp3.Request)>
<com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)>
<ch.qos.logback.core.status.OnConsoleStatusListener: void <init>()>
<com.google.android.material.tabs.TabIndicatorInterpolator: android.graphics.RectF calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,int)>
<javax.net.ssl.HttpsURLConnection: java.io.InputStream getErrorStream()>
<com.google.android.gms.maps.internal.zzbd: void zza(com.google.android.gms.internal.maps.zzw)>
<okhttp3.RequestBody: okhttp3.MediaType contentType()>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: java.lang.String getBackupCreateDate()>
<com.adjust.sdk.ActivityHandler: void access$1400(com.adjust.sdk.ActivityHandler,boolean)>
<com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)>
<com.google.android.gms.measurement.internal.zzal: void zzd()>
<ch.qos.logback.core.pattern.parser.TokenStream: void handleLiteralState(char,java.util.List,java.lang.StringBuffer)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: void recordSuccess(java.lang.Iterable)>
<android.widget.CheckBox: void refreshDrawableState()>
<android.text.Layout: boolean isRtlCharAt(int)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _outputSurrogates(int,int)>
<com.google.android.gms.internal.base.zac: void zac(android.os.Parcel,android.os.Parcelable)>
<com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<com.google.android.gms.maps.MapView$zzb: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)>
<com.facebook.react.modules.datepicker.DatePickerDialogModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeChildAt(int)>
<com.google.android.gms.internal.maps.zzw: void setStrokeJointType(int)>
<com.google.android.material.animation.MotionSpec: void <init>()>
<com.google.android.gms.internal.measurement.zzfw: void <init>()>
<com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<ch.qos.logback.core.util.COWArrayList: boolean isFresh()>
<java.lang.Character: boolean isDigit(char)>
<com.microsoft.authenticator.commonuilibrary.ui.AppLockActivity_MembersInjector: void injectDeviceScreenLockConfigChecker(com.microsoft.authenticator.commonuilibrary.ui.AppLockActivity,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
<android.content.SharedPreferences: long getLong(java.lang.String,long)>
<com.google.android.gms.internal.measurement.zzdq: void zzr(com.google.android.gms.internal.measurement.zzdq)>
<com.google.android.gms.measurement.internal.zzaq: void <init>(android.os.Bundle)>
<java.net.URL: java.lang.String getPath()>
<bolts.TaskCompletionSource: boolean trySetCancelled()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: void <init>()>
<com.facebook.soloader.DirectorySoSource: void loadDependencies(java.io.File,int,android.os.StrictMode$ThreadPolicy)>
<com.microsoft.authenticator.workaccount.entities.WorkplaceJoinedStateStatus$Error: com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException getException()>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>
<com.azure.authenticator.storage.Storage: boolean readShowUpgradeInfoDialogKey()>
<com.google.android.gms.measurement.internal.zzkd: android.content.Context zzaw()>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>
<com.google.android.gms.measurement.internal.zzy: java.util.List zzb(java.lang.String,java.util.List,java.util.List,java.lang.Long,java.lang.Long)>
<com.google.android.gms.measurement.internal.zzgw: void <init>(com.google.android.gms.measurement.internal.zzhn,long)>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker getMemoryChunkPoolStatsTracker()>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: android.os.IBinder onBind(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzma: com.google.android.gms.internal.measurement.zzmb zzc()>
<android.view.MotionEvent: float getX(int)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getBottomRightCorner()>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: boolean zzb()>
<com.microsoft.onlineid.AccountManager: void getAllAccounts(android.os.Bundle)>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setSelectedIndicatorHeight(int)>
<com.facebook.imagepipeline.image.EncodedImage: int getSampleSize()>
<com.azure.authenticator.storage.database.DbAccount: int getRestoreCapability()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$8: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>
<com.google.android.gms.common.api.internal.BasePendingResult: void forceFailureUnlessReady(com.google.android.gms.common.api.Status)>
<java.lang.Enum: int hashCode()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.authentication.MsaAuthViewModel msaAuthViewModel()>
<androidx.appcompat.app.ActionBar: void setTitle(java.lang.CharSequence)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2: void <init>(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker,kotlin.coroutines.Continuation)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void <init>(com.facebook.datasource.IncreasingQualityDataSourceSupplier)>
<com.google.android.gms.safetynet.SafetyNetApi$zzb: long getLastScanTimeMs()>
<com.google.android.gms.internal.maps.zzk: void setZIndex(float)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.util.Map zam(java.util.List)>
<com.google.android.material.tabs.TabLayout: void setTabRippleColor(android.content.res.ColorStateList)>
<com.facebook.common.internal.Closeables: void close(java.io.Closeable,boolean)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean shouldDownscaleFrameToDrawableDimensions()>
<android.os.PowerManager$WakeLock: boolean isHeld()>
<com.google.common.collect.Lists: int lastIndexOfImpl(java.util.List,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzcc: void <init>()>
<ch.qos.logback.core.html.HTMLLayoutBase: java.lang.String computeConverterName(ch.qos.logback.core.pattern.Converter)>
<ch.qos.logback.classic.pattern.LineOfCallerConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.yoga.YogaNode: void setAlignItems(com.facebook.yoga.YogaAlign)>
<com.adjust.sdk.ActivityHandler: boolean deleteAttribution(android.content.Context)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void setLayout(ch.qos.logback.core.Layout)>
<okhttp3.Cookie: java.lang.String value()>
<com.azure.authenticator.storage.Storage: boolean readIsOptionalTelemetryEnabled(android.content.Context)>
<com.adjust.sdk.InstallReferrer: java.lang.Object createInstallReferrer(android.content.Context,com.adjust.sdk.InstallReferrerReadListener,com.adjust.sdk.ILogger)>
<ch.qos.logback.classic.Logger: void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void animateViewOut(int)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writePPFieldName(java.lang.String,boolean)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_22_23$1: void <init>(int,int)>
<com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation: void <init>(java.util.List)>
<com.google.android.gms.auth.api.identity.SignInCredential: java.lang.String getGoogleIdToken()>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder message(java.lang.String)>
<com.facebook.react.ReactActivityDelegate: android.os.Bundle getLaunchOptions()>
<com.google.android.gms.auth.api.signin.internal.Storage: void zac()>
<android.widget.ImageButton: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.onlineid.sdk.extension.SessionManager sessionManager()>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getDashOffset()>
<androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)>
<com.adjust.sdk.AttributionHandler: void getAttributionI(long)>
<com.google.android.gms.common.server.converter.zaa: void <init>(com.google.android.gms.common.server.converter.StringToIntConverter)>
<android.media.ExifInterface: byte[] getThumbnail()>
<com.facebook.fbreact.specs.NativeTimePickerAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$702(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: void <init>(java.lang.String,java.io.File,com.facebook.cache.disk.DefaultDiskStorage$1)>
<com.google.android.gms.measurement.internal.zze: void zzg()>
<com.google.android.datatransport.runtime.time.Clock: long getTime()>
<com.google.android.material.snackbar.BaseTransientBottomBar: void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)>
<com.google.android.material.timepicker.ChipTextInputComboView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.facebook.yoga.YogaNode: com.facebook.yoga.YogaValue getWidth()>
<com.google.android.gms.internal.measurement.zzir: com.google.android.gms.internal.measurement.zzir zza()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount createDefault()>
<com.airbnb.lottie.model.animatable.AnimatableTransform: void <init>()>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.lang.Object[])>
<com.google.android.gms.auth.api.credentials.Credential: java.util.List getIdTokens()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeString(android.os.Parcel,int,java.lang.String,boolean)>
<com.evernote.android.job.JobConfig: int getJobIdOffset()>
<com.google.android.datatransport.cct.internal.AutoValue_LogRequest: void <init>(long,long,com.google.android.datatransport.cct.internal.ClientInfo,java.lang.Integer,java.lang.String,java.util.List,com.google.android.datatransport.cct.internal.QosTier,com.google.android.datatransport.cct.internal.AutoValue_LogRequest$1)>
<com.google.common.collect.ForwardingMap: void <init>()>
<com.airbnb.lottie.manager.FontAssetManager: android.graphics.Typeface getTypeface(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdu: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.memory.PoolFactory getPoolFactory()>
<com.google.android.material.textfield.TextInputLayout: void applyBoxAttributes()>
<com.facebook.imagepipeline.producers.DecodeProducer: void <init>(com.facebook.common.memory.ByteArrayPool,java.util.concurrent.Executor,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.producers.Producer,int,com.facebook.imagepipeline.core.CloseableReferenceFactory)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$approveAadNgcSession$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.parser.moshi.JsonReader: void string(okio.BufferedSink,java.lang.String)>
<com.microsoft.authenticator.registration.msa.abstraction.MsaAccountActivityLauncher: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.core.telemetry.TelemetryManager,com.azure.authenticator.authentication.msa.MsaAccountManager)>
<com.google.android.gms.common.server.response.FastParser: char zaw(java.io.BufferedReader)>
<com.google.android.gms.measurement.internal.zzga: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String)>
<com.facebook.react.uimanager.events.EventDispatcher: void access$200(com.facebook.react.uimanager.events.EventDispatcher)>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.facebook.drawee.drawable.FadeDrawable: void finishTransitionImmediately()>
<com.google.android.gms.common.api.internal.zabl: int zaq()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.listener.RequestListener getRequestListener()>
<com.google.android.material.snackbar.BaseTransientBottomBar: void onViewShown()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$showKeyInvalidatedScreen$2: void <init>(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)>
<com.facebook.react.views.viewpager.ReactViewPager$PageChangeListener: void <init>(com.facebook.react.views.viewpager.ReactViewPager)>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setIdentifier(android.view.View,int)>
<com.facebook.react.modules.camera.CameraRollManager: void putBasicNodeInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int)>
<com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()>
<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextVisibility()>
<com.google.common.collect.MapMakerInternalMap$HashIterator: boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.adjust.sdk.RequestHandler: void init(com.adjust.sdk.IActivityHandler,com.adjust.sdk.IPackageHandler)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void startBackup(java.lang.String,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordAutofillViewModel: void <init>(com.microsoft.brooklyn.module.common.dropdown.businesslogic.UsernameDropdownUseCase,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider cardInfoViewModelProvider()>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ImageDecoder access$1100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.airbnb.lottie.LottieAnimationView: void pauseAnimation()>
<java.util.regex.Pattern: java.lang.String quote(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountsCommonUI: void <init>()>
<com.google.android.gms.internal.measurement.zzkv: void <init>()>
<android.database.SQLException: void <init>(java.lang.String)>
<com.google.android.gms.measurement.internal.zzfc: java.util.Map zzr(com.google.android.gms.internal.measurement.zzcp)>
<android.widget.ImageView: void requestLayout()>
<com.facebook.react.views.text.TextAttributeProps: int getJustificationMode(com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: void <init>(android.os.Handler)>
<android.view.MenuItem: void setShowAsAction(int)>
<com.google.android.gms.internal.measurement.zzht: int indexOf(java.lang.Object)>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setAnimating(android.view.View,boolean)>
<android.graphics.Rect: boolean intersects(int,int,int,int)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _handleOddName(int)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>
<com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)>
<com.airbnb.lottie.utils.Utils: void applyTrimPathIfNeeded(android.graphics.Path,com.airbnb.lottie.animation.content.TrimPathContent)>
<ch.qos.logback.core.Layout: java.lang.String getFileFooter()>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper zoomOut()>
<com.google.android.material.card.MaterialCardViewHelper: void setStrokeColor(android.content.res.ColorStateList)>
<com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonParser)>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: void setViews(java.util.List)>
<java.lang.Math: double toDegrees(double)>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path$Direction)>
<androidx.navigation.NavController: androidx.navigation.NavInflater getNavInflater()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzD(com.google.android.gms.common.AccountPicker$AccountChooserOptions,boolean)>
<java.util.ListIterator: void set(java.lang.Object)>
<com.google.android.gms.internal.safetynet.zzr: void <init>(com.google.android.gms.internal.safetynet.zzk,com.google.android.gms.common.api.GoogleApiClient,java.lang.String)>
<com.airbnb.lottie.parser.KeyframeParser: androidx.collection.SparseArrayCompat pathInterpolatorCache()>
<com.google.android.gms.maps.model.LatLngBounds: double zza(double,double)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: androidx.recyclerview.widget.ItemTouchHelper getDragAndDropHelper()>
<ch.qos.logback.core.joran.action.PropertyAction: boolean checkResourceAttributeSanity(org.xml.sax.Attributes)>
<com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)>
<com.google.android.material.tabs.TabLayout: void animateToTab(int)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onBitmapCachePut()>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>
<com.google.common.collect.MapMakerInternalMap$Values: void <init>(com.google.common.collect.MapMakerInternalMap)>
<com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int)>
<ch.qos.logback.core.AppenderBase: boolean isStarted()>
<androidx.appcompat.widget.ListPopupWindow: void dismiss()>
<com.google.android.material.circularreveal.CircularRevealHelper: int getCircularRevealScrimColor()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzz addPolyline(com.google.android.gms.maps.model.PolylineOptions)>
<com.google.android.material.navigation.NavigationBarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.android.material.internal.CollapsingTextHelper: void draw(android.graphics.Canvas)>
<com.google.android.material.appbar.ViewOffsetBehavior: boolean setLeftAndRightOffset(int)>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)>
<com.azure.authenticator.ui.dialog.AppDialogFragments: void showNotificationDisabledDialog(android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener)>
<com.facebook.common.util.UriUtil: java.lang.String getRealPathFromUri(android.content.ContentResolver,android.net.Uri)>
<com.google.android.gms.measurement.internal.zzdv: void <init>(java.lang.String,java.lang.Object,java.lang.Object,com.google.android.gms.measurement.internal.zzdt,com.google.android.gms.measurement.internal.zzds)>
<com.google.android.gms.measurement.internal.zzjv: boolean zzW()>
<com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>
<com.azure.authenticator.jwe.CryptoHelper: byte[] getDecryptedTextWithAes(byte[],byte[],byte[])>
<com.airbnb.lottie.LottieAnimationView: void setImageAssetsFolder(java.lang.String)>
<androidx.appcompat.widget.ListPopupWindow: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzlx: boolean zzb()>
<com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType[] values()>
<com.microsoft.authenticator.core.logging.BaseLogger: void w(java.lang.String)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: java.util.List getAccountsWithPhoneAppDetailIds(java.util.List)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: void <init>(java.lang.Class,java.lang.String)>
<ch.qos.logback.core.AsyncAppenderBase: void put(java.lang.Object)>
<androidx.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: com.azure.authenticator.databinding.ViewLogBinding getBinding()>
<com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()>
<com.microsoft.authenticator.reactnative.modules.AutoFillPackage: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void access$showEnterpriseControlMessage(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,java.lang.String)>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: java.net.URL resourceAsURL(java.lang.String)>
<com.google.android.gms.maps.GoogleMap$OnMapLongClickListener: void onMapLongClick(com.google.android.gms.maps.model.LatLng)>
<android.widget.Button: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.InlineSuggestionUseCase inlineSuggestionUseCase()>
<com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerPosition(int)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getGroupKey()>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>
<com.azure.authenticator.jwe.JweEncryptionManager: byte[] getHmacKey(byte[])>
<com.facebook.common.internal.CountingOutputStream: void <init>(java.io.OutputStream)>
<com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder: void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.decoder.ProgressiveJpegParser,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,int)>
<okhttp3.JavaNetCookieJar: void <init>(java.net.CookieHandler)>
<com.adjust.sdk.Util: java.lang.String getPlayAdId(android.content.Context)>
<com.facebook.react.views.text.ReactTextShadowNode: android.text.TextPaint access$300()>
<android.app.Fragment: void onStop()>
<com.google.android.gms.internal.measurement.zzia: int zzg(byte[])>
<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>
<com.google.android.gms.internal.maps.zzh: void remove()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>
<com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: void <init>(com.facebook.imagepipeline.memory.FlexByteArrayPool)>
<com.google.android.gms.common.api.Batch: boolean zah(com.google.android.gms.common.api.Batch)>
<com.google.android.gms.measurement.internal.zzed: java.lang.String zzh(java.lang.Object[])>
<android.os.Parcel: double readDouble()>
<com.google.android.gms.common.internal.IAccountAccessor: android.accounts.Account zzb()>
<com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: void <init>(com.facebook.react.modules.core.JavaTimerManager)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: int access$900(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.gms.internal.maps.zzw: java.lang.String getId()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase access$3300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$onCreateView$$inlined$apply$lambda$2: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<androidx.room.RoomDatabase: void endTransaction()>
<androidx.recyclerview.widget.RecyclerView$SmoothScroller: void setTargetPosition(int)>
<com.airbnb.lottie.animation.content.ContentGroup: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)>
<com.google.android.gms.common.api.Status: int hashCode()>
<androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)>
<androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzkf: java.util.List zzv(android.os.Bundle[])>
<java.util.zip.GZIPOutputStream: void write(byte[])>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$loadEvents$12(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,java.util.List,com.google.android.datatransport.runtime.TransportContext,android.database.Cursor)>
<com.azure.authenticator.authentication.msa.ui.ActivityState: java.lang.String getProgressDialogTag()>
<com.azure.authenticator.ui.fragment.accounts.AccountsCommonUI$showEditAccountNameDialog$textWatcher$1: void <init>(com.azure.authenticator.databinding.DialogEditAccountNameBinding,android.app.AlertDialog)>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter: void <init>()>
<android.content.res.TypedArray: int getInteger(int,int)>
<com.facebook.imagepipeline.request.ImageRequest: int getSourceUriType()>
<com.google.android.gms.internal.auth-api-phone.zzm: void <init>(com.google.android.gms.internal.auth-api-phone.zzk)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity_GeneratedInjector: void injectRestoreFlowActivity(com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.facebook.cache.disk.DefaultDiskStorage: java.util.List getEntries()>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder addMetadata(java.lang.String,long)>
<android.text.StaticLayout: int getLineBaseline(int)>
<com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task zze(com.google.android.gms.internal.location.zzba,com.google.android.gms.location.LocationCallback,android.os.Looper,com.google.android.gms.location.zzan,int)>
<com.google.android.gms.internal.location.zzar: void zzc()>
<com.facebook.react.modules.core.PermissionAwareActivity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
<com.google.android.gms.internal.measurement.zzde: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader newInstance(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)>
<com.microsoft.brooklyn.module.autofill.response.abstraction.FillResponseManager: void <init>(com.microsoft.brooklyn.module.autofill.response.businesslogic.FillResponseSignedUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.FillResponseUnsignedUseCase)>
<com.azure.authenticator.authentication.msa.MsaAccountManager: java.lang.Object validateAccountAsync(com.azure.authenticator.accounts.MsaAccount,kotlin.coroutines.Continuation)>
<android.app.Fragment: boolean isVisible()>
<com.azure.authenticator.accounts.AadAccount: void setTenantCountryCode(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdf: java.util.List zzk()>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: java.lang.String access$getLogs$p(com.azure.authenticator.ui.fragment.main.ViewLogsFragment)>
<ch.qos.logback.core.filter.Filter: void <init>()>
<com.google.android.gms.common.server.response.FastJsonResponse: java.lang.String toString()>
<com.azure.authenticator.databinding.AccountAddMethodListWorkBinding: com.azure.authenticator.databinding.AccountAddMethodListWorkBinding bind(android.view.View)>
<com.azure.authenticator.databinding.AddressListRowLayoutBinding: com.azure.authenticator.databinding.AddressListRowLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$buildDialog$5(android.content.DialogInterface,int)>
<java.util.ArrayDeque: boolean offer(java.lang.Object)>
<com.google.android.gms.common.api.HasApiKey: com.google.android.gms.common.api.internal.ApiKey getApiKey()>
<ch.qos.logback.classic.LoggerContext: void putProperties(java.util.Properties)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateViewProp(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.Object)>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>
<com.airbnb.lottie.model.content.ShapePath: void <init>(java.lang.String,int,com.airbnb.lottie.model.animatable.AnimatableShapeValue,boolean)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: boolean isValidRichContext()>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType: com.azure.authenticator.notifications.AbstractNotification$NotificationType[] values()>
<com.google.android.gms.internal.measurement.zzia: int zzf(boolean)>
<com.facebook.react.views.modal.ModalHostShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)>
<com.adjust.sdk.ILogger: void warn(java.lang.String,java.lang.Object[])>
<com.facebook.react.views.slider.ReactSliderEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.adjust.sdk.ActivityPackage: void setParameters(java.util.Map)>
<com.airbnb.lottie.LottieTask: void notifyListeners()>
<com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver: void onExclusivityChanged(java.lang.Object,boolean)>
<com.azure.authenticator.storage.database.AccountWriter: int mergeRestoreCapability(com.azure.authenticator.storage.database.DbAccount,com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.material.tabs.TabLayout$TabView: void update()>
<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setExtras(byte[])>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.google.android.material.timepicker.TimePickerView$OnSelectionChange: void onSelectionChanged(int)>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: void <init>(com.facebook.react.bridge.ReactContext,java.lang.String,int,int,int,int,boolean,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.safetynet.zzo: void <init>(com.google.android.gms.internal.safetynet.zzk,com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.measurement.internal.zzed: java.lang.String zzi(java.lang.String,java.lang.String[],java.lang.String[],java.util.concurrent.atomic.AtomicReference)>
<com.facebook.imagepipeline.platform.DefaultDecoder: void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.List loadEvents(android.database.sqlite.SQLiteDatabase,com.google.android.datatransport.runtime.TransportContext)>
<com.facebook.react.bridge.Dynamic: int asInt()>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: java.lang.Object generatedComponent()>
<com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.android.gms.common.api.internal.zax: void <init>(android.content.Context,com.google.android.gms.common.api.internal.zaaz,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,java.util.Map,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.Api$AbstractClientBuilder,com.google.android.gms.common.api.Api$Client,java.util.ArrayList,java.util.ArrayList,java.util.Map,java.util.Map)>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object leaveWorkplaceJoin(java.lang.String,kotlin.coroutines.Continuation)>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.feature.notifications.AccountAndAuthenticationInterface access$8800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.fbreact.specs.NativeVibrationSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: java.lang.Object doWork(kotlin.coroutines.Continuation)>
<com.facebook.drawee.generic.RoundingParams$RoundingMethod: void <init>(java.lang.String,int)>
<android.widget.LinearLayout: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.measurement.zzlo: boolean zzb()>
<com.facebook.react.ReactDelegate: void <init>(android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresBatteryNotLow(boolean)>
<androidx.sqlite.db.SupportSQLiteDatabase: void setTransactionSuccessful()>
<com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory access$000()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase access$6900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task zza(android.os.Bundle,com.google.android.gms.tasks.Task)>
<com.facebook.shimmer.Shimmer: int width(int)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzh()>
<com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)>
<com.github.amlcurran.showcaseview.NoAnimationFactory: void <init>()>
<com.google.android.gms.internal.measurement.zzkz: void <init>()>
<android.graphics.Paint: float getTextSize()>
<com.google.android.gms.common.zzi: void <init>(byte[])>
<java.io.File: long lastModified()>
<com.adjust.sdk.AdjustInstance: void removeSessionCallbackParameter(java.lang.String)>
<com.facebook.react.animated.SpringAnimation: void <init>(com.facebook.react.bridge.ReadableMap)>
<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<java.lang.String: boolean endsWith(java.lang.String)>
<com.adjust.sdk.PackageHandler$3: void <init>(com.adjust.sdk.PackageHandler)>
<android.app.Activity: void setTitle(int)>
<com.facebook.common.time.RealtimeSinceBootClock: void <init>()>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$generateBackupSilentlyAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.adjust.sdk.PackageBuilder: java.lang.String getEventSuffix(com.adjust.sdk.AdjustEvent)>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getHeight()>
<com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzbv zzn()>
<ch.qos.logback.classic.spi.ILoggingEvent: java.lang.StackTraceElement[] getCallerData()>
<com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.google.android.gms.dynamite.DynamiteModule: int getRemoteVersion(android.content.Context,java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)>
<ch.qos.logback.classic.net.SocketAppender: void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent)>
<java.lang.Comparable: int compareTo(java.lang.Object)>
<com.google.crypto.tink.proto.Keyset$Builder: int getKeyCount()>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void updateFirstChildView()>
<com.airbnb.lottie.animation.keyframe.PathKeyframe: android.graphics.Path getPath()>
<com.google.android.gms.internal.common.zzu: int indexOf(java.lang.Object)>
<com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()>
<com.google.android.gms.internal.measurement.zzbr: void zzC(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdf: void zzs(com.google.android.gms.internal.measurement.zzdf,long)>
<com.evernote.android.job.JobApi: com.evernote.android.job.JobApi[] values()>
<com.google.android.gms.maps.CameraUpdate: com.google.android.gms.dynamic.IObjectWrapper zzb()>
<java.util.SortedMap: java.util.Collection values()>
<android.content.ContextWrapper: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler: void <init>(com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockManager,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,android.content.Context)>
<java.util.Map: java.util.Set keySet()>
<com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: void <init>()>
<com.facebook.react.devsupport.LogBoxModule$3: void <init>(com.facebook.react.devsupport.LogBoxModule)>
<com.google.crypto.tink.proto.KeyTemplate$Builder: com.google.crypto.tink.proto.KeyTemplate$Builder setValue(com.google.crypto.tink.shaded.protobuf.ByteString)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzn(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: void startTimer()>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String convertMultipleArguments(java.lang.Object[])>
<com.facebook.react.modules.camera.ImageEditingManager: java.io.File writeBitmapToInternalCache(android.content.Context,android.graphics.Bitmap,java.lang.String)>
<com.evernote.android.job.v14.PlatformAlarmService: void start(android.content.Context,int,android.os.Bundle)>
<com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.decoder.ImageDecoder access$700(com.facebook.imagepipeline.producers.DecodeProducer)>
<com.adjust.sdk.OnEventTrackingFailedListener: void onFinishedEventTrackingFailed(com.adjust.sdk.AdjustEventFailure)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_3_7$cp()>
<com.google.android.gms.common.api.PendingResults: com.google.android.gms.common.api.PendingResult immediatePendingResult(com.google.android.gms.common.api.Status,com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.internal.measurement.zziw: com.google.android.gms.internal.measurement.zziw zzav(byte[],com.google.android.gms.internal.measurement.zzhe)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: com.microsoft.authenticator.core.telemetry.TelemetryManager access$getTelemetryManager$p(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker)>
<com.evernote.android.job.v14.PlatformAlarmService: void runJob(android.content.Intent,android.app.Service,com.evernote.android.job.util.JobCat)>
<com.facebook.imagepipeline.memory.BasePool$Counter: void decrement(int)>
<com.google.android.gms.internal.maps.zzw: com.google.android.gms.dynamic.IObjectWrapper zzk()>
<ch.qos.logback.core.joran.event.SaxEvent: org.xml.sax.Locator getLocator()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckManager mfaAuthCheckManager()>
<androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<com.facebook.imagepipeline.core.DiskStorageCacheFactory: com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage,java.util.concurrent.Executor)>
<com.microsoft.authenticator.msa.entities.GetMsaTicketResult$Error: com.microsoft.authenticator.msa.entities.MsaAccountManagerError getMsaAccountManagerError()>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>
<com.google.android.gms.common.api.internal.StatusCallback: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.airbnb.lottie.model.animatable.BaseAnimatableValue: void <init>(java.lang.Object)>
<com.google.android.gms.internal.maps.zzk: void zza(float,float)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void animateCamera(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.material.tabs.TabLayout: void ensureScrollAnimator()>
<com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<com.microsoft.brooklyn.ui.signin.SignInViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.material.badge.BadgeDrawable: void setHorizontalOffset(int)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment$onCreateView$2: void <init>(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.facebook.react.modules.i18nmanager.I18nUtil: boolean isDevicePreferredLanguageRTL()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void <init>(int,boolean,int,boolean)>
<androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>
<com.evernote.android.job.util.JobCat: void w(java.lang.String,java.lang.Object[])>
<com.google.android.gms.measurement.internal.zzej: com.google.android.gms.measurement.internal.zzej zza(com.google.android.gms.measurement.internal.zzas)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getTopEdge()>
<com.airbnb.lottie.model.animatable.AnimatableTextProperties: void <init>(com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<com.google.android.material.card.MaterialCardViewHelper: boolean shouldAddCornerPaddingOutsideCardBackground()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$onCreateView$$inlined$apply$lambda$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgs zze(int,int)>
<com.facebook.cache.disk.DiskCacheConfig: void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder,com.facebook.cache.disk.DiskCacheConfig$1)>
<com.google.android.material.resources.TextAppearanceFontCallback: void onFontRetrieved(android.graphics.Typeface,boolean)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setOverflow(com.facebook.yoga.YogaOverflow)>
<java.lang.RuntimeException: java.lang.String getMessage()>
<com.google.android.gms.auth.api.signin.GoogleSignInResult: com.google.android.gms.auth.api.signin.GoogleSignInAccount getSignInAccount()>
<com.google.android.gms.measurement.internal.zzjb: boolean zzD()>
<ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran: ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String)>
<com.google.android.gms.internal.auth.zzan: void zza(com.google.android.gms.internal.auth.zzal,com.google.android.gms.auth.api.proxy.ProxyRequest)>
<com.google.android.gms.common.api.internal.UnregisterListenerMethod: void unregisterListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.location.zzah: void <init>()>
<com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder$1: void <init>(com.facebook.imagepipeline.decoder.DefaultImageDecoder)>
<com.google.android.material.bottomappbar.BottomAppBar$9: void <init>(com.google.android.material.bottomappbar.BottomAppBar)>
<com.facebook.react.uimanager.events.EventDispatcher: void moveStagedEventsToDispatchQueue()>
<com.google.android.gms.measurement.internal.zzfi: java.util.concurrent.Future zze(java.util.concurrent.Callable)>
<java.lang.Boolean: boolean getBoolean(java.lang.String)>
<com.google.android.gms.internal.measurement.zzeu: java.lang.String zzd(java.lang.String)>
<com.google.android.gms.common.internal.zzae: boolean zze(com.google.android.gms.common.zzs,com.google.android.gms.dynamic.IObjectWrapper)>
<com.facebook.datasource.AbstractDataSource: float getProgress()>
<com.google.android.material.textfield.CutoutDrawable: void saveCanvasLayer(android.graphics.Canvas)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: boolean isEnterNumberAllowed()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)>
<dummyMainClass: com.azure.authenticator.utils.TestActivity dummyMainMethod_com_azure_authenticator_utils_TestActivity(android.content.Intent)>
<com.google.common.collect.ImmutableMap$Builder: void sortEntries()>
<com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: void <init>()>
<com.google.android.gms.internal.location.zzav: void zzm(com.google.android.gms.internal.location.zzai)>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void logFailureResult(java.lang.String)>
<com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel_Factory: com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel newInstance(android.content.Context,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.repository.PaymentsRepository,com.microsoft.brooklyn.module.sync.SyncSDKConnector,com.microsoft.brooklyn.common.BrooklynMSASignInUseCase)>
<com.facebook.react.views.textinput.ReactEditText: boolean canUpdateWithEventCount(int)>
<com.google.android.gms.internal.measurement.zzdj: long zzj()>
<java.util.ArrayDeque: java.lang.Object poll()>
<ch.qos.logback.core.joran.action.DefinePropertyAction: void <init>()>
<com.facebook.react.LazyReactPackage$2$1: void <init>(com.facebook.react.LazyReactPackage$2)>
<ch.qos.logback.classic.spi.CallerData: boolean isInFrameworkSpace(java.lang.String,java.lang.String,java.util.List)>
<com.microsoft.authenticator.selfhost.SelfhostConfigManager: void <init>(android.content.Context,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig)>
<com.google.android.gms.internal.measurement.zzhj: void zzd(com.google.android.gms.internal.measurement.zzhi,java.lang.Object)>
<com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1: void <init>()>
<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureSelfhostControls$$inlined$CoroutineExceptionHandler$1: void <init>(kotlinx.coroutines.CoroutineExceptionHandler$Key)>
<com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.azure.authenticator.utils.TestActivity_MembersInjector: void injectMembers(com.azure.authenticator.utils.TestActivity)>
<java.lang.Double: double parseDouble(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzai()>
<com.google.android.gms.auth.api.identity.zzl: android.os.Bundle toBundle()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void restoreDefaultValues(int)>
<androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzio: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.common.internal.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<com.microsoft.brooklyn.module.autofill.FormInfoHelper: void <init>()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzd zzB()>
<com.google.android.gms.internal.measurement.zzen: void zzc()>
<com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: java.lang.String toString()>
<com.google.android.gms.internal.measurement.zze: com.google.android.gms.internal.measurement.zzf zzb(android.os.IBinder)>
<com.azure.authenticator.ui.MainActivity: android.content.Intent getIntent()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab)>
<com.airbnb.lottie.model.content.Mask: void <init>(com.airbnb.lottie.model.content.Mask$MaskMode,com.airbnb.lottie.model.animatable.AnimatableShapeValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,boolean)>
<com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)>
<com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()>
<com.facebook.soloader.UnpackingSoSource$InputDso: void <init>(com.facebook.soloader.UnpackingSoSource$Dso,java.io.InputStream)>
<com.facebook.react.modules.network.ResponseUtil: void onDataReceivedProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,long,long)>
<com.google.android.gms.common.internal.zaz: void <init>()>
<com.azure.authenticator.ui.fragment.main.ThirdPartyNoticeFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.facebook.drawee.view.GenericDraweeView: void <init>(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy)>
<com.google.android.material.textfield.IndicatorViewController: android.content.res.ColorStateList getErrorViewTextColors()>
<com.google.android.gms.internal.location.zzbc: com.google.android.gms.internal.location.zzbc zza(com.google.android.gms.location.zzbd,com.google.android.gms.internal.location.zzai)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: void <init>()>
<android.widget.ImageButton: void setFocusable(boolean)>
<android.widget.CheckBox: void setMaxLines(int)>
<com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace: void endSection()>
<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.evernote.android.job.v14.JobProxy14: android.app.AlarmManager getAlarmManager()>
<bolts.Task$UnobservedExceptionHandler: void unobservedException(bolts.Task,bolts.UnobservedTaskException)>
<com.microsoft.did.feature.cardflow.presentationlogic.WebViewAuthenticationViewModel: void <init>(android.content.Context)>
<dummyMainClass: com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver dummyMainMethod_com_azure_authenticator_notifications_msa_MsaNotificationActionBroadcastReceiver(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzhm: com.google.android.gms.internal.measurement.zzhe zzb(java.lang.Class)>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>
<java.security.SecureRandom: int nextInt(int)>
<com.google.android.gms.internal.measurement.zzfx: void <init>()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onCreate(android.os.Bundle)>
<com.google.android.material.chip.ChipDrawable: float getCloseIconStartPadding()>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.azure.authenticator.jwe.AlgorithmEnum: java.lang.String getEncoding()>
<com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)>
<com.google.android.gms.auth.api.signin.internal.zze: com.google.android.gms.common.api.PendingResult zzi(java.lang.String)>
<com.facebook.react.uimanager.events.EventDispatcher: long getEventCookie(int,java.lang.String,short)>
<com.google.android.gms.auth.zza: void <init>()>
<okhttp3.Response: okhttp3.Request request()>
<com.google.android.gms.auth.api.identity.SignInCredential: android.net.Uri getProfilePictureUri()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager access$getBrooklynEnterpriseManager$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.google.android.gms.internal.measurement.zzbr: void zzp(java.lang.Boolean)>
<android.util.SparseArray: void append(int,java.lang.Object)>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$Success: void <init>(com.microsoft.ngc.aad.NgcSession)>
<com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.airbnb.lottie.model.KeyPathElement: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)>
<com.google.android.gms.internal.maps.zzz: int getColor()>
<com.google.android.gms.common.api.internal.zabl: void zae()>
<com.airbnb.lottie.parser.moshi.JsonReader: void access$000(okio.BufferedSink,java.lang.String)>
<com.facebook.cache.disk.DiskCacheConfig: com.facebook.common.internal.Supplier getBaseDirectoryPathSupplier()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaDirection getLayoutDirection()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.PostprocessorProducer newPostprocessorProducer(com.facebook.imagepipeline.producers.Producer)>
<com.adjust.sdk.ActivityHandler: void launchSdkClickResponseTasksI(com.adjust.sdk.SdkClickResponseData)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<android.widget.ScrollView: android.view.View getChildAt(int)>
<com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)>
<android.net.NetworkCapabilities: boolean hasCapability(int)>
<android.graphics.BlendModeColorFilter: void <init>(int,android.graphics.BlendMode)>
<android.widget.HorizontalScrollView: android.content.Context getContext()>
<com.google.android.gms.measurement.internal.zzjp: void zzb(long,boolean)>
<com.evernote.android.job.JobProxy: boolean isPlatformJobScheduled(com.evernote.android.job.JobRequest)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onEntropyButtonClicked()>
<com.microsoft.brooklyn.module.autofill.response.abstraction.FillDatasetManager: void <init>(com.microsoft.brooklyn.module.autofill.response.abstraction.FillRequestFormHandlerFactory)>
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void attachBaseContext(android.content.Context)>
<com.google.android.gms.internal.measurement.zzla: long zzA()>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity: void _initHiltInternal()>
<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<java.util.HashMap: boolean equals(java.lang.Object)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setPostprocessor(com.facebook.imagepipeline.request.Postprocessor)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()>
<com.google.android.gms.measurement.internal.zzjw: void <init>(com.google.android.gms.measurement.internal.zzkd,com.google.android.gms.measurement.internal.zzke)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.android.material.timepicker.ChipTextInputComboView: void updateHintLocales()>
<com.google.android.gms.maps.StreetViewPanorama: void <init>(com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate)>
<com.google.android.material.textfield.TextInputLayout$SavedState: void <init>(android.os.Parcelable)>
<com.adjust.sdk.ActivityHandler$21: void <init>(com.adjust.sdk.ActivityHandler)>
<java.util.AbstractList: boolean add(java.lang.Object)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()>
<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String getId()>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: boolean isTaskCancelled(bolts.Task)>
<android.util.SparseArray: int keyAt(int)>
<ch.qos.logback.core.ContextBase: void putProperty(java.lang.String,java.lang.String)>
<com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel: void refreshDidNotifications()>
<java.lang.Double: boolean isInfinite(double)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int beginObjectHeader(android.os.Parcel)>
<com.google.android.gms.common.internal.GmsLogger: void v(java.lang.String,java.lang.String)>
<android.os.Bundle: double getDouble(java.lang.String)>
<com.facebook.systrace.SystraceMessage$NoopBuilder: void <init>(com.facebook.systrace.SystraceMessage$1)>
<java.io.File: long length()>
<com.google.android.gms.measurement.internal.zzei: void zzm(int,boolean,boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Iterable lambda$logAndUpdateState$2(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.gms.internal.firebase_messaging.zzk: void <init>()>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllAccounts()>
<com.facebook.imagepipeline.decoder.ProgressiveJpegConfig: com.facebook.imagepipeline.image.QualityInfo getQualityInfo(int)>
<com.azure.authenticator.jwe.JweEncryptionException$JweEncryptionError: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.core.ImagePipeline: boolean isInDiskCacheSync(com.facebook.imagepipeline.request.ImageRequest)>
<java.util.List: int size()>
<com.microsoft.onlineid.sdk.extension.NgcManager: void <init>(android.content.Context)>
<android.widget.LinearLayout: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
<com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)>
<com.google.android.gms.common.api.internal.zaco: void <init>(android.content.Context,android.os.Handler,com.google.android.gms.common.internal.ClientSettings)>
<com.airbnb.lottie.parser.AnimatablePathValueParser: com.airbnb.lottie.model.animatable.AnimatableValue parseSplitPath(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: void <init>(com.facebook.cache.disk.FileCache,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.PooledByteStreams,java.util.concurrent.Executor,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.ImageCacheStatsTracker)>
<ch.qos.logback.classic.joran.action.ConditionalIncludeAction: void <init>()>
<android.view.ViewParent: boolean isLayoutRequested()>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void showRateAppDialog(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setTag(java.lang.String)>
<android.widget.CheckBox: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
<com.google.android.material.datepicker.MonthAdapter: java.lang.Long getItem(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotification mfaNotification()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void trackDndSettingState(com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries,com.azure.authenticator.storage.Storage)>
<androidx.startup.InitializationProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.facebook.cache.disk.DiskCacheConfig: java.lang.String getBaseDirectoryName()>
<com.google.common.collect.ImmutableCollection: int internalArrayStart()>
<com.google.android.gms.measurement.internal.zzbs: void <init>()>
<java.util.Objects: int hash(java.lang.Object[])>
<com.google.android.gms.maps.zzp: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPolygonClickListener)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.accounts.AccountType,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingTaskCallback,android.content.pm.PackageManager)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream(int)>
<com.google.android.gms.common.api.Status: void <init>(int,java.lang.String,android.app.PendingIntent)>
<com.google.android.gms.common.api.internal.zacn: void zab(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)>
<ch.qos.logback.core.rolling.RollingPolicyBase: void <init>()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$initialize$1: void <init>(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<ch.qos.logback.core.Context: java.lang.Object getObject(java.lang.String)>
<java.lang.String: void <init>(java.lang.String)>
<com.google.android.gms.safetynet.zzl: void <init>(com.google.android.gms.safetynet.SafetyNetClient)>
<com.google.android.gms.dynamic.RemoteCreator$RemoteCreatorException: void <init>(java.lang.String)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void startWorkplaceJoin()>
<com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: void <init>(com.google.android.material.behavior.SwipeDismissBehavior)>
<com.google.android.gms.tasks.OnCompleteListener: void onComplete(com.google.android.gms.tasks.Task)>
<com.google.android.gms.internal.measurement.zzim: void zzh(int)>
<java.util.Set: int hashCode()>
<java.lang.OutOfMemoryError: void <init>()>
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager: void <init>(android.content.Context)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void scheduleTaskTimeout(int,long)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void indent(java.lang.StringBuilder,int)>
<kotlin.Pair: java.lang.Object component1()>
<com.facebook.react.MemoryPressureRouter: void addMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener)>
<com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.location.zzba: com.google.android.gms.internal.location.zzba zza(java.lang.String,com.google.android.gms.location.LocationRequest)>
<com.google.android.gms.location.LocationSettingsStates: boolean isNetworkLocationUsable()>
<com.google.common.collect.RegularImmutableMap: java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int)>
<com.google.android.gms.internal.location.zzc: void zzc(android.os.Parcel,android.os.Parcelable)>
<com.microsoft.brooklyn.ui.UiEvent: void <init>(java.lang.Object)>
<com.google.android.gms.internal.location.zzbs: com.google.android.gms.internal.location.zzbs zzh(int,int)>
<com.google.android.gms.common.internal.zaf: void <init>(android.content.Intent,com.google.android.gms.common.api.internal.LifecycleFragment,int)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int)>
<com.adjust.sdk.ActivityHandler: void access$2300(com.adjust.sdk.ActivityHandler)>
<com.facebook.react.views.image.ReactImageManager: void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$$special$$inlined$viewModels$1: void <init>(androidx.activity.ComponentActivity)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1: void <init>(kotlin.coroutines.Continuation,com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1)>
<com.google.android.gms.internal.measurement.zzki: void zze(byte,byte,byte,char[],int)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean getBitmapPrepareToDrawForPrefetch()>
<com.google.android.material.snackbar.ContentViewCallback: void animateContentIn(int,int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: void <init>(androidx.appcompat.app.AppCompatActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion,int,boolean,com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry,com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase)>
<com.google.android.gms.tasks.Task: boolean isCanceled()>
<ch.qos.logback.core.joran.action.Action: int getColumnNumber(ch.qos.logback.core.joran.spi.InterpretationContext)>
<com.google.android.material.textfield.IndicatorViewController: boolean canAdjustIndicatorPadding()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void releaseClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setLowestPermittedRequestLevel(com.facebook.imagepipeline.request.ImageRequest$RequestLevel)>
<com.facebook.react.views.image.ImageLoadEvent: java.lang.String getEventName()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void <init>()>
<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>
<com.google.android.gms.tasks.zzw: boolean zzd(java.lang.Exception)>
<com.google.android.gms.measurement.internal.zzec: boolean zzm()>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: void setColorSpace(android.graphics.BitmapFactory$Options,android.graphics.ColorSpace)>
<com.google.android.gms.common.internal.RootTelemetryConfiguration: int getMaxMethodInvocationsInBatch()>
<com.google.android.gms.internal.auth-api.zzaj: void <init>()>
<com.google.android.gms.measurement.internal.zzhr: java.net.HttpURLConnection zzd(java.net.URL)>
<com.facebook.soloader.UnpackingSoSource: void writeState(java.io.File,byte)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: android.graphics.drawable.Drawable buildActualImageBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.ColorFilter)>
<com.google.android.gms.internal.measurement.zzhx: com.google.android.gms.internal.measurement.zzhx zzf(int)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _finishString()>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1: void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate$3,android.widget.EditText)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumBeginEvent(android.view.ViewGroup,int,int)>
<android.database.Cursor: boolean moveToPosition(int)>
<com.airbnb.lottie.model.animatable.AnimatableFloatValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.google.android.material.shape.ShapePath$PathArcOperation: float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int)>
<com.facebook.react.MemoryPressureRouter: void removeMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener)>
<com.airbnb.lottie.LottieDrawable: boolean isApplyingOpacityToLayersEnabled()>
<com.azure.authenticator.accounts.RestoreCapability: void <init>(int)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo: void <init>(int,int,int,int,double,double,int)>
<com.azure.authenticator.logging.ExternalLogger$Companion: void i(java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int)>
<com.facebook.drawee.components.RetryManager: void setTapToRetryEnabled(boolean)>
<com.google.android.gms.common.internal.service.zaf: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<android.net.Uri$Builder: void <init>()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>
<com.google.android.gms.internal.measurement.zzds: java.util.List zzc()>
<com.google.android.gms.internal.measurement.zzha: void zzd(int,long)>
<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<com.microsoft.brooklyn.ui.credential.CredentialListFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.credential.CredentialListFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2: void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int)>
<com.google.android.material.shape.MaterialShapeDrawable: float getTopLeftCornerResolvedSize()>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<com.facebook.react.views.text.ReactTextShadowNode: int getTextAlign()>
<java.util.LinkedList: java.util.Iterator iterator()>
<android.widget.HorizontalScrollView: void fling(int)>
<android.os.Parcel: void writeByte(byte)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment$getShowDeleteBackupConfirmDialogListener$1$1$deleteBackupConfirmationDialogBuilder$2: void <init>()>
<android.system.ErrnoException: java.lang.String getMessage()>
<com.google.android.gms.measurement.internal.zzhn: java.lang.Long zzk()>
<com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase: void <init>(android.content.Context,com.azure.authenticator.authentication.msa.MsaAccountManager,com.microsoft.authenticator.backup.businessLogic.BackupEncryptionManager,com.microsoft.authenticator.backup.businessLogic.cloudStorage.BackupStorageManager,com.microsoft.authenticator.backup.businessLogic.BackupSerializer,com.azure.authenticator.storage.Storage,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter)>
<com.google.android.material.badge.BadgeDrawable$SavedState$1: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showBackupConfirmedDialog(java.lang.String)>
<com.google.android.gms.common.util.CollectionUtils: java.util.Map zzb(int,boolean)>
<com.google.android.gms.common.Feature: long getVersion()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.String createString(android.os.Parcel,int)>
<com.google.android.gms.internal.measurement.zzdj: long zzs()>
<com.facebook.drawee.view.DraweeView: void doDetach()>
<java.nio.channels.FileLock: void release()>
<com.evernote.android.job.v14.PlatformAlarmServiceExact$1: void <init>(com.evernote.android.job.v14.PlatformAlarmServiceExact,android.content.Intent,int)>
<com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getVerificationSign2()>
<com.google.android.gms.maps.model.CircleOptions: float getZIndex()>
<com.facebook.shimmer.ShimmerFrameLayout: void init(android.content.Context,android.util.AttributeSet)>
<android.widget.SeekBar$OnSeekBarChangeListener: void onStopTrackingTouch(android.widget.SeekBar)>
<com.evernote.android.job.JobStorage: android.database.sqlite.SQLiteDatabase getDatabase()>
<com.google.android.gms.internal.measurement.zzp: void setConditionalUserProperty(android.os.Bundle,long)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightAuto()>
<com.google.android.gms.internal.measurement.zzbt: com.google.android.gms.internal.measurement.zzbt zzc(int,com.google.android.gms.internal.measurement.zzce)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)>
<com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.viewLogic.IMfaSdkDeviceGestureManager access$6100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.views.viewpager.PageScrollStateChangedEvent: void <init>(int,java.lang.String)>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zzf(java.lang.String,com.google.android.gms.internal.measurement.zzck,com.google.android.gms.measurement.internal.zzei)>
<com.facebook.react.uimanager.annotations.ReactPropGroup: int defaultInt()>
<com.facebook.cache.disk.DiskStorage: boolean isExternal()>
<com.airbnb.lottie.parser.DocumentDataParser: void <init>()>
<ch.qos.logback.classic.joran.action.LevelAction: void <init>()>
<com.airbnb.lottie.value.ScaleXY: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$showDeleteBackupConfirmDialog$5$SettingsFragment(android.content.DialogInterface,int)>
<com.facebook.datasource.BaseDataSubscriber: void onNewResultImpl(com.facebook.datasource.DataSource)>
<com.facebook.imageformat.ImageFormatChecker: void setCustomImageFormatCheckers(java.util.List)>
<com.facebook.react.views.drawer.events.DrawerSlideEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean isIdTokenRequested()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaj(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<com.google.crypto.tink.shaded.protobuf.ByteString: int size()>
<java.util.logging.Logger: java.util.logging.Level getLevel()>
<com.google.android.material.textfield.ClearTextEndIconDelegate: android.animation.ValueAnimator getScaleAnimator()>
<androidx.navigation.NavGraph: int getStartDestination()>
<com.evernote.android.job.JobRequest: int getFailureCount()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzx(com.google.android.gms.common.AccountPicker$AccountChooserOptions,boolean)>
<com.adjust.sdk.Util: int hashBoolean(java.lang.Boolean)>
<com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: void <init>(com.facebook.common.memory.PooledByteBufferFactory)>
<com.azure.authenticator.logging.DaggerBroadcastReceiver: void <init>()>
<com.microsoft.brooklyn.module.autofill.dialogs.FRECelebratingDialogFragment$Companion: com.microsoft.brooklyn.module.autofill.dialogs.FRECelebratingDialogFragment newDialogInstance(boolean)>
<com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: int getType()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readInt(android.os.Parcel,int)>
<com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker: void logAvailableBiometricOptions()>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder builder()>
<com.facebook.react.views.scroll.ScrollEventType: java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setSkipCollapsed(boolean)>
<com.google.android.gms.common.server.response.FastJsonResponse: java.lang.Object getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<com.google.android.datatransport.runtime.dagger.internal.DoubleCheck: java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$generateBackupAsync$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.DiskCacheReadProducer)>
<com.google.android.gms.common.util.Hex: java.lang.String bytesToStringUppercase(byte[],boolean)>
<com.github.amlcurran.showcaseview.TextDrawer: void setTitleTextAlignment(android.text.Layout$Alignment)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<com.facebook.react.module.model.ReactModuleInfo: boolean isTurboModule()>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: int access$100(com.facebook.imagepipeline.request.ImageRequest)>
<javax.mail.internet.MimeMessage: void setFrom()>
<com.google.android.material.card.MaterialCardViewHelper: float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)>
<com.airbnb.lottie.model.content.GradientColor: float[] getPositions()>
<com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)>
<java.io.PrintStream: void print(int)>
<com.github.amlcurran.showcaseview.targets.Target$1: void <init>()>
<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
<com.github.amlcurran.showcaseview.ShotStateStore: boolean isSingleShot()>
<com.fasterxml.jackson.core.io.IOContext: char[] allocTokenBuffer()>
<com.google.android.gms.common.api.internal.zax: com.google.android.gms.common.api.internal.zabd zaw(com.google.android.gms.common.api.internal.zax)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectMfaSilentLocationManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationManager)>
<com.google.android.gms.internal.location.zzf: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<ch.qos.logback.core.net.SyslogAppenderBase: void <init>()>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setCacheSize(long)>
<javax.net.ssl.SSLSocket: java.net.SocketAddress getRemoteSocketAddress()>
<android.widget.LinearLayout: void setElevation(float)>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void onValueReuse(int)>
<com.facebook.common.memory.PooledByteBufferFactory: com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream(int)>
<com.google.common.base.Splitter: int access$400(com.google.common.base.Splitter)>
<androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)>
<com.facebook.react.modules.core.JavaTimerManager: void onHeadlessJsTaskStart(int)>
<com.fasterxml.jackson.core.io.JsonStringEncoder: com.fasterxml.jackson.core.io.JsonStringEncoder getInstance()>
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.adjust.sdk.ActivityState: void resetSessionAttributes(long)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier getEncodedMemoryCacheParamsSupplier()>
<com.google.android.gms.internal.location.zzao: void zzb(com.google.android.gms.location.LocationSettingsResult)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzy zzo(int)>
<java.lang.NoSuchMethodError: void <init>()>
<com.azure.authenticator.ui.action.ReEnableAutoBackupAction_Factory: void <init>(javax.inject.Provider)>
<com.adjust.sdk.RequestHandler: void closePackageI(com.adjust.sdk.ActivityPackage,java.lang.String,java.lang.Throwable)>
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setDuration(long)>
<com.google.android.gms.auth.api.identity.zzl$zzc: com.google.android.gms.auth.api.identity.zzl zzk()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1: void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,android.view.View,android.view.View)>
<com.google.android.gms.internal.measurement.zzfg: java.lang.String zzd()>
<com.google.android.material.chip.ChipGroup$CheckedStateTracker: void <init>(com.google.android.material.chip.ChipGroup)>
<com.airbnb.lottie.model.content.CircleShape: void <init>(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,boolean,boolean)>
<com.google.android.gms.internal.measurement.zzll: boolean zzc()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: android.content.Intent getCreateBackupIntent(android.content.Context)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showSendFeedbackDialog$storeRatingDialogBuilder$1: void <init>(com.azure.authenticator.ui.dialog.StoreRatingTask,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)>
<com.google.android.material.snackbar.SnackbarManager$1: void <init>(com.google.android.material.snackbar.SnackbarManager)>
<com.facebook.react.uimanager.UIViewOperationQueue: java.lang.String access$200()>
<com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate zza(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.StreetViewPanoramaOptions)>
<com.google.android.gms.common.api.internal.zak: void zac(int)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: boolean computeIsPrefetch()>
<com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)>
<ch.qos.logback.core.UnsynchronizedAppenderBase: void stop()>
<com.airbnb.lottie.model.layer.ShapeLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)>
<com.facebook.react.views.scroll.ReactScrollView: boolean access$400(com.facebook.react.views.scroll.ReactScrollView)>
<com.azure.authenticator.databinding.FragmentImportPasswordsBinding: android.widget.ScrollView getRoot()>
<com.facebook.react.animated.StyleAnimatedNode: void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap)>
<androidx.room.util.TableInfo: boolean equals(java.lang.Object)>
<com.facebook.react.uimanager.events.TouchEventType: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$202(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long)>
<com.google.android.gms.internal.measurement.zzcm: boolean zzd()>
<com.facebook.react.modules.network.NetworkingModule$ResponseHandler: com.facebook.react.bridge.WritableMap toResponseData(okhttp3.ResponseBody)>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean)>
<com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType toScaleType(java.lang.String)>
<com.adjust.sdk.AdjustInstance$6: void <init>(com.adjust.sdk.AdjustInstance)>
<com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: void <init>()>
<com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: android.content.Context getInitApplicationContext()>
<com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)>
<com.adjust.sdk.ActivityState: boolean findOrderId(java.lang.String)>
<com.azure.authenticator.databinding.AadPhoneSignInOnPremQrBinding: com.azure.authenticator.databinding.AadPhoneSignInOnPremQrBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.measurement.internal.zzgp: void <init>(com.google.android.gms.measurement.internal.zzhn)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.importCred.ImportFromOtherAppsFragment injectImportFromOtherAppsFragment2(com.microsoft.brooklyn.ui.importCred.ImportFromOtherAppsFragment)>
<com.google.android.gms.internal.measurement.zznd: void <init>()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.Context getRemoteContext(android.content.Context)>
<com.microsoft.authenticator.mfasdk.authentication.viewLogic.MfaAuthHiltViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment build()>
<com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)>
<com.google.android.gms.measurement.internal.zzkd: void zzah(com.google.android.gms.internal.measurement.zzda,com.google.android.gms.internal.measurement.zzda)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzj(java.lang.Object)>
<android.widget.ImageButton: int getVisibility()>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<ch.qos.logback.core.status.StatusBase: int getEffectiveLevel()>
<com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)>
<com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1: void onCacheHit(com.facebook.cache.common.CacheKey)>
<com.facebook.react.uimanager.ReactShadowNode: void setStyleHeight(float)>
<com.azure.authenticator.databinding.WebviewBinding: com.azure.authenticator.databinding.WebviewBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.measurement.internal.zzgy: void <init>(com.google.android.gms.measurement.internal.zzhn,android.os.Bundle)>
<com.google.android.gms.tasks.zzp: void onFailure(java.lang.Exception)>
<com.airbnb.lottie.LottieDrawable: int getRepeatMode()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object inTransaction(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function)>
<ch.qos.logback.core.rolling.helper.FileFinder: java.util.List toAbsolutePaths(java.util.List)>
<androidx.cardview.widget.CardView: int getContentPaddingLeft()>
<com.airbnb.lottie.model.layer.BaseLayer: void invalidateSelf()>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: void initialize(android.content.Context)>
<com.google.android.material.animation.ImageMatrixProperty: void set(android.widget.ImageView,android.graphics.Matrix)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String[] getAccountTypes()>
<com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableColorValue getColor()>
<android.util.SparseBooleanArray: void put(int,boolean)>
<com.google.android.datatransport.runtime.SendRequest: byte[] getPayload()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzao(java.lang.String)>
<com.google.android.gms.dynamic.RemoteCreator: java.lang.Object getRemoteCreator(android.os.IBinder)>
<com.google.android.gms.maps.GoogleMap: void snapshot(com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback,android.graphics.Bitmap)>
<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser)>
<androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: boolean isNgcSession()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao access$9000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: int getSampleSize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions)>
<com.google.android.gms.measurement.internal.zzgg: com.google.android.gms.measurement.internal.zzz zzas()>
<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
<com.google.android.gms.internal.base.zan: void <init>(com.google.android.gms.internal.base.zam)>
<com.google.android.gms.common.server.response.FastParser: java.lang.String zan(java.io.BufferedReader,char[],java.lang.StringBuilder,char[])>
<com.google.android.gms.internal.measurement.zzdj: int zzb()>
<kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.common.abstraction.BottomNavigationController access$3600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.internal.measurement.zzbr: void zzv(java.lang.String)>
<dummyMainClass: com.evernote.android.job.v14.PlatformAlarmReceiver dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmReceiver(android.content.Intent)>
<android.database.Cursor: int getInt(int)>
<com.google.android.gms.measurement.internal.zzbi: void <init>()>
<com.azure.authenticator.logging.LoggingReceiver_MembersInjector: void injectMembers(com.azure.authenticator.logging.LoggingReceiver)>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: void logCustomEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.util.Map,java.lang.Exception)>
<com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdates(int)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment$onCreateView$2: void <init>(com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>
<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)>
<com.google.android.gms.internal.measurement.zzgx: void zzk(int)>
<com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$BaseClientBuilder zaa()>
<java.util.Arrays: int hashCode(char[])>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()>
<com.google.crypto.tink.Registry: com.google.crypto.tink.PrimitiveSet getPrimitivesInternal(com.google.crypto.tink.KeysetHandle,com.google.crypto.tink.KeyManager,java.lang.Class)>
<com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback: void onFailure(com.facebook.react.devsupport.JSCHeapCapture$CaptureException)>
<javax.net.ssl.SSLSocket: int getLocalPort()>
<ch.qos.logback.classic.LoggerContext: void resetListenersExceptResetResistant()>
<com.facebook.imagepipeline.image.EncodedImage: boolean isValid()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$leaveWorkplaceJoin(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEndDragEvent(android.view.ViewGroup,float,float)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: java.util.Set getFlags()>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipAfterComma2()>
<com.google.android.gms.dynamic.IFragmentWrapper: com.google.android.gms.dynamic.IFragmentWrapper zze()>
<android.widget.PopupMenu: void dismiss()>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage: void <init>(android.content.Context,com.azure.authenticator.storage.Storage,com.azure.authenticator.storage.MfaSdkAccountTranslator,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel$performSessionRequest$1: java.lang.Object invokeSuspend(java.lang.Object)>
<android.widget.RelativeLayout: void removeView(android.view.View)>
<com.facebook.react.ReactInstanceManager: void detachRootView(com.facebook.react.uimanager.ReactRoot)>
<androidx.appcompat.app.AppCompatActivity: void <init>(int)>
<android.graphics.drawable.RippleDrawable: void setRadius(int)>
<com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)>
<com.azure.authenticator.databinding.ManageDeviceRegistrationBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzT()>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: com.facebook.common.logging.FLogDefaultLoggingDelegate getInstance()>
<com.evernote.android.job.JobRequest: int hashCode()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener: void doneReconfiguring()>
<com.google.android.material.floatingactionbutton.MotionStrategy: com.google.android.material.animation.MotionSpec getMotionSpec()>
<android.content.res.Resources: android.content.res.Resources getSystem()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean zaf(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.gms.internal.measurement.zzka: void <init>(com.google.android.gms.internal.measurement.zzkb)>
<com.google.android.gms.internal.measurement.zzbf: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String,java.lang.String,java.lang.Object,boolean)>
<com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager: void deleteDiscoveryMetadata(java.lang.String)>
<com.google.common.collect.MapMakerInternalMap: int hash(java.lang.Object)>
<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>
<com.microsoft.authenticator.notifications.abstraction.AppNotificationsManager: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.MfaSdkManager,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationUseCase,com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase,com.azure.authenticator.notifications.msa.MsaNotification,com.azure.authenticator.notifications.msa.MsaProtectionNotification,com.azure.authenticator.notifications.aad.AadNgcNotification,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.material.snackbar.Snackbar: android.view.ViewGroup findSuitableParent(android.view.View)>
<com.google.android.gms.common.zzi: byte[] zzf(java.lang.String)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getRoutingHint()>
<com.facebook.react.uimanager.events.Event: boolean canCoalesce()>
<com.google.android.gms.common.server.response.FastParser: float zas(java.io.BufferedReader)>
<android.widget.EditText: boolean getShowSoftInputOnFocus()>
<com.google.common.collect.RegularImmutableMap$EntrySet: int access$200(com.google.common.collect.RegularImmutableMap$EntrySet)>
<com.facebook.react.uimanager.ReactShadowNode: int getRootTag()>
<com.evernote.android.job.util.JobCat: void i(java.lang.String)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<com.facebook.soloader.UnpackingSoSource: boolean refreshLocked(com.facebook.soloader.FileLocker,int,byte[])>
<com.facebook.datasource.FirstAvailableDataSourceSupplier: com.facebook.datasource.FirstAvailableDataSourceSupplier create(java.util.List)>
<com.facebook.react.uimanager.events.EventDispatcher: void access$1400(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.gms.location.DetectedActivity: int getConfidence()>
<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>
<android.widget.ImageButton: void setMeasuredDimension(int,int)>
<java.lang.Double: double longBitsToDouble(long)>
<dummyMainClass: com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment dummyMainMethod_com_azure_authenticator_ui_fragment_sharedDeviceMode_SharedDeviceModeFragment(android.content.Intent,android.app.Activity)>
<com.google.android.gms.internal.measurement.zzjg: com.google.android.gms.internal.measurement.zzjg zzd()>
<com.google.android.gms.common.api.internal.GoogleApiManager: long zau(com.google.android.gms.common.api.internal.GoogleApiManager)>
<java.lang.System: long nanoTime()>
<com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter: java.lang.Object zad(java.lang.Object)>
<com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: com.airbnb.lottie.animation.content.TrimPathContent access$200(com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup)>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside: void <init>()>
<dagger.internal.Preconditions: void checkBuilderRequirement(java.lang.Object,java.lang.Class)>
<com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier obtainDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String)>
<com.google.android.material.snackbar.BaseTransientBottomBar: android.content.Context getContext()>
<com.google.android.gms.measurement.internal.zzae: boolean zzy()>
<android.widget.ImageView: void clearColorFilter()>
<ch.qos.logback.core.joran.GenericConfigurator: ch.qos.logback.core.joran.spi.ElementPath initialElementPath()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem: int getActionResourceId()>
<com.google.android.gms.internal.measurement.zzmg: boolean zzb()>
<com.google.android.material.internal.FlowLayout: void loadFromAttributes(android.content.Context,android.util.AttributeSet)>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.AadAccount getAadNgcAccount(java.lang.String)>
<com.airbnb.lottie.model.layer.TextLayer: void drawTextWithFont(com.airbnb.lottie.model.DocumentData,com.airbnb.lottie.model.Font,android.graphics.Matrix,android.graphics.Canvas)>
<com.google.android.gms.internal.measurement.zzha: void zzo(int,int)>
<com.adjust.sdk.AdjustInstance: void onResume()>
<ch.qos.logback.core.joran.event.SaxEventRecorder: void recordEvents(java.io.InputStream)>
<android.view.ViewGroup: int getRight()>
<android.util.JsonReader: java.lang.String nextString()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent)>
<com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener: void init(java.lang.String)>
<com.facebook.common.references.CloseableReference$2: void <init>()>
<com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding: android.widget.FrameLayout getRoot()>
<com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback: void <init>(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$1)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Object[] createTypedArray(android.os.Parcel,int,android.os.Parcelable$Creator)>
<com.google.android.gms.internal.measurement.zzg: void <init>(android.app.job.JobScheduler)>
<com.google.android.material.chip.ChipDrawable: boolean isCheckable()>
<com.facebook.react.fabric.mounting.MountingManager: void addRootView(int,android.view.View)>
<com.google.android.material.button.MaterialButtonHelper: void updateMaskBounds(int,int)>
<com.google.android.gms.internal.location.zzi: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener,java.lang.String,com.google.android.gms.common.internal.ClientSettings)>
<com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonNumbersToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<android.widget.FrameLayout: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.facebook.imagepipeline.producers.Consumer: void onFailure(java.lang.Throwable)>
<com.azure.authenticator.ui.Hilt_MainActivity: void inject()>
<com.google.android.gms.measurement.internal.zzi: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzs,com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setResourceId(java.lang.String)>
<androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()>
<ch.qos.logback.core.ContextBase: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>
<com.google.android.gms.common.images.WebImage: void <init>(int,android.net.Uri,int,int)>
<com.google.android.datatransport.cct.internal.AutoValue_LogResponse: void <init>(long)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setPressedTranslationZ(float)>
<com.google.android.gms.internal.measurement.zziz: java.lang.String zzd(java.lang.String)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getHardware()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setBaseAlpha(float)>
<com.facebook.react.ReactInstanceManager$4: void <init>(com.facebook.react.ReactInstanceManager,android.view.View)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel$fetchAppLockEnforcedPolicies$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzbr: boolean zzT()>
<com.google.android.gms.common.api.internal.GoogleApiManager: android.os.Handler zas(com.google.android.gms.common.api.internal.GoogleApiManager)>
<com.google.common.base.Splitter: boolean access$300(com.google.common.base.Splitter)>
<com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.Clock get()>
<com.microsoft.authenticator.di.DidAppModule_ProvideBottomNavBadgeHandlerFactory: com.microsoft.did.feature.notifications.BottomNavBadgeHandler provideBottomNavBadgeHandler(com.microsoft.authenticator.di.DidAppModule,com.microsoft.authenticator.common.abstraction.BottomNavigationController)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$002(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long)>
<com.google.android.gms.internal.measurement.zzda: int zzb()>
<com.github.amlcurran.showcaseview.ShowcaseAreaCalculator: boolean calculateShowcaseRect(float,float,com.github.amlcurran.showcaseview.ShowcaseDrawer)>
<com.fasterxml.jackson.core.io.IOContext: java.lang.Object getSourceReference()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$Builder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.google.android.material.chip.ChipDrawable$Delegate: void onChipDrawableSizeChange()>
<android.animation.ValueAnimator: void reverse()>
<com.google.android.gms.common.api.internal.zaa: void zac(java.lang.Runnable)>
<com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void <init>(com.facebook.react.bridge.CatalystInstanceImpl$1$1)>
<com.google.android.gms.measurement.internal.zzkf: long zzr(byte[])>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrollPerfLoggingEnabled()>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase: java.lang.Object registerSessionApprovalAccount(com.microsoft.onlineid.UserAccount,java.lang.String,com.microsoft.onlineid.Ticket,java.lang.String,boolean,com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry,kotlin.coroutines.Continuation)>
<com.google.android.material.internal.CheckableImageButton$SavedState: void readFromParcel(android.os.Parcel)>
<com.google.android.gms.internal.measurement.zzds: com.google.android.gms.internal.measurement.zzds zzg()>
<java.lang.InterruptedException: java.lang.String getMessage()>
<android.widget.LinearLayout: void onProvideAutofillStructure(android.view.ViewStructure,int)>
<java.util.ArrayDeque: boolean isEmpty()>
<com.facebook.common.memory.PooledByteBuffer: boolean isClosed()>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface: void setColor(android.view.View,java.lang.Integer)>
<ch.qos.logback.classic.LoggerContext: void fireOnReset()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int)>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
<com.facebook.react.animated.SubtractionAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.evernote.android.job.Job: com.evernote.android.job.Job$Result runJob()>
<com.adjust.sdk.InstallReferrer: long getReferrerClickTimestampSeconds(java.lang.Object)>
<com.facebook.react.bridge.CatalystInstanceImpl: void destroyV2()>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void <init>(com.facebook.react.bridge.ReactContext)>
<com.azure.authenticator.databinding.AddThirdPartyAccountBinding: com.azure.authenticator.databinding.AddThirdPartyAccountBinding bind(android.view.View)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>
<com.github.amlcurran.showcaseview.TextDrawer$NoOpSpan: void <init>(com.github.amlcurran.showcaseview.TextDrawer$1)>
<android.widget.Spinner: int getWidth()>
<java.lang.Character: int charCount(int)>
<com.google.android.gms.dynamic.FragmentWrapper: com.google.android.gms.dynamic.FragmentWrapper wrap(android.app.Fragment)>
<com.google.android.material.button.MaterialButtonToggleGroup: int access$502(com.google.android.material.button.MaterialButtonToggleGroup,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void injectAadTokenRefreshManager(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<android.widget.SeekBar: int getMeasuredHeight()>
<com.google.android.gms.internal.measurement.zzc: void zzb(android.os.Parcel,boolean)>
<com.google.android.gms.common.data.DataHolder$Builder: void <init>(java.lang.String[],java.lang.String,com.google.android.gms.common.data.zab)>
<ch.qos.logback.core.net.server.ServerListener: void close()>
<com.facebook.react.uimanager.MatrixMathHelper: double[] v3Combine(double[],double[],double,double)>
<java.util.concurrent.CopyOnWriteArrayList: java.util.List subList(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.generatepasswords.viewlogic.ViewGeneratedPasswordFragment injectViewGeneratedPasswordFragment2(com.microsoft.brooklyn.ui.generatepasswords.viewlogic.ViewGeneratedPasswordFragment)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$LINKS: java.lang.String getUrl()>
<com.airbnb.lottie.model.FontCharacter: int hashFor(char,java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding: android.widget.LinearLayout getRoot()>
<com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String,int)>
<com.google.android.gms.auth.api.accounttransfer.zzo: void <init>(int,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>
<com.google.android.gms.internal.measurement.zzby: boolean zzg()>
<ch.qos.logback.core.util.ContextUtil: void <init>(ch.qos.logback.core.Context)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: void <init>()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener: void enteredRunMethod()>
<com.airbnb.lottie.LottieDrawable: void pauseAnimation()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onFailure(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.lang.Throwable)>
<com.google.android.material.navigation.NavigationBarView: void setItemTextAppearanceActive(int)>
<com.google.android.gms.measurement.internal.zzal: void <init>(com.google.android.gms.measurement.internal.zzgg)>
<com.google.android.gms.internal.measurement.zzjj: com.google.android.gms.internal.measurement.zzji zza(java.lang.Class)>
<com.airbnb.lottie.model.content.RectangleShape: boolean isHidden()>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleAddView(android.view.View)>
<com.google.android.gms.common.data.AbstractDataBuffer: int getCount()>
<com.google.crypto.tink.Registry: java.lang.Object getPrimitiveInternal(java.lang.String,com.google.crypto.tink.shaded.protobuf.ByteString,java.lang.Class)>
<com.facebook.common.statfs.StatFsHelper: void ensureInitialized()>
<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: boolean isUnboundedTotalSizeCap()>
<com.microsoft.brooklyn.module.model.credentials.CredAutofillSaveMetadata: int hashCode()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)>
<ch.qos.logback.core.joran.GenericConfigurator: java.util.List recallSafeConfiguration()>
<android.widget.CheckBox: void onAttachedToWindow()>
<com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)>
<com.google.android.material.button.MaterialButton$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.facebook.react.animated.ValueAnimatedNode: void <init>()>
<com.google.android.gms.measurement.internal.zzda: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider signInViewModelProvider()>
<com.google.android.gms.internal.measurement.zzjq: java.util.Iterator zza()>
<com.google.crypto.tink.KeyManagerImpl$KeyFactoryHelper: com.google.crypto.tink.shaded.protobuf.MessageLite parseValidateCreate(com.google.crypto.tink.shaded.protobuf.ByteString)>
<com.google.android.gms.dynamite.DynamiteModule: android.content.Context getModuleContext()>
<com.azure.authenticator.databinding.FragmentSharedModeBinding: com.azure.authenticator.databinding.FragmentSharedModeBinding bind(android.view.View)>
<com.azure.authenticator.accounts.RestoreCapability: int getValue()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.feature.notifications.NotificationService access$5000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.airbnb.lottie.LottieTask: void access$200(com.airbnb.lottie.LottieTask,java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzja: java.lang.Object zza()>
<com.facebook.imagepipeline.producers.BaseConsumer: int turnOffStatusFlag(int,int)>
<com.google.android.gms.common.internal.zag: com.google.android.gms.common.internal.zag zab(android.app.Activity,android.content.Intent,int)>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInOnPremQrFragment_MembersInjector: void injectTelemetry(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInOnPremQrFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.internal.measurement.zzdo: void zzc(com.google.android.gms.internal.measurement.zzdo,com.google.android.gms.internal.measurement.zzdd)>
<com.google.android.material.button.MaterialButtonToggleGroup: com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int)>
<android.widget.HorizontalScrollView: void invalidate()>
<com.facebook.react.uimanager.events.EventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter)>
<com.microsoft.did.feature.cardflow.viewlogic.LoadRequestFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.cardflow.viewlogic.LoadRequestFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.gms.internal.measurement.zzkh: java.lang.Object zzc(java.lang.Class)>
<com.facebook.react.views.image.ReactImageView: boolean isTiled()>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean haveBoundsChanged()>
<com.facebook.common.logging.FLog: void i(java.lang.String,java.lang.String)>
<com.adjust.sdk.AdjustConfig: boolean checkAppToken(java.lang.String)>
<com.google.android.gms.common.internal.GmsLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.storage.ImageStorage: android.graphics.Bitmap readFile(java.lang.String)>
<com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<com.google.android.gms.safetynet.SafetyNetClient: void <init>(android.content.Context)>
<ch.qos.logback.classic.jul.LevelChangePropagator: void propagateExistingLoggerLevels()>
<android.app.Fragment: void startActivity(android.content.Intent)>
<android.widget.TextView: int getTotalPaddingTop()>
<com.google.android.gms.internal.maps.zzk: void zzf(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.gms.maps.internal.zzbg: void <init>()>
<com.google.android.gms.measurement.internal.zzhn: java.util.ArrayList zzP(java.lang.String,java.lang.String)>
<androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.microsoft.authenticator.workaccount.entities.GetWpjUpnStatus$Error: com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException getException()>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$1800(com.facebook.react.uimanager.UIViewOperationQueue)>
<android.widget.Button: int getHeight()>
<ch.qos.logback.core.pattern.parser.TokenStream: void addValuedToken(int,java.lang.StringBuffer,java.util.List)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void fetchSync(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<android.widget.EditText: int getSelectionEnd()>
<com.google.android.material.tabs.TabLayout: void addTabFromItemView(com.google.android.material.tabs.TabItem)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager access$getAadTokenRefreshManager$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.microsoft.ngc.provider.cryptography.NgcCredentialManager: void deleteKeyPair(java.lang.String)>
<com.facebook.react.modules.core.JavaTimerManager: java.lang.Object access$1300(com.facebook.react.modules.core.JavaTimerManager)>
<android.graphics.Paint: int getAlpha()>
<com.adjust.sdk.ActivityHandler: void setAskingAttributionI(boolean)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzE()>
<com.airbnb.lottie.LottieTask$1: void <init>(com.airbnb.lottie.LottieTask)>
<com.airbnb.lottie.animation.content.BaseStrokeContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,android.graphics.Paint$Cap,android.graphics.Paint$Join,float,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,java.util.List,com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<com.google.android.gms.internal.measurement.zzdb: void zzo(com.google.android.gms.internal.measurement.zzdb,com.google.android.gms.internal.measurement.zzdf)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: java.util.Map getExtraMap(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.transcoder.ImageTranscodeResult,java.lang.String)>
<com.google.android.gms.maps.internal.zzay: void <init>()>
<com.adjust.sdk.ActivityHandler: void readSessionPartnerParametersI(android.content.Context)>
<ch.qos.logback.core.net.SMTPAppenderBase: java.lang.String getSmtpHost()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setFixedHeight(int)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.android.gms.measurement.internal.zzdm: void <init>()>
<android.widget.CheckBox: void setEllipsize(android.text.TextUtils$TruncateAt)>
<com.google.android.material.textfield.TextInputLayout: int getLabelRightBoundAlignedWithSuffix(int,boolean)>
<com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.microsoft.authenticator.authentication.aad.entities.IAuthenticationResultWrapper: java.lang.String getAccessToken()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectNotificationHelper(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.google.android.gms.common.server.response.FastJsonResponse: java.lang.Object zaD(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)>
<com.google.android.gms.maps.model.PolylineOptions: boolean isVisible()>
<java.lang.Iterable: java.util.Iterator iterator()>
<android.app.NotificationChannel: void setName(java.lang.CharSequence)>
<com.google.android.gms.common.api.internal.GoogleApiManager: long zav(com.google.android.gms.common.api.internal.GoogleApiManager)>
<android.widget.HorizontalScrollView: android.os.IBinder getWindowToken()>
<com.facebook.react.bridge.NativeModuleCallExceptionHandler: void handleException(java.lang.Exception)>
<com.google.android.material.resources.TextAppearanceConfig: boolean shouldLoadFontSynchronously()>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.String capitalizeFirstLetter(java.lang.String)>
<com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: void <init>(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource)>
<com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object getOrThrow()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$Builder builder()>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: boolean getMethodInvocationTelemetryEnabled()>
<com.google.android.gms.internal.measurement.zzgx: void zzn(long)>
<com.google.android.gms.internal.maps.zzaa: com.google.android.gms.internal.maps.zzz zzi(android.os.IBinder)>
<com.google.android.gms.internal.auth-api.zzap: void <init>(com.google.android.gms.internal.auth-api.zzak,com.google.android.gms.tasks.TaskCompletionSource)>
<com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager: void <init>(android.content.Context,com.microsoft.brooklyn.module.common.BrooklynStorage,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.brooklyn.config.BrooklynConfig,com.microsoft.brooklyn.common.BrooklynMSASignOutUseCase,com.microsoft.brooklyn.module.enterpriseDenyList.persistence.EnterpriseDenyListStorage,com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingHandler)>
<androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()>
<com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>
<com.azure.authenticator.accounts.GenericAccount: void setIsTotpCodeEncrypted(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardflow.presentationlogic.CardFlowViewModel cardFlowViewModel()>
<com.facebook.react.modules.core.JavaTimerManager: void onHostDestroy()>
<okhttp3.WebSocket: boolean close(int,java.lang.String)>
<ch.qos.logback.classic.LoggerContext: java.util.List getFrameworkPackages()>
<com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.airbnb.lottie.model.content.GradientColor: int[] getColors()>
<com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType[] values()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void processFREArguments(android.os.Bundle)>
<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenHeight()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>
<android.text.Layout: int getLineBaseline(int)>
<android.os.SystemClock: long uptimeMillis()>
<java.util.ArrayDeque: int size()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.String[] createStringArray(android.os.Parcel,int)>
<com.evernote.android.job.JobRequest$Builder: void access$2200(com.evernote.android.job.JobRequest$Builder,android.content.ContentValues)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>
<com.google.android.gms.cloudmessaging.Rpc: void zza(com.google.android.gms.cloudmessaging.Rpc,android.os.Message)>
<com.google.android.gms.common.api.internal.DataHolderNotifier: void notifyListener(java.lang.Object,com.google.android.gms.common.data.DataHolder)>
<com.facebook.react.views.checkbox.ReactCheckBoxEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildBySeconds(double)>
<com.airbnb.lottie.model.content.ShapeStroke: java.lang.String getName()>
<com.facebook.react.ReactDelegate: void onHostPause()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.accountFullscreen.abstraction.AccountActionsAdapter access$5300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void setEndIconChecked(boolean)>
<android.os.Parcel: long[] createLongArray()>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<com.adjust.sdk.IActivityHandler: void setEnabled(boolean)>
<com.airbnb.lottie.utils.BaseLottieAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean hasShot()>
<com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)>
<com.google.android.material.internal.TextDrawableHelper: void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)>
<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void incrementCoalescingKey(long)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$handleDenyNgcResult$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,kotlin.coroutines.Continuation)>
<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void <init>()>
<com.facebook.imageutils.TiffUtil: int getOrientationFromTiffEntry(java.io.InputStream,int,boolean)>
<com.google.android.gms.measurement.internal.zzai: void zzz(java.util.List)>
<com.adjust.sdk.ActivityHandler: void processCachedDeeplinkI()>
<com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)>
<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzw()>
<com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: void <init>(java.lang.String,int)>
<java.util.ArrayList: void add(int,java.lang.Object)>
<com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker: void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1)>
<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions: java.lang.String getServerClientId()>
<com.google.android.gms.internal.measurement.zzdr: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.google.common.io.BaseEncoding$Alphabet: boolean equals(java.lang.Object)>
<com.google.android.gms.internal.auth.zzav: void <init>(com.google.android.gms.internal.auth.zzau)>
<com.facebook.imagepipeline.producers.Consumer: void onNewResult(java.lang.Object,int)>
<com.google.android.material.animation.AnimationUtils: float lerp(float,float,float)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: com.microsoft.onlineid.SecurityScope access$getSecurityScope$p(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker)>
<com.google.android.gms.internal.measurement.zzbr: boolean zzM(com.google.android.gms.internal.measurement.zzbr,java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String valueOf(long)>
<androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaE(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)>
<java.nio.channels.FileChannel: void close()>
<com.airbnb.lottie.model.animatable.AnimatablePathValue: java.util.List getKeyframes()>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setDisabled(android.view.View,boolean)>
<com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)>
<com.facebook.react.modules.core.JavaTimerManager: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.JavaScriptTimerManager,com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.devsupport.interfaces.DevSupportManager)>
<com.google.android.gms.signin.zaa: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzdj zzak()>
<com.google.android.gms.maps.model.IndoorBuilding$zza: void <init>()>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>
<com.google.android.gms.common.util.ArrayUtils: boolean contains(int[],int)>
<com.google.android.gms.tasks.zzf: com.google.android.gms.tasks.Continuation zzc(com.google.android.gms.tasks.zzf)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel$allAccountsObserver$1: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_7_8()>
<com.azure.authenticator.storage.database.AppDatabase: com.azure.authenticator.storage.database.AppDatabase access$getINSTANCE$cp()>
<com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOffset()>
<com.facebook.react.CoreModulesPackage$2: void <init>(com.facebook.react.CoreModulesPackage)>
<com.facebook.imagepipeline.platform.DefaultDecoder: android.graphics.BitmapFactory$Options getDecodeOptionsForStream(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$1: java.lang.Boolean get()>
<android.graphics.Matrix: void setRotate(float)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int)>
<com.google.android.gms.measurement.internal.zzew: java.lang.String zza()>
<com.google.android.gms.internal.location.zzam: void zzi(com.google.android.gms.location.ActivityTransitionRequest,android.app.PendingIntent,com.google.android.gms.common.api.internal.IStatusCallback)>
<com.google.android.material.textfield.TextInputLayout$SavedState$1: com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<com.google.android.material.tabs.TabLayout: int getTabCount()>
<com.azure.authenticator.logging.ExternalLogger: com.azure.authenticator.logging.ExternalLogger$MsaLogInstance getMsaLogInstance()>
<dagger.internal.Preconditions: java.lang.Object checkNotNullFromProvides(java.lang.Object)>
<com.facebook.drawee.drawable.ScaleTypeDrawable: void configureBounds()>
<android.util.LongSparseArray: void <init>()>
<androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void <init>(int,int)>
<com.google.android.gms.common.server.response.FastParser: double zad(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()>
<com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy update()>
<com.google.android.gms.common.data.DataBufferObserver: void onDataRangeMoved(int,int,int)>
<com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.io.File createTempFile(java.io.File)>
<com.airbnb.lottie.parser.GradientColorParser: void addOpacityStopsToGradientIfNeeded(com.airbnb.lottie.model.content.GradientColor,java.util.List)>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager_Factory: com.azure.authenticator.ui.action.UserInteractionRequiredActionManager newInstance(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.microsoft.authenticator.backup.abstraction.AutoBackupManager)>
<android.content.Intent: boolean hasExtra(java.lang.String)>
<com.google.android.gms.measurement.internal.zzg: void zzak(java.util.List)>
<com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RemoteCall zac(com.google.android.gms.common.api.internal.RegistrationMethods$Builder)>
<android.widget.FrameLayout: void setVisibility(int)>
<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment_MembersInjector: void injectRegisterAadMfaAccountManager(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment,com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager)>
<com.google.android.gms.internal.measurement.zzcz: void <init>()>
<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(java.lang.String,java.lang.String)>
<com.google.android.material.tabs.TabLayout: boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab)>
<com.google.android.gms.internal.measurement.zzln: void <init>()>
<android.widget.RelativeLayout: void getLocationInWindow(int[])>
<android.animation.Animator: void setStartDelay(long)>
<com.airbnb.lottie.LottieDrawable: float getMaxScale(android.graphics.Canvas)>
<com.google.android.gms.internal.maps.zzh: void setClickable(boolean)>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart: void <init>()>
<android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>
<com.facebook.drawee.backends.pipeline.Fresco: com.facebook.imagepipeline.core.ImagePipelineFactory getImagePipelineFactory()>
<com.facebook.react.uimanager.UIViewOperationQueue: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)>
<com.evernote.android.job.JobConfig: boolean isForceRtc()>
<com.google.common.io.BaseEncoding$Alphabet: java.lang.String toString()>
<com.google.android.material.datepicker.MaterialDatePicker: void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton)>
<com.google.android.gms.internal.auth-api-phone.zzf: void <init>(android.os.IBinder)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getActivatedDeviceToken()>
<com.google.android.gms.safetynet.SafetyNetApi: com.google.android.gms.common.api.PendingResult isVerifyAppsEnabled(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.common.internal.zzx: void <init>()>
<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1$1: void <init>(kotlin.coroutines.Continuation)>
<ch.qos.logback.classic.LoggerContext: void initEvaluatorMap()>
<com.adjust.sdk.AdjustAttribution: com.adjust.sdk.AdjustAttribution fromJson(org.json.JSONObject,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.maps.zzz: void setVisible(boolean)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment: void toastNotificationSwitch(java.lang.String,boolean)>
<com.google.common.base.Splitter$SplittingIterator: java.lang.String computeNext()>
<com.facebook.imagepipeline.core.DiskStorageCacheFactory: com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage)>
<android.app.Fragment: boolean isDetached()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.accounts.Account getAccount()>
<java.io.Reader: void <init>()>
<com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)>
<com.facebook.soloader.UnpackingSoSource$1: void <init>(com.facebook.soloader.UnpackingSoSource,java.io.File,byte[],com.facebook.soloader.UnpackingSoSource$DsoManifest,java.io.File,com.facebook.soloader.FileLocker)>
<com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale)>
<com.facebook.react.modules.network.OkHttpClientFactory: okhttp3.OkHttpClient createNewNetworkModuleClient()>
<com.azure.authenticator.databinding.AddressDataPlaceholderLayoutBinding: com.azure.authenticator.databinding.AddressDataPlaceholderLayoutBinding bind(android.view.View)>
<com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback: void <init>(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.bottomsheet.BottomSheetDialog$1)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureBrooklynEnterpriseControls$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel,kotlin.coroutines.Continuation)>
<java.util.concurrent.Semaphore: void release()>
<ch.qos.logback.classic.Logger: void recursiveReset()>
<com.google.android.gms.maps.model.CircleOptions: boolean isVisible()>
<java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>
<com.facebook.imageutils.BitmapUtil: int getPixelSizeForBitmapConfig(android.graphics.Bitmap$Config)>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction$onActionTriggered$backgroundDataUsageDialogBuilder$1: void <init>(com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction,android.content.Context)>
<android.text.Editable: int length()>
<dagger.hilt.internal.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>
<com.google.android.gms.common.server.response.zan: java.lang.String zaf()>
<android.widget.ImageView: boolean isInEditMode()>
<com.google.android.gms.measurement.internal.zzjb: void zzq(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.zaco zac(android.content.Context,android.os.Handler)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.utilitysdk.UtilitySDKConnector utilitySDKConnector()>
<com.azure.authenticator.authentication.msa.MsaAccountManager: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase access$getMsaAccountUseCase$p(com.azure.authenticator.authentication.msa.MsaAccountManager)>
<com.google.android.gms.cloudmessaging.zze: android.content.Context zza(com.google.android.gms.cloudmessaging.zze)>
<com.google.android.material.internal.CheckableImageButton$SavedState$1: void <init>()>
<com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder: void <init>(android.widget.LinearLayout,boolean)>
<com.azure.authenticator.databinding.FragmentAddCredentialBinding: void <init>(android.widget.ScrollView,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,android.widget.AutoCompleteTextView,com.google.android.material.textfield.TextInputLayout,android.widget.AutoCompleteTextView,com.google.android.material.textfield.TextInputLayout,android.widget.ImageView,androidx.cardview.widget.CardView,android.widget.ImageView,android.widget.RelativeLayout)>
<com.airbnb.lottie.LottieComposition: void setHasDashPattern(boolean)>
<androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)>
<com.google.android.gms.measurement.internal.zzau: void <init>()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegmentASCII(int,int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>
<com.evernote.android.job.v14.PlatformAlarmReceiver: android.content.Intent createIntent(android.content.Context,int,boolean,android.os.Bundle)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment)>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setTestID(android.view.View,java.lang.String)>
<android.os.DeadObjectException: void <init>()>
<com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: void <init>()>
<com.airbnb.lottie.model.layer.Layer: java.util.List getInOutKeyframes()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1: void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer)>
<com.google.android.gms.internal.ads_identifier.zzf: com.google.android.gms.internal.ads_identifier.zze zza(android.os.IBinder)>
<com.facebook.react.animated.PropsAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.bridge.UIManager)>
<com.facebook.imagepipeline.producers.ThreadHandoffProducer: void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue)>
<com.facebook.react.bridge.ReactContext: void destroy()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase: void <init>()>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zae(java.lang.String)>
<com.microsoft.did.di.VcWalletModule_ProvideBackupAndRestoreServiceFactory: com.microsoft.did.sdk.BackupService provideBackupAndRestoreService(com.microsoft.did.di.VcWalletModule)>
<com.facebook.yoga.YogaConfigJNIFinalizer: void <init>()>
<com.google.android.gms.measurement.internal.zzae: double zzm(java.lang.String,com.google.android.gms.measurement.internal.zzdv)>
<com.azure.authenticator.Hilt_OnAppUpgradeReceiver: void <init>()>
<android.view.View$BaseSavedState: void <init>(android.os.Parcelable)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)>
<com.google.common.collect.ImmutableSet: void <init>()>
<com.facebook.drawee.drawable.ArrayDrawable$1: void <init>(com.facebook.drawee.drawable.ArrayDrawable,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$generateBackupAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>
<java.io.File: boolean renameTo(java.io.File)>
<com.facebook.imagepipeline.nativecode.WebpTranscoder: void transcodeWebpToPng(java.io.InputStream,java.io.OutputStream)>
<com.facebook.react.uimanager.util.ReactFindViewUtil: java.lang.String getNativeId(android.view.View)>
<com.google.android.gms.stats.WakeLock: void zza(com.google.android.gms.stats.WakeLock,int)>
<com.adjust.sdk.PackageBuilder: void addDate(java.util.Map,java.lang.String,java.util.Date)>
<com.azure.authenticator.storage.Storage: void setAddAccountAdjustUniqueEventKey()>
<com.evernote.android.job.Job$Params: void <init>(com.evernote.android.job.JobRequest,android.os.Bundle,com.evernote.android.job.Job$1)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.msa.abstraction.MsaAccountActivityLauncher msaAccountActivityLauncher()>
<com.adjust.sdk.ActivityHandler: void prepareDeeplinkI(android.net.Uri,android.os.Handler)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void showHideDropdown(android.widget.AutoCompleteTextView)>
<com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.components.RetryManager getRetryManager()>
<com.google.android.gms.internal.measurement.zzbw: boolean zzj()>
<com.google.android.gms.measurement.internal.zzar: void <init>()>
<com.google.android.gms.common.internal.Asserts: void checkNotMainThread(java.lang.String)>
<com.google.android.gms.common.internal.zak: void zac(android.os.Bundle)>
<java.io.File: boolean isDirectory()>
<com.facebook.react.uimanager.UIViewOperationQueue: boolean access$2502(com.facebook.react.uimanager.UIViewOperationQueue,boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)>
<com.evernote.android.job.JobExecutor: void cleanUpRoutine(android.util.LruCache)>
<com.azure.authenticator.storage.Storage: void setMsaRefreshUserDaWorkerLastExecutionTimeKey(long)>
<com.google.android.gms.internal.measurement.zzff: void <init>()>
<com.adjust.sdk.AdjustInstance: void removeSessionPartnerParameter(java.lang.String)>
<com.google.android.material.navigation.NavigationBarPresenter: void <init>()>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void <init>(android.content.Context,android.os.Looper,java.lang.String,java.lang.String,android.content.ComponentName,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.Encoding getEncoding()>
<android.widget.GridView: int getWidth()>
<com.google.android.gms.common.api.internal.zaco: com.google.android.gms.common.api.internal.zacn zae(com.google.android.gms.common.api.internal.zaco)>
<android.database.CursorWrapper: boolean moveToPosition(int)>
<android.view.VelocityTracker: float getYVelocity(int)>
<com.facebook.react.views.scroll.ScrollEvent: void <init>()>
<com.microsoft.brooklyn.ui.settings.EnterpriseSettingsHandler: void configureBrooklynEnterpriseAutofillDataFeatures(androidx.preference.Preference,androidx.preference.Preference,androidx.preference.SwitchPreference,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.google.android.material.animation.MatrixEvaluator: void <init>()>
<ch.qos.logback.core.sift.Discriminator: java.lang.String getKey()>
<com.google.android.gms.internal.auth.zzz: void zza(com.google.android.gms.internal.auth.zzx,com.google.android.gms.internal.auth.zzah)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.abstraction.ExperimentationWorker_AssistedFactory experimentationWorker_AssistedFactory()>
<com.evernote.android.job.JobRequest: long getStartMs()>
<com.google.android.gms.internal.measurement.zzho: com.google.android.gms.internal.measurement.zzho zzay()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)>
<com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)>
<com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.animatable.AnimatableShapeValue getMaskPath()>
<androidx.activity.ComponentActivity: void setContentView(int)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getCountry()>
<ch.qos.logback.core.html.CssBuilder: void addCss(java.lang.StringBuilder)>
<com.azure.authenticator.ui.fragment.main.ThirdPartyNoticeFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<android.widget.TextView: void announceForAccessibility(java.lang.CharSequence)>
<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)>
<com.airbnb.lottie.model.animatable.AnimatableFloatValue: boolean isStatic()>
<com.google.android.gms.common.api.internal.zabr: void <init>(com.google.android.gms.common.api.internal.zabq)>
<com.adjust.sdk.IActivityHandler: boolean isEnabled()>
<com.azure.authenticator.accounts.GenericAccount: com.azure.authenticator.accounts.AccountCapability getCapability()>
<androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)>
<com.facebook.cache.common.NoOpCacheEventListener: void <init>()>
<com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener: void onRequestClose(android.content.DialogInterface)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.commonuilibrary.util.NotificationHelper access$getNotificationHelper$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.interfaces.DraweeController getOldController()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_3fast(int)>
<com.facebook.react.uimanager.UIImplementation: void calculateRootLayout(com.facebook.react.uimanager.ReactShadowNode)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int tertiaryCount()>
<com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()>
<com.facebook.react.views.text.ReactAbsoluteSizeSpan: void <init>(int)>
<com.facebook.drawee.controller.AbstractDraweeController: void setGestureDetector(com.facebook.drawee.gestures.GestureDetector)>
<com.airbnb.lottie.model.content.ShapeFill: java.lang.String getName()>
<com.microsoft.authenticator.notifications.controller.FcmTokenDailyRetryRefreshWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setAccessibilityRole(android.view.View,java.lang.String)>
<com.google.common.collect.ImmutableMap$Builder: void <init>()>
<com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.ui.settings.EnterpriseSettingsHandler enterpriseSettingsHandler()>
<com.adjust.sdk.UtilNetworking: com.adjust.sdk.ResponseData createPOSTHttpsURLConnection(java.lang.String,com.adjust.sdk.ActivityPackage,int)>
<com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)>
<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()>
<com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task remove(com.facebook.cache.common.CacheKey)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections$ActionAccountListFragmentToFullscreenAccountPage: void <init>(long,com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections$1)>
<com.google.android.gms.internal.measurement.zzjk: void zzW(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$showRegisterButton$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,java.lang.String,java.lang.String)>
<com.adjust.sdk.ActivityHandler$24: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.material.chip.ChipDrawable: boolean hasState(int[],int)>
<com.google.android.gms.auth.api.signin.internal.zzh: void <init>(com.google.android.gms.common.api.GoogleApiClient,android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.facebook.react.jscexecutor.JSCExecutorFactory: void <init>(java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.PaymentInfoBottomSheetLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.facebook.react.modules.camera.ImageEditingManager: java.lang.String getFileExtensionForType(java.lang.String)>
<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>
<ch.qos.logback.core.pattern.SpacePadder: void spacePad(java.lang.StringBuilder,int)>
<com.google.android.gms.auth.api.accounttransfer.zzt: void <init>(java.util.Set,int,java.lang.String,int,byte[],android.app.PendingIntent,com.google.android.gms.auth.api.accounttransfer.DeviceMetaData)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeLongString(java.lang.String)>
<com.evernote.android.job.JobProxy$Common: com.evernote.android.job.JobRequest getPendingRequest(boolean,boolean)>
<androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)>
<com.google.android.gms.measurement.internal.zzjb: void zzu()>
<ch.qos.logback.classic.android.SQLiteAppender: void bindString(android.database.sqlite.SQLiteStatement,int,java.lang.String)>
<com.google.android.datatransport.runtime.util.PriorityMapping: com.google.android.datatransport.Priority valueOf(int)>
<android.widget.Button: void refreshDrawableState()>
<com.google.android.gms.common.internal.ClientSettings: java.lang.String getRealClientPackageName()>
<com.fasterxml.jackson.core.util.TextBuffer: char[] getTextBuffer()>
<com.google.android.gms.internal.safetynet.zzn: void <init>(com.google.android.gms.common.api.GoogleApiClient,int[],int,java.lang.String,java.lang.String)>
<com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_18_19()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$3: void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean)>
<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String)>
<com.facebook.imagepipeline.memory.BasePool: boolean isMaxSizeSoftCapExceeded()>
<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String,java.lang.Throwable)>
<com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon()>
<java.util.Collection: java.lang.Object[] toArray()>
<com.facebook.react.views.scroll.ReactScrollView: void handlePostTouchScrolling(int,int)>
<com.facebook.react.views.switchview.ReactSwitchEvent: boolean getIsChecked()>
<com.google.android.gms.internal.measurement.zzcz: long zzd()>
<com.azure.authenticator.common.Util$Companion: void copyTextToClipboard(java.lang.String,android.view.View,int,int)>
<com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()>
<com.google.android.gms.internal.measurement.zzmq: boolean zzb()>
<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>
<bolts.AndroidExecutors$UIThreadExecutor: void <init>()>
<com.google.android.gms.internal.common.zzq: boolean zzf()>
<com.google.android.gms.measurement.internal.zzkf: java.lang.String zzE(boolean,boolean,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.account.businessLogic.MfaStateUseCase mfaStateUseCase()>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void handleCancellation()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.persistence.AppIdDomainStorage appIdDomainStorage()>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object performWorkplaceJoin(com.azure.authenticator.ui.RootActivityBase,boolean,java.lang.String,kotlin.coroutines.Continuation)>
<com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: void <init>()>
<com.facebook.imagepipeline.transcoder.ImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)>
<com.google.android.material.chip.ChipDrawable: void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)>
<com.google.android.gms.internal.maps.zzh: java.util.List getStrokePattern()>
<com.azure.authenticator.accounts.AadAccount: void setTenantId(java.lang.String)>
<com.google.android.gms.internal.measurement.zzmp: boolean zzd()>
<com.google.android.gms.internal.measurement.zzho: com.google.android.gms.internal.measurement.zzho zzaB(com.google.android.gms.internal.measurement.zzhs)>
<ch.qos.logback.core.pattern.Converter: void <init>()>
<android.widget.CheckBox: void onRtlPropertiesChanged(int)>
<com.google.android.gms.internal.measurement.zzdu: void zzo(com.google.android.gms.internal.measurement.zzdu,java.lang.String)>
<com.google.android.gms.internal.measurement.zzgf: int zzl(byte[],int,com.google.android.gms.internal.measurement.zzhz,com.google.android.gms.internal.measurement.zzge)>
<com.google.android.gms.internal.common.zzl: void zzc(int,int,int)>
<ch.qos.logback.classic.sift.SiftingAppender: long getTimestamp(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.fasterxml.jackson.core.io.UTF32Reader: int read(char[],int,int)>
<com.google.android.gms.auth.api.identity.SavePasswordResult: android.app.PendingIntent getPendingIntent()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setTestId(android.view.View,java.lang.String)>
<android.view.ViewGroup: void removeViewAt(int)>
<com.google.android.gms.measurement.internal.zzje: void <init>(com.google.android.gms.measurement.internal.zzjh,com.google.android.gms.measurement.internal.zzei,android.app.job.JobParameters)>
<android.widget.EditText: void setMinLines(int)>
<com.facebook.datasource.DataSubscriber: void onCancellation(com.facebook.datasource.DataSource)>
<android.widget.CheckBox: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.gms.common.api.internal.zacr: void <init>(com.google.android.gms.common.api.internal.TaskApiCall$Builder,com.google.android.gms.common.Feature[],boolean,int)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice()>
<android.net.Uri: android.net.Uri normalizeScheme()>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)>
<com.google.android.material.stateful.ExtendableSavedState$1: void <init>()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWSOrEnd()>
<ch.qos.logback.classic.net.ReceiverBase: void <init>()>
<android.widget.HorizontalScrollView: void requestLayout()>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.widget.AutoCompleteTextView: android.view.ViewParent getParent()>
<com.facebook.react.fabric.mounting.MountingManager: void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper)>
<com.google.android.gms.internal.measurement.zzbr: void zzk(android.os.Bundle)>
<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>
<com.airbnb.lottie.manager.FontAssetManager: void <init>(android.graphics.drawable.Drawable$Callback,com.airbnb.lottie.FontAssetDelegate)>
<com.google.android.gms.measurement.internal.zzei: long zzs(com.google.android.gms.measurement.internal.zzei)>
<com.google.android.gms.internal.measurement.zzp: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)>
<com.facebook.react.uimanager.ReactShadowNode: void calculateLayout(float,float)>
<com.google.android.gms.internal.measurement.zzda: long zzp()>
<java.io.PrintStream: void write(byte[])>
<com.google.android.gms.internal.measurement.zzco: java.util.List zzd()>
<java.lang.reflect.Constructor: void setAccessible(boolean)>
<com.azure.authenticator.notifications.msa.MsaProtectionNotification: void <init>(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.facebook.react.bridge.NativeArgumentsParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: java.util.List getListOfEntropies()>
<ch.qos.logback.core.spi.LogbackLock: void <init>()>
<com.google.android.gms.common.api.internal.BackgroundDetector: void <init>()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<android.os.PersistableBundle: int getInt(java.lang.String)>
<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: java.util.concurrent.Future renameRawAndAsyncCompress(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzcd: boolean zze()>
<okhttp3.ResponseBody: okio.BufferedSource source()>
<com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails: void setLatitude(java.lang.Double)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getAadAuthority()>
<com.google.android.gms.common.data.BitmapTeleporter: void <init>(int,android.os.ParcelFileDescriptor,int)>
<com.facebook.react.views.text.ReactTextShadowNode: android.text.Layout access$100(com.facebook.react.views.text.ReactTextShadowNode,android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode)>
<com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>
<com.adjust.sdk.DeviceInfo: java.lang.String getDeviceManufacturer()>
<com.google.android.gms.internal.common.zza: android.os.Parcel zzB(int,android.os.Parcel)>
<com.facebook.react.TurboReactPackage$1: void <init>(com.facebook.react.TurboReactPackage,java.util.Iterator,com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.core.spi.AbstractComponentTracker: boolean isEntryDoneLingering(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.viewlogic.LoadRequestFragment injectLoadRequestFragment2(com.microsoft.did.feature.cardflow.viewlogic.LoadRequestFragment)>
<com.facebook.react.bridge.ModuleSpec: void <init>(javax.inject.Provider)>
<com.facebook.react.views.modal.ReactModalHostView: void updateProperties()>
<android.widget.Spinner: int getLeft()>
<com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])>
<com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: java.lang.Float getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean access$400(com.google.android.material.button.MaterialButtonToggleGroup)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache getBitmapMemoryCache()>
<com.facebook.react.bridge.Promise: void resolve(java.lang.Object)>
<java.lang.Math: int round(float)>
<com.google.android.gms.measurement.internal.zzaf: java.lang.Boolean zzg()>
<com.google.android.gms.common.api.Batch: void zag(com.google.android.gms.common.api.Batch)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<java.util.Map: int hashCode()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager access$getBrooklynEnterpriseConfigManager$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.google.android.gms.internal.measurement.zzcf: void zzk(com.google.android.gms.internal.measurement.zzcf,java.lang.String)>
<android.net.Uri: java.lang.String toString()>
<com.facebook.imagepipeline.image.CloseableImage: void close()>
<android.view.View: void onLayout(boolean,int,int,int,int)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper zoomIn()>
<com.google.android.material.textfield.IndicatorViewController: void cancelCaptionAnimator()>
<java.lang.Math: double atan2(double,double)>
<okio.Options: okio.Options of(okio.ByteString[])>
<com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>
<com.evernote.android.job.JobRequest$BackoffPolicy: com.evernote.android.job.JobRequest$BackoffPolicy[] values()>
<com.google.android.gms.maps.internal.zzl: void onCameraChange(com.google.android.gms.maps.model.CameraPosition)>
<android.graphics.Matrix: boolean preScale(float,float)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.memory.PooledByteBufferFactory access$200(com.facebook.imagepipeline.producers.WebpTranscodeProducer)>
<com.google.android.material.resources.TextAppearance$1: void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback)>
<ch.qos.logback.core.pattern.parser.FormattingNode: void setFormatInfo(ch.qos.logback.core.pattern.FormatInfo)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onStateChanged(android.view.View,int)>
<com.azure.authenticator.databinding.PaymentInfoBottomSheetLayoutBinding: com.azure.authenticator.databinding.PaymentInfoBottomSheetLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.common.logging.FLog: void wtf(java.lang.Class,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.measurement.internal.zzfl: void zzJ()>
<com.google.android.gms.internal.measurement.zzkw: boolean zzc()>
<com.google.android.datatransport.cct.internal.LogRequest: long getRequestTimeMs()>
<com.evernote.android.job.JobRequest$Builder: void <init>(com.evernote.android.job.JobRequest$Builder,com.evernote.android.job.JobRequest$1)>
<androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()>
<com.airbnb.lottie.model.FontCharacter: java.util.List getShapes()>
<com.facebook.react.modules.core.ReactChoreographer$2: void <init>(com.facebook.react.modules.core.ReactChoreographer,java.lang.Runnable)>
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.util.ArrayList getScopes()>
<com.google.android.gms.location.GeofencingRequest$Builder: com.google.android.gms.location.GeofencingRequest$Builder addGeofences(java.util.List)>
<com.google.android.gms.common.internal.PendingResultUtil$ResultConverter: java.lang.Object convert(com.google.android.gms.common.api.Result)>
<kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNodeImpl)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: int getNumJSFrames()>
<java.lang.Byte: byte byteValue()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$validateWpjNgcAccount$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment$Flow: void <init>(java.lang.String,int)>
<com.airbnb.lottie.FontAssetDelegate: java.lang.String getFontPath(java.lang.String)>
<com.google.android.gms.common.api.internal.zaaz: void <init>(android.content.Context,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.GoogleApiAvailability,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.Map,java.util.List,java.util.List,java.util.Map,int,int,java.util.ArrayList)>
<com.facebook.yoga.YogaAlign: int intValue()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_Factory: com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel get()>
<com.google.android.gms.common.api.PendingResult: void addStatusListener(com.google.android.gms.common.api.PendingResult$StatusListener)>
<com.azure.authenticator.OnAppUpgradeReceiver$setFingerprintPreferenceIfNecessary$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.material.tabs.TabLayout$TabView: void access$400(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas)>
<com.google.android.gms.internal.measurement.zzby: boolean zzc()>
<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void <init>(com.facebook.react.bridge.ReactContext)>
<android.widget.GridView: void onDraw(android.graphics.Canvas)>
<com.google.android.gms.internal.measurement.zzcv: com.google.android.gms.internal.measurement.zzcv zza(int)>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getEnabledProtocols()>
<com.microsoft.onlineid.UserCookie: java.lang.String toHttpHeader()>
<androidx.appcompat.widget.AppCompatEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient$zzc: int[] zzm()>
<androidx.preference.Preference: void setSummary(int)>
<com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: void <init>(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void setEditMode(boolean)>
<com.facebook.react.views.text.TextAttributes: float getFontSize()>
<android.os.Looper: void quit()>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getVerificationSign1()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections$ActionAccountListFragmentToFullscreenAccountPage: int getActionId()>
<android.graphics.Rect: void <init>()>
<com.facebook.drawee.drawable.Rounded: void setRadius(float)>
<com.google.android.gms.common.data.DataHolder: int getStatusCode()>
<com.facebook.yoga.YogaConfig: void <init>()>
<javax.net.ssl.SSLSocket: void connect(java.net.SocketAddress)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_10_11$cp()>
<com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>
<com.google.android.material.chip.ChipDrawable: void updateCompatRippleColor()>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)>
<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
<com.google.android.gms.measurement.internal.zzkk: java.net.URL zzal(long,java.lang.String,java.lang.String,long)>
<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
<com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.core.OutputStreamAppender: void start()>
<com.airbnb.lottie.value.Keyframe: float getStartProgress()>
<com.airbnb.lottie.LottieAnimationView$2: void onResult(com.airbnb.lottie.LottieComposition)>
<org.slf4j.event.LoggingEvent: java.lang.Throwable getThrowable()>
<com.google.android.gms.common.internal.zag: com.google.android.gms.common.internal.zag zad(com.google.android.gms.common.api.internal.LifecycleFragment,android.content.Intent,int)>
<android.os.Parcel: void writeDouble(double)>
<com.airbnb.lottie.parser.AnimatablePathValueParser: com.airbnb.lottie.model.animatable.AnimatablePathValue parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.facebook.react.views.switchview.ReactSwitch: void setOn(boolean)>
<android.content.SharedPreferences: float getFloat(java.lang.String,float)>
<com.google.android.gms.common.api.internal.TaskApiCall: int zab()>
<com.google.android.material.chip.ChipDrawable: void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)>
<com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: void setNgcServerKeyIdentifier(java.lang.String)>
<com.google.android.gms.internal.location.zzbp: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipop()>
<com.azure.authenticator.ui.MainActivity: void onDestroy()>
<kotlinx.coroutines.android.AndroidExceptionPreHandler: void <init>()>
<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>
<ch.qos.logback.core.Context: void setName(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: boolean shouldAddPadding()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)>
<com.google.android.gms.internal.measurement.zzar: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setOpacity(android.view.View,float)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_Factory: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel get()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderAlpha(int,float)>
<com.facebook.soloader.SysUtil: void mkdirOrThrow(java.io.File)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$000(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$4: void <init>()>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getAuthority()>
<com.microsoft.authenticator.commonuilibrary.util.WindowHelper: void moveToBottomAndMakeOpaque(android.view.Window)>
<com.facebook.react.ReactActivityDelegate: boolean onBackPressed()>
<com.google.android.gms.common.server.response.zal: void <init>(java.lang.String,java.util.Map)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateExtraData(int,java.lang.Object)>
<com.airbnb.lottie.model.layer.TextLayer: void drawCharacterAsGlyph(com.airbnb.lottie.model.FontCharacter,android.graphics.Matrix,float,com.airbnb.lottie.model.DocumentData,android.graphics.Canvas)>
<com.google.android.gms.common.zzw: void zzf()>
<com.microsoft.authenticator.mfasdk.authentication.entities.GetRequestAddressStatus$Success: void <init>(android.location.Address)>
<com.microsoft.brooklyn.module.persistence.AppIdDomainStorage: void <init>(android.content.Context)>
<com.facebook.react.views.image.ReactImageView$1: void <init>(com.facebook.react.views.image.ReactImageView,com.facebook.react.uimanager.events.EventDispatcher)>
<ch.qos.logback.classic.pattern.Abbreviator: java.lang.String abbreviate(java.lang.String)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showAuthSessionDialog()>
<androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()>
<com.google.common.base.CharMatcher$IsEither: void <init>(char,char)>
<java.io.DataInput: java.lang.String readUTF()>
<com.facebook.drawee.controller.AbstractDraweeController: void onNewResultInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void enableStreetNames(boolean)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: java.lang.String getErrorString(int)>
<com.azure.authenticator.databinding.ToolbarLayoutBinding: com.microsoft.authenticator.common.viewLogic.AppBarLayout getRoot()>
<com.facebook.react.modules.core.ReactChoreographer$1: void <init>(com.facebook.react.modules.core.ReactChoreographer)>
<com.azure.authenticator.storage.Storage: void removeCipherIv(java.lang.String)>
<com.facebook.react.uimanager.UIManagerModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)>
<com.facebook.common.executors.StatefulRunnable: void onSuccess(java.lang.Object)>
<com.google.android.gms.common.api.internal.zax: void zav(com.google.android.gms.common.api.internal.zax,int,boolean)>
<com.google.android.gms.internal.measurement.zzla: java.lang.String zzd()>
<com.google.android.material.internal.TextDrawableHelper: boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean)>
<com.google.android.gms.internal.measurement.zzho: com.google.android.gms.internal.measurement.zzhs zzaz()>
<com.facebook.react.modules.network.ForwardingCookieHandler: void possiblyWorkaroundSyncManager(android.content.Context)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.accounts.Account zzi(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<android.widget.LinearLayout: void removeViewAt(int)>
<com.google.android.datatransport.runtime.AutoValue_TransportContext: void <init>(java.lang.String,byte[],com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.AutoValue_TransportContext$1)>
<android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void removeTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener)>
<com.google.android.gms.common.ErrorDialogFragment: com.google.android.gms.common.ErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)>
<com.facebook.imagepipeline.producers.ProducerContext: void addCallbacks(com.facebook.imagepipeline.producers.ProducerContextCallbacks)>
<com.facebook.common.references.CloseableReference: java.lang.Object get()>
<com.azure.authenticator.logging.ExternalLogger: void w(java.lang.String)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,int)>
<androidx.appcompat.widget.TintTypedArray: void recycle()>
<com.google.common.base.Equivalence$Identity: void <init>()>
<android.text.SpannableString: void removeSpan(java.lang.Object)>
<com.facebook.react.common.MapBuilder$Builder: void <init>(com.facebook.react.common.MapBuilder$1)>
<com.facebook.react.animated.AnimatedNode: void update()>
<com.google.common.collect.MapMakerInternalMap$Segment: boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.adjust.sdk.ActivityHandler$29: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$4: void <init>(com.google.android.datatransport.runtime.scheduling.persistence.EventStore)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: void setValue(java.lang.Object,java.lang.ref.ReferenceQueue)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$9: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.ui.action.ReEnableAutoBackupAction: void <init>(com.microsoft.authenticator.backup.abstraction.AutoBackupManager)>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: void <init>(java.lang.String,int)>
<android.view.Window: int getNavigationBarColor()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onStart()>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getOpacity()>
<com.google.android.gms.tasks.zzv: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>
<com.facebook.react.uimanager.UIManagerModule$1: void <init>(com.facebook.react.uimanager.UIManagerModule)>
<com.google.android.material.chip.Chip: void initOutlineProvider()>
<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>
<androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)>
<com.adjust.sdk.ActivityHandler: void startBackgroundTimerI()>
<com.google.android.gms.maps.model.MarkerOptions: float getInfoWindowAnchorV()>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$100(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: void <init>(com.facebook.react.bridge.ReactContext)>
<com.facebook.react.uimanager.UIImplementation: void clearJSResponder()>
<com.google.android.material.appbar.AppBarLayout: void setOrientation(int)>
<com.adjust.sdk.UtilNetworking: com.adjust.sdk.ILogger getLogger()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: java.lang.Object approveAadNgcSessionSuspend(java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.gms.security.zza: void <init>(android.content.Context,com.google.android.gms.security.ProviderInstaller$ProviderInstallListener)>
<com.google.android.gms.internal.location.zzam: void zzt(com.google.android.gms.location.LocationSettingsRequest,com.google.android.gms.internal.location.zzao,java.lang.String)>
<com.google.crypto.tink.KeysetManager: com.google.crypto.tink.proto.Keyset$Key newKey(com.google.crypto.tink.proto.KeyTemplate)>
<com.google.android.gms.internal.auth.zzab: void <init>(java.lang.String,int)>
<com.azure.authenticator.notifications.msa.MsaProtectionNotificationProcessingResult: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.producers.LocalResourceFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.Resources)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void access$000(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>
<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)>
<com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)>
<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaRegistrationUseCase mfaRegistrationUseCase()>
<com.facebook.imageutils.JfifUtil: int getOrientation(java.io.InputStream)>
<android.content.Context: android.content.res.Resources getResources()>
<com.facebook.react.uimanager.ReactShadowNode: void removeAndDisposeAllChildren()>
<com.google.android.gms.measurement.internal.zzfl: void zzK()>
<com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.internal.Storage getInstance(android.content.Context)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker access$700(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: com.google.android.gms.auth.api.signin.GoogleSignInOptions zaa(java.lang.String)>
<android.widget.ScrollView: void <init>(android.content.Context)>
<com.google.android.gms.common.internal.zaab: void <init>()>
<com.facebook.imageutils.WebpUtil: int get2BytesAsInt(java.io.InputStream)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void flashScrollIndicators()>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize)>
<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzA(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.measurement.internal.zzw: boolean zzb()>
<com.azure.authenticator.databinding.CredentialListRowLayoutBinding: com.azure.authenticator.databinding.CredentialListRowLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.common.images.zag: void zac(android.content.Context,com.google.android.gms.internal.base.zak,boolean)>
<com.adjust.sdk.InstallReferrer: void startConnection(java.lang.Class,java.lang.Object)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String[] enabledCipherSuites(java.lang.String[],java.lang.String[])>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<com.azure.authenticator.accounts.MsaAccount: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.google.android.gms.measurement.internal.zzj: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzs,java.lang.String,java.lang.String,boolean)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[])>
<com.facebook.react.modules.camera.ImageEditingManager: java.io.File createTempFile(java.io.File,java.lang.String)>
<kotlin.coroutines.SafeContinuation: java.lang.Object getOrThrow()>
<com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)>
<com.google.android.gms.measurement.internal.zzjh: boolean zzf(android.content.Intent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager fcmRegistrationManager()>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void setFpsDebugEnabled(boolean)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_23_24$cp()>
<com.google.android.gms.internal.measurement.zzdc: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.google.common.base.CharMatcher: boolean matchesAllOf(java.lang.CharSequence)>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1: void <init>(com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: int getImageLoadStatus()>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zza: void getStreetViewPanoramaAsync(com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.google.android.datatransport.cct.internal.LogRequest: java.lang.String getLogSourceName()>
<javax.net.ssl.SSLSocket: boolean getUseClientMode()>
<com.facebook.common.webp.WebpSupportStatus: boolean isLosslessWebpHeader(byte[],int)>
<com.facebook.react.views.textinput.ReactEditText: void commitStagedInputType()>
<java.util.SortedMap: java.util.Set entrySet()>
<com.google.android.material.internal.DescendantOffsetUtils: void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)>
<android.view.ViewGroup: void requestLayout()>
<com.google.android.gms.common.api.Api$ApiOptions$NoOptions: void <init>(com.google.android.gms.common.api.zaa)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isScrollGesturesEnabled()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: java.lang.Object createBackup(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzkx: boolean zza()>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager access$7100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.common.api.internal.zap: void zad(com.google.android.gms.common.ConnectionResult,int)>
<com.google.android.gms.internal.measurement.zzdy: void <init>(com.google.android.gms.internal.measurement.zzdv)>
<com.airbnb.lottie.parser.FloatParser: void <init>()>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.ShapeStroke$LineCapType getCapType()>
<android.widget.HorizontalScrollView: void onAttachedToWindow()>
<android.database.Cursor: boolean moveToNext()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: android.graphics.PathEffect getPathEffect(com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle,float)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: com.google.android.gms.dynamic.IObjectWrapper getView()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: android.graphics.Rect access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior)>
<com.google.android.material.navigation.NavigationBarView$SavedState: void <init>(android.os.Parcelable)>
<com.google.android.gms.auth.api.accounttransfer.zze: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient,com.google.android.gms.internal.auth.zzad)>
<com.google.common.base.Splitter$5: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>
<com.google.android.gms.maps.internal.IProjectionDelegate: com.google.android.gms.maps.model.VisibleRegion getVisibleRegion()>
<com.google.android.gms.internal.location.zzaz: android.location.Location zzz(java.lang.String)>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker weakKeys()>
<com.google.android.gms.internal.measurement.zzgs: void <init>()>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig: void <init>(com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder)>
<com.google.android.gms.measurement.internal.zzg: java.lang.Boolean zzah()>
<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzx()>
<com.google.android.gms.measurement.internal.zzhn: void zzr(com.google.android.gms.measurement.internal.zzaf)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloatArray(android.os.Parcel,int,float[],boolean)>
<com.google.android.gms.internal.location.zzaw: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.google.android.gms.measurement.internal.zzew: void zzb(java.lang.String)>
<com.facebook.yoga.YogaNode: void setPositionPercent(com.facebook.yoga.YogaEdge,float)>
<com.azure.authenticator.jwe.JweEncryptionManager: byte[] getAuthenticationTag(byte[],byte[])>
<android.widget.HorizontalScrollView: int getPaddingTop()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: void <init>(int,java.util.ArrayList,android.accounts.Account,boolean,boolean,boolean,java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.google.android.gms.auth.api.signin.zac)>
<com.google.android.material.button.MaterialButton: void setCornerRadius(int)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: int getRotationAngle()>
<com.evernote.android.job.JobRequest$Builder: boolean access$800(com.evernote.android.job.JobRequest$Builder)>
<androidx.startup.InitializationProvider: void <init>()>
<com.google.android.material.timepicker.TimeModel$1: void <init>()>
<java.lang.Math: double exp(double)>
<com.facebook.react.views.text.TextAttributes: float getMaxFontSizeMultiplier()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onSaveInstanceState(android.os.Bundle)>
<com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshManager,com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager,com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingHandler)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper: java.util.Map getCommandsMap()>
<com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment_MembersInjector: void injectRegisterMsaAccountManager(com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager)>
<com.evernote.android.job.JobProxy$Common: long getStartMsSupportFlex(com.evernote.android.job.JobRequest)>
<com.google.android.gms.location.zzbk: void <init>()>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onStagingAreaHit(com.facebook.cache.common.CacheKey)>
<com.evernote.android.job.JobRequest$Builder: void <init>(android.database.Cursor,com.evernote.android.job.JobRequest$1)>
<com.google.android.material.tabs.TabLayout$TabView: int getContentWidth()>
<com.facebook.react.CoreModulesPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: boolean zac()>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void reset()>
<com.airbnb.lottie.LottieDrawable: void setMinFrame(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void approveNgcSession()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS()>
<com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment: void sendLogsViaPowerLift()>
<com.google.android.gms.internal.measurement.zznc: boolean zzb()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions minZoomPreference(float)>
<com.azure.authenticator.jwe.AlgorithmEnum: int getCekSizeInBytes()>
<com.google.android.material.card.MaterialCardViewHelper: float calculateVerticalBackgroundPadding()>
<com.facebook.react.common.SingleThreadAsserter: void <init>()>
<com.google.android.gms.common.api.internal.BasePendingResult: void setResultCallback(com.google.android.gms.common.api.ResultCallback)>
<ch.qos.logback.classic.net.SocketReceiver: java.net.Socket waitForConnectorToReturnASocket()>
<com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>
<com.adjust.sdk.IActivityHandler: void launchSdkClickResponseTasks(com.adjust.sdk.SdkClickResponseData)>
<com.google.android.gms.internal.measurement.zzdf: void zzp(com.google.android.gms.internal.measurement.zzdf,java.lang.String)>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildDeleteExpiredLogsSQL(ch.qos.logback.classic.db.names.DBNameResolver,long)>
<com.google.android.gms.measurement.internal.zzf: boolean zza()>
<com.google.android.gms.internal.measurement.zzj: java.util.concurrent.ExecutorService zzc(int,java.util.concurrent.ThreadFactory,int)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1: void <init>(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call)>
<android.app.Dialog: void <init>(android.content.Context,int)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: int getExifOrientation()>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
<com.facebook.react.modules.storage.AsyncStorageModule$5: void doInBackgroundGuarded(java.lang.Void[])>
<com.fasterxml.jackson.core.io.NumberOutput: int leading3(int,char[],int)>
<androidx.fragment.app.Fragment: java.lang.String getTag()>
<com.google.android.gms.common.api.internal.ListenerHolder$Notifier: void notifyListener(java.lang.Object)>
<com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.microsoft.authenticator.reactnative.modules.UsageDataPackage: void <init>()>
<com.google.android.gms.measurement.internal.zzjb: void zzJ(com.google.android.gms.measurement.internal.zzjb,android.content.ComponentName)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: boolean[] createBooleanArray(android.os.Parcel,int)>
<com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.LiveData getGraphPolicyResult()>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragmentArgs$Builder: void <init>(com.microsoft.authenticator.registration.aad.entities.AadAddAccountStatus)>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>
<com.adjust.sdk.scheduler.TimerOnce$1: void <init>(com.adjust.sdk.scheduler.TimerOnce)>
<android.view.View: int getRight()>
<com.google.android.gms.maps.internal.zzn: void onCameraIdle()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean isSingleSelection()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)>
<com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>
<ch.qos.logback.core.rolling.FixedWindowRollingPolicy: java.lang.String transformFileNamePatternFromInt2Date(java.lang.String)>
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>
<com.facebook.yoga.YogaMeasureOutput: long make(float,float)>
<com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzah()>
<android.widget.TextView: android.content.Context getContext()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<ch.qos.logback.classic.net.server.RemoteAppenderStreamClient: ch.qos.logback.core.net.HardenedObjectInputStream createObjectInputStream()>
<com.google.android.gms.measurement.internal.zzci: void <init>()>
<android.net.NetworkCapabilities: boolean hasTransport(int)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<com.facebook.datasource.AbstractDataSource: boolean setProgress(float)>
<com.adjust.sdk.AdjustFactory: java.lang.String access$000(byte[])>
<com.google.android.gms.internal.measurement.zzcz: com.google.android.gms.internal.measurement.zzcy zze()>
<com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getSubdirectoryPath(java.lang.String)>
<com.facebook.yoga.YogaEdge: void <init>(java.lang.String,int,int)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder: void <init>()>
<com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform getTextTransform()>
<com.google.common.base.Splitter: java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence)>
<com.facebook.drawee.drawable.ScaleTypeDrawable: com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleType()>
<com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF getBoundsInsetByStroke()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasNewLayout()>
<androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.fasterxml.jackson.core.base.ParserBase: void _closeInput()>
<java.text.BreakIterator: void setText(java.lang.String)>
<com.google.android.gms.internal.auth-api.zzaw: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.auth.api.identity.zzl,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker$refreshUserDa$$inlined$suspendCoroutine$lambda$1: void <init>(kotlin.coroutines.Continuation,com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker,java.lang.String,com.azure.authenticator.authentication.msa.MsaAccountManager,com.microsoft.onlineid.SecurityScope)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: com.evernote.android.job.util.JobCat access$000()>
<com.airbnb.lottie.LottieResult: void <init>(java.lang.Object)>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>
<com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void zzc(int)>
<com.google.android.gms.maps.model.zzb: void <init>()>
<com.azure.authenticator.utils.Hilt_TestActivity: void <init>()>
<com.azure.authenticator.databinding.TestActivityLayoutBinding: com.azure.authenticator.databinding.TestActivityLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status)>
<com.facebook.react.ReactActivityDelegate: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.gms.maps.model.zzo: void <init>()>
<com.google.android.gms.measurement.internal.zzdt: java.lang.Object zza()>
<com.google.android.gms.internal.measurement.zzla: long zzv()>
<com.microsoft.onlineid.sdk.extension.storage.StorageMigrationManager: boolean migrateFromMaster()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: com.azure.authenticator.ui.authentication.MsaAuthViewModel getMsaAuthViewModel()>
<java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)>
<java.util.List: int indexOf(java.lang.Object)>
<java.security.cert.CertificateException: void <init>()>
<com.google.android.gms.common.api.internal.zabh: void <init>(com.google.android.gms.common.api.internal.zabl)>
<ch.qos.logback.classic.layout.TTLLLayout: void <init>()>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: void newScanOrImageEndFound(int)>
<com.evernote.android.job.JobProxy$Common: long getEndMsSupportFlex(com.evernote.android.job.JobRequest)>
<com.google.android.gms.internal.measurement.zzcn: int zze()>
<androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)>
<com.facebook.react.bridge.WritableNativeMap: void <init>()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.IBinder readIBinder(android.os.Parcel,int)>
<com.adjust.sdk.PackageHandler: void sendFirstPackage()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.storage.MfaSdkAccountConfigurationStorage mfaSdkAccountConfigurationStorage()>
<androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: java.lang.Object doWork(kotlin.coroutines.Continuation)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_26_27()>
<com.google.android.gms.auth.AccountChangeEventsRequest: void <init>()>
<com.google.android.material.shape.ShapePath$LineShadowOperation: void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float)>
<com.google.android.gms.internal.maps.zzc: void zza(android.os.Parcel,android.os.IInterface)>
<com.fasterxml.jackson.core.io.CharTypes: byte[] copyHexBytes()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: void generateMsaNgcKeyAsync()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<com.google.android.gms.common.api.internal.zabl: void zaz(com.google.android.gms.common.api.internal.zabl,int)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings()>
<com.google.common.math.IntMath: int lessThanBranchFree(int,int)>
<com.google.android.gms.common.config.GservicesValue: java.lang.Object get()>
<com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)>
<com.google.android.gms.internal.safetynet.zzk: void <init>()>
<com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.ScaleTypeDrawable getScaleTypeDrawableAtIndex(int)>
<androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs: boolean getShowCelebratoryDialog()>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP: ch.qos.logback.core.rolling.helper.ArchiveRemover createArchiveRemover()>
<com.google.android.gms.common.api.Status: boolean isSuccess()>
<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>
<android.widget.CheckBox: void setChecked(boolean)>
<ch.qos.logback.core.util.DynamicClassLoadingException: void <init>(java.lang.String,java.lang.Throwable)>
<com.adjust.sdk.PackageHandler$4: void <init>(com.adjust.sdk.PackageHandler)>
<com.microsoft.did.di.VcWalletModule_ProvideCorrelationServiceFactory: com.microsoft.did.sdk.CorrelationVectorService provideCorrelationService(com.microsoft.did.di.VcWalletModule)>
<com.google.android.gms.internal.measurement.zzdj: void zzaO(com.google.android.gms.internal.measurement.zzdj,boolean)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzn()>
<com.microsoft.authenticator.mfasdk.authentication.ui.BaseRichContextFragment_MembersInjector: void injectLocationManager(com.microsoft.authenticator.mfasdk.authentication.ui.BaseRichContextFragment,com.microsoft.authenticator.location.LocationManager)>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String peekLast()>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>
<ch.qos.logback.classic.pattern.ClassicConverter: void <init>()>
<com.facebook.systrace.Systrace: void endSection(long)>
<com.facebook.imageutils.TiffUtil$TiffHeader: void <init>(com.facebook.imageutils.TiffUtil$1)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: void <init>(com.azure.authenticator.storage.database.AccountStorage)>
<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setRadius(float,int)>
<java.math.BigInteger: void <init>(byte[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.DeviceRegistrationUseCase getDeviceRegistrationUseCase()>
<com.airbnb.lottie.model.FontCharacter: int hashCode()>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: ch.qos.logback.core.spi.PreSerializationTransformer getPST()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>
<com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)>
<com.google.android.gms.common.api.internal.zacv: void zai(com.google.android.gms.common.api.internal.zacv,com.google.android.gms.common.api.Status)>
<ch.qos.logback.core.util.StringCollectionUtil: void removeMatching(java.util.Collection,java.util.Collection)>
<com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.value.Keyframe parseStaticValue(com.airbnb.lottie.parser.moshi.JsonReader,float,com.airbnb.lottie.parser.ValueParser)>
<com.adjust.sdk.PackageHandler$2: void <init>(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>
<ch.qos.logback.core.joran.action.Action: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>
<com.facebook.react.bridge.JSApplicationCausedNativeException: void <init>(java.lang.String)>
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>
<com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getReactTag()>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void removeClient(ch.qos.logback.core.net.server.Client)>
<com.evernote.android.job.JobRequest: boolean isStarted()>
<com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState)>
<com.facebook.imageformat.DefaultImageFormatChecker: boolean isIcoHeader(byte[],int)>
<android.widget.HorizontalScrollView: void scrollBy(int,int)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions()>
<com.google.android.gms.measurement.internal.zziv: void <init>(com.google.android.gms.measurement.internal.zzja,com.google.android.gms.measurement.internal.zzdz)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>
<com.facebook.react.bridge.JavaMethodWrapper: void <init>(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)>
<com.google.android.gms.maps.model.LatLng: void <init>(double,double)>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>
<android.widget.EditText: void clearFocus()>
<com.google.crypto.tink.PrimitiveSet$Entry: void <init>(java.lang.Object,byte[],com.google.crypto.tink.proto.KeyStatusType,com.google.crypto.tink.proto.OutputPrefixType,int)>
<com.facebook.yoga.YogaFlexDirection: int intValue()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: java.lang.Boolean isEnterNumberAllowed()>
<android.widget.CheckBox: int[] mergeDrawableStates(int[],int[])>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$1: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.ReactInstanceManagerDevHelper createDevHelperInterface()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$loadSections$1: void onChanged(com.microsoft.authenticator.workaccount.entities.CheckWpjStatus)>
<com.airbnb.lottie.model.layer.Layer: int getSolidColor()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment)>
<androidx.loader.content.Loader: void forceLoad()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions$Builder builder()>
<kotlin.collections.CollectionsKt: java.util.List emptyList()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<com.google.android.gms.maps.zzf: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnInfoWindowCloseListener)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)>
<com.google.android.gms.measurement.internal.zzt: com.google.android.gms.internal.measurement.zzcx zzb(int)>
<ch.qos.logback.core.sift.AbstractDiscriminator: void <init>()>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getAccountName()>
<com.google.android.gms.common.api.ApiException: void <init>(com.google.android.gms.common.api.Status)>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<com.facebook.react.modules.datepicker.DatePickerMode: void <init>(java.lang.String,int)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void extractAnimatedNodeOffset(int)>
<com.google.android.gms.internal.maps.zzz: com.google.android.gms.dynamic.IObjectWrapper zzk()>
<com.google.android.gms.internal.maps.zzw: boolean isGeodesic()>
<com.google.crypto.tink.proto.EncryptedKeyset$Builder: com.google.crypto.tink.proto.EncryptedKeyset$Builder setKeysetInfo(com.google.crypto.tink.proto.KeysetInfo)>
<android.widget.TextView: int getBaseline()>
<com.facebook.react.modules.network.CountingOutputStream: long getCount()>
<com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)>
<com.google.android.gms.internal.maps.zzt: void setDraggable(boolean)>
<com.azure.authenticator.MainNavDirections$ToAccountListFragment: void <init>()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: void cancelAvailabilityErrorNotifications(android.content.Context)>
<com.microsoft.brooklyn.ui.generatepasswords.presentationlogic.ViewGeneratedPasswordViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketCancel$1$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzix: com.google.android.gms.internal.measurement.zzgs zzbo()>
<com.google.android.gms.internal.maps.zzw: void setVisible(boolean)>
<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()>
<com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzO()>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$ViewWithFragmentC: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showMsaAccountChooserDialog$msaAccountChooserDialogBuilder$3: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.util.List)>
<com.google.android.gms.internal.location.zzaz: void zzL(com.google.android.gms.location.LocationSettingsRequest,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,java.lang.String)>
<com.facebook.drawee.view.DraweeView: void maybeOverrideVisibilityHandling()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _nextAfterName()>
<com.facebook.react.touch.JSResponderHandler: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectAccountStorageCustomQueries(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>
<androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit)>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
<com.azure.authenticator.databinding.QrScannerBinding: android.widget.RelativeLayout getRoot()>
<android.widget.AutoCompleteTextView: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object getImageRequest()>
<ch.qos.logback.classic.turbo.TurboFilter: void start()>
<com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)>
<com.evernote.android.job.JobRequest: boolean isUpdateCurrent()>
<com.adjust.sdk.AttributionHandler: void checkAttributionResponse(com.adjust.sdk.AttributionResponseData)>
<com.adjust.sdk.SessionResponseData: void <init>(com.adjust.sdk.ActivityPackage)>
<com.facebook.common.references.OOMSoftReference: void set(java.lang.Object)>
<org.slf4j.MDC: org.slf4j.spi.MDCAdapter getMDCAdapter()>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void <init>(com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider,com.google.android.datatransport.runtime.backends.CreationContextFactory)>
<com.microsoft.authenticator.workaccount.entities.WorkplaceJoinRegistrationStatus$Error: java.lang.Exception getException()>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivityStarted(android.app.Activity)>
<android.os.Parcel: void writeList(java.util.List)>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
<com.facebook.react.uimanager.IllegalViewOperationException: void <init>(java.lang.String)>
<com.microsoft.did.feature.cardflow.viewlogic.PinFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.cardflow.viewlogic.PinFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<com.google.android.material.datepicker.MaterialDatePicker: void startPickerFragment()>
<com.google.android.material.textfield.CustomEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<javax.net.ssl.SSLSocket: boolean getReuseAddress()>
<com.facebook.imagepipeline.cache.BufferedDiskCache$2: com.facebook.imagepipeline.image.EncodedImage call()>
<com.microsoft.authenticator.backup.entities.CreateBackupResult$Error: com.microsoft.authenticator.backup.entities.BackupRestoreError getError()>
<com.google.android.gms.common.api.internal.zacv: void zaa(com.google.android.gms.common.api.PendingResult)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showBackupFailedDialog$backupFailedDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.facebook.drawee.drawable.RoundedBitmapDrawable: void updatePaint()>
<com.facebook.imagepipeline.image.EncodedImage: void <init>(com.facebook.common.references.CloseableReference)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$1: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyPrettyValueWrite(java.lang.String)>
<com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>
<com.google.android.gms.internal.maps.zzt: void setFlat(boolean)>
<android.util.TypedValue: void <init>()>
<com.google.android.gms.common.api.internal.zai: com.google.android.gms.common.api.Status zah(android.os.RemoteException)>
<com.facebook.common.file.FileTreeVisitor: void postVisitDirectory(java.io.File)>
<com.google.android.gms.common.internal.zzp: void <init>(com.google.android.gms.common.internal.zzq,com.google.android.gms.common.internal.zzn)>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread: void fallbackConfiguration(ch.qos.logback.classic.LoggerContext,java.util.List,java.net.URL)>
<com.google.android.gms.common.util.DeviceProperties: boolean isWearable(android.content.Context)>
<com.google.android.gms.common.internal.RootTelemetryConfiguration: int getBatchPeriodMillis()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setSource(android.net.Uri)>
<com.google.android.gms.common.internal.zac: java.lang.String zae(android.content.Context,int)>
<com.facebook.imagepipeline.producers.BaseConsumer: void onProgressUpdateImpl(float)>
<com.azure.authenticator.jwe.CryptoHelper: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.internal.measurement.zzil: com.google.android.gms.internal.measurement.zzil zzd()>
<com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int,java.lang.String)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectRootDetectionManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.rootdetection.RootDetectionManager)>
<java.lang.String: java.lang.String[] split(java.lang.String,int)>
<com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: void release(android.graphics.Bitmap)>
<com.azure.authenticator.databinding.FragmentEditAddPaymentBinding: com.azure.authenticator.databinding.FragmentEditAddPaymentBinding bind(android.view.View)>
<com.facebook.react.views.textinput.ReactContentSizeChangedEvent: java.lang.String getEventName()>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<com.google.android.gms.common.server.response.FastParser: java.lang.String zal(java.io.BufferedReader)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: androidx.lifecycle.MutableLiveData access$get_msaNgcResponseStatus$p(com.azure.authenticator.ui.authentication.MsaAuthViewModel)>
<com.google.android.gms.location.FusedLocationProviderClient: void zza(com.google.android.gms.internal.location.zzba,android.app.PendingIntent,com.google.android.gms.internal.location.zzaz,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.auth.zzi: void <init>(java.lang.String)>
<com.google.android.gms.common.api.internal.ApiExceptionMapper: void <init>()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showGraphTokenExpiredScreen$1$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showGraphTokenExpiredScreen$1,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.LocalAssetFetchProducer: int getLength(com.facebook.imagepipeline.request.ImageRequest)>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.facebook.react.modules.clipboard.ClipboardModule: void <init>(android.content.Context)>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectMfaSdkDeviceGestureManager(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.mfasdk.authentication.viewLogic.IMfaSdkDeviceGestureManager)>
<com.azure.authenticator.databinding.AadRemoteNgcSessionDialogBinding: com.azure.authenticator.databinding.AadRemoteNgcSessionDialogBinding bind(android.view.View)>
<com.google.android.gms.cloudmessaging.Rpc: boolean zzb(android.os.Bundle)>
<android.view.Surface: boolean isValid()>
<ch.qos.logback.core.status.Status: java.lang.Throwable getThrowable()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void getPadding(android.graphics.Rect)>
<com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)>
<com.evernote.android.job.util.Clock: long currentTimeMillis()>
<com.evernote.android.job.JobRequest$2: void <init>(com.evernote.android.job.JobRequest,com.evernote.android.job.JobRequest$JobScheduledCallback)>
<ch.qos.logback.core.sift.SiftingJoranConfiguratorBase: void oneAndOnlyOneCheck(java.util.Map)>
<com.airbnb.lottie.LottieAnimationView: void setRepeatCount(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.rootdetection.RootDetectionManager access$10000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<android.widget.EditText: void setBreakStrategy(int)>
<com.facebook.soloader.ApplicationSoSource: java.io.File getNativeLibDirFromContext(android.content.Context)>
<android.widget.ScrollView: int getChildCount()>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>
<android.widget.HorizontalScrollView: android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams()>
<com.microsoft.brooklyn.module.BrooklynModuleInitializer: void toggleBrooklynDependentsOptionalTelemetry(boolean)>
<com.airbnb.lottie.LottieCompositionFactory$1: void <init>(android.content.Context,java.lang.String,java.lang.String)>
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: long access$300(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.google.android.gms.internal.measurement.zzbr: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName2(int[],int,int)>
<com.facebook.react.uimanager.events.BatchEventDispatchedListener: void onBatchEventDispatched()>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String,android.webkit.ValueCallback)>
<com.adjust.sdk.AttributionHandler: void checkSdkClickResponseI(com.adjust.sdk.IActivityHandler,com.adjust.sdk.SdkClickResponseData)>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
<com.facebook.react.bridge.DynamicFromMap: void <init>()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior)>
<ch.qos.logback.classic.Logger: void addAppender(ch.qos.logback.core.Appender)>
<ch.qos.logback.core.pattern.parser.Compiler: void addToList(ch.qos.logback.core.pattern.Converter)>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory(int)>
<com.microsoft.brooklyn.common.AutofillPromotionManager: void <init>(android.content.Context)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.azure.authenticator.accounts.MsaAccount: void setNgcServerKeyIdentifierAndUpdateCapabilities(java.lang.String)>
<com.microsoft.authenticator.msa.entities.GetMsaEncryptionKeyResult$Success: com.microsoft.onlineid.UserKey getUserKey()>
<ch.qos.logback.core.joran.action.PropertyAction: void <init>()>
<com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.Keyset$Key$Builder newBuilder()>
<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider authIntentSenderProvider()>
<android.widget.EditText: void getFocusedRect(android.graphics.Rect)>
<ch.qos.logback.classic.pattern.DateConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>
<com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)>
<com.google.android.gms.internal.auth.zzz: void zza(com.google.android.gms.internal.auth.zzx,com.google.android.gms.internal.auth.zzaf)>
<android.widget.CheckBox: boolean onTouchEvent(android.view.MotionEvent)>
<com.azure.authenticator.authentication.msa.ui.ActivityState$Companion: void <init>()>
<com.azure.authenticator.notifications.aad.AadNgcNotification: boolean initializeNotification(android.os.Bundle)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateDrawableForTargetState(int)>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int,int)>
<com.facebook.react.views.picker.ReactPickerAdapter: void setPrimaryTextColor(java.lang.Integer)>
<com.google.android.gms.auth.account.zzd: com.google.android.gms.auth.account.zzc zzc(android.os.IBinder)>
<com.microsoft.authenticator.backup.entities.DeleteBackupResult$Error: java.lang.Exception getException()>
<com.microsoft.authenticator.backup.entities.RestoreBackupResult$Error: com.microsoft.authenticator.backup.entities.BackupRestoreError getError()>
<com.google.android.gms.ads.identifier.AdvertisingIdClient$Info: java.lang.String getId()>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: void drawShowcase(android.graphics.Bitmap,float,float,float)>
<com.facebook.cache.disk.DiskStorageCache: java.lang.Object access$000(com.facebook.cache.disk.DiskStorageCache)>
<com.facebook.react.touch.JSResponderHandler: void clearJSResponder()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void <init>(okhttp3.OkHttpClient)>
<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,double)>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: int getOverlapPixelsForOffset(android.view.View)>
<androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper()>
<com.google.android.gms.internal.measurement.zzen: java.util.Map zzb()>
<com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: void <init>(com.airbnb.lottie.value.LottieValueCallback,java.lang.Object)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment: void <init>()>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportMissingRootWS(int)>
<com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.image.EncodedImage cloneOrNull()>
<com.airbnb.lottie.model.content.RectangleShape: void <init>(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)>
<com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder: com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder tilt(float)>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity: void <init>()>
<android.graphics.Outline: void setConvexPath(android.graphics.Path)>
<com.facebook.common.references.CloseableReference: void closeSafely(com.facebook.common.references.CloseableReference)>
<ch.qos.logback.core.net.SMTPAppenderBase: javax.mail.Session buildSessionFromProperties()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>
<com.microsoft.authenticator.msa.entities.GetMsaTicketResult$Success: com.microsoft.onlineid.Ticket getMsaTicket()>
<com.microsoft.ngc.aad.AadNgcSessionUseCase: void <init>()>
<com.facebook.react.bridge.Arguments$1: void <init>(java.lang.Object)>
<com.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime newInstance(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zze(int,com.google.android.gms.internal.measurement.zzda)>
<com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.GetEndpointManager getEndpointManager()>
<com.google.android.gms.common.api.internal.zabw: com.google.android.gms.common.api.internal.zabw zaa(android.app.Activity)>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectLocationManager(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.location.LocationManager)>
<com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: void <init>(com.facebook.cache.disk.DefaultDiskStorage)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: java.util.List filterFiles(java.util.List,java.io.FilenameFilter)>
<com.azure.authenticator.jobs.DeferrableWorkerTag: java.lang.String access$getAutoBackupWorkerTag$cp()>
<android.widget.LinearLayout: void setClipChildren(boolean)>
<com.facebook.imagepipeline.transcoder.ImageTranscoder: java.lang.String getIdentifier()>
<com.google.android.gms.auth.api.proxy.ProxyRequest: void <init>(int,java.lang.String,int,long,byte[],android.os.Bundle)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.util.ArrayList getExtensions()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showMsaAccountChooserDialog$msaAccountChooserDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,com.azure.authenticator.accounts.MsaAccount)>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference of(java.io.Closeable)>
<com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)>
<com.facebook.react.module.model.ReactModuleInfo: boolean canOverrideExistingModule()>
<androidx.fragment.app.DialogFragment: void onStop()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void createBackupPromptingIfNeeded(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardflow.presentationlogic.WebViewAuthenticationViewModel webViewAuthenticationViewModel()>
<ch.qos.logback.core.net.ssl.SSLConfigurable: java.lang.String[] getSupportedProtocols()>
<com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter: void <init>(com.google.android.material.timepicker.ChipTextInputComboView)>
<androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>
<com.google.android.material.behavior.SwipeDismissBehavior: float clamp(float,float,float)>
<com.adjust.sdk.PackageBuilder: java.util.Map getInfoParameters(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: kotlinx.serialization.json.Json access$8700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$3000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$1: void <init>(androidx.fragment.app.Fragment)>
<com.facebook.react.modules.datepicker.DatePickerDialogFragment: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
<com.google.android.material.chip.ChipDrawable: android.graphics.ColorFilter getTintColorFilter()>
<android.graphics.Paint: android.graphics.Paint$Style getStyle()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: void fireEnteredRunMethod()>
<androidx.core.util.Pools$Pool: java.lang.Object acquire()>
<com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: void reset()>
<com.google.android.datatransport.cct.internal.LogRequest: com.google.android.datatransport.cct.internal.QosTier getQosTier()>
<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config)>
<com.evernote.android.job.Job$Params: boolean isPeriodic()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshWorker enterpriseDenyListRefreshWorker(android.content.Context,androidx.work.WorkerParameters)>
<org.slf4j.spi.MDCAdapter: java.util.Map getCopyOfContextMap()>
<com.google.android.gms.safetynet.SafeBrowsingData: void zza(java.io.Closeable)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$300(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<android.widget.EditText: void setHighlightColor(int)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity: java.lang.Object generatedComponent()>
<com.facebook.react.ReactInstanceManager: com.facebook.react.uimanager.ViewManager createViewManager(java.lang.String)>
<java.io.FileNotFoundException: java.lang.String getMessage()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void sendFinalResultToConsumer(com.facebook.common.memory.PooledByteBufferOutputStream)>
<com.facebook.react.uimanager.NoSuchNativeViewException: void <init>(java.lang.String)>
<android.widget.ImageButton: void setImageMatrix(android.graphics.Matrix)>
<com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)>
<com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.internal.ClientSettings buildClientSettings()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_11_12$cp()>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>
<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int hashSeed()>
<com.google.android.material.button.MaterialButtonHelper: void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zzj(com.google.android.gms.common.internal.BaseGmsClient)>
<com.google.android.gms.internal.measurement.zzia: java.lang.Object zzi(java.lang.Object,java.lang.Object)>
<com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mutate()>
<com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManager$ReactContextInitParams access$1302(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)>
<com.adjust.sdk.PackageHandler: void access$100(com.adjust.sdk.PackageHandler,com.adjust.sdk.ActivityPackage)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder()>
<com.facebook.drawee.components.DraweeEventTracker: void recordEvent(com.facebook.drawee.components.DraweeEventTracker$Event)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenRefreshWorker fcmTokenRefreshWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment_MembersInjector: void injectWorkplaceJoinUseCase(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase)>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>
<com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository: void <init>(com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyDatabase)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: void <init>(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<java.util.Scanner: boolean hasNext()>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()>
<com.facebook.common.executors.StatefulRunnable: void <init>()>
<ch.qos.logback.core.joran.event.BodyEvent: void <init>(java.lang.String,org.xml.sax.Locator)>
<com.google.android.gms.common.images.ImageManager$ImageReceiver: void zab(com.google.android.gms.common.images.zag)>
<com.adjust.sdk.AttributionHandler: void <init>(com.adjust.sdk.IActivityHandler,boolean)>
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>
<com.google.android.material.shape.ShapePath: void setEndY(float)>
<com.airbnb.lottie.utils.LottieValueAnimator: void <init>()>
<com.microsoft.identity.common.java.logging.Logger$LogLevel: com.microsoft.identity.common.java.logging.Logger$LogLevel[] values()>
<com.facebook.react.ReactInstanceManager: void attachRootViewToInstance(com.facebook.react.uimanager.ReactRoot)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setPosition(int,float)>
<com.azure.authenticator.databinding.FragmentCredentialListBinding: com.azure.authenticator.databinding.FragmentCredentialListBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>
<com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: void <init>(com.facebook.react.views.image.ReactImageView,com.facebook.react.views.image.ReactImageView$1)>
<com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fromZipStream(java.lang.String,java.io.InputStream,java.lang.String)>
<androidx.navigation.NavController: androidx.navigation.NavGraph getGraph()>
<com.facebook.react.uimanager.UIImplementation: void onHostResume()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.payment.PaymentViewModel access$13500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.maps.GoogleMap$OnMarkerDragListener: void onMarkerDragEnd(com.google.android.gms.maps.model.Marker)>
<androidx.navigation.NavGraph: void setStartDestination(int)>
<com.google.android.gms.maps.model.IndoorBuilding: void <init>(com.google.android.gms.internal.maps.zzn,com.google.android.gms.maps.model.IndoorBuilding$zza)>
<com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(boolean)>
<com.google.android.gms.auth.api.identity.SavePasswordResult: void <init>(android.app.PendingIntent)>
<org.xml.sax.InputSource: void <init>(java.io.InputStream)>
<com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase access$getAadPhoneSignInUseCase$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<ch.qos.logback.core.joran.util.MethodDescriptor: java.lang.reflect.Method getMethod()>
<com.microsoft.did.businesslogic.ReceiptUseCase: void <init>(com.microsoft.did.datasource.db.dao.PresentationReceiptDao,com.microsoft.did.datasource.db.dao.IssuanceReceiptDao,android.content.Context)>
<com.adjust.sdk.SharedPreferencesManager: void saveLong(java.lang.String,long)>
<com.airbnb.lottie.animation.content.GradientFillContent: int[] applyDynamicColorsIfNeeded(int[])>
<com.google.android.gms.measurement.internal.zzal: android.os.Handler zzf()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int[] growArrayBy(int[],int)>
<com.google.android.gms.common.util.Base64Utils: byte[] decode(java.lang.String)>
<com.microsoft.authenticator.registration.msa.abstraction.QrCodeResultHandlerMsaAccount: void <init>(com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.microsoft.authenticator.registration.msa.businesslogic.TransferTokenParametersParser,com.microsoft.authenticator.core.telemetry.TelemetryManager,com.microsoft.authenticator.registration.msa.abstraction.MsaAccountActivityLauncher)>
<com.google.android.gms.internal.measurement.zzde: int zzh()>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isInForeground()>
<com.facebook.react.fabric.mounting.mountitems.UpdatePaddingMountItem: void <init>(int,int,int,int,int)>
<com.google.android.material.internal.CollapsingTextHelper: android.content.res.ColorStateList getCollapsedTextColor()>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>
<com.facebook.imagepipeline.memory.MemoryChunkPool: void free(com.facebook.imagepipeline.memory.MemoryChunk)>
<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<com.adjust.sdk.ActivityHandler: boolean toSendI(boolean)>
<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextViewPadding()>
<com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadWorker powerLiftUploadWorker(android.content.Context,androidx.work.WorkerParameters)>
<java.util.Arrays: char[] copyOfRange(char[],int,int)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setDimensions(int,int)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getEndProgress()>
<android.text.Layout: float getLineLeft(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.facebook.cache.disk.DiskCacheConfig$Builder$1: java.io.File get()>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void access$100(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState)>
<com.google.android.gms.common.util.CollectionUtils: java.util.List listOf(java.lang.Object)>
<ch.qos.logback.core.spi.ContextAwareBase: void setContext(ch.qos.logback.core.Context)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void access$000(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int)>
<androidx.room.EntityDeletionOrUpdateAdapter: void <init>(androidx.room.RoomDatabase)>
<android.graphics.ColorSpace: int hashCode()>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void setMainURL(java.net.URL)>
<com.facebook.react.animated.SpringAnimation$PhysicsState: void <init>(com.facebook.react.animated.SpringAnimation$1)>
<com.facebook.react.uimanager.annotations.ReactProp: java.lang.String name()>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: java.util.Map getExtraMap(com.facebook.imagepipeline.image.CloseableImage,long,com.facebook.imagepipeline.image.QualityInfo,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<ch.qos.logback.core.sift.SiftingJoranConfiguratorBase: ch.qos.logback.core.Appender getAppender()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel$approveNgcSession$2: void <init>(com.azure.authenticator.ui.authentication.MsaAuthViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)>
<com.airbnb.lottie.utils.LottieValueAnimator: void cancel()>
<com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.LatLng getCenter()>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void attemptRecovery()>
<com.facebook.yoga.YogaMeasureMode: void <init>(java.lang.String,int,int)>
<com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode[] values()>
<ch.qos.logback.core.ContextBase: void <init>()>
<com.google.android.gms.auth.zzd: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String)>
<com.facebook.react.modules.datepicker.DatePickerDialogFragment: void setOnDateSetListener(android.app.DatePickerDialog$OnDateSetListener)>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>
<com.google.android.gms.measurement.internal.zzgi: java.lang.String zza(java.lang.String)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllAadMfaAccounts()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void toastNotificationSwitch(java.lang.String,boolean)>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)>
<com.google.android.material.tabs.TabLayout$TabView: void clipViewToPaddingForBadge(boolean)>
<com.azure.authenticator.databinding.AadAddAccountSetupBinding: com.azure.authenticator.databinding.AadAddAccountSetupBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode,int,int)>
<com.google.android.material.navigation.NavigationBarMenuView: void setPresenter(com.google.android.material.navigation.NavigationBarPresenter)>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)>
<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>
<com.google.android.gms.tasks.zzn: com.google.android.gms.tasks.OnSuccessListener zzd(com.google.android.gms.tasks.zzn)>
<com.google.android.gms.internal.location.zzaf: void <init>()>
<com.google.android.gms.internal.measurement.zzjx: com.google.android.gms.internal.measurement.zzjx zzb()>
<com.google.crypto.tink.PrimitiveSet: void setPrimary(com.google.crypto.tink.PrimitiveSet$Entry)>
<com.google.android.gms.internal.measurement.zzil: void zzb(java.lang.Object,java.lang.Object,long)>
<com.google.android.gms.common.api.Api$Client: java.lang.String getEndpointPackageName()>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.SignInFormDatasetsUseCase: void <init>(com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations,com.microsoft.brooklyn.module.autofill.response.businesslogic.AutofillNudgeHelper,com.microsoft.brooklyn.module.autofill.FormInfoHelper,com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager)>
<com.google.android.gms.measurement.internal.zzfl: void zzS(com.google.android.gms.measurement.internal.zzgf)>
<com.facebook.soloader.UnpackingSoSource: void deleteUnmentionedFiles(com.facebook.soloader.UnpackingSoSource$Dso[])>
<com.google.android.material.datepicker.DateSelector: android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)>
<com.facebook.react.modules.camera.ImageEditingManager: int getDecodeSampleSize(int,int,int,int)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>
<com.google.android.material.chip.Chip: boolean access$402(com.google.android.material.chip.Chip,boolean)>
<com.facebook.imagepipeline.cache.StagingArea: boolean remove(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.google.common.base.Objects: int hashCode(java.lang.Object[])>
<com.google.android.gms.dynamic.LifecycleDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setException(java.io.IOException)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.graphics.drawable.Drawable maybeCreateDrawableFromFactories(com.facebook.common.internal.ImmutableList,com.facebook.imagepipeline.image.CloseableImage)>
<com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: void <init>(boolean,int)>
<androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)>
<com.microsoft.did.feature.cardflow.presentationlogic.CardFlowViewModel: void <init>(android.content.Context,com.microsoft.did.businesslogic.PresentationUseCase,com.microsoft.did.businesslogic.IssuanceUseCase,com.microsoft.did.businesslogic.CorrelationUseCase,com.microsoft.did.businesslogic.CardUseCase,com.microsoft.did.util.VerifiableCredentialTelemetryClient,com.microsoft.did.util.exceptions.ExceptionProcessor,kotlinx.serialization.json.Json,com.microsoft.authenticator.core.navigation.InterModuleNavigator,com.microsoft.did.feature.notifications.AccountAndAuthenticationInterface,androidx.lifecycle.SavedStateHandle)>
<com.google.android.gms.common.images.zag: void <init>(android.net.Uri,int)>
<com.google.android.gms.common.api.internal.DataHolderResult: void <init>(com.google.android.gms.common.data.DataHolder,com.google.android.gms.common.api.Status)>
<com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)>
<com.facebook.react.bridge.JavaScriptModuleRegistry: void <init>()>
<com.google.android.gms.internal.common.zza: android.os.Parcel zza()>
<com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzdq zze()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketError$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,kotlin.coroutines.Continuation,com.microsoft.authenticator.msa.entities.MsaAccountManagerError)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: void <init>()>
<android.widget.FrameLayout: android.graphics.drawable.Drawable getBackground()>
<com.adjust.sdk.AttributionHandler: void checkDeeplinkI(com.adjust.sdk.AttributionResponseData)>
<com.facebook.react.views.text.TextAttributeProps: void <init>(com.facebook.react.uimanager.ReactStylesDiffMap)>
<android.os.Binder: int getCallingUid()>
<com.adjust.sdk.UtilNetworking: void extractEventCallbackId(java.util.Map)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel$observeAccountById$wrappedObserver$1: void onChanged(java.util.List)>
<com.google.android.gms.internal.measurement.zznk: com.google.android.gms.internal.measurement.zznl zzd()>
<com.google.android.gms.internal.auth-api.zzd: void zzc(int,android.os.Parcel)>
<com.google.android.gms.common.server.converter.zac: void <init>(java.lang.String,int)>
<android.view.View: void getDrawingRect(android.graphics.Rect)>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<android.widget.EditText: int getMeasuredHeight()>
<com.google.android.gms.common.api.internal.zabu: boolean zaj()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)>
<com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatableValue getPosition()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions liteMode(boolean)>
<com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication: java.lang.Object checkStatus(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectStorage(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.azure.authenticator.storage.Storage)>
<com.microsoft.authenticator.authentication.aad.entities.GetAadTokenResult$Success: com.microsoft.authenticator.authentication.aad.entities.IAuthenticationResultWrapper getResult()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List updateIsPrefetch()>
<com.google.android.gms.internal.measurement.zzdj: boolean zzae()>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragmentArgs$Builder: com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragmentArgs build()>
<com.facebook.react.bridge.GuardedAsyncTask: void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler)>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getCradleVerticalOffset()>
<com.facebook.imagepipeline.producers.LocalFetchProducer$2: void <init>(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setColor(int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)>
<java.util.IdentityHashMap: void <init>(int)>
<com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_AssistedFactory_Impl: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.animated.NativeAnimatedModule$11: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<com.google.android.gms.internal.location.zzaz: void zzy(java.util.List,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.google.common.collect.Iterators: boolean elementsEqual(java.util.Iterator,java.util.Iterator)>
<com.google.android.gms.common.api.internal.zabu: void zal()>
<com.facebook.react.modules.core.ChoreographerCompat: void choreographerPostFrameCallback(android.view.Choreographer$FrameCallback)>
<com.google.android.gms.tasks.DuplicateTaskCompletionException: java.lang.IllegalStateException of(com.google.android.gms.tasks.Task)>
<ch.qos.logback.core.subst.NodeToStringTransformer: ch.qos.logback.core.subst.Node tokenizeAndParseString(java.lang.String)>
<com.google.android.gms.internal.measurement.zzgz: void zzd(int,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$3: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<android.util.SparseIntArray: void delete(int)>
<com.facebook.react.modules.core.ChoreographerCompat: com.facebook.react.modules.core.ChoreographerCompat getInstance()>
<com.google.android.gms.location.zzx: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.location.zzap,com.google.android.gms.location.LocationCallback,com.google.android.gms.location.zzan)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager mfaAuthenticationManager()>
<com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()>
<com.google.android.material.bottomsheet.BottomSheetDialogFragment: void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: void setLocation(java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.Long getId()>
<com.azure.authenticator.databinding.FragmentStopSyncAccountBinding: com.azure.authenticator.databinding.FragmentStopSyncAccountBinding bind(android.view.View)>
<com.facebook.react.fabric.FabricComponents: java.lang.String getFabricComponentName(java.lang.String)>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback: com.microsoft.onlineid.Ticket access$getMsaTicket$p(com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<com.google.android.material.internal.CollapsingTextHelper: void recalculate()>
<com.azure.authenticator.databinding.FragmentAddCredentialBinding: android.widget.ScrollView getRoot()>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.material.navigation.NavigationBarItemView: void setTextColor(android.content.res.ColorStateList)>
<com.facebook.drawee.controller.AbstractDraweeController: void access$200(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,float,boolean)>
<com.google.android.gms.location.zzbl: void <init>()>
<com.google.android.material.timepicker.TimePickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.measurement.zzkz: long zzo()>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: void <init>(android.content.Context,com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<androidx.core.math.MathUtils: float clamp(float,float,float)>
<ch.qos.logback.core.joran.action.NOPAction: void <init>()>
<com.google.android.material.snackbar.Snackbar: boolean hasSnackbarContentStyleAttrs(android.content.Context)>
<java.util.concurrent.ConcurrentMap: int size()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void checkForAuthsIfNeeded(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager$AuthCallType,boolean)>
<com.adjust.sdk.AdjustFactory: void setTryInstallReferrer(boolean)>
<com.google.android.material.shape.ShapePath: void applyToPath(android.graphics.Matrix,android.graphics.Path)>
<com.google.android.gms.internal.measurement.zzdj: long zzD()>
<com.google.android.gms.measurement.internal.zzhn: void zzH()>
<android.animation.ValueAnimator: void setRepeatCount(int)>
<com.google.android.gms.internal.location.zzan: void <init>()>
<com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager: void validateGooglePlayServiceAvailability(androidx.appcompat.app.AppCompatActivity)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: java.lang.String getMsaCid$app_productionRelease()>
<android.view.View: void setMinimumHeight(int)>
<android.view.View$BaseSavedState: void writeToParcel(android.os.Parcel,int)>
<com.google.android.material.tabs.ElasticTabIndicatorInterpolator: float decInterp(float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion$DefaultImpls: void onAddAccountError$default(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion,com.microsoft.onlineid.exception.AuthenticationException,int,java.lang.Object)>
<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>
<com.google.android.gms.signin.internal.zaf: void zaf(com.google.android.gms.common.internal.IAccountAccessor,int,boolean)>
<android.text.StaticLayout: int getLineStart(int)>
<com.google.android.gms.internal.measurement.zzew: boolean zza(android.content.Context,android.net.Uri)>
<com.azure.authenticator.storage.database.AccountWriter: void save(com.azure.authenticator.accounts.GenericAccount)>
<com.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()>
<com.facebook.fbreact.specs.NativeSoundManagerSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.adjust.sdk.Adjust: void onCreate(com.adjust.sdk.AdjustConfig)>
<com.google.android.gms.internal.measurement.zzcw: com.google.android.gms.internal.measurement.zzcw zzc(com.google.android.gms.internal.measurement.zzdq)>
<com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase: java.lang.Object deleteBackup(java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.google.android.gms.dynamite.zzd: void <init>()>
<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>
<android.view.MotionEvent: float getY()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void createShapeValueAnimator()>
<ch.qos.logback.core.joran.action.ImplicitAction: void <init>()>
<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$1: void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>
<com.google.android.gms.common.internal.Preconditions: int checkNotZero(int)>
<com.google.android.gms.internal.safetynet.zzk$zzd: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.common.internal.zzc: void zze()>
<com.google.android.gms.measurement.internal.zzkf: int zzu(com.google.android.gms.internal.measurement.zzdi,java.lang.String)>
<com.google.android.gms.internal.measurement.zzkg: boolean zzj()>
<com.airbnb.lottie.model.content.ShapeStroke$LineCapType: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.producers.BaseProducerContext: boolean isPrefetch()>
<android.widget.CheckBox: void setOutlineProvider(android.view.ViewOutlineProvider)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzC(com.google.android.gms.common.AccountPicker$AccountChooserOptions,boolean)>
<com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,int[])>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>
<java.lang.String: int codePointAt(int)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String getErrorString(int)>
<com.google.android.gms.measurement.internal.zzai: long zzD()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onNeutralButtonClick()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showGraphTokenExpiredScreen$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStyleHeight()>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: java.lang.String zzh(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount$MfaSdkAccountType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,com.microsoft.authenticator.mfasdk.account.entities.AccountCapability,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.Button: void setBackgroundResource(int)>
<java.lang.ThreadLocal: void set(java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()>
<com.airbnb.lottie.model.layer.BaseLayer: void intersectBoundsWithMask(android.graphics.RectF,android.graphics.Matrix)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.common.businessLogic.AuthenticatorState access$3500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: void <init>(android.content.Context)>
<com.google.android.gms.auth.api.signin.internal.zzv: void <init>(android.content.Context)>
<com.facebook.react.views.image.ImageLoadEvent: void <init>(int,int)>
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setStateInternal(int)>
<com.facebook.react.animated.ValueAnimatedNode: double getValue()>
<ch.qos.logback.core.joran.event.SaxEventRecorder: java.util.List getSaxEventList()>
<com.google.android.gms.common.ConnectionResult: android.app.PendingIntent getResolution()>
<com.azure.authenticator.databinding.SharedDeviceModeBinding: com.azure.authenticator.databinding.SharedDeviceModeBinding bind(android.view.View)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void handleGooglePlayUnavailable(android.widget.FrameLayout)>
<com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean isForNewAccount()>
<android.view.View: void setRotation(float)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker$doWork$1: void <init>(com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker,kotlin.coroutines.Continuation)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()>
<com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)>
<android.content.Intent: android.content.ComponentName getComponent()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: androidx.lifecycle.MutableLiveData access$get_mergeBrokerAccountStatus$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)>
<com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzd(android.content.Context,java.lang.String)>
<com.facebook.common.util.StreamUtil: long skip(java.io.InputStream,long)>
<com.fasterxml.jackson.core.util.TextBuffer: void resetWithCopy(char[],int,int)>
<com.google.android.gms.internal.measurement.zzdu: void zzq(com.google.android.gms.internal.measurement.zzdu,long)>
<ch.qos.logback.classic.pattern.PropertyConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.internal.measurement.zzgf: int zzc(byte[],int,com.google.android.gms.internal.measurement.zzge)>
<com.adjust.sdk.ActivityHandler: void checkForInstallReferrerInfo(com.adjust.sdk.SdkClickResponseData)>
<com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<ch.qos.logback.core.rolling.helper.PathPart: java.util.List listFiles(ch.qos.logback.core.rolling.helper.FileProvider,java.lang.String)>
<com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: void <init>()>
<androidx.room.EntityInsertionAdapter: void <init>(androidx.room.RoomDatabase)>
<com.google.android.gms.internal.measurement.zzkg: double zzg(java.lang.Object,long)>
<com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>
<com.google.android.gms.internal.measurement.zzdb: void zzv()>
<com.google.android.gms.auth.api.signin.internal.HashAccumulator: void <init>()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>
<com.facebook.imagepipeline.common.BytesRange: java.lang.String valueOrEmpty(int)>
<ch.qos.logback.core.joran.util.PropertySetter: void addComplexProperty(java.lang.String,java.lang.Object)>
<com.azure.authenticator.utils.Hilt_TestActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node T()>
<ch.qos.logback.classic.util.LoggerNameUtil: int getFirstSeparatorIndexOf(java.lang.String)>
<com.google.android.gms.internal.measurement.zzcn: boolean zzd()>
<com.google.android.gms.common.api.Api$Client: void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)>
<com.facebook.imagepipeline.memory.BitmapCounter: long getSize()>
<com.google.android.material.timepicker.RadialViewGroup$1: void <init>(com.google.android.material.timepicker.RadialViewGroup)>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: void <init>(com.google.android.gms.common.internal.RootTelemetryConfiguration,boolean,boolean,int[],int,int[])>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.reflect.Method findAdderMethod(java.lang.String)>
<com.facebook.react.views.text.TextAttributeProps: void setNumberOfLines(int)>
<com.google.android.material.snackbar.SnackbarManager$Callback: void show()>
<com.google.android.gms.internal.measurement.zzdu: void zzp(com.google.android.gms.internal.measurement.zzdu)>
<com.google.android.gms.measurement.internal.zzex: void zze(java.lang.Boolean)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void showSendFeedbackDialog(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.airbnb.lottie.model.content.ShapeTrimPath: com.airbnb.lottie.model.content.ShapeTrimPath$Type getType()>
<com.facebook.react.uimanager.DisplayMetricsHolder: void setScreenDisplayMetrics(android.util.DisplayMetrics)>
<androidx.navigation.NavDestination: int getId()>
<com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpHeaderWithAlpha(byte[],int)>
<ch.qos.logback.core.rolling.helper.PathPart: void <init>(java.lang.String)>
<com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Matrix getTransformationMatrix()>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void onNewResultImpl(java.lang.Object,int)>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1: java.lang.Void then(bolts.Task)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_AssistedFactory access$15600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.auth.zzk: void <init>()>
<com.azure.authenticator.storage.database.migration.Migration21To22: void <init>()>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzd(int,com.google.android.gms.internal.measurement.zzdf)>
<com.facebook.react.bridge.GuardedAsyncTask: void <init>(com.facebook.react.bridge.ReactContext)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.abstraction.MsalTokenRefreshManager msalTokenRefreshManager()>
<com.google.common.collect.ImmutableMap$SerializedForm: void <init>(com.google.common.collect.ImmutableMap)>
<com.airbnb.lottie.LottieDrawable: float getMinFrame()>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>
<android.widget.GridView: void setSelection(int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setMargin(int,float)>
<com.google.android.gms.common.zzw: com.google.android.gms.common.zzw zze(java.lang.String,java.lang.Throwable)>
<com.google.android.material.appbar.ViewOffsetHelper: int getTopAndBottomOffset()>
<com.google.android.gms.internal.measurement.zzdz: com.google.android.gms.internal.measurement.zzdz zza()>
<com.google.android.gms.measurement.internal.zzei: java.lang.String zzo(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<ch.qos.logback.core.util.COWArrayList: java.util.Iterator iterator()>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase: java.lang.Object generateMsaNgcKey(java.lang.String,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.animation.content.RectangleContent: void invalidate()>
<com.google.android.material.internal.ViewUtils$RelativePadding: void <init>(int,int,int,int)>
<com.google.android.gms.measurement.internal.zzkk: java.util.ArrayList zzak(java.util.List)>
<ch.qos.logback.core.status.Status: boolean hasChildren()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: java.util.List access$getMfaNotificationsWithContextAllowList$cp()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onResume()>
<com.azure.authenticator.ui.action.ReEnableAutoBackupAction$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.safetynet.zzf: void <init>(java.lang.String)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setAdapter(android.widget.ListAdapter)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void showView()>
<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.EventInternal convert(com.google.android.datatransport.runtime.SendRequest)>
<kotlin.Lazy: java.lang.Object getValue()>
<android.database.CursorWindow: void <init>(boolean)>
<androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>
<ch.qos.logback.classic.LoggerContext: void cancelScheduledTasks()>
<com.facebook.drawee.drawable.RoundedDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.facebook.react.uimanager.LayoutShadowNode: void <init>()>
<com.google.android.gms.maps.model.PolygonOptions: int getStrokeColor()>
<com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient createClient()>
<com.azure.authenticator.OnAppUpgradeReceiver: com.azure.authenticator.storage.Storage getStorage$app_productionRelease()>
<org.slf4j.Marker: boolean equals(java.lang.Object)>
<com.google.android.gms.common.internal.RootTelemetryConfiguration: boolean getMethodTimingTelemetryEnabled()>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String getDeviceDetails()>
<com.airbnb.lottie.LottieAnimationView$5: com.airbnb.lottie.LottieResult call()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: com.microsoft.authenticator.authentication.entities.AuthenticationType getInitialAuthenticationType()>
<bolts.TaskCompletionSource: void setError(java.lang.Exception)>
<androidx.fragment.app.Fragment: boolean isHidden()>
<java.util.concurrent.atomic.AtomicReference: void <init>()>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream,int)>
<okhttp3.Call: okhttp3.Request request()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$startWorkplaceJoin$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.common.api.internal.ConnectionCallbacks: void onConnectionSuspended(int)>
<com.evernote.android.job.JobRequest: long getBackoffOffset(boolean)>
<com.facebook.react.animated.NativeAnimatedModule$20: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.modules.core.JavaTimerManager: boolean access$1400(com.facebook.react.modules.core.JavaTimerManager)>
<com.google.android.gms.common.api.internal.zabb: void zaa()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleRemoveNode(com.facebook.react.uimanager.ReactShadowNode)>
<com.google.android.gms.auth.api.signin.GoogleSignIn: com.google.android.gms.auth.api.signin.GoogleSignInAccount getLastSignedInAccount(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.powerlift.PowerLift powerLift()>
<com.google.android.gms.internal.auth-api.zzj: void <init>()>
<com.google.android.gms.measurement.internal.zzib: java.lang.String zzi(java.lang.Class,java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNode: int getScreenX()>
<com.google.android.gms.measurement.internal.zzfh: void zza()>
<com.google.android.gms.maps.GoogleMapOptions: java.lang.Float getMaxZoomPreference()>
<com.google.android.gms.measurement.internal.zzjv: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isRestrictedUserProfile(android.content.Context)>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<com.google.android.gms.internal.maps.zzc: java.util.ArrayList zzb(android.os.Parcel)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: java.lang.String getEntropySign(com.microsoft.authenticator.authentication.entities.EntropySignEnum)>
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<com.google.android.gms.internal.measurement.zzbr: void zzq(android.os.Bundle)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)>
<com.airbnb.lottie.LottieDrawable: void setTextDelegate(com.airbnb.lottie.TextDelegate)>
<com.facebook.react.views.text.TextAttributeProps: float getLetterSpacing()>
<com.google.android.gms.common.logging.Logger: void e(java.lang.String,java.lang.Object[])>
<com.google.android.gms.measurement.internal.zzfi: com.google.android.gms.measurement.internal.zzfh zzr(com.google.android.gms.measurement.internal.zzfi,com.google.android.gms.measurement.internal.zzfh)>
<com.azure.authenticator.notifications.msa.MsaProtectionNotification: void initializeNotification(android.os.Bundle)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void lambda$static$1(android.database.sqlite.SQLiteDatabase)>
<com.evernote.android.job.JobStorage: void closeDatabase(android.database.sqlite.SQLiteDatabase)>
<ch.qos.logback.core.joran.action.IncludeAction: ch.qos.logback.core.joran.event.SaxEventRecorder createRecorder(java.io.InputStream,java.net.URL)>
<android.text.Spanned: int getSpanEnd(java.lang.Object)>
<com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColorHint(android.content.Context)>
<com.google.android.gms.measurement.internal.zzai: boolean zzK()>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredentialSaveDatasetsUseCase credentialSaveDatasetsUseCase()>
<android.widget.Spinner: int getTop()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloat(android.os.Parcel,int,float)>
<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>
<com.facebook.react.views.scroll.ReactScrollView: void access$300(com.facebook.react.views.scroll.ReactScrollView,int)>
<com.google.android.gms.common.server.response.FastParser: java.math.BigDecimal zau(java.io.BufferedReader)>
<com.google.android.gms.common.data.DataHolder: boolean isClosed()>
<com.azure.authenticator.ui.MainActivity: void onPause()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void <init>()>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$NoAccountFound: com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$NoAccountFound copy(com.microsoft.ngc.aad.NgcSession)>
<bolts.TaskCompletionSource: boolean trySetError(java.lang.Exception)>
<ch.qos.logback.core.rolling.helper.IntegerTokenConverter: java.lang.String convert(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.di.VcWalletModule access$8200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectActivityStartIntentHandler(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: void setValue(java.lang.Object)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount: java.lang.String getObjectId()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzg(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getAadAccount(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.location.zzam: void zzj(android.app.PendingIntent,com.google.android.gms.common.api.internal.IStatusCallback)>
<com.google.android.gms.common.api.internal.BasePendingResult: void zak()>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: void <init>()>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInSetupViewModel: void <init>(com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInSetupUseCase,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker,com.microsoft.authenticator.mfasdk.MfaSdkManager,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<com.google.android.gms.measurement.internal.zzkk: int zzaa(int)>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)>
<com.google.android.gms.common.zzm: com.google.android.gms.common.zzw zzc(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean)>
<com.google.android.material.color.MaterialColors: boolean isColorLight(int)>
<com.google.common.collect.Lists: int lastIndexOfRandomAccess(java.util.List,java.lang.Object)>
<com.facebook.react.views.viewpager.ReactViewPager: void setCurrentItemFromJs(int,boolean)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onDestroy()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)>
<com.evernote.android.job.JobManager: boolean cancelInner(com.evernote.android.job.Job)>
<com.google.android.gms.dynamite.zzc: void <init>()>
<com.facebook.datasource.DataSource: java.lang.Object getResult()>
<com.google.android.gms.internal.measurement.zzbq: void <init>(com.google.android.gms.internal.measurement.zzbr)>
<androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)>
<ch.qos.logback.core.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.core.Context,java.lang.String)>
<android.util.SparseLongArray: long valueAt(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback: java.lang.String access$getMsaCid$p(com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback)>
<com.facebook.react.bridge.WritableArray: void pushDouble(double)>
<java.lang.Object: boolean equals(java.lang.Object)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy getBitmapMemoryCacheTrimStrategy()>
<com.facebook.fbreact.specs.NativePlatformConstantsIOSSpec: java.util.Map getTypedExportedConstants()>
<com.airbnb.lottie.LottieAnimationView: void cancelLoaderTask()>
<com.facebook.react.modules.core.JavaTimerManager: void onHeadlessJsTaskFinish(int)>
<com.google.android.gms.common.api.internal.zau: void <init>(com.google.android.gms.common.api.internal.zax)>
<com.adjust.sdk.PackageHandler$5: void <init>(com.adjust.sdk.PackageHandler)>
<javax.net.SocketFactory: void <init>()>
<com.facebook.imagepipeline.producers.MultiplexProducer: java.io.Closeable cloneOrNull(java.io.Closeable)>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: boolean zzg(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.google.android.gms.measurement.internal.zzkd: void zzQ()>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field forConcreteTypeArray(java.lang.String,int,java.lang.Class)>
<com.google.android.gms.measurement.internal.zzg: void zzo(java.lang.String)>
<com.azure.authenticator.databinding.ImportPasswordBannerBinding: void <init>(com.google.android.material.card.MaterialCardView,androidx.constraintlayout.widget.ConstraintLayout,android.view.View,com.google.android.material.button.MaterialButton,android.widget.TextView,android.widget.LinearLayout,com.google.android.material.button.MaterialButton)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)>
<com.google.android.gms.common.api.internal.zabp: void <init>(com.google.android.gms.common.api.GoogleApi)>
<com.azure.authenticator.authentication.msa.MsaAccountManager: android.content.Intent generateMsaActivityIntent(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.facebook.imagepipeline.image.EncodedImage: com.facebook.imageutils.ImageMetaData readImageMetaData()>
<android.app.Dialog: boolean isShowing()>
<com.google.android.gms.common.server.response.zan: boolean zae(java.lang.Class)>
<com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzck zzb()>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: void start()>
<android.widget.LinearLayout: void onDetachedFromWindow()>
<com.google.android.material.datepicker.PickerFragment: boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)>
<androidx.collection.LongSparseArray: long keyAt(int)>
<com.facebook.drawee.generic.RoundingParams: boolean getPaintFilterBitmap()>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: boolean isErrorFree()>
<android.icu.text.DateFormat: java.lang.String format(java.util.Date)>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzj()>
<java.util.ArrayList: java.util.List subList(int,int)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.react.views.text.TextAttributeProps: void setColor(java.lang.Integer)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter: void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object)>
<com.azure.authenticator.utils.Hilt_TestActivity: void inject()>
<com.evernote.android.job.JobProxy$Common: long checkedAdd(long,long)>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.FlexByteArrayPool getFlexByteArrayPool()>
<com.google.android.gms.internal.measurement.zzdb: java.lang.String zzd()>
<java.lang.Process: java.io.InputStream getInputStream()>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)>
<com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)>
<java.lang.Error: void <init>()>
<com.google.android.gms.internal.measurement.zzdk: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding bind(android.view.View)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void access$showRegisterButton(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,java.lang.String)>
<com.google.android.gms.common.internal.Preconditions: void checkState(boolean)>
<com.google.android.gms.common.data.EntityBuffer: void zab()>
<com.google.android.material.textfield.CutoutDrawable: void setCutout(float,float,float,float)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate$2: void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate)>
<com.google.android.a.c: android.os.Parcelable a(android.os.Parcel,android.os.Parcelable$Creator)>
<androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()>
<java.lang.AssertionError: void <init>()>
<com.evernote.android.job.JobManager: void scheduleWithApi(com.evernote.android.job.JobRequest,com.evernote.android.job.JobApi,boolean,boolean)>
<java.io.File: boolean mkdirs()>
<com.google.android.gms.internal.measurement.zzkq: com.google.android.gms.internal.measurement.zzkr zzc()>
<com.google.android.gms.common.api.internal.zacv: void zal(com.google.android.gms.common.api.Status)>
<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>
<com.google.android.gms.measurement.internal.zzai: boolean zzn(com.google.android.gms.measurement.internal.zzaa)>
<com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)>
<android.widget.FrameLayout: android.view.ViewPropertyAnimator animate()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>
<com.google.android.gms.measurement.internal.zzgm: void onEvent(java.lang.String,java.lang.String,android.os.Bundle,long)>
<com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)>
<com.azure.authenticator.common.Util$Companion: android.graphics.drawable.Drawable getDrawableFromAttrRes(int,android.content.Context)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckManager: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckUseCase)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$showRegisterButton$2: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzcf: boolean zza()>
<com.fasterxml.jackson.core.util.InternCache: void <init>()>
<android.widget.ImageButton: boolean isPressed()>
<com.google.common.net.InternetDomainName: int findSuffixOfType(com.google.common.base.Optional)>
<com.google.android.material.timepicker.ClockFaceView: android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView)>
<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>
<com.facebook.react.uimanager.UIManagerModule: java.util.Map access$100(com.facebook.react.uimanager.UIManagerModule)>
<com.google.android.gms.internal.firebase_messaging.zzc: void <init>(com.google.android.gms.internal.firebase_messaging.zzb)>
<com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment_MembersInjector: void injectTelemetryManager(com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.airbnb.lottie.animation.content.CompoundTrimPathContent: void apply(android.graphics.Path)>
<com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>
<com.google.android.gms.common.internal.IGmsCallbacks: void zzb(int,android.os.Bundle)>
<com.google.android.gms.internal.location.zzaz: com.google.android.gms.location.LocationAvailability zzA()>
<ch.qos.logback.core.spi.ContextAwareImpl: void addWarn(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdb: void zzs(com.google.android.gms.internal.measurement.zzdb,java.lang.String)>
<com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)>
<android.widget.ImageButton: float getElevation()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setMaxImageSize(int)>
<android.widget.LinearLayout: void invalidate()>
<com.facebook.imagepipeline.cache.StagingArea: com.facebook.imagepipeline.image.EncodedImage get(com.facebook.cache.common.CacheKey)>
<com.google.crypto.tink.KeyTypeManager: void <init>(java.lang.Class,com.google.crypto.tink.KeyTypeManager$PrimitiveFactory[])>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: void <init>(java.lang.String,java.lang.String,int,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.Runnable,android.content.DialogInterface$OnShowListener,boolean,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.internal.measurement.zzdj: void zzaT(com.google.android.gms.internal.measurement.zzdj,int)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void access$000(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>
<com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonReaderSync(com.airbnb.lottie.parser.moshi.JsonReader,java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequest$RequestLevel: void <init>(java.lang.String,int,int)>
<com.facebook.react.fabric.ComponentFactoryDelegate: com.facebook.jni.HybridData initHybrid()>
<com.fasterxml.jackson.core.base.ParserBase: java.lang.String getCurrentName()>
<ch.qos.logback.core.joran.util.StringToObjectConverter: java.lang.Object convertArg(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class)>
<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setBackendName(java.lang.String)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzw addPolygon(com.google.android.gms.maps.model.PolygonOptions)>
<com.google.android.material.snackbar.BaseTransientBottomBar$9: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration buildByMinutes(double)>
<ch.qos.logback.core.joran.spi.Interpreter: void characters(ch.qos.logback.core.joran.event.BodyEvent)>
<com.google.android.gms.common.api.internal.zabu: boolean zai()>
<android.widget.TextView: void setPadding(int,int,int,int)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$Hc5nW5Sgepxg1ew1JLbjaeoPvMg': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderWidth(int,float)>
<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void <init>(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.android.gms.auth.api.signin.SignInAccount: void <init>(java.lang.String,com.google.android.gms.auth.api.signin.GoogleSignInAccount,java.lang.String)>
<com.github.amlcurran.showcaseview.ShotStateStore: boolean hasShot()>
<com.google.android.gms.measurement.internal.zzhv: void <init>(com.google.android.gms.measurement.internal.zzib,android.os.Bundle,com.google.android.gms.measurement.internal.zzhu,com.google.android.gms.measurement.internal.zzhu,long)>
<com.google.android.gms.measurement.internal.zzex: android.content.SharedPreferences zzd()>
<ch.qos.logback.core.util.Loader$2: void <init>(java.lang.Class)>
<com.facebook.common.statfs.StatFsHelper: com.facebook.common.statfs.StatFsHelper getInstance()>
<java.util.Collections: void sort(java.util.List)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: android.graphics.drawable.Drawable createDrawable(com.facebook.common.references.CloseableReference)>
<com.google.android.gms.common.data.DataHolder: boolean hasColumn(java.lang.String)>
<com.airbnb.lottie.LottieDrawable: void resumeAnimation()>
<com.fasterxml.jackson.core.io.IOContext: byte[] allocWriteEncodingBuffer()>
<java.io.PrintStream: void println(java.lang.String)>
<com.google.android.gms.common.data.DataHolder: byte[] getByteArray(java.lang.String,int,int)>
<com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zac(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.microsoft.authenticator.authentication.dialog.AuthDialogIntentProvider: android.content.Intent getMsaSessionIntent(android.content.Context,com.microsoft.authenticator.authentication.msa.entities.MsaSession)>
<com.facebook.react.uimanager.ReactShadowNode: void dirty()>
<com.google.android.gms.location.zzbb: void <init>(android.os.IBinder)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()>
<com.google.android.material.card.MaterialCardView: boolean isChecked()>
<com.google.android.gms.internal.measurement.zzha: void zzg(int,int)>
<com.google.android.gms.common.api.GoogleApi: void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
<ch.qos.logback.classic.turbo.LRUMessageCache: void <init>(int)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllAadMfaAccountsGeneratingOtps()>
<com.google.android.gms.maps.SupportMapFragment$zza: void onEnterAmbient(android.os.Bundle)>
<com.azure.authenticator.ui.fragment.main.Hilt_SendFeedbackFragment: void <init>()>
<com.facebook.soloader.UnpackingSoSource$Unpacker: com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest()>
<com.microsoft.brooklyn.module.autofill.BrooklynAutofillService_MembersInjector: void injectSdkConnector(com.microsoft.brooklyn.module.autofill.BrooklynAutofillService,com.microsoft.brooklyn.module.sync.SyncSDKConnector)>
<java.util.concurrent.locks.ReentrantLock: void unlock()>
<ch.qos.logback.classic.Logger: boolean isErrorEnabled(org.slf4j.Marker)>
<com.facebook.react.views.art.ARTShapeShadowNode: boolean setupStrokePaint(android.graphics.Paint,float)>
<com.microsoft.authenticator.registration.mfa.entities.AadMfaAccountAdditionalInformation: java.lang.String getRoutingHint()>
<com.microsoft.did.feature.backuprestore.viewlogic.RestorePasswordChallengeFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.backuprestore.viewlogic.RestorePasswordChallengeFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _handleApos()>
<com.google.android.gms.common.api.internal.UnregisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()>
<androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>
<com.google.android.gms.internal.measurement.zzcx: void zzk(com.google.android.gms.internal.measurement.zzcx,com.google.android.gms.internal.measurement.zzdq)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getParent()>
<com.google.android.gms.internal.measurement.zzjw: void zzc(java.lang.Object,java.lang.Object)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<android.widget.LinearLayout: android.view.ViewParent getParent()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.common.internal.zzq: void <init>(android.content.Context)>
<com.adjust.sdk.ActivityHandler: com.adjust.sdk.AdjustConfig access$2900(com.adjust.sdk.ActivityHandler)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: void configure(ch.qos.logback.core.net.ssl.SSLConfigurable)>
<com.google.android.gms.auth.api.credentials.Credential: void <init>(java.lang.String,java.lang.String,android.net.Uri,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.image.EncodedImage getNewResultForImagesWithoutExifData(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.internal.measurement.zzdp: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider changePasswordAutofillViewModelProvider()>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength)>
<com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.disk.DiskCacheConfig$Builder newBuilder(android.content.Context)>
<androidx.core.view.AccessibilityDelegateCompat: void <init>()>
<com.google.android.gms.common.api.internal.zabl: void zan(com.google.android.gms.common.api.internal.zal)>
<com.facebook.react.ReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)>
<android.widget.AutoCompleteTextView: void dismissDropDown()>
<com.google.android.gms.measurement.internal.zzf: void zzb()>
<android.graphics.Color: int alpha(int)>
<com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: void <init>(com.facebook.react.modules.core.JavaTimerManager)>
<android.widget.TextSwitcher: void setOutAnimation(android.view.animation.Animation)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void setResultAndFinish(int)>
<com.azure.authenticator.databinding.BottomNavigationLayoutBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,com.google.android.material.bottomnavigation.BottomNavigationView,android.view.View,androidx.constraintlayout.widget.ConstraintLayout)>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void setBasePool(com.facebook.imagepipeline.memory.BasePool)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: android.graphics.Bitmap$Config access$500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.gms.maps.model.PolygonOptions: boolean isClickable()>
<com.facebook.react.animated.SpringAnimation: boolean isAtRest()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider msaNotificationActionWorker_AssistedFactoryProvider()>
<com.facebook.yoga.YogaNodeFactory: com.facebook.yoga.YogaNode create(com.facebook.yoga.YogaConfig)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void handleError(java.lang.Throwable)>
<androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdj: void zzbI()>
<com.facebook.imagepipeline.memory.BitmapPoolBackend: int getSize(android.graphics.Bitmap)>
<com.google.android.gms.measurement.internal.zzkk: void zzae(com.google.android.gms.internal.measurement.zzs,long)>
<ch.qos.logback.core.AppenderBase: ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object)>
<com.google.android.material.card.MaterialCardView: void forceRippleRedrawIfNeeded()>
<com.google.android.gms.common.data.DataHolder: void <init>(com.google.android.gms.common.data.DataHolder$Builder,int,android.os.Bundle,com.google.android.gms.common.data.zab)>
<com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()>
<com.google.android.material.chip.Chip: void setChipIconVisible(int)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setImportantForAccessibility(android.view.View,java.lang.String)>
<com.airbnb.lottie.model.layer.BaseLayer: void setProgress(float)>
<com.microsoft.authenticator.mfasdk.authentication.entities.AuthRequestDetails$Companion: com.microsoft.authenticator.mfasdk.authentication.entities.AuthRequestDetails fromBundle(android.os.Bundle)>
<ch.qos.logback.classic.PatternLayout: void <init>()>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.microsoft.aad.adal.Logger: com.microsoft.aad.adal.Logger getInstance()>
<com.google.android.gms.internal.auth-api-phone.zza: android.os.Parcel obtainAndWriteInterfaceToken()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.storage.AuthenticatorMfaSdkStorage access$5500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<ch.qos.logback.classic.spi.ThrowableProxyVO: ch.qos.logback.classic.spi.ThrowableProxyVO build(ch.qos.logback.classic.spi.IThrowableProxy)>
<com.facebook.imagepipeline.image.EncodedImage: int getWidth()>
<com.facebook.react.TurboReactPackage$1$1: void <init>(com.facebook.react.TurboReactPackage$1)>
<com.google.android.gms.measurement.internal.zzho: void zzm(java.lang.String)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$1002(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.fasterxml.jackson.core.io.NumberOutput: int leading3(int,byte[],int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.storage.database.AccountWriter getAccountWriter()>
<com.facebook.soloader.UnpackingSoSource$DsoManifest: void write(java.io.DataOutput)>
<com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder: com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder setKeyId(int)>
<android.net.Uri: android.net.Uri$Builder buildUpon()>
<com.facebook.react.bridge.GuardedRunnable: void runGuarded()>
<com.google.android.gms.common.internal.ClientSettings: void <init>(android.accounts.Account,java.util.Set,java.util.Map,int,android.view.View,java.lang.String,java.lang.String,com.google.android.gms.signin.SignInOptions,boolean)>
<com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()>
<com.google.android.gms.measurement.internal.zzkd: java.lang.String zzE()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void offsetRectWithShadow(android.graphics.Rect)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$enableBrowserAccess$enableBrowserAccessDialogBuilder$2: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel access$14400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.material.appbar.AppBarLayout: boolean hasScrollableChildren()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries getAccountStorageCustomQueries()>
<com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String[] getAccountTypes()>
<com.fasterxml.jackson.core.io.UTF8Writer: int convertSurrogate(int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void actionCancel()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onDestroy()>
<com.google.android.gms.measurement.internal.zzhd: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference)>
<com.azure.authenticator.databinding.FrxRestorePromptBinding: android.widget.LinearLayout getRoot()>
<com.google.android.gms.gcm.PeriodicTask$Builder: com.google.android.gms.gcm.PeriodicTask build()>
<ch.qos.logback.core.joran.action.Action: void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes)>
<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)>
<com.google.android.gms.common.internal.BaseGmsClient: int getMinApkVersion()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.google.android.gms.location.zzl: void <init>()>
<com.google.android.gms.common.api.internal.zabd: void zah()>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix getMatrixForRepeater(float)>
<com.google.android.material.badge.BadgeDrawable: int getHorizontalOffset()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,float)>
<com.google.android.gms.internal.measurement.zzkz: long zzq()>
<com.google.android.gms.common.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer: void <init>(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void connectAnimatedNodes(int,int)>
<com.adjust.sdk.Reflection: java.lang.Class forName(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzf(com.google.android.gms.internal.measurement.zzda)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuf(java.io.InputStream,com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream)>
<com.google.android.gms.measurement.internal.zzho: long zzk()>
<com.airbnb.lottie.LottieDrawable: void setMaxFrame(java.lang.String)>
<com.facebook.imagepipeline.producers.DataFetchProducer: byte[] getData(java.lang.String)>
<com.google.android.material.snackbar.SnackbarManager: boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.google.android.gms.location.LocationResult: boolean hasResult(android.content.Intent)>
<com.facebook.imagepipeline.image.EncodedImage: java.io.InputStream getInputStream()>
<com.google.android.gms.gcm.PeriodicTask$Builder: void <init>()>
<com.google.android.material.navigation.NavigationBarItemView: void tryAttachBadgeToAnchor(android.view.View)>
<okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)>
<com.facebook.imagepipeline.producers.BaseNetworkFetcher: void <init>()>
<com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()>
<com.facebook.common.internal.Suppliers$1: void <init>(java.lang.Object)>
<com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)>
<com.google.android.gms.common.internal.GmsLogger: void <init>(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_2(int)>
<com.facebook.react.uimanager.ReactShadowNode: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode)>
<android.util.JsonReader: void skipValue()>
<com.evernote.android.job.v14.PlatformAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String getLogDescriptionForAccount(com.azure.authenticator.accounts.GenericAccount)>
<com.fasterxml.jackson.core.JsonEncoding: boolean isBigEndian()>
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>
<com.google.android.gms.location.zzbw: void <init>()>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinPackagingData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void setHasStableIds(boolean)>
<com.evernote.android.job.JobManager: com.evernote.android.job.Job getJob(int)>
<com.google.android.gms.common.api.Releasable: void release()>
<java.io.InputStream: int read()>
<com.google.android.gms.security.ProviderInstaller$ProviderInstallListener: void onProviderInstalled()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.notifications.presentationlogic.CredentialNotificationsViewModel access$12200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.modules.network.ProgressResponseBody: okhttp3.ResponseBody access$100(com.facebook.react.modules.network.ProgressResponseBody)>
<com.adjust.sdk.IActivityHandler: android.content.Context getContext()>
<com.azure.authenticator.logging.DaggerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.TextView: int getId()>
<com.google.android.material.datepicker.MaterialDatePicker: void access$200(com.google.android.material.datepicker.MaterialDatePicker)>
<com.facebook.react.views.image.ImageLoadEvent: void <init>(int,int,boolean,java.lang.String)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean zzg(com.google.android.gms.common.internal.BaseGmsClient)>
<com.google.android.gms.common.util.CollectionUtils: java.util.Set zza(int,boolean)>
<com.facebook.react.TurboReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)>
<com.adjust.sdk.scheduler.ThreadFactoryWrapper: void <init>(java.lang.String)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getDecodePreviewFrame()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void d(java.lang.String)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.imagepipeline.image.EncodedImage access$100(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations credAutofillCommonOperations()>
<com.facebook.cache.disk.DefaultDiskStorage: long doRemove(java.io.File)>
<com.google.android.gms.internal.measurement.zzft: void zza(java.lang.Throwable,java.lang.Throwable)>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region$Op)>
<com.google.android.material.navigation.NavigationBarItemView: void setLabelVisibilityMode(int)>
<com.google.android.gms.common.api.internal.zabd: void zaq(com.google.android.gms.common.ConnectionResult)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.backuprestore.viewlogic.RestorePromptFragment injectRestorePromptFragment2(com.microsoft.did.feature.backuprestore.viewlogic.RestorePromptFragment)>
<ch.qos.logback.classic.Logger: void setLevel(ch.qos.logback.classic.Level)>
<com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager getNativeViewHierarchyManager()>
<com.google.android.gms.internal.maps.zzz: void remove()>
<com.google.android.material.circularreveal.CircularRevealWidget: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()>
<com.google.common.base.CharMatcher$AnyOf: void <init>(java.lang.CharSequence)>
<com.google.android.gms.common.api.Api$Client: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.gms.internal.cloudmessaging.zzb: java.util.concurrent.ExecutorService zza(java.util.concurrent.ThreadFactory,int)>
<com.google.android.gms.measurement.internal.zzfl: java.lang.String zzr()>
<com.facebook.react.common.futures.SimpleSettableFuture: void checkNotSet()>
<com.google.android.gms.internal.measurement.zznk: boolean zzc()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel access$getDeviceRegistrationViewModel$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>
<com.azure.authenticator.databinding.AadPhoneSignInSetupBinding: com.azure.authenticator.databinding.AadPhoneSignInSetupBinding bind(android.view.View)>
<android.widget.FrameLayout: int getMeasuredWidth()>
<com.google.android.gms.internal.measurement.zzkw: boolean zzb()>
<com.facebook.react.bridge.CatalystInstanceImpl: void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)>
<com.google.android.gms.internal.location.zzav: void zzi(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzai)>
<ch.qos.logback.core.joran.action.StatusListenerAction: void <init>()>
<com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)>
<ch.qos.logback.core.net.server.ServerRunner: void stop()>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setEvictionReason(com.facebook.cache.common.CacheEventListener$EvictionReason)>
<com.google.android.gms.measurement.internal.zzjb: void zzk(com.google.android.gms.measurement.internal.zzdz,com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.circularreveal.CircularRevealHelper: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()>
<android.app.Fragment: void unregisterForContextMenu(android.view.View)>
<com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: void <init>(com.google.android.datatransport.cct.internal.ClientInfo$ClientType,com.google.android.datatransport.cct.internal.AndroidClientInfo,com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$1)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureBrooklynOptionsCategory()>
<com.google.android.gms.location.zzbq: com.google.android.gms.location.zzbq zzb(android.app.PendingIntent)>
<com.google.android.gms.measurement.internal.zzfv: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzp)>
<com.airbnb.lottie.LottieAnimationView: void addValueCallback(com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.google.android.gms.measurement.internal.zzai: void zzb()>
<com.google.android.gms.internal.measurement.zzbu: int zzd()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnIndoorStateChangeListener(com.google.android.gms.maps.internal.zzz)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: void clearNotification()>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: void addView(android.view.View,int)>
<android.widget.ImageView: void onAttachedToWindow()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zam(com.google.android.gms.common.server.response.FastJsonResponse$Field,boolean)>
<com.facebook.soloader.SysUtil: void dumbDeleteRecursive(java.io.File)>
<com.google.android.gms.internal.measurement.zzfu: void <init>(java.lang.Throwable,java.lang.ref.ReferenceQueue)>
<androidx.activity.result.ActivityResult: android.content.Intent getData()>
<ch.qos.logback.core.Layout: java.lang.String getFileHeader()>
<com.google.android.gms.cloudmessaging.zzf: boolean zza(com.google.android.gms.cloudmessaging.zzq)>
<com.azure.authenticator.jwe.CryptoHelper: byte[] getJweDecryptedKeyWithAesKeyUnwrap(byte[],byte[])>
<com.fasterxml.jackson.core.util.TextBuffer: void resetWithEmpty()>
<com.adjust.sdk.IActivityHandler: void sendReftagReferrer()>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: void <init>(com.facebook.imagepipeline.producers.DiskCacheReadProducer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])>
<com.google.android.gms.internal.measurement.zzjh: java.lang.Object[] zze()>
<ch.qos.logback.core.LogbackException: void <init>(java.lang.String,java.lang.Throwable)>
<java.text.Collator: int compare(java.lang.String,java.lang.String)>
<com.facebook.react.TurboReactPackage$ModuleHolderProvider: com.facebook.react.bridge.NativeModule get()>
<com.facebook.react.bridge.ReactContext: void onHostDestroy()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.google.android.gms.measurement.internal.zzhn: void zzu(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)>
<com.azure.authenticator.databinding.EnableRemoteNgcUpsellBinding: com.azure.authenticator.databinding.EnableRemoteNgcUpsellBinding bind(android.view.View)>
<com.adjust.sdk.scheduler.SingleThreadFutureScheduler: void <init>(java.lang.String,boolean)>
<com.google.android.gms.common.api.Api$BaseClientBuilder: int getPriority()>
<com.facebook.react.views.textinput.ReactEditText: void hideSoftKeyboard()>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
<android.animation.Animator: long getStartDelay()>
<com.facebook.cache.disk.FileCache: com.facebook.binaryresource.BinaryResource insert(com.facebook.cache.common.CacheKey,com.facebook.cache.common.WriterCallback)>
<android.animation.AnimatorListenerAdapter: void <init>()>
<com.google.android.gms.measurement.internal.zzev: void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,long,com.google.android.gms.measurement.internal.zzer)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvideEnterpriseDenyListMappingSvcInterfaceFactory: com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingSvcInterface provideEnterpriseDenyListMappingSvcInterface(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.adjust.sdk.DeviceInfo: java.lang.String getPackageName(android.content.Context)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setPadding(int,int,int,int)>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzho zzbt()>
<com.google.android.material.timepicker.RadialViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity_MembersInjector: void injectMsaAccountManager(com.azure.authenticator.ui.backup.BackupFlowActivity,com.azure.authenticator.authentication.msa.MsaAccountManager)>
<android.graphics.Color: int rgb(int,int,int)>
<android.animation.ValueAnimator: void start()>
<com.facebook.react.views.text.ReactTypefaceUtils: int parseFontWeight(java.lang.String)>
<android.app.Fragment: void onActivityCreated(android.os.Bundle)>
<java.math.BigDecimal: int scale()>
<com.google.android.gms.measurement.internal.zzkd: void zzK()>
<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>
<android.widget.EditText: void setLayerType(int,android.graphics.Paint)>
<com.azure.authenticator.jwe.JweEncryptionManager: boolean isArrayEqual(byte[],byte[])>
<com.evernote.android.job.JobProxy$Common: long checkNoOverflow(long,boolean)>
<java.net.CookieHandler: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver injectMsaNotificationActionBroadcastReceiver2(com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver)>
<com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.gestures.GestureDetector getGestureDetector()>
<com.google.android.material.button.MaterialButtonHelper: boolean isBackgroundOverwritten()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean,int)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity: void onCreate(android.os.Bundle)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate: void scheduleAccessibilityEventSender(android.view.View)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieImageAsset findImageAssetForFileName(com.airbnb.lottie.LottieComposition,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.sdk.AutomationRunner automationRunner()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.util.Map)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager access$5600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.google.common.base.CharMatcher: java.lang.String removeFrom(java.lang.CharSequence)>
<com.google.crypto.tink.KeysetWriter: void write(com.google.crypto.tink.proto.Keyset)>
<com.google.android.material.button.MaterialButton: void setStrokeWidth(int)>
<com.facebook.drawee.view.DraweeHolder: java.lang.String toString()>
<com.google.android.gms.measurement.internal.zzho: int zzq(java.lang.String)>
<com.google.android.gms.measurement.internal.zzgx: void <init>(com.google.android.gms.measurement.internal.zzhn,android.os.Bundle)>
<com.google.android.gms.internal.location.zzbp: java.lang.Object[] toArray()>
<com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder zab(java.util.Collection)>
<com.azure.authenticator.databinding.DialogEditAccountNameBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.internal.measurement.zzdt: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.google.android.gms.maps.model.BitmapDescriptor: void <init>(com.google.android.gms.dynamic.IObjectWrapper)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void disposeResult(com.facebook.common.references.CloseableReference)>
<android.view.View: void setBackgroundColor(int)>
<com.facebook.react.modules.network.NetworkingModule$2: void <init>(com.facebook.react.modules.network.NetworkingModule,int,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,java.lang.String,boolean)>
<java.lang.Float: double doubleValue()>
<bolts.BoltsExecutors$ImmediateExecutor: void <init>()>
<com.facebook.react.modules.statusbar.StatusBarModule$2: void <init>(com.facebook.react.modules.statusbar.StatusBarModule,com.facebook.react.bridge.ReactContext,android.app.Activity,boolean)>
<com.google.android.gms.internal.common.zzn: java.lang.Object zza(int)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: int getBacklog()>
<com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)>
<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getErrorContentDescription()>
<android.app.PendingIntent: void cancel()>
<com.adjust.sdk.AdjustInstance: void resetSessionPartnerParameters()>
<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: java.lang.Class findDefaultComponentType(java.lang.Class,java.lang.String)>
<com.google.android.gms.common.api.Batch: int zad(com.google.android.gms.common.api.Batch)>
<com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColor(android.content.Context)>
<com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)>
<com.facebook.drawee.drawable.ForwardingDrawable: void getParentTransform(android.graphics.Matrix)>
<com.google.android.gms.common.sqlite.CursorWrapper: void setWindow(android.database.CursorWindow)>
<com.google.android.gms.auth.api.signin.internal.zzq: void <init>(android.content.Context)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getStartOpacity()>
<com.google.android.material.datepicker.CalendarItemStyle: int getBottomInset()>
<android.animation.ValueAnimator: long getDuration()>
<android.graphics.drawable.Drawable: int getOpacity()>
<com.github.amlcurran.showcaseview.AnimationFactory: void fadeInView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener)>
<com.google.android.material.textfield.IndicatorViewController: boolean isHelperTextEnabled()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.request.AutofillReqParsingUseCase autofillReqParsingUseCaseOfFillRequest()>
<com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)>
<android.graphics.PointF: float length()>
<com.google.android.gms.measurement.internal.zzjn: void <init>(com.google.android.gms.measurement.internal.zzjo,com.google.android.gms.measurement.internal.zzgg)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase access$getMsaAccountUseCase$p(com.azure.authenticator.ui.backup.RestoreFlowViewModel)>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<com.adjust.sdk.IActivityHandler: void launchSessionResponseTasks(com.adjust.sdk.SessionResponseData)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize)>
<com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task zza(android.os.Bundle)>
<com.facebook.react.uimanager.MatrixMathHelper: void resetIdentityMatrix(double[])>
<ch.qos.logback.classic.spi.CallerData: boolean isInFrameworkSpaceList(java.lang.String,java.util.List)>
<com.google.android.gms.internal.measurement.zzz: void <init>()>
<android.widget.LinearLayout: void setAddStatesFromChildren(boolean)>
<java.util.HashMap: java.util.Collection values()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState$Companion: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.material.textfield.TextInputLayout: void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode)>
<com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.internal.maps.zzq: java.lang.String getName()>
<com.google.android.material.timepicker.TimeModel: void <init>(android.os.Parcel)>
<com.google.android.gms.common.api.internal.zaar: boolean zan(com.google.android.gms.common.api.internal.zaar)>
<com.evernote.android.job.JobApi: void invalidateCachedProxy()>
<com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()>
<com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.facebook.drawee.interfaces.DraweeController: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()>
<com.google.android.gms.internal.measurement.zzbc: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzbi)>
<com.google.android.material.badge.BadgeDrawable: void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.common.ImageDecodeOptions defaults()>
<androidx.fragment.app.FragmentTransaction: void commitNow()>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
<com.facebook.yoga.YogaNode: void calculateLayout(float,float)>
<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader)>
<java.io.StringWriter: java.lang.String toString()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$4: com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.card.MaterialCardView$OnCheckedChangeListener: void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean)>
<androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>
<com.facebook.react.views.modal.RequestCloseEvent: java.lang.String getEventName()>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>
<com.microsoft.authenticator.mfasdk.di.hilt.MfaModule: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment$Flow: com.azure.authenticator.ui.fragment.main.SettingsFragment$Flow[] values()>
<com.google.android.gms.measurement.internal.zzbt: void <init>()>
<com.adjust.sdk.AdjustInstance: void appWillOpenUrl(android.net.Uri,android.content.Context)>
<com.google.android.gms.maps.model.Cap: void <init>(com.google.android.gms.maps.model.BitmapDescriptor,float)>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)>
<com.google.android.gms.internal.measurement.zzkz: long zzm()>
<com.google.android.gms.internal.measurement.zzbr: void zzi(java.lang.String,java.lang.String,android.os.Bundle,long)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: android.graphics.Bitmap getDefaultProfileImage()>
<com.facebook.react.ReactInstanceManager$6: void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactInstanceEventListener[],com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion: void onNgcRegistrationError(com.microsoft.onlineid.exception.AuthenticationException)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder setClock(com.google.android.datatransport.runtime.time.Clock)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: javax.net.ServerSocketFactory getServerSocketFactory()>
<com.google.android.gms.common.data.AbstractDataBuffer: java.lang.Object get(int)>
<java.util.concurrent.ConcurrentHashMap: void <init>()>
<com.google.android.gms.internal.measurement.zzia: int zze(long)>
<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setProgressBackgroundColor(android.view.View,java.lang.Integer)>
<com.microsoft.authenticator.authentication.msa.entities.MsaSession: void <init>(com.microsoft.onlineid.sdk.extension.Session)>
<com.google.android.gms.common.zab: void <init>()>
<com.facebook.common.executors.CallerThreadExecutor: void shutdown()>
<java.nio.ByteBuffer: long getLong()>
<com.google.android.gms.gcm.OneoffTask$Builder: com.google.android.gms.gcm.OneoffTask build()>
<android.view.ViewGroup: int getPaddingRight()>
<com.google.crypto.tink.KmsClient: boolean doesSupport(java.lang.String)>
<com.evernote.android.job.JobConfig: java.util.concurrent.ExecutorService getExecutorService()>
<com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()>
<com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()>
<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.google.android.gms.measurement.internal.zzjp: void <init>(com.google.android.gms.measurement.internal.zzjq)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest build()>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void <init>(java.lang.Class)>
<com.azure.authenticator.databinding.FragmentEditCredentialBinding: android.widget.ScrollView getRoot()>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy: long getCurrentTime()>
<com.evernote.android.job.JobApi: com.evernote.android.job.JobProxy getProxy(android.content.Context)>
<okhttp3.ConnectionSpec$Builder: void <init>(okhttp3.ConnectionSpec)>
<com.google.android.gms.internal.measurement.zzms: void <init>()>
<com.facebook.react.uimanager.BaseViewManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()>
<java.net.ServerSocket: java.net.Socket accept()>
<com.facebook.react.animated.NativeAnimatedNodesManager: void startListeningToAnimatedNodeValue(int,com.facebook.react.animated.AnimatedNodeValueListener)>
<com.facebook.react.modules.core.JavaTimerManager$Timer: long access$402(com.facebook.react.modules.core.JavaTimerManager$Timer,long)>
<ch.qos.logback.classic.pattern.MessageConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.azure.authenticator.accounts.AccountType: void <init>(java.lang.String,int,int)>
<java.util.regex.Matcher: boolean find()>
<com.google.common.io.ByteSource: void <init>()>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipLine()>
<com.azure.authenticator.notifications.aad.AadNgcNotification_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<ch.qos.logback.core.rolling.helper.Compressor: void zipCompress(java.lang.String,java.lang.String,java.lang.String)>
<ch.qos.logback.core.pattern.FormattingConverter: void setFormattingInfo(ch.qos.logback.core.pattern.FormatInfo)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.IssuanceUseCase issuanceUseCase()>
<com.google.android.gms.measurement.internal.zzhn: void zzV(com.google.android.gms.measurement.internal.zzhn,java.lang.Boolean,boolean)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean onResolvedLayoutDirectionChanged(int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,boolean)>
<com.google.android.gms.measurement.internal.zzdl: void <init>()>
<com.google.android.datatransport.runtime.TransportFactoryImpl: void <init>(java.util.Set,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.TransportInternal)>
<com.facebook.react.views.picker.ReactPickerAdapter: void <init>(android.content.Context,java.util.List)>
<com.google.android.material.internal.ViewUtils$4: void <init>()>
<androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)>
<com.google.android.gms.internal.base.zan: java.util.concurrent.ExecutorService zab(int,java.util.concurrent.ThreadFactory,int)>
<com.google.android.material.card.MaterialCardViewHelper: void setCheckable(boolean)>
<com.google.android.material.datepicker.DateStrings: java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegmentCustom(int)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field forConcreteType(java.lang.String,int,java.lang.Class)>
<com.facebook.drawee.drawable.RoundedDrawable: void setAlpha(int)>
<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconStartPaddingResource(int)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.lang.Runnable,java.lang.Object)>
<com.microsoft.onlineid.sdk.extension.Session: java.util.Date calculateClientExpirationTime(android.content.Context)>
<ch.qos.logback.classic.spi.ILoggingEvent: void prepareForDeferredProcessing()>
<com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode[] values()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: boolean isLayoutOnlyAndCollapsable(com.facebook.react.uimanager.ReactStylesDiffMap)>
<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>
<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)>
<com.azure.authenticator.databinding.AccountListBinding: com.azure.authenticator.databinding.AccountListBinding bind(android.view.View)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNonNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)>
<com.airbnb.lottie.model.MutablePair: void <init>()>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _appendLongName(int[],int)>
<com.facebook.react.bridge.JSBundleLoader$2: void <init>(java.lang.String,java.lang.String,boolean)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setPeekEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean)>
<com.facebook.react.modules.camera.ImageEditingManager: void copyExif(android.content.Context,android.net.Uri,java.io.File)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>
<com.google.android.material.chip.ChipDrawable: void setChipBackgroundColorResource(int)>
<ch.qos.logback.core.rolling.helper.FileSorter: java.util.List access$000(ch.qos.logback.core.rolling.helper.FileSorter)>
<com.google.android.material.textfield.TextInputLayout: boolean shouldUpdateStartDummyDrawable()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setRadius(float)>
<java.lang.Package: java.lang.String getImplementationVersion()>
<com.evernote.android.job.gcm.JobProxyGcm: void scheduleTask(com.google.android.gms.gcm.Task)>
<com.facebook.react.views.slider.ReactSlider: void updateAll()>
<com.google.android.gms.internal.measurement.zzns: void <init>()>
<com.google.android.gms.maps.internal.zzac: void <init>()>
<com.facebook.react.modules.image.ImageLoaderModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.appbar.ViewOffsetBehavior: void setVerticalOffsetEnabled(boolean)>
<android.widget.AutoCompleteTextView: void removeTextChangedListener(android.text.TextWatcher)>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void <init>()>
<com.github.amlcurran.showcaseview.StandardShowcaseDrawer: int getShowcaseWidth()>
<com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextAttributes applyChild(com.facebook.react.views.text.TextAttributes)>
<com.fasterxml.jackson.core.io.IOContext: java.lang.IllegalArgumentException wrongBuf()>
<com.google.android.gms.internal.measurement.zzgr: void <init>(com.google.android.gms.internal.measurement.zzgi)>
<androidx.preference.PreferenceFragmentCompat: void onStart()>
<com.google.common.collect.MapMakerInternalMap$InternalEntry: com.google.common.collect.MapMakerInternalMap$InternalEntry getNext()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$200(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState)>
<com.airbnb.lottie.utils.Utils: void applyTrimPathIfNeeded(android.graphics.Path,float,float,float)>
<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])>
<com.facebook.react.views.text.ReactTypefaceUtils: java.lang.String parseFontVariant(com.facebook.react.bridge.ReadableArray)>
<ch.qos.logback.classic.spi.IThrowableProxy: ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed()>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.UtilNetworking$IConnectionOptions getConnectionOptions()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.graphics.Color: int parseColor(java.lang.String)>
<com.google.android.gms.internal.safetynet.zzl: void <init>(com.google.android.gms.common.api.GoogleApiClient,byte[],java.lang.String)>
<com.facebook.react.views.scroll.ReactScrollView: void updateStateOnScroll(int,int)>
<com.facebook.shimmer.Shimmer$Builder: float clamp(float,float,float)>
<com.google.android.gms.common.api.internal.zabd: void zae()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$MsaCookieCallback: void <init>(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment)>
<com.google.android.gms.internal.common.zza: void zzD(int,android.os.Parcel)>
<androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.common.base.CaseFormat$5: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>
<com.google.android.gms.maps.model.CircleOptions: double getRadius()>
<com.google.android.gms.measurement.internal.zzhn: void zzX(com.google.android.gms.measurement.internal.zzhn)>
<com.adjust.sdk.Util: java.lang.String getMacAddress(android.content.Context)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void access$removeCookies(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment)>
<android.widget.Button: void onAttachedToWindow()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText)>
<com.google.android.gms.internal.measurement.zzgf: int zzb(int,byte[],int,com.google.android.gms.internal.measurement.zzge)>
<com.google.android.gms.internal.location.zzl: void <init>(int,com.google.android.gms.internal.location.zzj,android.os.IBinder,android.os.IBinder)>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: com.google.android.gms.common.internal.RootTelemetryConfiguration getRootTelemetryConfiguration()>
<com.facebook.react.ReactNativeHost: java.lang.String getJSMainModuleName()>
<com.azure.authenticator.accounts.AccountCapability: void addCapability(com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum)>
<com.google.android.datatransport.runtime.EventInternal: com.google.android.datatransport.runtime.EventInternal$Builder builder()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setWidthRatio(float)>
<ch.qos.logback.core.spi.AbstractComponentTracker: boolean isEntryStale(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long)>
<com.google.android.gms.location.LocationResult: java.util.List getLocations()>
<com.google.common.base.Optional: void <init>()>
<com.google.android.material.datepicker.MaterialDatePicker: java.lang.Object getSelection()>
<com.google.android.gms.common.internal.TelemetryLogging: com.google.android.gms.common.internal.TelemetryLoggingClient getClient(android.content.Context)>
<com.google.android.gms.internal.maps.zzs: void <init>(android.os.IBinder)>
<com.azure.authenticator.accounts.AccountCapability: boolean hasNoCapability()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService$$Lambda$1: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService,android.app.job.JobParameters)>
<com.azure.authenticator.databinding.AddNewAadMfaAccountBinding: com.azure.authenticator.databinding.AddNewAadMfaAccountBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier)>
<ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler: void <init>()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager: void <init>(com.azure.authenticator.jobs.DeferrableWorkerUtils,com.azure.authenticator.storage.database.AccountStorage)>
<com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<org.slf4j.Marker: boolean contains(java.lang.String)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)>
<com.adjust.sdk.Reflection: java.lang.Object readField(java.lang.String,java.lang.String,java.lang.Object)>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>
<com.github.amlcurran.showcaseview.TextDrawer: void setDetailStyling(int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$onActivityResult$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.auth.api.accounttransfer.zzg: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient,com.google.android.gms.internal.auth.zzv)>
<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>
<com.facebook.imagepipeline.cache.CountingMemoryCache$1: void <init>(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ValueDescriptor)>
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>
<com.azure.authenticator.jwe.AlgorithmEnum: int getIvSizeInBytes()>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
<com.google.android.gms.measurement.internal.zzfl: boolean zzL()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onDestroyView()>
<com.facebook.imagepipeline.memory.BasePool: boolean isReusable(java.lang.Object)>
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object,int)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: java.lang.Object performMsaSessionRequest(com.microsoft.authenticator.authentication.msa.entities.MsaSession,com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel: androidx.lifecycle.MutableLiveData access$get_deviceIdStatus$p(com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel)>
<com.google.android.gms.dynamic.SupportFragmentWrapper: com.google.android.gms.dynamic.SupportFragmentWrapper wrap(androidx.fragment.app.Fragment)>
<com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzco zzj()>
<com.facebook.react.views.viewpager.ReactViewPagerManager: com.facebook.react.views.viewpager.ReactViewPager createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.gms.auth.api.identity.zzc: void <init>()>
<com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider aadRemoteNgcSessionViewModelProvider()>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
<com.google.android.gms.internal.common.zzc: android.os.Parcelable zzc(android.os.Parcel,android.os.Parcelable$Creator)>
<com.google.android.material.textfield.TextInputLayout: int calculateLabelMarginTop()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setSaveFlags(int)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions: java.lang.String getNonce()>
<com.google.android.gms.maps.model.MapStyleOptions: void <init>(java.lang.String)>
<com.google.android.gms.location.zzaz: void <init>()>
<com.airbnb.lottie.model.animatable.AnimatablePathValue: void <init>(java.util.List)>
<android.widget.Button: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.gms.auth.api.signin.internal.SignInHubActivity$zzc: void <init>(com.google.android.gms.auth.api.signin.internal.SignInHubActivity)>
<com.google.android.datatransport.cct.CctTransportBackend: void <init>(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,int)>
<com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext$Builder builder()>
<com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AbstractClientBuilder zab()>
<android.widget.GridView: int getMeasuredHeight()>
<java.security.KeyStore: void load(java.io.InputStream,char[])>
<com.facebook.react.touch.ReactInterceptingViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)>
<com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)>
<com.google.android.gms.maps.internal.zzbz: java.lang.Object zza(java.lang.ClassLoader,java.lang.String)>
<com.google.android.gms.measurement.internal.zzkc: long zzb(com.google.android.gms.internal.measurement.zzdb)>
<com.google.android.material.datepicker.MaterialCalendar$7: void <init>(com.google.android.material.datepicker.MaterialCalendar)>
<android.os.Parcel: void writeTypedList(java.util.List)>
<com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase: java.lang.String uploadCrashLogs()>
<com.google.android.gms.internal.ads_identifier.zza: android.os.Parcel obtainAndWriteInterfaceToken()>
<com.facebook.yoga.YogaNode: void <init>()>
<com.airbnb.lottie.parser.moshi.JsonReader: void pushScope(int)>
<com.facebook.react.uimanager.ShadowNodeRegistry: void addRootNode(com.facebook.react.uimanager.ReactShadowNode)>
<com.microsoft.did.businesslogic.IssuanceUseCase: void <init>(com.microsoft.did.sdk.IssuanceService,com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao,com.microsoft.did.businesslogic.ReceiptUseCase,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<android.os.Parcel: void writeIntArray(int[])>
<com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)>
<com.adjust.sdk.IPackageHandler: void flush()>
<com.evernote.android.job.Job: boolean isDeleted()>
<com.google.android.gms.internal.auth.zzb: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.android.datatransport.runtime.Destination: byte[] getExtras()>
<ch.qos.logback.core.util.OptionHelper: java.lang.String getAndroidSystemProperty(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdf: void zzv(com.google.android.gms.internal.measurement.zzdf)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity: void _initHiltInternal()>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getSecondaryUrl()>
<com.google.android.gms.measurement.internal.zzt: void zza(com.google.android.gms.measurement.internal.zzw)>
<com.google.android.gms.security.ProviderInstaller$ProviderInstallListener: void onProviderInstallFailed(int,android.content.Intent)>
<com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: void <init>()>
<java.lang.Runtime: boolean removeShutdownHook(java.lang.Thread)>
<com.google.android.gms.measurement.internal.zzib: void zzA(android.app.Activity,com.google.android.gms.measurement.internal.zzhu,boolean)>
<android.widget.FrameLayout: void setSelected(boolean)>
<com.google.android.gms.internal.measurement.zzmk: boolean zzb()>
<com.google.android.gms.internal.location.zzam: void zzv(android.app.PendingIntent,com.google.android.gms.location.SleepSegmentRequest,com.google.android.gms.common.api.internal.IStatusCallback)>
<com.facebook.react.modules.core.JavaTimerManager: android.util.SparseArray access$800(com.facebook.react.modules.core.JavaTimerManager)>
<com.google.android.gms.internal.measurement.zzjw: void <init>()>
<com.google.android.material.shape.MaterialShapeDrawable: void initializeElevationOverlay(android.content.Context)>
<ch.qos.logback.core.joran.util.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>
<com.azure.authenticator.ui.action.ActionStateManager: boolean access$isBackgroundDataUsageRestricted(com.azure.authenticator.ui.action.ActionStateManager)>
<ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer: void <init>()>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: com.microsoft.authenticator.mfasdk.authentication.businessLogic.EntropyUseCase access$100(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP$Usage: void <init>(java.lang.String,int)>
<com.microsoft.authenticator.core.common.Assertion: void assertTrue(boolean)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: boolean getHasAccountInfoLogged()>
<ch.qos.logback.core.android.AndroidContextUtil: android.content.ContextWrapper getContext()>
<ch.qos.logback.classic.spi.StackTraceElementProxy: void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData)>
<com.facebook.imagepipeline.memory.BucketsBitmapPool: android.graphics.Bitmap alloc(int)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectMfaAuthenticationManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: boolean isInEditMode()>
<com.facebook.drawee.drawable.RoundedBitmapDrawable: boolean shouldRound()>
<android.widget.LinearLayout: int getMeasuredHeight()>
<com.facebook.drawee.drawable.AutoRotateDrawable: int getIncrement()>
<com.facebook.react.ReactInstanceManager: java.util.List getViewManagerNames()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardflow.presentationlogic.WebViewAuthenticationViewModel access$14300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: void <init>(com.facebook.soloader.ExoSoSource$ExoUnpacker,com.facebook.soloader.ExoSoSource$1)>
<android.widget.TextView: android.text.TextPaint getPaint()>
<ch.qos.logback.core.joran.spi.ElementPath: void <init>()>
<com.google.android.gms.location.zzbn: void <init>()>
<com.airbnb.lottie.animation.content.DrawingContent: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$1102(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.google.android.material.elevation.ElevationOverlayProvider: float calculateOverlayAlphaFraction(float)>
<com.facebook.soloader.ExtractFromZipSoSource$ZipDso: void <init>(java.lang.String,java.util.zip.ZipEntry,int)>
<com.google.android.gms.internal.measurement.zzir: void <init>()>
<android.widget.FrameLayout: void removeView(android.view.View)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$retrieveBackupAndMsaKey$1: java.lang.Object invokeSuspend(java.lang.Object)>
<ch.qos.logback.classic.db.names.DBNameResolver: java.lang.String getTableName(java.lang.Enum)>
<com.azure.authenticator.logging.LoggingReceiver_MembersInjector: void <init>(javax.inject.Provider)>
<com.google.android.gms.measurement.internal.zzc: void <init>(com.google.android.gms.measurement.internal.zzd,long)>
<com.google.android.material.textfield.TextInputEditText: java.lang.String getAccessibilityNodeInfoText(com.google.android.material.textfield.TextInputLayout)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName(int[],int,int)>
<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean)>
<com.azure.authenticator.storage.ImageStorage: boolean deleteFile(java.lang.String)>
<com.google.android.gms.dynamite.zzf: void <init>()>
<com.facebook.common.util.UriUtil: boolean isLocalCameraUri(android.net.Uri)>
<java.util.Arrays: void fill(char[],char)>
<ch.qos.logback.core.net.SMTPAppenderBase: java.util.List parseAddress(java.lang.Object)>
<com.facebook.react.uimanager.UIImplementation: void updateNodeSize(int,int,int)>
<com.facebook.imageutils.WebpUtil: int read3Bytes(java.io.InputStream)>
<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState copy$default(com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState,java.lang.String,com.microsoft.onlineid.Ticket,com.microsoft.authenticator.backup.entities.CloudBackup,int,java.lang.Object)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: android.os.Bundle toBundle()>
<android.widget.Button: android.graphics.drawable.Drawable getBackground()>
<ch.qos.logback.classic.joran.action.LoggerAction: void <init>()>
<androidx.sqlite.db.SupportSQLiteQueryBuilder: androidx.sqlite.db.SupportSQLiteQueryBuilder builder(java.lang.String)>
<com.google.android.gms.common.api.GoogleApiClient: void <init>()>
<javax.net.ssl.HttpsURLConnection: int getResponseCode()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.SwallowResultProducer newSwallowResultProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.common.api.internal.zap: void zae()>
<ch.qos.logback.classic.pattern.MDCConverter: java.lang.String outputMDCForAllKeys(java.util.Map)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: java.lang.Object updateForegroundInfoWithSuccessAndDelay(androidx.work.ForegroundInfo,com.azure.authenticator.notifications.AbstractNotification$Action,kotlin.coroutines.Continuation)>
<android.widget.TextView: void setPivotY(float)>
<com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()>
<android.content.res.Resources: java.lang.String getString(int)>
<com.google.android.material.tabs.TabLayout$Tab: android.view.View getCustomView()>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>
<com.airbnb.lottie.LottieDrawable: void setFrame(int)>
<com.google.android.gms.common.server.response.FastJsonResponse: java.lang.Object getValueObject(java.lang.String)>
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.IAttributionHandler getAttributionHandler(com.adjust.sdk.IActivityHandler,boolean)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.gms.common.internal.zza: void zzb(com.google.android.gms.common.ConnectionResult)>
<android.app.Activity: android.content.Context getApplicationContext()>
<com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment injectAadAddAccountSetupFragment2(com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconTint(android.content.res.ColorStateList)>
<java.util.concurrent.locks.Condition: void signalAll()>
<java.io.File: boolean setReadable(boolean,boolean)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.Priority getPriority()>
<com.adjust.sdk.DeviceInfo: java.lang.String getAppInstallTime(android.content.Context)>
<com.microsoft.authenticator.location.di.LocationModule_ProvideFusedLocationProviderFactory: com.google.android.gms.location.FusedLocationProviderClient provideFusedLocationProvider(com.microsoft.authenticator.location.di.LocationModule,android.content.Context)>
<com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>
<com.fasterxml.jackson.core.io.OutputDecorator: java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>
<com.facebook.imagepipeline.producers.ThrottlingProducer: java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ThrottlingProducer)>
<com.facebook.datasource.AbstractDataSource: boolean setFailure(java.lang.Throwable)>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobStorage access$002(com.evernote.android.job.JobManager,com.evernote.android.job.JobStorage)>
<com.adjust.sdk.Util: int readIntField(java.io.ObjectInputStream$GetField,java.lang.String,int)>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: boolean zzc(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: int getDelay()>
<ch.qos.logback.core.rolling.helper.RollingCalendar: ch.qos.logback.core.rolling.helper.PeriodicityType computePeriodicityType()>
<com.google.android.gms.measurement.internal.zzec: void zzh()>
<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>
<com.google.android.gms.maps.LocationSource: void deactivate()>
<androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>
<com.google.android.gms.measurement.internal.zzcw: void <init>()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String zzi(com.google.android.gms.auth.api.credentials.Credential)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _parsePosNumber(int)>
<com.google.android.gms.internal.measurement.zzak: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String,java.lang.String,android.content.Context,android.os.Bundle)>
<com.facebook.common.executors.UiThreadImmediateExecutorService: com.facebook.common.executors.UiThreadImmediateExecutorService getInstance()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor)>
<com.google.android.gms.internal.measurement.zzdj: void zzbk(com.google.android.gms.internal.measurement.zzdj,long)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: boolean isUserSignedIn()>
<com.google.android.gms.common.api.internal.zabl: int zar()>
<com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,char[],int)>
<java.util.HashSet: boolean addAll(java.util.Collection)>
<com.facebook.react.fabric.mounting.MountingManager: void updateState(int,com.facebook.react.uimanager.StateWrapper)>
<com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getTypedExportedConstants()>
<com.adjust.sdk.ActivityHandler: void launchDeeplinkMain(android.content.Intent,android.net.Uri)>
<com.facebook.react.views.image.ImageLoadEvent: void <init>(int,int,java.lang.String,int,int)>
<android.widget.OverScroller: void abortAnimation()>
<com.google.android.gms.measurement.internal.zzg: void zzC(long)>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View)>
<com.google.android.material.datepicker.MaterialDatePicker$4: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>
<com.google.android.gms.tasks.TaskCompletionSource: void <init>(com.google.android.gms.tasks.CancellationToken)>
<com.adjust.sdk.ActivityHandler: boolean isEnabledI()>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path$Op)>
<androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>
<com.google.android.datatransport.cct.internal.AutoValue_LogRequest: void <init>(long,long,com.google.android.datatransport.cct.internal.ClientInfo,java.lang.Integer,java.lang.String,java.util.List,com.google.android.datatransport.cct.internal.QosTier)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: com.azure.authenticator.databinding.ViewLogBinding access$getBinding$p(com.azure.authenticator.ui.fragment.main.ViewLogsFragment)>
<com.microsoft.authenticator.mfasdk.log.MfaSdkLogger$Companion: com.microsoft.authenticator.mfasdk.log.MfaSdkLogger getINSTANCE()>
<com.facebook.react.ReactRootView: void runApplication()>
<com.azure.authenticator.notifications.msa.MsaNotification: android.app.PendingIntent buildPendingIntentForMsaNotificationAction(com.azure.authenticator.notifications.AbstractNotification$Action,com.microsoft.authenticator.authentication.msa.entities.MsaSession)>
<com.facebook.drawee.controller.AbstractDraweeController: void access$100(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity_GeneratedInjector: void injectMsaSessionActivity(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int calculatePeekHeight()>
<com.google.android.gms.internal.measurement.zzin: void <init>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker: void <init>()>
<ch.qos.logback.core.joran.action.AppenderRefAction: void <init>()>
<com.google.android.gms.internal.measurement.zzdf: com.google.android.gms.internal.measurement.zzdf zzo()>
<com.google.android.gms.internal.measurement.zzji: void zzm(java.lang.Object,com.google.android.gms.internal.measurement.zzha)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_5_7$1: void <init>(int,int)>
<com.microsoft.onlineid.UserAccount: void getTicket(com.microsoft.onlineid.ISecurityScope,android.os.Bundle)>
<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month monthsLater(int)>
<com.facebook.react.uimanager.ReactCompoundViewGroup: boolean interceptsTouchEvent(float,float)>
<ch.qos.logback.classic.spi.PackagingDataCalculator: boolean isFolder(int,java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ExecutorSupplier getExecutorSupplier()>
<com.azure.authenticator.MainNavDirections$ToAccountListFragment: boolean getShowCelebratoryDialog()>
<com.google.android.gms.measurement.internal.zzkj: void zza(java.lang.String,android.os.Bundle)>
<android.view.ViewGroup: void setElevation(float)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,int,int)>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation)>
<javax.mail.internet.MimeMultipart: void <init>()>
<java.lang.Throwable: void <init>(java.lang.String)>
<com.google.android.gms.internal.auth-api-phone.zzg: void zza(com.google.android.gms.common.api.Status)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)>
<com.facebook.react.uimanager.UIImplementation: void setViewLocalData(int,java.lang.Object)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<com.google.android.gms.common.api.internal.zax: java.util.concurrent.locks.Lock zao(com.google.android.gms.common.api.internal.zax)>
<com.google.android.material.expandable.ExpandableWidgetHelper: boolean isExpanded()>
<com.google.android.gms.internal.measurement.zzgc: void <init>()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$2: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,androidx.fragment.app.Fragment,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.facebook.react.views.drawer.events.DrawerSlideEvent: float getOffset()>
<android.app.AlertDialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)>
<android.widget.Spinner: void setSelection(int,boolean)>
<com.google.android.gms.internal.base.zac: android.os.Parcelable zab(android.os.Parcel,android.os.Parcelable$Creator)>
<com.facebook.react.uimanager.UIImplementation: void removeShadowNode(com.facebook.react.uimanager.ReactShadowNode)>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: boolean getMethodTimingTelemetryEnabled()>
<android.graphics.drawable.Drawable: boolean isVisible()>
<com.google.android.gms.common.internal.GmsLogger: java.lang.String zza(java.lang.String)>
<android.text.Layout: int getEllipsisStart(int)>
<ch.qos.logback.core.util.StatusPrinter: void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long)>
<com.azure.authenticator.jwe.CryptoHelper: byte[] getJweEncryptedKeyWithAesKeyWrap(byte[],byte[])>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void denySession()>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$ActivityC: void <init>()>
<com.google.android.gms.measurement.internal.zzbb: void <init>()>
<com.google.android.gms.maps.model.zzd: void <init>()>
<ch.qos.logback.classic.LoggerContext: void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.Context getRemoteContext(android.content.Context)>
<android.widget.HorizontalScrollView: int getPaddingBottom()>
<java.util.TreeMap: java.util.Map$Entry floorEntry(java.lang.Object)>
<com.google.android.material.chip.ChipDrawable: void setTextStartPadding(float)>
<ch.qos.logback.classic.sift.MDCBasedDiscriminator: java.lang.String getDiscriminatingValue(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)>
<com.facebook.imagepipeline.request.ImageRequest: java.lang.Boolean getResizingAllowedOverride()>
<java.io.ByteArrayInputStream: void <init>(byte[])>
<com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>
<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<com.google.android.gms.internal.auth.zze: android.os.Bundle zza(android.accounts.Account)>
<com.facebook.react.modules.network.ResponseUtil: void onDataSend(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,long,long)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()>
<com.google.android.material.appbar.ViewOffsetHelper: boolean isHorizontalOffsetEnabled()>
<com.google.android.material.shape.ShapePath: void addConnectingShadowIfNecessary(float)>
<com.google.android.gms.auth.account.zzc: void zzb(boolean)>
<com.google.android.material.shape.ShapeAppearancePathProvider$PathListener: void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)>
<com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int)>
<com.google.android.gms.location.ActivityTransition: void zza(int)>
<com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)>
<android.widget.CheckBox: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<android.app.Activity: java.lang.String getString(int,java.lang.Object[])>
<com.evernote.android.job.v14.PlatformAlarmService: void <init>()>
<com.google.android.gms.measurement.internal.zzkd: void zzN(com.google.android.gms.measurement.internal.zzkg,com.google.android.gms.measurement.internal.zzp)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: void fetchAppLockEnforcedPolicies()>
<com.microsoft.brooklyn.ui.credential.EditCredentialFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.credential.EditCredentialFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.gms.internal.measurement.zzfg: void <init>(com.google.android.gms.internal.measurement.zzfe,java.lang.String,java.lang.Object,boolean,com.google.android.gms.internal.measurement.zzfa)>
<android.text.InputFilter$LengthFilter: void <init>(int)>
<com.google.android.gms.internal.common.zzl: int zza(int,int,java.lang.String)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void realloc(int)>
<android.widget.HorizontalScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<com.google.android.gms.internal.measurement.zzhf: com.google.android.gms.internal.measurement.zzhj zzb(java.lang.Object)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$$special$$inlined$viewModels$1: androidx.fragment.app.Fragment invoke()>
<com.fasterxml.jackson.core.io.UTF8Writer: void write(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$initialize$2: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.google.android.gms.internal.measurement.zzad: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String)>
<com.azure.authenticator.storage.database.migration.Migration14To15$tryFixSingleQuoteBug$queryUseLambda$1: void invoke(android.database.Cursor)>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<ch.qos.logback.core.util.OptionHelper: java.util.Properties getSystemProperties()>
<ch.qos.logback.classic.util.LogbackMDCAdapter: java.lang.Integer getAndSetLastOperation(int)>
<com.facebook.jni.HybridData$Destructor: void deleteNative(long)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String getServerClientId()>
<ch.qos.logback.classic.android.LogcatAppender: void append(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)>
<com.google.common.base.AbstractIterator: java.lang.Object computeNext()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$2: void <init>()>
<java.lang.Boolean: int hashCode()>
<com.google.android.gms.internal.measurement.zzds: int zzb()>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopRightCornerSize()>
<com.google.android.gms.cloudmessaging.Rpc: com.google.android.gms.tasks.Task zzc(android.os.Bundle)>
<java.util.EnumMap: void <init>(java.lang.Class)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)>
<com.facebook.react.ReactInstanceManager: void onActivityResult(android.app.Activity,int,int,android.content.Intent)>
<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton access$2200(com.google.android.material.bottomappbar.BottomAppBar)>
<androidx.viewpager.widget.ViewPager: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzha: com.google.android.gms.internal.measurement.zzha zza(com.google.android.gms.internal.measurement.zzgz)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel access$11100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
<com.google.android.gms.maps.model.zzp: void <init>()>
<com.google.android.gms.internal.maps.zzz: boolean isVisible()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: com.google.android.gms.maps.model.StreetViewPanoramaLocation getStreetViewPanoramaLocation()>
<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig$Builder: void <init>()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onDestroy()>
<com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener: void <init>(com.facebook.drawee.debug.listener.ImageLoadingTimeListener)>
<com.google.android.gms.location.zzar: void <init>(android.app.PendingIntent)>
<com.facebook.react.views.text.TextLayoutManager: android.text.Spannable getOrCreateSpannableForText(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.views.text.ReactTextViewManagerCallback)>
<com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()>
<com.adjust.sdk.ActivityHandler: void readAttributionI(android.content.Context)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$startBackup$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.crypto.tink.shaded.protobuf.MessageLite: com.google.crypto.tink.shaded.protobuf.ByteString toByteString()>
<com.google.android.gms.auth.api.identity.SignInPassword: java.lang.String getPassword()>
<androidx.navigation.ActivityKt: androidx.navigation.NavController findNavController(android.app.Activity,int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerFailureTimeMs(long)>
<com.azure.authenticator.storage.database.AccountTranslator_Factory: com.azure.authenticator.storage.database.AccountTranslator get()>
<com.airbnb.lottie.parser.GradientColorParser: com.airbnb.lottie.model.content.GradientColor parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment injectAadPhoneSignInSetupFragment2(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment)>
<ch.qos.logback.core.pattern.util.AsIsEscapeUtil: void <init>()>
<com.google.android.gms.internal.measurement.zznq: com.google.android.gms.internal.measurement.zznr zzc()>
<com.google.android.gms.internal.measurement.zzcb: void <init>()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel$approveNgcSession$2: java.lang.Object invokeSuspend(java.lang.Object)>
<org.xml.sax.Attributes: int getLength()>
<com.google.android.material.textfield.ClearTextEndIconDelegate$5: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.azure.authenticator.databinding.PasswordFabOptionBottomSheetBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,android.widget.RelativeLayout,android.widget.ImageView,androidx.coordinatorlayout.widget.CoordinatorLayout,android.widget.RelativeLayout,android.widget.RelativeLayout)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier access$900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.onlineid.sdk.extension.storage.StorageMigrationManager storageMigrationManager()>
<com.azure.authenticator.databinding.EmptyHistoryLayoutBinding: void <init>(android.widget.ScrollView,android.widget.ScrollView,android.widget.ImageView,android.widget.TextView)>
<com.google.android.gms.common.api.zza: void <init>()>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.accounts.AccountType,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingTaskCallback,android.content.pm.PackageManager,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.internal.measurement.zzdj: void zzaz(com.google.android.gms.internal.measurement.zzdj)>
<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()>
<com.google.android.gms.common.api.internal.zact: void <init>(com.google.android.gms.common.api.internal.zacv,com.google.android.gms.common.api.Result)>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
<com.fasterxml.jackson.core.JsonStreamContext: java.lang.String getTypeDesc()>
<com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)>
<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object)>
<com.google.common.collect.MapMakerInternalMap$Segment: void maybeClearReferenceQueues()>
<com.airbnb.lottie.LottieDrawable: void setRepeatCount(int)>
<com.google.android.gms.internal.location.zzam: void zzh(long,boolean,android.app.PendingIntent)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: void setActivityState(com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isIndoorLevelPickerEnabled()>
<org.json.JSONObject: java.util.Iterator keys()>
<com.facebook.drawee.gestures.GestureDetector: com.facebook.drawee.gestures.GestureDetector newInstance(android.content.Context)>
<com.google.android.gms.location.LocationCallback: void <init>()>
<com.google.android.gms.internal.measurement.zzkd: void <init>(sun.misc.Unsafe)>
<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
<com.evernote.android.job.v14.JobProxy14: int createPendingIntentFlags(boolean)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$onTicketAcquired$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<android.view.ViewGroup: void removeAllViewsInLayout()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureCardPreviewCategory(boolean)>
<android.database.AbstractWindowedCursor: boolean onMove(int,int)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: java.lang.String getIdTokenNonce()>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: void zaa(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.measurement.zzjp: java.lang.Object setValue(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.BackupUseCase backupUseCase()>
<ch.qos.logback.core.net.server.ServerListener: ch.qos.logback.core.net.server.Client acceptClient()>
<com.google.android.gms.location.LocationSettingsRequest: void <init>(java.util.List,boolean,boolean,com.google.android.gms.location.zzbj)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthenticationTimeTelemetry: void logActionTime(com.microsoft.authenticator.core.telemetry.TelemetryActionEnum)>
<com.google.android.gms.internal.auth-api.zzac: void zzc(com.google.android.gms.internal.auth-api.zzag,com.google.android.gms.auth.api.identity.SavePasswordRequest)>
<com.google.android.datatransport.runtime.TransportRuntimeComponent: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.credential.CredentialListFragment injectCredentialListFragment2(com.microsoft.brooklyn.ui.credential.CredentialListFragment)>
<com.facebook.imagepipeline.common.BytesRange: java.lang.String toHttpRangeHeaderValue()>
<java.lang.reflect.Field: java.lang.String getName()>
<com.facebook.drawee.view.DraweeHolder: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getServerHost(java.lang.Integer)>
<com.google.android.gms.auth.api.accounttransfer.zzl: void <init>(java.util.Set,int,java.util.ArrayList,int,com.google.android.gms.auth.api.accounttransfer.zzo)>
<com.azure.authenticator.databinding.SendFeedbackBinding: com.azure.authenticator.databinding.SendFeedbackBinding bind(android.view.View)>
<com.google.common.io.BaseEncoding$Base16Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet)>
<com.facebook.drawee.drawable.Rounded: void setPadding(float)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setPaddingPercent(int,float)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate: boolean hasPasswordTransformation()>
<com.adjust.sdk.ActivityHandler: void launchEventResponseTasksI(com.adjust.sdk.EventResponseData)>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity: void inject()>
<com.facebook.react.views.text.TextAttributeProps: void setTextTransform(java.lang.String)>
<com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)>
<com.github.amlcurran.showcaseview.ShowcaseView: int getShowcaseX()>
<com.google.android.gms.maps.model.GroundOverlayOptions: boolean isClickable()>
<com.google.android.gms.internal.measurement.zzmm: boolean zzc()>
<android.database.Cursor: double getDouble(int)>
<com.azure.authenticator.accounts.AadAccount: com.azure.authenticator.accounts.AadAccount createPhoneSignInAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()>
<com.google.android.gms.internal.measurement.zzmy: void <init>()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureSelfhostControls$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.cache.CacheKeyFactory: com.facebook.cache.common.CacheKey getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void onDestroy()>
<java.util.Stack: void <init>()>
<com.google.android.gms.measurement.internal.zzfl: void zzM()>
<com.google.android.gms.tasks.zzp: com.google.android.gms.tasks.SuccessContinuation zzc(com.google.android.gms.tasks.zzp)>
<com.google.android.gms.common.api.PendingResult: void <init>()>
<com.facebook.react.views.checkbox.ReactCheckBoxManager$1: void <init>()>
<com.google.android.material.card.MaterialCardViewHelper: void setCardBackgroundColor(android.content.res.ColorStateList)>
<com.github.amlcurran.showcaseview.TextDrawer: void setDetailTextAlignment(android.text.Layout$Alignment)>
<com.google.android.gms.cloudmessaging.zzf: void zzb()>
<com.facebook.jni.HybridData: void resetNative()>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<android.graphics.drawable.Drawable$ConstantState: void <init>()>
<com.airbnb.lottie.utils.Utils$2: void <init>()>
<ch.qos.logback.core.ContextBase: void setName(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzY()>
<android.widget.TextView: void setTag(java.lang.Object)>
<com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.DataEncoder build()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setPadding(int,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.NotificationUseCase notificationUseCase()>
<com.facebook.imagepipeline.memory.BucketMap: java.lang.Object removeFromEnd()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void notifyListenersOfVisibilityStateUpdate(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int)>
<com.google.android.gms.internal.maps.zzz: void setEndCap(com.google.android.gms.maps.model.Cap)>
<com.azure.authenticator.profile.GetReourceImageTask: void <init>(android.content.Context,com.azure.authenticator.accounts.GenericAccount,int,com.azure.authenticator.profile.ProfileImageTaskCallback)>
<com.google.android.gms.internal.measurement.zzha: void zzE(int,java.util.List)>
<com.facebook.react.modules.network.ForwardingCookieHandler: void addCookies(java.lang.String,java.util.List)>
<com.evernote.android.job.util.JobCat: void <init>(java.lang.String,boolean)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void initialize(com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheKey,java.lang.Object,com.facebook.common.internal.ImmutableList,com.facebook.drawee.backends.pipeline.info.ImageOriginListener)>
<com.google.android.gms.common.internal.TelemetryLoggingClient: com.google.android.gms.tasks.Task log(com.google.android.gms.common.internal.TelemetryData)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_GeneratedInjector: void injectAddMsaAccountActivity(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$syncBrokerAccounts$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: void maybeApplyTransformation(com.facebook.imagepipeline.transformation.BitmapTransformation,com.facebook.common.references.CloseableReference)>
<com.facebook.cache.common.CacheEventListener: void onWriteException(com.facebook.cache.common.CacheEvent)>
<com.google.android.gms.common.api.internal.zaco: void zad()>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<ch.qos.logback.core.pattern.parser.Node: java.lang.String printNext()>
<com.google.android.gms.internal.measurement.zzlc: void <init>()>
<ch.qos.logback.core.ContextBase: java.util.Map getCopyOfPropertyMap()>
<com.facebook.react.uimanager.events.Event: void dispose()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel getWpjViewModel()>
<android.widget.CheckBox: void setTextColor(android.content.res.ColorStateList)>
<com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])>
<com.facebook.react.modules.datepicker.DismissableDatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>
<com.google.android.material.appbar.ViewOffsetHelper: void setVerticalOffsetEnabled(boolean)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onStart()>
<android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2902(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: java.lang.String getProducerName()>
<java.util.Collection: boolean remove(java.lang.Object)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_13_14$cp()>
<com.google.android.material.shape.MaterialShapeDrawable: void setShadowColor(int)>
<com.google.android.material.internal.CollapsingTextHelper: boolean isStateful()>
<com.google.android.gms.maps.internal.zzap: void zza(com.google.android.gms.maps.internal.IGoogleMapDelegate)>
<java.lang.Math: double ceil(double)>
<com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(java.lang.Integer)>
<com.google.common.base.Ascii: boolean isLowerCase(char)>
<com.facebook.common.memory.PooledByteBufferFactory: com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream()>
<com.google.android.gms.internal.measurement.zzeq: java.lang.Object zza()>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: boolean zza(int,java.lang.String)>
<android.widget.EditText: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int validateObjectHeader(android.os.Parcel)>
<com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()>
<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>
<androidx.collection.LongSparseArray: java.lang.Object get(long)>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getMemoryChunkPoolParams()>
<com.google.android.gms.internal.measurement.zzdf: float zzh()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void access$showSignOutButton(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<com.google.android.material.bottomsheet.BottomSheetDialog$2: void <init>(com.google.android.material.bottomsheet.BottomSheetDialog)>
<com.google.android.gms.common.api.Status: java.lang.String getStatusMessage()>
<com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<android.widget.Button: void setText(int)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.common.collect.MapMakerInternalMap$InternalEntryHelper: void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object)>
<com.google.android.gms.common.api.internal.zap: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.GoogleApiAvailability)>
<com.adjust.sdk.ActivityHandler: void access$1800(com.adjust.sdk.ActivityHandler,com.adjust.sdk.SdkClickResponseData)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: android.content.Intent createIntent(android.content.Context,int,android.os.Bundle)>
<com.adjust.sdk.ActivityHandler: void access$1200(com.adjust.sdk.ActivityHandler,boolean)>
<kotlin.reflect.KClass: java.lang.String getSimpleName()>
<com.google.android.gms.common.util.ArrayUtils: void writeArray(java.lang.StringBuilder,double[])>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<com.google.android.gms.maps.zzaj: void <init>(com.google.android.gms.maps.StreetViewPanoramaView$zza,com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.facebook.soloader.SoLoader: java.lang.String makeNonZipPath(java.lang.String)>
<com.google.android.material.datepicker.MaterialCalendar: void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector)>
<com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener: void onEditTextAttached(com.google.android.material.textfield.TextInputLayout)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.features.did.DidAccountAndAuthenticationProvider didAccountAndAuthenticationProvider()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: byte[] lambda$readPayload$13(android.database.Cursor)>
<androidx.lifecycle.LiveData: java.lang.Object getValue()>
<com.facebook.react.uimanager.annotations.ReactProp: boolean defaultBoolean()>
<com.google.android.gms.common.internal.ICancelToken: void cancel()>
<com.google.android.material.textfield.TextInputLayout: void assignBoxBackgroundByMode()>
<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<com.google.android.gms.common.api.internal.zad: void <init>(int,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.datatransport.runtime.backends.TransportBackend: com.google.android.datatransport.runtime.EventInternal decorate(com.google.android.datatransport.runtime.EventInternal)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.security.KeyStore createKeyStore()>
<com.google.android.gms.common.api.GoogleApiClient$Builder: void <init>(android.content.Context)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: ch.qos.logback.core.net.server.ServerRunner createServerRunner(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor)>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace)>
<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>
<com.google.android.gms.measurement.internal.zzjq: void zzj(com.google.android.gms.measurement.internal.zzjq)>
<com.google.common.base.Absent: void <init>()>
<android.app.Application: java.lang.String getPackageName()>
<com.facebook.react.modules.appearance.AppearanceModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: com.microsoft.authenticator.mfasdk.account.entities.AccountCapability getAccountCapability()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getProgressBarImage()>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<com.airbnb.lottie.parser.DocumentDataParser: com.airbnb.lottie.model.DocumentData parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>
<com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder()>
<com.airbnb.lottie.LottieAnimationView: void setSpeed(float)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int getDuration()>
<com.google.android.material.transformation.FabTransformationBehavior: void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>
<com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)>
<com.facebook.common.disk.DiskTrimmableRegistry: void registerDiskTrimmable(com.facebook.common.disk.DiskTrimmable)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder setPasswordRequestOptions(com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions)>
<com.facebook.react.views.text.ReactTagSpan: int getReactTag()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder target(com.google.android.gms.maps.model.LatLng)>
<com.google.android.material.badge.BadgeDrawable: void updateAnchorParentToNotClip(android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.request.AutofillReqParsingUseCase autofillReqParsingUseCaseOfSaveRequest()>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSetAsDefaultFragment_MembersInjector: void injectStorage(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSetAsDefaultFragment,com.azure.authenticator.storage.Storage)>
<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>
<com.google.android.gms.measurement.internal.zzex: boolean zzl(long)>
<java.util.Calendar: void add(int,int)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient: void <init>(android.app.Activity)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: long getMaxAllowedDelay()>
<com.facebook.react.views.text.TextAttributes: float getLineHeight()>
<com.google.android.gms.internal.auth-api.zzc: void <init>(java.lang.String)>
<java.lang.Exception: java.lang.Throwable getCause()>
<com.facebook.common.time.Clock: long now()>
<com.google.android.gms.maps.internal.zzm: void <init>()>
<com.facebook.soloader.nativeloader.NativeLoader: boolean isInitialized()>
<com.airbnb.lottie.utils.LottieValueAnimator: void setMaxFrame(float)>
<com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void <init>(com.facebook.react.views.view.ReactViewGroup)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier: java.util.List access$100(com.facebook.datasource.FirstAvailableDataSourceSupplier)>
<com.google.common.collect.MapMakerInternalMap$Segment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>
<androidx.appcompat.app.AppCompatDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object replace(java.lang.Object,int,java.lang.Object)>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier getBitmapMemoryCacheParamsSupplier()>
<com.google.android.gms.internal.measurement.zzbw: boolean zzk()>
<com.adjust.sdk.scheduler.TimerOnce: void cancel()>
<com.google.android.gms.maps.model.zzc: void <init>()>
<com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zad()>
<com.google.android.material.shape.MaterialShapeDrawable: void calculatePathForSize(android.graphics.RectF,android.graphics.Path)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllSecretKeyBasedAccounts()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void dismissPopupMenu()>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$Success: com.microsoft.ngc.aad.NgcSession getNgcSession()>
<android.widget.TextView: void getDrawingRect(android.graphics.Rect)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$ExpiredSession: com.microsoft.ngc.aad.NgcSession getNgcSession()>
<com.facebook.react.uimanager.GuardedFrameCallback: void doFrameGuarded(long)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount requestExtraScopes(com.google.android.gms.common.api.Scope[])>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: byte[] createByteArray(android.os.Parcel,int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>
<com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)>
<com.azure.authenticator.storage.database.AccountWriter_Factory: void <init>(javax.inject.Provider)>
<com.microsoft.brooklyn.module.repository.UtilitySDKRepository: void <init>(com.microsoft.brooklyn.module.utilitysdk.UtilitySDKConnector,com.microsoft.brooklyn.module.passwordautochange.PasswordRulesUseCase)>
<com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.gms.internal.measurement.zzfy: void <init>()>
<ch.qos.logback.core.util.COWArrayList: boolean add(java.lang.Object)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions latLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)>
<ch.qos.logback.core.rolling.helper.Compressor: java.util.zip.ZipEntry computeZipEntry(java.lang.String)>
<bolts.AndroidExecutors: void <init>()>
<com.google.android.gms.internal.maps.zzz: boolean isGeodesic()>
<com.google.android.gms.internal.location.zzbl: boolean zza(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: com.microsoft.onlineid.sdk.extension.SessionManager access$getSessionManager$p(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.google.android.gms.common.internal.Objects: int hashCode(java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzdj: boolean zzab()>
<com.facebook.common.internal.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<android.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>
<com.azure.authenticator.ui.MainActivity: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzB(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository getAppPolicyRepository()>
<com.google.android.gms.common.data.DataHolder: int getWindowIndex(int)>
<com.azure.authenticator.notifications.msa.MsaNotification_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.react.uimanager.ShadowNodeRegistry: boolean isRootNode(int)>
<com.google.android.gms.internal.measurement.zzp: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzs)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
<com.google.common.base.Joiner: java.lang.String join(java.util.Iterator)>
<com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getChipStrokeColor()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void handleAuthenticationException(com.microsoft.onlineid.exception.AuthenticationException)>
<com.google.android.gms.internal.measurement.zzcf: com.google.android.gms.internal.measurement.zzcf zzj()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateImportantForAccessibility(boolean)>
<com.google.android.gms.internal.safetynet.zzg: void zza(java.lang.String)>
<com.airbnb.lottie.LottieAnimationView: void resumeAnimation()>
<ch.qos.logback.core.joran.event.SaxEventRecorder: boolean isSpaceOnly(java.lang.String)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.datatransport.runtime.synchronization.SynchronizationGuard: java.lang.Object runCriticalSection(com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection)>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildCreatePropertyTableSQL(ch.qos.logback.classic.db.names.DBNameResolver)>
<java.util.Arrays: void fill(boolean[],boolean)>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread: void <init>(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter)>
<com.adjust.sdk.Util: double randomInRange(double,double)>
<com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.measurement.zzkz: java.lang.String zzI()>
<org.json.JSONArray: int length()>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: void <init>(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)>
<com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll: void <init>(com.facebook.react.bridge.ReactContext,android.net.Uri,com.facebook.react.bridge.Promise)>
<ch.qos.logback.core.net.SyslogAppenderBase: void postProcess(java.lang.Object,java.io.OutputStream)>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: boolean shouldEnableCustomDrawingOrder()>
<com.google.android.gms.internal.auth.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)>
<com.adjust.sdk.ActivityHandler: void access$100(com.adjust.sdk.ActivityHandler)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void <init>()>
<com.google.android.gms.internal.measurement.zzkz: java.lang.String zzf()>
<java.util.Calendar: java.util.Calendar getInstance()>
<com.google.android.material.shadow.ShadowRenderer: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: com.microsoft.onlineid.Ticket getMsaTicket()>
<com.google.android.gms.internal.measurement.zzjf: com.google.android.gms.internal.measurement.zzji zzb(java.lang.Class)>
<com.facebook.react.animated.InterpolationAnimatedNode: int findRangeIndex(double,double[])>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.NetworkFetchProducer newNetworkFetchProducer(com.facebook.imagepipeline.producers.NetworkFetcher)>
<com.google.android.gms.common.server.response.zan: void zac(java.lang.Class,java.util.Map)>
<com.google.android.gms.internal.firebase_messaging.zzk: java.util.List zza(java.lang.Throwable,boolean)>
<com.google.android.gms.common.internal.zzu: void <init>(android.os.IBinder)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer build()>
<com.google.android.datatransport.Priority: void <init>(java.lang.String,int)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.net.URL getMainURL()>
<com.google.android.gms.internal.measurement.zzgf: int zzk(int,byte[],int,int,com.google.android.gms.internal.measurement.zzhz,com.google.android.gms.internal.measurement.zzge)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _checkMatchEnd(java.lang.String,int,int)>
<com.facebook.imagepipeline.memory.BitmapCounter: com.facebook.common.references.ResourceReleaser getReleaser()>
<android.app.Fragment: boolean getUserVisibleHint()>
<com.azure.authenticator.storage.database.AccountStorage_Factory: com.azure.authenticator.storage.database.AccountStorage get()>
<com.github.amlcurran.showcaseview.ShowcaseView: int getShowcaseY()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.abstraction.AutoBackupWorker_AssistedFactory access$14800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.transformation.ExpandableTransformationBehavior: android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean)>
<com.google.android.gms.auth.api.identity.zzf$zzc: com.google.android.gms.auth.api.identity.zzf zzi()>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$onTicketAcquired$1: void <init>(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback,com.microsoft.onlineid.UserAccount,com.microsoft.onlineid.Ticket,android.os.Bundle,kotlin.coroutines.Continuation)>
<com.facebook.fbreact.specs.NativeAppearanceSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<androidx.preference.Preference: void setTitle(int)>
<ch.qos.logback.classic.spi.ThrowableProxy: void calculatePackagingData()>
<com.microsoft.ngc.provider.cryptography.NgcCredentialManager: void <init>()>
<com.google.android.gms.maps.internal.zzaf: void zzf(com.google.android.gms.internal.maps.zzt)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date getNextTriggeringDate(java.util.Date)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>
<android.database.Cursor: boolean moveToFirst()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setAutoPlayAnimations(boolean)>
<com.facebook.imagepipeline.core.ExecutorSupplier: java.util.concurrent.Executor forDecode()>
<com.facebook.react.modules.datepicker.DismissableDatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>
<com.evernote.android.job.JobRequest$Builder: void <init>(com.evernote.android.job.JobRequest$Builder,boolean)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: void initialize(android.content.Intent)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment: void lambda$onCreateView$1$RemoteMsaNgcUpsellFragment(android.view.View)>
<com.google.android.gms.internal.maps.zzz: int getJointType()>
<com.airbnb.lottie.LottieComposition: void addWarning(java.lang.String)>
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
<com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)>
<com.facebook.drawee.drawable.FadeDrawable: void drawDrawableWithAlpha(android.graphics.Canvas,android.graphics.drawable.Drawable,int)>
<com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)>
<com.facebook.react.ReactNativeHost: boolean hasInstance()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient: void zzb(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.Status)>
<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>
<com.microsoft.authenticator.reactnative.ReactNativeFragmentManager: boolean defaultOnBackPressed(androidx.fragment.app.FragmentActivity,int)>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableTextFrame parseDocumentData(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.measurement.internal.zzg: long zzS()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment self()>
<com.adjust.sdk.InstallReferrer: java.lang.String getStringInstallReferrer(java.lang.Object)>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>
<com.microsoft.ngc.aad.NgcSession: com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry getTelemetry()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void copy(java.io.InputStream,java.io.OutputStream,int)>
<com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec: void <init>()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.adjust.sdk.ActivityHandler$23: void <init>(com.adjust.sdk.ActivityHandler)>
<com.facebook.imagepipeline.image.EncodedImage: void <init>(com.facebook.common.internal.Supplier)>
<com.facebook.react.jstasks.HeadlessJsTaskContext$3: void <init>(com.facebook.react.jstasks.HeadlessJsTaskContext,int)>
<androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider mainActivityViewModelProvider()>
<java.lang.Character: boolean isJavaIdentifierStart(int)>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: void <init>()>
<com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: void <init>(com.facebook.react.bridge.Callback)>
<com.google.android.gms.measurement.internal.zzhk: void <init>(com.google.android.gms.measurement.internal.zzhn,com.google.android.gms.measurement.internal.zzaf,int,long,boolean)>
<ch.qos.logback.core.net.ssl.ConfigurableSSLServerSocketFactory: void <init>(ch.qos.logback.core.net.ssl.SSLParametersConfiguration,javax.net.ssl.SSLServerSocketFactory)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer newQualifiedResourceFetchProducer()>
<com.facebook.imagepipeline.image.EncodedImage: com.facebook.imageformat.ImageFormat getImageFormat()>
<com.google.android.material.chip.Chip: void updateBackgroundDrawable()>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzkk zzr()>
<android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordAutofillViewModel generatePasswordAutofillViewModel()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipeline: boolean isInDiskCacheSync(android.net.Uri,com.facebook.imagepipeline.request.ImageRequest$CacheChoice)>
<com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()>
<ch.qos.logback.core.pattern.ConverterUtil: ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter)>
<com.google.android.gms.common.internal.zze: void <init>(com.google.android.gms.common.internal.BaseGmsClient,int)>
<com.microsoft.authenticator.mfasdk.di.hilt.MfaModule_ProvideMfaSdkDatabaseFactory: com.microsoft.authenticator.mfasdk.storage.database.MfaSdkDatabase provideMfaSdkDatabase(com.microsoft.authenticator.mfasdk.di.hilt.MfaModule,android.content.Context)>
<ch.qos.logback.core.spi.AbstractComponentTracker: boolean access$000(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCI: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI,android.view.View)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean isOrWillBeShown()>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.listener.RequestListener getRequestListenerForRequest(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.listener.RequestListener)>
<androidx.loader.app.LoaderManager: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)>
<com.google.android.material.snackbar.BaseTransientBottomBar$6: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonArrayToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<java.util.Arrays: void fill(short[],short)>
<ch.qos.logback.core.rolling.helper.DateTokenConverter: java.lang.String getDatePattern()>
<com.google.android.gms.internal.measurement.zzdj: void zzbm(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)>
<android.widget.BaseAdapter: void <init>()>
<com.google.android.gms.internal.auth-api-phone.zzh: void <init>()>
<android.database.CursorWindow: java.lang.String getString(int,int)>
<com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyCancel$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.azure.authenticator.ui.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.adjust.sdk.ActivityHandler$8: void <init>(com.adjust.sdk.ActivityHandler,boolean)>
<java.util.Map: boolean containsValue(java.lang.Object)>
<com.google.common.io.BaseEncoding: void encodeTo(java.lang.Appendable,byte[],int,int)>
<com.facebook.drawee.backends.pipeline.DraweeConfig: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory getPipelineDraweeControllerFactory()>
<com.google.android.gms.measurement.internal.zzm: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzs)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions build()>
<com.google.android.gms.measurement.internal.zzkk: boolean zzS(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzkh: java.lang.reflect.Field zzt()>
<com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)>
<com.google.android.material.textfield.ClearTextEndIconDelegate$8: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.google.android.gms.measurement.internal.zzhj: void <init>(com.google.android.gms.measurement.internal.zzhn,com.google.android.gms.measurement.internal.zzaf,int,long,boolean)>
<com.google.android.datatransport.cct.CctTransportBackend: int getNetSubtypeValue(android.net.NetworkInfo)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.WritableMap inlineViewJson(int,int,int,int,int,int)>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKat()>
<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot(int)>
<com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.imagepipeline.cache.DefaultCacheKeyFactory getInstance()>
<javax.net.ssl.SSLSocket: boolean getOOBInline()>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: boolean zaa()>
<com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)>
<com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaChangeListener: void onStreetViewPanoramaChange(com.google.android.gms.maps.model.StreetViewPanoramaLocation)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_4(int)>
<android.view.View: void setMinimumWidth(int)>
<com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()>
<com.google.android.gms.internal.measurement.zzat: void <init>(com.google.android.gms.internal.measurement.zzbr,boolean,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: void cleanUpAfterUnsuccessfulRestore(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: java.util.List buildActionMenuItems(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.adjust.sdk.ActivityHandler$3: void <init>(com.adjust.sdk.ActivityHandler)>
<java.lang.Thread: void join(long)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_Factory: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel get()>
<com.github.amlcurran.showcaseview.ShowcaseView$Builder: com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)>
<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void printStackLine(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.StackTraceElementProxy)>
<android.util.JsonWriter: android.util.JsonWriter value(double)>
<com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.navigation.NavigationBarItemView createNavigationBarItemView(android.content.Context)>
<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>
<com.google.android.gms.common.ConnectionResult: boolean equals(java.lang.Object)>
<com.microsoft.authenticator.commonuilibrary.dialogqueue.DialogTaskQueue: void taskFinished(java.lang.String)>
<com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)>
<com.google.android.material.tabs.TabLayout: void setTabIconTint(android.content.res.ColorStateList)>
<java.lang.Math: double hypot(double,double)>
<com.facebook.imagepipeline.image.EncodedImage: void setExifOrientation(int)>
<com.google.android.gms.internal.location.zzav: void zzg(com.google.android.gms.location.LocationRequest,android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.google.android.gms.internal.auth-api.zzaa: void zzc(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.identity.BeginSignInResult)>
<com.google.android.material.navigation.NavigationBarItemView: int getItemVisiblePosition()>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)>
<com.google.android.datatransport.runtime.EventInternal: long getEventMillis()>
<com.google.android.gms.common.api.internal.ListenerHolder: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()>
<com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: long getId()>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.core.ChoreographerCompat access$000(com.facebook.react.modules.debug.FpsDebugFrameCallback)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setAutoRotateEnabled(boolean)>
<com.google.android.gms.common.api.Api: void <init>(java.lang.String,com.google.android.gms.common.api.Api$AbstractClientBuilder,com.google.android.gms.common.api.Api$ClientKey)>
<com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar)>
<android.graphics.RectF: float width()>
<com.google.android.material.chip.ChipGroup: int getIndexOfChip(android.view.View)>
<com.facebook.react.views.textinput.ReactEditText: void onContentSizeChange()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$2: void <init>(kotlin.jvm.functions.Function0)>
<android.widget.EditText: void onFinishTemporaryDetach()>
<com.facebook.react.ReactInstanceManager$9: void <init>(com.facebook.react.ReactInstanceManager,int,com.facebook.react.uimanager.ReactRoot)>
<com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String getEventName()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<com.google.android.gms.internal.measurement.zzdf: java.lang.String zzd()>
<com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaScriptTimerManager access$900(com.facebook.react.modules.core.JavaTimerManager)>
<androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>
<com.facebook.react.modules.vibration.VibrationModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.textfield.TextInputLayout: void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)>
<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>
<com.adjust.sdk.Util: java.text.DecimalFormat newLocalDecimalFormat()>
<com.azure.authenticator.storage.database.AccountWriter: void <init>(android.content.Context)>
<ch.qos.logback.core.FileAppender: java.lang.String getAbsoluteFilePath(java.lang.String)>
<com.google.android.gms.common.server.response.zaf: void <init>()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$enableBrowserAccess$enableBrowserAccessDialogBuilder$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.material.chip.ChipDrawable: float calculateCloseIconWidth()>
<com.google.android.material.textfield.ClearTextEndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>
<com.google.android.material.datepicker.YearGridAdapter: com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter)>
<com.facebook.react.bridge.NativeArray: java.lang.String toString()>
<com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.material.resources.TextAppearance: void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback)>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener: void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$1: void <init>(androidx.fragment.app.Fragment)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyComplete$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<ch.qos.logback.core.rolling.helper.FileFilterUtil: java.lang.String slashify(java.lang.String)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$showAuthSessionDialog$2$AbstractAuthRequestActivity(android.view.View)>
<com.facebook.react.modules.statusbar.StatusBarModule$1$1: void <init>(com.facebook.react.modules.statusbar.StatusBarModule$1)>
<com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)>
<com.facebook.debug.holder.NoopPrinter: void <init>()>
<com.facebook.react.modules.image.ImageLoaderModule$1: void <init>(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.Promise)>
<com.airbnb.lottie.LottieAnimationView: void setComposition(com.airbnb.lottie.LottieComposition)>
<android.widget.CheckBox: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.google.android.material.behavior.SwipeDismissBehavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>
<com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInOptions getSavedDefaultGoogleSignInOptions()>
<com.google.android.gms.internal.measurement.zzig: boolean addAll(int,java.util.Collection)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.importCred.ImportFromChromeFragment injectImportFromChromeFragment2(com.microsoft.brooklyn.ui.importCred.ImportFromChromeFragment)>
<com.azure.authenticator.databinding.PaymentListRowLayoutBinding: com.azure.authenticator.databinding.PaymentListRowLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<javax.net.ssl.SSLSocketFactory: void <init>()>
<java.util.List: java.util.ListIterator listIterator(int)>
<com.google.android.gms.internal.auth.zzah: void <init>(java.lang.String,android.app.PendingIntent)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: int getBitmapPrepareToDrawMinSizeBytes()>
<bolts.ExecutorException: void <init>(java.lang.Exception)>
<com.facebook.react.uimanager.UIManagerModuleConstantsHelper: void recursiveMerge(java.util.Map,java.util.Map)>
<com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()>
<com.azure.authenticator.accounts.AadAccount: void <init>(java.lang.String,java.lang.String,com.azure.authenticator.accounts.AccountCapability,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: void zzba(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<java.util.concurrent.LinkedBlockingDeque: void <init>(int)>
<com.google.android.gms.common.api.internal.zaag: void zai()>
<java.lang.IllegalAccessException: void <init>(java.lang.String)>
<com.google.android.material.appbar.HeaderBehavior: int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int)>
<android.graphics.RectF: float centerX()>
<android.os.MemoryFile: void <init>(java.lang.String,int)>
<com.google.android.gms.common.api.internal.zabl: void zah()>
<android.app.DatePickerDialog: void onStop()>
<com.google.android.gms.internal.measurement.zzfm: com.google.android.gms.internal.measurement.zzfm zzd(java.lang.Object)>
<com.google.android.material.ripple.RippleUtils: int doubleAlpha(int)>
<com.azure.authenticator.databinding.AadAccountPageWebViewFragmentBinding: android.widget.LinearLayout getRoot()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: com.microsoft.authenticator.backup.abstraction.AutoBackupManager getAutoBackupManager$app_productionRelease()>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.importCred.ImportPasswordsFragment injectImportPasswordsFragment2(com.microsoft.brooklyn.ui.importCred.ImportPasswordsFragment)>
<com.facebook.drawee.backends.pipeline.Fresco: void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig,com.facebook.drawee.backends.pipeline.DraweeConfig)>
<com.google.android.gms.internal.measurement.zzkz: long zzj()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void <init>(android.content.Context,com.facebook.react.views.scroll.FpsListener)>
<com.google.android.gms.measurement.internal.zzan: com.google.android.gms.measurement.internal.zzan zza(com.google.android.gms.measurement.internal.zzfl,long)>
<com.azure.authenticator.accounts.AadAccount: com.azure.authenticator.accounts.AadAccount createMfaAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,com.microsoft.authenticator.registration.mfa.entities.AadMfaAccountAdditionalInformation)>
<com.facebook.datasource.AbstractDataSource$2: void <init>(com.facebook.datasource.AbstractDataSource,com.facebook.datasource.DataSubscriber)>
<com.google.android.gms.common.api.internal.zabl: void <init>(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.GoogleApi)>
<com.azure.authenticator.databinding.FragmentImportPasswordsBinding: com.azure.authenticator.databinding.FragmentImportPasswordsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: void <init>(android.view.View)>
<com.google.android.gms.measurement.internal.zzaf: int zzn(java.lang.Boolean)>
<com.facebook.react.views.scroll.ReactScrollView: void reactScrollTo(int,int)>
<com.azure.authenticator.databinding.AccountListRowDefaultModeBinding: com.azure.authenticator.databinding.AccountListRowDefaultModeBinding bind(android.view.View)>
<com.google.android.gms.location.zzav: void <init>(android.os.IBinder)>
<com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText)>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<com.google.android.gms.internal.maps.zzk: boolean isVisible()>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void <init>(android.view.ViewGroup)>
<android.widget.CompoundButton: void onAttachedToWindow()>
<androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>
<com.google.android.gms.measurement.internal.zziu: void <init>(com.google.android.gms.measurement.internal.zzjb,java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp,boolean)>
<com.airbnb.lottie.parser.ShapeDataParser: com.airbnb.lottie.model.content.ShapeData parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.google.android.material.navigation.NavigationBarPresenter: void setMenuView(com.google.android.material.navigation.NavigationBarMenuView)>
<com.facebook.react.modules.network.ResponseUtil: void onDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String)>
<com.google.android.gms.tasks.OnTokenCanceledListener: void onCanceled()>
<java.util.TimeZone: int getOffset(long)>
<java.util.LinkedList: java.lang.Object removeLast()>
<android.graphics.RectF: boolean isEmpty()>
<com.facebook.yoga.YogaNode: void setMinWidth(float)>
<com.google.android.material.internal.FlowLayout: int getRowIndex(android.view.View)>
<com.adjust.sdk.ActivityHandler: boolean checkActivityStateI(com.adjust.sdk.ActivityState)>
<com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: android.graphics.Path getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.gms.measurement.internal.zzdd: void <init>()>
<com.facebook.react.ReactActivityDelegate: boolean onKeyUp(int,android.view.KeyEvent)>
<com.facebook.react.views.text.TextInlineImageSpan: int getHeight()>
<android.app.Service: boolean stopSelfResult(int)>
<com.google.android.gms.internal.safetynet.zzk$zzc: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: void roundDownTime(java.util.Calendar,java.lang.String)>
<androidx.appcompat.widget.AppCompatSpinner: void <init>(android.content.Context,int)>
<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>
<com.facebook.systrace.SystraceMessage: com.facebook.systrace.SystraceMessage$Builder endSection(long)>
<java.util.HashSet: void <init>(java.util.Collection)>
<com.google.android.gms.internal.measurement.zzdf: boolean zza()>
<androidx.fragment.app.FragmentActivity: void onLowMemory()>
<com.facebook.drawee.drawable.RoundedColorDrawable: void setBorder(int,float)>
<android.widget.ImageView: void setColorFilter(int)>
<com.google.android.gms.cloudmessaging.zzf: void <init>(com.google.android.gms.cloudmessaging.zze)>
<com.google.android.gms.auth.api.identity.zzl: void <init>(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$13: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.datepicker.Month: int getDayOfMonth(long)>
<javax.net.ssl.SSLSocket: boolean isInputShutdown()>
<com.facebook.react.views.view.ColorUtil: int getOpacityFromColor(int)>
<ch.qos.logback.classic.LoggerContext: void addListener(ch.qos.logback.classic.spi.LoggerContextListener)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)>
<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewDidHide(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.google.android.gms.measurement.internal.zzdz: java.util.List zzi(com.google.android.gms.measurement.internal.zzp,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$Builder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$SingletonC build()>
<java.lang.SecurityException: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>
<com.google.android.gms.auth.api.signin.internal.zzt: void zze(com.google.android.gms.auth.api.signin.internal.zzr,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<ch.qos.logback.classic.spi.IThrowableProxy: java.lang.String getClassName()>
<ch.qos.logback.core.helpers.CyclicBuffer: int length()>
<com.facebook.react.views.scroll.ReactScrollView: void reactSmoothScrollTo(int,int)>
<com.google.android.gms.internal.measurement.zzic: com.google.android.gms.internal.measurement.zzic zze()>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.maps.model.zzi: void <init>()>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods$Builder withHolder(com.google.android.gms.common.api.internal.ListenerHolder)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzR(java.lang.String)>
<com.facebook.shimmer.ShimmerDrawable: float offset(float,float,float)>
<com.google.android.gms.common.api.internal.zabb: void zab(com.google.android.gms.common.api.internal.zabd)>
<com.adjust.sdk.DeviceInfo: java.lang.String getLanguage(java.util.Locale)>
<com.google.android.gms.maps.model.CameraPosition: com.google.android.gms.maps.model.CameraPosition$Builder builder()>
<com.google.android.material.shape.ShapePath: void <init>()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$getNearestAddress$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<com.airbnb.lottie.LottieCompositionFactory: boolean isNightMode(android.content.Context)>
<com.google.android.gms.measurement.internal.zzjb: void zzt(java.util.concurrent.atomic.AtomicReference,boolean)>
<com.adjust.sdk.SharedPreferencesManager: void savePushToken(java.lang.String)>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setTransparent(android.view.View,boolean)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zah(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<android.os.Bundle: boolean containsKey(java.lang.String)>
<com.microsoft.authenticator.core.logging.BaseLogger: void log(int,java.lang.String,java.lang.String,java.lang.Throwable,int)>
<com.google.android.gms.internal.measurement.zzmd: com.google.android.gms.internal.measurement.zzme zzc()>
<com.microsoft.brooklyn.module.repository.PaymentsRepository: void <init>(com.microsoft.brooklyn.module.sync.PaymentsSDKConnector)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: int getClientVersion(android.content.Context)>
<com.google.android.gms.common.api.internal.zax: boolean zaB()>
<java.io.PrintWriter: void print(int)>
<com.facebook.imagepipeline.nativecode.NativeFiltersLoader: void load()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.storage.Storage getStorage$app_productionRelease()>
<com.facebook.react.modules.core.JavaTimerManager: void onHostPause()>
<com.facebook.soloader.UnpackingSoSource: void regenerate(byte,com.facebook.soloader.UnpackingSoSource$DsoManifest,com.facebook.soloader.UnpackingSoSource$InputDsoIterator)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: boolean isExifOrientationAllowed(int)>
<com.google.android.gms.auth.api.credentials.zzk: void <init>()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.evernote.android.job.WakeLockUtil: boolean acquireWakeLock(android.content.Context,android.os.PowerManager$WakeLock,long)>
<com.google.android.gms.measurement.internal.zzfl: void <init>(com.google.android.gms.measurement.internal.zzgn)>
<android.text.style.AbsoluteSizeSpan: int getSize()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<com.google.android.gms.internal.measurement.zzjl: void <init>(int)>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.JsonEncoding detectEncoding()>
<com.azure.authenticator.Hilt_PhoneFactorApplication$1: void <init>(com.azure.authenticator.Hilt_PhoneFactorApplication)>
<android.net.Uri: java.lang.String getPath()>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.Boolean isWantClientAuth()>
<com.google.android.gms.measurement.internal.zzhp: void <init>(com.google.android.gms.measurement.internal.zzhq,int,java.lang.Exception,byte[],java.util.Map)>
<android.view.autofill.AutofillManager: boolean isEnabled()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromBytes(byte[],android.os.Parcelable$Creator)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.zal zaw(com.google.android.gms.common.api.internal.GoogleApiManager)>
<java.lang.Math: float signum(float)>
<com.google.android.gms.common.GooglePlayServicesManifestException: void <init>(int,java.lang.String)>
<com.google.android.material.behavior.SwipeDismissBehavior: void setEndAlphaSwipeDistance(float)>
<com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: void release(android.graphics.Bitmap)>
<com.google.android.gms.common.zzd: void <init>(boolean,java.lang.String,com.google.android.gms.common.zzi)>
<java.nio.channels.FileChannel: boolean isOpen()>
<com.azure.authenticator.ui.dialog.AppDialogFragments: androidx.fragment.app.FragmentActivity access$getHostActivity$p(com.azure.authenticator.ui.dialog.AppDialogFragments)>
<com.adjust.sdk.ILogger: void warnInProduction(java.lang.String,java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzcr: java.lang.String zza()>
<com.google.android.gms.internal.measurement.zzbw: boolean zzi()>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zze(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)>
<com.google.android.gms.internal.measurement.zzhy: com.google.android.gms.internal.measurement.zzhy zzd(int)>
<com.evernote.android.job.JobRequest$Builder: void <init>(com.evernote.android.job.JobRequest$Builder,boolean,com.evernote.android.job.JobRequest$1)>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.os.Message: android.os.Bundle getData()>
<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setCustomView(int)>
<com.microsoft.workaccount.authenticatorservice.KeyMigrationBroadcaster: void migrateKeyIfNeeded(android.content.Context,java.lang.String)>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>
<com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: void <init>(com.facebook.react.views.image.ReactImageView)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: void <init>(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest)>
<ch.qos.logback.core.net.AbstractSocketAppender: void start()>
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int)>
<com.google.android.gms.internal.measurement.zzgz: void zza(int,int)>
<com.google.android.gms.location.zzbr: void <init>()>
<com.google.android.material.tabs.TabLayout: void setScrollPosition(int,float,boolean)>
<com.google.android.gms.safetynet.SafetyNetApi$zza: java.lang.String getJwsResult()>
<com.google.android.gms.internal.safetynet.zzk: com.google.android.gms.common.api.PendingResult zza(com.google.android.gms.common.api.GoogleApiClient,byte[],java.lang.String)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider,com.microsoft.brooklyn.module.autofill.FormInfoHelper,com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager)>
<ch.qos.logback.classic.net.SimpleSocketServer: java.lang.String getServerThreadName()>
<android.graphics.ColorSpace: boolean isWideGamut()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$1: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.measurement.internal.zzhn: void zzB(java.lang.String,java.lang.String,java.lang.Object,long)>
<com.microsoft.authenticator.core.graphics.DrawableConverter: void <init>(android.graphics.drawable.Drawable)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.InlineSuggestionUseCase: void <init>(android.content.Context)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void hideView(int)>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void setIndicatorPositionFromTabPosition(int,float)>
<ch.qos.logback.classic.LoggerContext: java.util.List getLoggerList()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String getName()>
<com.facebook.imagepipeline.memory.PoolParams: void <init>(int,int,android.util.SparseIntArray,int,int,int)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: void clear()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.mfa.abstraction.ActivationFailureDialogManager activationFailureDialogManager()>
<java.lang.String: java.lang.String concat(java.lang.String)>
<android.database.CursorWindow: int getStartPosition()>
<ch.qos.logback.classic.android.Clock: long currentTimeMillis()>
<androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalAssetFetchProducer newLocalAssetFetchProducer()>
<javax.crypto.Mac: byte[] doFinal(byte[])>
<com.facebook.common.logging.LoggingDelegate: void d(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void access$600(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder)>
<com.facebook.react.bridge.JSBundleLoader: void <init>()>
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher inRange(char,char)>
<com.facebook.react.modules.storage.AsyncLocalStorageUtil: boolean mergeImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
<com.facebook.react.views.textinput.ReactTextInputManager: void <init>()>
<com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener access$000(com.facebook.react.views.picker.ReactPicker)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$300(com.google.android.material.badge.BadgeDrawable$SavedState)>
<ch.qos.logback.core.joran.action.ParamAction: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_7_8$cp()>
<com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.util.ArrayList zaj(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder get()>
<android.widget.ImageButton: void setLongClickable(boolean)>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$502(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.microsoft.authenticator.core.logging.BaseLogger: void w(java.lang.String,java.lang.Throwable)>
<com.facebook.react.views.scroll.FpsListener: void disable(java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void showHideCodesAction$app_productionRelease()>
<com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.proto.KeysetInfo$Builder newBuilder()>
<com.google.android.gms.measurement.internal.zzjm: void zza()>
<com.adjust.sdk.IPackageHandler: void teardown()>
<com.facebook.soloader.MinElf: long getu32(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)>
<com.google.android.gms.common.api.internal.zaa: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>
<com.facebook.react.uimanager.MatrixMathHelper: void applyRotateZ(double[],double)>
<android.widget.ImageButton: void setClickable(boolean)>
<ch.qos.logback.core.sift.AppenderTracker: ch.qos.logback.core.helpers.NOPAppender buildNOPAppender(java.lang.String)>
<android.widget.ScrollView: void onScrollChanged(int,int,int,int)>
<com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding: android.widget.LinearLayout getRoot()>
<com.azure.authenticator.ui.fragment.accounts.AccountsCommonUI$showEditAccountNameDialog$dialogRenameAccount$1: void <init>()>
<com.facebook.react.common.LongArray: void add(long)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onDialogCancel()>
<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase brokerAccountUseCase()>
<kotlin.text.Regex: void <init>(java.lang.String)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DiskCacheWriteProducer newDiskCacheWriteProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.datatransport.runtime.SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setTransformer(com.google.android.datatransport.Transformer)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider paymentViewModelProvider()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void showGraphTokenExpiredScreen(java.lang.Integer)>
<com.facebook.imagepipeline.memory.MemoryChunkUtil: void checkBounds(int,int,int,int,int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.material.chip.Chip: android.graphics.Rect access$500(com.google.android.material.chip.Chip)>
<com.facebook.imagepipeline.cache.StagingArea: void clearAll()>
<okio.BufferedSink: void flush()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_22_23()>
<com.evernote.android.job.v21.PlatformJobService: android.content.Intent getIntent()>
<java.util.Calendar: void setTimeZone(java.util.TimeZone)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void calculateAnimation(int,int,int,int)>
<com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type forId(int)>
<java.lang.reflect.Method: void setAccessible(boolean)>
<com.google.android.material.textview.MaterialTextView: void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int)>
<com.google.android.material.appbar.ViewOffsetBehavior: boolean setTopAndBottomOffset(int)>
<com.google.android.material.appbar.HeaderBehavior: int getTopBottomOffsetForScrollingSibling()>
<com.google.android.gms.internal.measurement.zzgq: int zzd()>
<com.google.android.gms.internal.measurement.zzbr: void zzl(java.lang.String,java.lang.String,android.os.Bundle)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: void <init>(com.microsoft.authenticator.di.AppModule,dagger.hilt.android.internal.modules.ApplicationContextModule,com.microsoft.authenticator.di.BrokerModule,com.microsoft.brooklyn.module.di.BrooklynHiltModule,com.microsoft.authenticator.di.DidAppModule,com.microsoft.authenticator.experimentation.di.ExperimentationHiltModule,com.microsoft.authenticator.graphclient.di.GraphModule,com.microsoft.authenticator.location.di.LocationModule,com.microsoft.authenticator.mfasdk.di.hilt.MfaModule,com.microsoft.authenticator.di.MsaSdkModule,com.microsoft.authenticator.rootdetection.di.RootDetectionModule,com.microsoft.did.di.VcWalletModule,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<java.io.DataInput: int readInt()>
<com.google.android.gms.internal.auth.zzal: void zza(com.google.android.gms.auth.api.proxy.ProxyResponse)>
<com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)>
<java.util.TreeSet: void <init>(java.util.Collection)>
<java.lang.Float: java.lang.Float valueOf(float)>
<com.google.android.gms.internal.auth-api.zzaf: void <init>(android.os.IBinder)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollBeginDragEvent(android.view.ViewGroup)>
<ch.qos.logback.core.spi.AbstractComponentTracker: void endOfLife(java.lang.String)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void onNewResultImpl(java.io.Closeable,int)>
<java.util.Random: long nextLong()>
<androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)>
<com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)>
<java.lang.ref.PhantomReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<com.google.android.gms.internal.measurement.zzld: boolean zzb()>
<com.google.crypto.tink.KeyTypeManager: java.lang.String getKeyType()>
<com.airbnb.lottie.model.layer.BaseLayer: void applyInvertedSubtractMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.google.android.gms.measurement.internal.zzge: void zzg()>
<android.widget.HorizontalScrollView: boolean awakenScrollBars()>
<com.google.android.material.badge.BadgeDrawable: void updateMaxBadgeNumber()>
<com.google.android.material.shape.MaterialShapeDrawable: void setStrokeColor(android.content.res.ColorStateList)>
<com.google.android.gms.maps.model.CameraPosition: void <init>(com.google.android.gms.maps.model.LatLng,float,float,float)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void handleRestoreError$default(com.azure.authenticator.ui.backup.RestoreFlowActivity,com.microsoft.authenticator.backup.entities.BackupRestoreError,java.lang.String,java.lang.Exception,java.lang.String,int,java.lang.Object)>
<com.google.android.material.chip.ChipDrawable: void setIconStartPadding(float)>
<com.google.android.gms.common.api.internal.zaf: void <init>(com.google.android.gms.common.api.internal.zacc,com.google.android.gms.tasks.TaskCompletionSource)>
<com.azure.authenticator.storage.database.AppDatabase_Impl$1: void <init>(com.azure.authenticator.storage.database.AppDatabase_Impl,int)>
<com.microsoft.brooklyn.module.logging.BrooklynLogger: void e(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzhw: boolean zza(int)>
<com.airbnb.lottie.LottieComposition: float getStartFrame()>
<ch.qos.logback.classic.spi.PackagingDataCalculator: void calculate(ch.qos.logback.classic.spi.IThrowableProxy)>
<ch.qos.logback.core.PropertyDefinerBase: java.lang.String booleanAsStr(boolean)>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>
<com.evernote.android.job.work.JobProxyWorkManager: int getJobIdFromTags(java.util.Collection)>
<java.lang.StringBuffer: void <init>(java.lang.String)>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<com.facebook.yoga.YogaDirection: void <init>(java.lang.String,int,int)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: void <init>()>
<com.google.android.gms.internal.measurement.zzau: void <init>(com.google.android.gms.internal.measurement.zzbr,android.os.Bundle,com.google.android.gms.internal.measurement.zzm)>
<com.facebook.cache.common.NoOpCacheErrorLogger: com.facebook.cache.common.NoOpCacheErrorLogger getInstance()>
<ch.qos.logback.core.sift.AppenderTracker: ch.qos.logback.core.Appender buildComponent(java.lang.String)>
<com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>
<com.facebook.react.views.viewpager.ReactViewPager: android.view.View getViewFromAdapter(int)>
<android.text.SpannableStringBuilder: int length()>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void run(com.google.android.gms.common.api.Api$AnyClient)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider accountsViewModelProvider()>
<ch.qos.logback.classic.spi.ILoggingEvent: java.lang.String getThreadName()>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.String)>
<com.google.android.gms.dynamite.zzo: com.google.android.gms.dynamic.IObjectWrapper zzg(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: boolean access$302(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,boolean)>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: com.microsoft.onlineid.sdk.extension.Session getSdkSession()>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzQ()>
<android.widget.Spinner: android.widget.SpinnerAdapter getAdapter()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void log(int,java.lang.String,java.lang.Throwable)>
<com.facebook.imagepipeline.memory.LruBitmapPool: void trimTo(int)>
<com.google.android.material.badge.BadgeDrawable$SavedState: boolean access$002(com.google.android.material.badge.BadgeDrawable$SavedState,boolean)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.ThumbnailSizeChecker: boolean isImageBigEnough(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions)>
<kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>
<com.microsoft.brooklyn.ui.credential.CredentialViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<ch.qos.logback.core.net.AbstractSocketAppender: ch.qos.logback.core.net.SocketConnector newConnector(java.net.InetAddress,int,long,long)>
<com.google.android.gms.internal.measurement.zzgz: void zze(int,long)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzP(java.lang.String)>
<androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.gms.common.api.internal.zacx: void <init>()>
<com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback access$002(com.google.android.material.bottomsheet.BottomSheetDialog,com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)>
<com.google.android.gms.measurement.internal.zzdz: void zzf(com.google.android.gms.measurement.internal.zzp)>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor clear()>
<com.google.android.gms.safetynet.SafetyNetApi$zzb: int getHoursSinceLastScanWithHarmfulApp()>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showLockScreenRequiredDialog$lockScreenRequiredDialogBuilder$1: void <init>(com.azure.authenticator.ui.dialog.AppDialogFragments,android.content.DialogInterface$OnClickListener)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()>
<com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float,int)>
<org.xml.sax.Attributes: java.lang.String getValue(int)>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void reportWeirdUCS4(java.lang.String)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder consumeAttributes(android.content.res.TypedArray)>
<com.google.android.gms.internal.location.zzbd: void <init>()>
<ch.qos.logback.core.joran.util.PropertyDescriptor: void setPropertyType(java.lang.Class)>
<com.google.android.gms.measurement.internal.zzjc: java.lang.String zzf(java.lang.String)>
<okhttp3.HttpUrl: java.lang.String toString()>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzz()>
<java.util.HashSet: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void access$setResultAndFinish(com.azure.authenticator.ui.backup.RestoreFlowActivity,int)>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: byte[] zza(java.lang.Iterable)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder setAutoSelectEnabled(boolean)>
<com.facebook.react.modules.debug.DevSettingsModule: void reload()>
<com.facebook.imagepipeline.cache.ValueDescriptor: int getSizeInBytes(java.lang.Object)>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)>
<android.os.Parcel: int dataPosition()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: void fallbackConfiguration(ch.qos.logback.classic.LoggerContext,java.util.List,java.net.URL)>
<com.google.android.material.chip.ChipGroup: void access$500(com.google.android.material.chip.ChipGroup,int,boolean)>
<com.facebook.react.views.image.ReactImageView: void setBorderRadius(float,int)>
<com.google.android.material.circularreveal.CircularRevealWidget: void setCircularRevealScrimColor(int)>
<androidx.fragment.app.Fragment: boolean isAdded()>
<android.view.ViewStructure: android.view.ViewStructure newChild(int)>
<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>
<com.google.android.gms.common.internal.zak: boolean zag(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)>
<android.widget.EditText: java.lang.CharSequence getHint()>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressFormDatasetsUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressSuggestionHelper,com.microsoft.brooklyn.module.common.LocalisedCountryData)>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.IPackageHandler getPackageHandler(com.adjust.sdk.IActivityHandler,android.content.Context,boolean)>
<com.google.android.gms.auth.api.zzc: void <init>()>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
<com.facebook.soloader.SoLoader$1: void <init>(boolean,java.lang.String,java.lang.String,java.lang.Runtime,java.lang.reflect.Method)>
<okhttp3.Dispatcher: java.util.List runningCalls()>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder$configure$2: void invoke(android.view.View)>
<androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)>
<com.google.android.gms.maps.MapFragment$zza: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)>
<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>
<ch.qos.logback.core.util.StatusPrinter: void appendThrowable(java.lang.StringBuilder,java.lang.Throwable)>
<com.google.android.gms.auth.GoogleAuthUtil: com.google.android.gms.auth.TokenData zza(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>
<androidx.work.impl.background.systemjob.SystemJobService: boolean onStopJob(android.app.job.JobParameters)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: void invalidateAadNgcKey()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.database.CursorWindow: int getInt(int,int)>
<android.os.Bundle: void <init>()>
<com.airbnb.lottie.LottieAnimationView: boolean isAnimating()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHoveredFocusedTranslationZ(float)>
<com.google.android.gms.measurement.internal.zzex: android.util.Pair zzb(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdf: boolean zzg()>
<android.text.Layout: int getLineStart(int)>
<com.facebook.imagepipeline.memory.GenericByteArrayPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.adjust.sdk.AdjustFactory: void setSubsessionInterval(long)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: com.azure.authenticator.accounts.MsaAccount getMsaAccount()>
<com.facebook.datasource.AbstractDataSource: void notifyProgressUpdate()>
<com.azure.authenticator.authentication.msa.MsaAccountManager$Companion: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)>
<com.fasterxml.jackson.core.JsonFactory$Feature: int collectDefaults()>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean doesMarkerStartSegment(int)>
<com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: java.lang.String getDescription()>
<com.google.android.gms.common.api.internal.zabl: boolean zat(com.google.android.gms.common.api.internal.zabl,boolean)>
<android.widget.FrameLayout: void draw(android.graphics.Canvas)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void reportTooManyCollisions(int)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.onlineid.sdk.extension.NgcManager ngcManager()>
<com.google.android.gms.auth.api.signin.internal.zzq: com.google.android.gms.auth.api.signin.GoogleSignInAccount zzr()>
<okhttp3.MultipartBody$Builder: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>
<com.azure.authenticator.MainNavDirections: com.azure.authenticator.MainNavDirections$ToAccountListFragment toAccountListFragment()>
<android.widget.LinearLayout: void onFinishInflate()>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordsViewModel: int getExportPasswordsCount()>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter: void <init>()>
<com.google.android.gms.location.ActivityRecognitionClient: void <init>(android.content.Context)>
<android.view.animation.Animation: void setStartOffset(long)>
<com.facebook.react.modules.network.ProgressRequestBody: void <init>(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener)>
<com.google.android.material.tabs.TabLayout$AdapterChangeListener: void <init>(com.google.android.material.tabs.TabLayout)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object)>
<ch.qos.logback.core.status.Status: java.lang.Long getDate()>
<com.microsoft.authenticator.backup.abstraction.AutoBackupManager: boolean isAutoBackupRunning()>
<com.google.android.gms.internal.measurement.zzim: com.google.android.gms.internal.measurement.zzim zzf()>
<com.google.android.material.internal.CollapsingTextHelper: void setPositionInterpolator(android.animation.TimeInterpolator)>
<com.google.android.gms.internal.maps.zzz: float getZIndex()>
<com.google.android.gms.common.util.zza: int zza(int)>
<java.util.HashMap: java.util.Set keySet()>
<bolts.TaskCompletionSource: void setCancelled()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$onTicketAcquired$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzeb: void <init>()>
<com.google.android.gms.common.util.CollectionUtils: java.util.List listOf(java.lang.Object[])>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity: void _initHiltInternal()>
<android.content.Context: boolean deleteFile(java.lang.String)>
<com.facebook.react.ReactInstanceManager$8: void <init>(com.facebook.react.ReactInstanceManager)>
<com.facebook.imagepipeline.memory.MemoryChunkUtil: int adjustByteCount(int,int,int)>
<com.facebook.react.modules.share.ShareModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.classic.db.names.DBNameResolver: java.lang.String getColumnName(java.lang.Enum)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int extractOrientationFromMetadata(com.facebook.imagepipeline.image.EncodedImage)>
<com.evernote.android.job.work.TransientBundleHolder: android.os.Bundle getBundle(int)>
<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Level getLevel()>
<com.evernote.android.job.JobStorage$JobOpenHelper: void createJobTable(android.database.sqlite.SQLiteDatabase)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$4: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity_MembersInjector: void injectMembers(com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.google.android.gms.common.internal.GmsClient: com.google.android.gms.common.internal.ClientSettings getClientSettings()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory access$4600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonToken resetInt(boolean,int)>
<android.view.MotionEvent: int getActionMasked()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zax(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.google.android.gms.dynamic.ObjectWrapper: com.google.android.gms.dynamic.IObjectWrapper wrap(java.lang.Object)>
<java.net.HttpURLConnection: java.net.URL getURL()>
<android.graphics.Matrix: void setRotate(float,float,float)>
<androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>
<com.google.android.material.shape.ShapePath: float getEndY()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>
<com.facebook.yoga.YogaNode: void setPaddingPercent(com.facebook.yoga.YogaEdge,float)>
<com.facebook.react.uimanager.UIImplementation: void removeSubviewsFromContainerWithID(int)>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: java.lang.Object generatedComponent()>
<com.facebook.imagepipeline.cache.StagingArea: com.facebook.imagepipeline.cache.StagingArea getInstance()>
<com.facebook.react.modules.storage.AsyncStorageModule$4: void doInBackgroundGuarded(java.lang.Void[])>
<com.facebook.react.modules.timepicker.TimePickerDialogFragment: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void access$300(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showReRegisterAadNgcScreen$2: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int)>
<com.azure.authenticator.storage.Storage_Factory: void <init>(javax.inject.Provider)>
<com.google.android.gms.measurement.internal.zzkd: boolean zzan(com.google.android.gms.measurement.internal.zzp)>
<android.util.SparseIntArray: void append(int,int)>
<com.evernote.android.job.v14.PlatformAlarmReceiver: void <init>()>
<android.widget.ImageButton: boolean hasFocus()>
<com.google.android.gms.internal.measurement.zzay: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm,int)>
<ch.qos.logback.core.pattern.parser.TokenStream: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>
<com.adjust.sdk.scheduler.TimerOnce: java.util.concurrent.ScheduledFuture access$302(com.adjust.sdk.scheduler.TimerOnce,java.util.concurrent.ScheduledFuture)>
<com.google.android.material.chip.ChipDrawable: void setChipStrokeWidthResource(int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: androidx.appcompat.widget.ListPopupWindow buildPopupMenu(android.content.Context,android.view.View)>
<com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)>
<com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler()>
<com.google.android.gms.internal.measurement.zzdb: void zzr(com.google.android.gms.internal.measurement.zzdb,int)>
<com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.material.navigation.NavigationBarView$SavedState: void readFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>
<com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse$Status getStatus()>
<com.google.android.gms.measurement.internal.zzjr: void zza()>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction$onActionTriggered$backgroundDataUsageDialogBuilder$2: void <init>()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void <init>(android.content.Context,java.lang.String,int)>
<com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)>
<android.widget.FrameLayout: int[] mergeDrawableStates(int[],int[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.commonuilibrary.ui.localauth.DeviceScreenUnlockActivity injectDeviceScreenUnlockActivity2(com.microsoft.authenticator.commonuilibrary.ui.localauth.DeviceScreenUnlockActivity)>
<com.google.android.material.internal.ViewUtils: void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzF(java.lang.String)>
<com.google.android.gms.measurement.internal.zzjb: void zzn(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String)>
<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>
<com.facebook.drawee.drawable.RoundedNinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable)>
<com.google.android.gms.internal.measurement.zzgc: void zzb()>
<com.google.android.gms.internal.measurement.zzjk: void zzQ(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener: void onBackgroundStateChanged(boolean)>
<com.google.android.gms.location.GeofencingRequest$Builder: com.google.android.gms.location.GeofencingRequest$Builder addGeofence(com.google.android.gms.location.Geofence)>
<com.google.android.gms.internal.measurement.zzdb: void zzu(com.google.android.gms.internal.measurement.zzdb,long)>
<com.facebook.react.modules.statusbar.StatusBarModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.airbnb.lottie.model.layer.Layer: java.util.List getMasks()>
<com.google.android.gms.internal.measurement.zzdq: void zzw()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void access$handleApproveNgcResult(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzr()>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: void optionalWarning(java.lang.String,java.lang.Exception)>
<com.facebook.imagepipeline.memory.BufferMemoryChunk: void <init>(int)>
<com.google.android.gms.internal.maps.zzk: void setBearing(float)>
<java.lang.Enum: java.lang.String toString()>
<android.widget.EditText: int getBreakStrategy()>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: int getScrollFlags()>
<android.os.Looper: java.lang.Thread getThread()>
<com.evernote.android.job.JobRequest$Builder: boolean access$1200(com.evernote.android.job.JobRequest$Builder)>
<java.lang.reflect.Field: void setAccessible(boolean)>
<com.facebook.react.bridge.JavaMethodWrapper$2: void <init>()>
<androidx.customview.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$cleanUpAfterUnsuccessfulRestore$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.internal.zzm: android.content.Intent zzd(android.content.Context)>
<com.google.android.gms.location.LocationCallback: void onLocationResult(com.google.android.gms.location.LocationResult)>
<com.google.android.gms.measurement.internal.zzg: void zzK(long)>
<com.google.common.net.InternetDomainName: com.google.common.net.InternetDomainName ancestor(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider webViewAuthenticationViewModelProvider()>
<com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.google.android.gms.measurement.internal.zzfc: void zzd(java.lang.String)>
<org.xml.sax.Attributes: java.lang.String getLocalName(int)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$mv8ZT-LADpgLMoiv6TvfM_FLKaE': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<java.lang.ref.ReferenceQueue: void <init>()>
<com.facebook.react.uimanager.IViewManagerWithChildren: boolean needsCustomLayoutForChildren()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.SaveResponseUseCase saveResponseUseCase()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$2: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$showMfaFingerprintOptOutDialog$3$SettingsFragment(java.util.HashMap,android.content.DialogInterface,int)>
<com.adjust.sdk.Util$1: java.lang.Void doInBackground(java.lang.Object[])>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: void <init>(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$1)>
<com.google.android.gms.internal.measurement.zzkw: void <init>()>
<android.graphics.drawable.Drawable: void <init>()>
<androidx.work.Data: long getLong(java.lang.String,long)>
<com.google.android.material.shape.ShapePath$ShadowCompatOperation: void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)>
<com.facebook.react.ReactInstanceManager: void moveReactContextToCurrentLifecycleState()>
<com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.Feature[] zaa()>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager$mBroadcastReceiver$1: void <init>(com.azure.authenticator.ui.action.UserInteractionRequiredActionManager)>
<com.google.android.gms.measurement.internal.zzjb: com.google.android.gms.measurement.internal.zzja zzI(com.google.android.gms.measurement.internal.zzjb)>
<com.adjust.sdk.Util: boolean equalInt(java.lang.Integer,java.lang.Integer)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: void <init>(int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()>
<com.facebook.react.uimanager.ViewManagerRegistry: void <init>(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$5: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.adjust.sdk.ActivityHandler: boolean updateAttributionI(com.adjust.sdk.AdjustAttribution)>
<com.facebook.react.animated.AnimatedNode: void addChild(com.facebook.react.animated.AnimatedNode)>
<com.google.android.gms.safetynet.SafetyNetClient: void <init>(android.app.Activity)>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<com.google.android.material.navigation.NavigationBarView: void setOnItemReselectedListener(com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener)>
<com.facebook.imagepipeline.memory.GenericByteArrayPool: void free(byte[])>
<android.content.res.Resources: int getColor(int)>
<kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<com.facebook.react.views.picker.ReactPickerManager: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$$special$$inlined$viewModels$1: void <init>(androidx.activity.ComponentActivity)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void <init>()>
<com.google.android.gms.common.api.Scope: java.lang.String getScopeUri()>
<java.lang.ArithmeticException: void <init>(java.lang.String)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<ch.qos.logback.core.rolling.helper.FileFinder: java.lang.String regexEscapePath(java.lang.String)>
<com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>
<com.airbnb.lottie.utils.Utils: float dpScale()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzei zzat()>
<com.google.android.gms.measurement.internal.zzg: long zzO()>
<com.google.android.gms.common.images.ImageManager: java.util.HashSet zah()>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzv(boolean)>
<com.evernote.android.job.v21.JobProxy21: void plantPeriodicFlexSupport(com.evernote.android.job.JobRequest)>
<com.adjust.sdk.Util: java.lang.String formatString(java.lang.String,java.lang.Object[])>
<com.google.crypto.tink.proto.Keyset: int getKeyCount()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.mfa.viewLogic.RegisterAadMfaAccountFragment injectRegisterAadMfaAccountFragment2(com.microsoft.authenticator.registration.mfa.viewLogic.RegisterAadMfaAccountFragment)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getCid()>
<com.google.android.material.shape.ShapeAppearancePathProvider: void <init>()>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String getRegexForLongMonths()>
<com.azure.authenticator.jwe.AlgorithmEnum: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.UIImplementation: void prependUIBlock(com.facebook.react.uimanager.UIBlock)>
<com.google.android.gms.internal.measurement.zzdb: void zzt(com.google.android.gms.internal.measurement.zzdb,long)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl)>
<com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updatePropsMountItem(int,com.facebook.react.bridge.ReadableMap)>
<com.evernote.android.job.v14.PlatformAlarmReceiver: android.content.Intent getIntent()>
<com.azure.authenticator.storage.database.AccountStorage$getAllAccountsObservable$1: void <init>(com.azure.authenticator.storage.database.AccountStorage)>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
<com.google.common.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)>
<com.github.amlcurran.showcaseview.ShowcaseAreaCalculator: void <init>()>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getImplementationVersion(java.lang.Class)>
<com.evernote.android.job.util.Device: boolean isRoaming(android.net.ConnectivityManager,android.net.NetworkInfo)>
<com.facebook.react.animated.SpringAnimation: double getDisplacementDistanceForState(com.facebook.react.animated.SpringAnimation$PhysicsState)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: boolean isIndoorEnabled()>
<com.google.android.gms.measurement.internal.zzgn: void <init>(android.content.Context,com.google.android.gms.internal.measurement.zzy,java.lang.Long)>
<com.google.android.gms.internal.maps.zzac: void remove()>
<java.util.concurrent.locks.Lock: void unlock()>
<okhttp3.ResponseBody: java.lang.String string()>
<ch.qos.logback.classic.jul.JULHelper: boolean isRegularNonRootLogger(java.util.logging.Logger)>
<com.facebook.react.uimanager.UIImplementation: void sendAccessibilityEvent(int,int)>
<com.airbnb.lottie.LottieDrawable: void addValueCallback(com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.facebook.react.animated.TrackingAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.airbnb.lottie.animation.content.EllipseContent: void invalidate()>
<com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()>
<com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getReplicationScope()>
<com.airbnb.lottie.utils.LogcatLogger: void warning(java.lang.String,java.lang.Throwable)>
<com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void <init>()>
<com.facebook.imagepipeline.memory.BasePool$Counter: void increment(int)>
<ch.qos.logback.core.LayoutBase: void start()>
<com.facebook.yoga.YogaNode: void setMaxHeight(float)>
<androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)>
<com.adjust.sdk.ActivityHandler: void sendInstallReferrer(java.lang.String,long,long)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState getActivityState()>
<com.google.android.gms.measurement.internal.zzfw: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setCacheKey(com.facebook.cache.common.CacheKey)>
<com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>
<com.google.android.material.textfield.TextInputLayout: boolean canDrawOutlineStroke()>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<ch.qos.logback.core.rolling.helper.Compressor: void gzCompress(java.lang.String,java.lang.String)>
<ch.qos.logback.core.pattern.DynamicConverter: ch.qos.logback.core.Context getContext()>
<androidx.viewpager.widget.ViewPager: void setPageMargin(int)>
<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType getJoinType()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<com.google.android.gms.internal.maps.zzac: void setVisible(boolean)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloatObject(android.os.Parcel,int,java.lang.Float,boolean)>
<java.util.concurrent.PriorityBlockingQueue: boolean isEmpty()>
<com.facebook.yoga.YogaNode: void dirty()>
<com.facebook.imagepipeline.producers.BaseProducerContext: com.facebook.imagepipeline.request.ImageRequest getImageRequest()>
<com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)>
<com.google.android.gms.location.zzae: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.location.zzap,com.google.android.gms.location.LocationCallback,com.google.android.gms.location.zzan,com.google.android.gms.internal.location.zzba,com.google.android.gms.common.api.internal.ListenerHolder)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation)>
<com.google.android.gms.common.api.internal.GoogleApiManager: boolean zam()>
<com.google.crypto.tink.KeyManagerImpl$KeyFactoryHelper: com.google.crypto.tink.shaded.protobuf.MessageLite validateCreate(com.google.crypto.tink.shaded.protobuf.MessageLite)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onUINeeded$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzcp: int zzf()>
<com.google.android.gms.common.api.internal.zabj: void <init>(com.google.android.gms.common.api.internal.zabk)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getTopRightCorner()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)>
<android.widget.Spinner: int getBottom()>
<com.github.amlcurran.showcaseview.ShowcaseView: void <init>(android.content.Context,boolean)>
<com.google.android.gms.measurement.internal.zzho: void zze(com.google.android.gms.measurement.internal.zzgm)>
<androidx.activity.result.ActivityResult: int getResultCode()>
<ch.qos.logback.classic.Level: boolean isGreaterOrEqual(ch.qos.logback.classic.Level)>
<okio.Buffer: byte readByte()>
<com.azure.authenticator.common.Util$Companion$setupLongClickCopyText$2: void <init>(android.view.View,int)>
<com.facebook.imagepipeline.platform.OreoDecoder: void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool)>
<com.facebook.react.modules.blob.FileReaderModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>
<com.google.android.material.tabs.TabLayout: void addViewInternal(android.view.View)>
<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void notifyListeners()>
<com.evernote.android.job.util.JobPreconditions: int checkArgumentNonnegative(int,java.lang.String)>
<android.text.TextPaint: void setColor(int)>
<bolts.BoltsExecutors$ImmediateExecutor: int decrementDepth()>
<com.azure.authenticator.notifications.AbstractNotification: java.lang.Object handleRequest(android.os.Bundle,kotlin.coroutines.Continuation)>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)>
<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>
<com.facebook.common.internal.Objects$ToStringHelper: void <init>(java.lang.String)>
<android.os.Bundle: java.lang.Object clone()>
<com.facebook.react.uimanager.ReactShadowNode: void setLayoutDirection(com.facebook.yoga.YogaDirection)>
<android.widget.GridView: void setNextFocusRightId(int)>
<com.azure.authenticator.accounts.AccountCapability: void addCapability(com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum[])>
<ch.qos.logback.core.filter.Filter: ch.qos.logback.core.spi.FilterReply decide(java.lang.Object)>
<com.google.android.material.tabs.TabLayout: void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab)>
<com.facebook.react.modules.network.ProgressRequestBody: okio.Sink outputStreamSink(okio.BufferedSink)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: boolean diskCheckSync(com.facebook.cache.common.CacheKey)>
<com.airbnb.lottie.LottieDrawable: void setSafeMode(boolean)>
<ch.qos.logback.core.net.server.Client: void close()>
<com.google.android.gms.tasks.OnCanceledListener: void onCanceled()>
<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void <init>(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$1)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager authCheckManager()>
<com.google.common.collect.MapMakerInternalMap: java.util.ArrayList toArrayList(java.util.Collection)>
<android.os.Binder: long clearCallingIdentity()>
<android.text.Spannable: int getSpanFlags(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdj: void zzaZ(com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.datatransport.runtime.EventInternal: long getLong(java.lang.String)>
<com.microsoft.authenticator.msa.entities.MsaAccountManagerError: com.microsoft.onlineid.exception.AuthenticationException getException()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void showProgress(int)>
<com.google.common.collect.MapMakerInternalMap: java.util.ArrayList access$900(java.util.Collection)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzD(java.lang.String)>
<com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()>
<com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$1700(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.String,java.lang.Object[])>
<com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()>
<com.azure.authenticator.accounts.AadAccount: void setEncryptionKeyAlias(java.lang.String)>
<com.facebook.drawee.drawable.DrawableProperties: void applyTo(android.graphics.drawable.Drawable)>
<android.os.Bundle: void <init>(android.os.Bundle)>
<com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeUri(android.content.Context)>
<android.widget.FrameLayout: void setMinimumHeight(int)>
<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder()>
<com.airbnb.lottie.model.layer.TextLayer$1: void <init>(com.airbnb.lottie.model.layer.TextLayer,int)>
<com.facebook.react.modules.core.JavaTimerManager: java.lang.Object access$200(com.facebook.react.modules.core.JavaTimerManager)>
<java.util.Calendar: void roll(int,int)>
<ch.qos.logback.core.spi.AbstractComponentTracker: void removeStaleComponentsFromMainMap(long)>
<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextBlend(float)>
<androidx.sqlite.db.SupportSQLiteProgram: void bindLong(int,long)>
<com.facebook.react.ReactInstanceManager$ReactInstanceEventListener: void onReactContextInitialized(com.facebook.react.bridge.ReactContext)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToBitmapCacheSequence(com.facebook.imagepipeline.producers.Producer)>
<com.airbnb.lottie.value.LottieValueCallback: java.lang.Object getValue(com.airbnb.lottie.value.LottieFrameInfo)>
<com.airbnb.lottie.parser.ShapeStrokeParser: com.airbnb.lottie.model.content.ShapeStroke parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.common.internal.BaseGmsClient: void triggerConnectionSuspended(int)>
<ch.qos.logback.classic.pattern.CallerDataConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromIntentExtra(android.content.Intent,java.lang.String,android.os.Parcelable$Creator)>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.os.PowerManager$WakeLock: void acquire()>
<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task zai(com.google.android.gms.common.api.HasApiKey,com.google.android.gms.common.api.HasApiKey[])>
<com.facebook.react.views.scroll.ReactScrollView: void access$600(com.facebook.react.views.scroll.ReactScrollView)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectMsaRefreshUserDaManager(com.azure.authenticator.OnAppUpgradeReceiver,com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager)>
<com.google.android.material.shape.ShapePath: void lineTo(float,float)>
<java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void <init>()>
<java.util.BitSet: void <init>()>
<com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1: int getSizeInBytes(com.facebook.imagepipeline.image.CloseableImage)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void onPositiveButtonClick()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: void <init>()>
<com.facebook.imageutils.TiffUtil: int moveToTiffEntryWithTag(java.io.InputStream,int,boolean,int)>
<ch.qos.logback.core.joran.spi.InterpretationContext: void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent)>
<com.adjust.sdk.scheduler.TimerOnce: long getFireIn()>
<com.microsoft.aad.adal.Logger: void setAndroidLogEnabled(boolean)>
<com.google.android.gms.internal.measurement.zzdh: java.util.List zza()>
<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlayIfNeeded(int,float)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zao(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String)>
<com.azure.authenticator.accounts.GenericAccount: boolean needsUserAttention()>
<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>
<com.google.android.gms.cloudmessaging.Rpc: java.lang.String zza()>
<com.azure.authenticator.notifications.msa.MsaSessionProcessingResult: com.azure.authenticator.notifications.msa.MsaSessionProcessingResult[] values()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: android.graphics.Bitmap$Config getBitmapConfig()>
<com.facebook.imagepipeline.producers.DelegatingConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer)>
<java.io.Writer: void <init>()>
<android.database.CursorWindow: void acquireReference()>
<com.google.android.gms.maps.model.IndoorBuilding$zza: com.google.android.gms.maps.model.IndoorLevel zza(com.google.android.gms.internal.maps.zzq)>
<com.microsoft.onlineid.SignInOptions: void <init>()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setCallerContext(java.lang.Object)>
<com.google.android.gms.internal.location.zzd: void <init>(com.google.android.gms.internal.location.zzg,com.google.android.gms.common.api.GoogleApiClient,long,android.app.PendingIntent)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void addDebugText(android.graphics.Canvas,java.lang.String,java.lang.Object[])>
<java.util.concurrent.atomic.AtomicLong: void set(long)>
<com.adjust.sdk.IRequestHandler: void init(com.adjust.sdk.IActivityHandler,com.adjust.sdk.IPackageHandler)>
<com.google.android.gms.signin.internal.zal: void <init>()>
<java.io.InputStream: long skip(long)>
<androidx.appcompat.widget.TintTypedArray: int getInt(int,int)>
<com.microsoft.brooklyn.ui.signin.SignInFragment_MembersInjector: void injectStorage(com.microsoft.brooklyn.ui.signin.SignInFragment,com.azure.authenticator.storage.Storage)>
<com.google.android.gms.internal.measurement.zzla: long zzb()>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>
<androidx.navigation.NavController: boolean navigateUp()>
<com.google.android.gms.common.api.internal.zaco: void zac(com.google.android.gms.common.api.internal.zacn)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: void zzaL(com.google.android.gms.internal.measurement.zzdj,long)>
<com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets(boolean)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.EntropyUseCase: android.text.InputFilter getNumbersOnlyInputFilter()>
<com.azure.authenticator.storage.database.migration.Migration14To15: void <init>()>
<ch.qos.logback.core.rolling.helper.IntParser: java.lang.Integer parseFilename(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String dbName()>
<okhttp3.Call: void enqueue(okhttp3.Callback)>
<com.google.android.gms.internal.measurement.zzdu: boolean zzf()>
<ch.qos.logback.core.FileAppender: boolean isAppend()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()>
<com.facebook.react.views.picker.ReactPicker$OnSelectListener: void onItemSelected(int)>
<android.graphics.RectF: void <init>()>
<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: java.lang.String transformFileNamePattern2ZipEntry(java.lang.String)>
<java.util.ArrayDeque: java.lang.Object pollFirst()>
<javax.net.ssl.SSLSocket: void setUseClientMode(boolean)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderWidth(int,float)>
<com.google.android.material.textfield.EndIconDelegate: void onSuffixVisibilityChanged(boolean)>
<com.google.android.gms.location.LocationListener: void onLocationChanged(android.location.Location)>
<androidx.appcompat.widget.Toolbar: void setTitle(int)>
<com.google.android.gms.common.api.internal.zaar: void zam(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.common.ConnectionResult)>
<android.widget.FrameLayout: boolean isClickable()>
<com.google.android.gms.internal.location.zzg: void <init>()>
<com.google.android.gms.measurement.internal.zzai: void zzt(com.google.android.gms.measurement.internal.zzg)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getAccountName()>
<com.google.android.material.internal.VisibilityAwareImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString2(int)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$100(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState)>
<com.google.common.base.Preconditions: int checkElementIndex(int,int)>
<java.lang.reflect.Field: boolean isAccessible()>
<com.facebook.react.animated.NativeAnimatedModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeNativeChildAt(int)>
<com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.datatransport.cct.CctTransportBackend: long getTzOffset()>
<com.azure.authenticator.databinding.EnableRemoteNgcSuccessBinding: void <init>(android.widget.ScrollView)>
<com.facebook.common.util.UriUtil: boolean isLocalResourceUri(android.net.Uri)>
<com.google.android.gms.common.api.internal.zaaa: void <init>()>
<com.adjust.sdk.ActivityHandler: void sendFirstPackages()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity$onCreate$3: void <init>(androidx.navigation.NavController)>
<com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: void <init>(int,int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.measurement.internal.zzfd: java.lang.String zza(android.content.Context)>
<com.google.android.gms.internal.ads_identifier.zzc: boolean zza(android.os.Parcel)>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableFloatValue parseFloat(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.maps.model.RoundCap: void <init>()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()>
<com.facebook.cache.disk.DiskStorageCache: void maybeEvictFilesInCacheDir()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: boolean isDiskCacheEnabled()>
<com.facebook.common.util.UriUtil: java.net.URL uriToUrl(android.net.Uri)>
<com.adjust.sdk.Util: java.lang.String convertToHex(byte[])>
<com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)>
<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String)>
<com.facebook.react.views.scroll.ReactScrollView: void access$100(com.facebook.react.views.scroll.ReactScrollView,int,int)>
<com.facebook.drawee.drawable.Rounded: void setRadii(float[])>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout(android.view.View)>
<com.facebook.react.devsupport.JSDevSupport$DevSupportCallback: void onSuccess(java.lang.String)>
<com.google.android.gms.internal.maps.zzk: void remove()>
<java.nio.channels.ReadableByteChannel: boolean isOpen()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void enableZoom(boolean)>
<com.google.android.gms.measurement.internal.zzhn: void zzI(com.google.android.gms.measurement.internal.zzgl)>
<bolts.UnobservedErrorNotifier: void <init>(bolts.Task)>
<com.facebook.imagepipeline.producers.ProducerListener: void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map)>
<android.os.Process: int myPid()>
<com.facebook.drawee.view.DraweeHolder: void <init>(com.facebook.drawee.interfaces.DraweeHierarchy)>
<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(java.lang.String,java.lang.String,java.lang.Character)>
<com.google.android.material.timepicker.ClockHandView: float getHandRotation()>
<android.graphics.Color: int green(int)>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setMinZoomPreference(float)>
<com.google.android.gms.common.internal.IGmsServiceBroker$Stub: void <init>()>
<com.google.android.gms.internal.measurement.zzla: long zzj()>
<com.google.crypto.tink.KeyManagerImpl$KeyFactoryHelper: void <init>(com.google.crypto.tink.KeyTypeManager$KeyFactory)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onStop()>
<com.facebook.react.views.text.TextAttributeProps: float getEffectiveLineHeight()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int)>
<com.google.common.collect.MapMakerInternalMap: com.google.common.base.Equivalence valueEquivalence()>
<com.azure.authenticator.jobs.DeferrableWorkerUtils_Factory: com.azure.authenticator.jobs.DeferrableWorkerUtils get()>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String getIncludedCipherSuites()>
<com.facebook.imagepipeline.producers.BaseProducerContext: void callOnPriorityChanged(java.util.List)>
<com.microsoft.authenticator.commonuilibrary.util.ActivityUtils: void resetActionBarHomeButton(androidx.appcompat.app.AppCompatActivity)>
<com.facebook.common.time.MonotonicClock: long now()>
<android.view.View: boolean performClick()>
<com.airbnb.lottie.animation.content.GradientFillContent: int getGradientHash()>
<ch.qos.logback.classic.turbo.LRUMessageCache: void clear()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadManager powerLiftUploadManager()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectAccountStorageCustomQueries(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<android.widget.FrameLayout: int getWidth()>
<com.google.android.gms.maps.MapsInitializer: int initialize(android.content.Context)>
<com.google.common.collect.ImmutableCollection$Builder: void <init>()>
<com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.azure.authenticator.ui.LaunchActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.react.modules.network.HeaderUtil: java.lang.String stripHeaderValue(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel getAccountsListViewModel()>
<com.facebook.react.bridge.NativeModuleRegistry: void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)>
<com.google.android.gms.internal.cloudmessaging.zzb: java.util.concurrent.ScheduledExecutorService zza(int,java.util.concurrent.ThreadFactory,int)>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>
<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>
<ch.qos.logback.core.joran.spi.ElementPath: void push(java.lang.String)>
<java.lang.System: java.util.Properties getProperties()>
<com.google.android.gms.auth.api.signin.internal.zzi: android.content.Intent zzd(android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<ch.qos.logback.core.LifeCycleManager: void <init>()>
<com.google.android.gms.maps.internal.zze: void zza(com.google.android.gms.dynamic.IObjectWrapper,int)>
<com.facebook.react.bridge.ReadableNativeMap: void <init>(com.facebook.jni.HybridData)>
<com.google.android.gms.location.LocationRequest: void zza(long)>
<com.facebook.react.views.imagehelper.ImageSource: double getSize()>
<com.google.android.gms.measurement.internal.zzaf: boolean zzf()>
<java.lang.Integer: int hashCode()>
<ch.qos.logback.core.pattern.Converter: ch.qos.logback.core.pattern.Converter getNext()>
<com.facebook.react.uimanager.ViewAtIndex$1: int compare(com.facebook.react.uimanager.ViewAtIndex,com.facebook.react.uimanager.ViewAtIndex)>
<com.evernote.android.job.JobRequest$BackoffPolicy: com.evernote.android.job.JobRequest$BackoffPolicy valueOf(java.lang.String)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String toRegexForFixedDate(java.util.Date)>
<com.facebook.react.uimanager.UIImplementation: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)>
<kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void <init>(java.lang.Class,com.facebook.react.uimanager.ViewManagerPropertyUpdater$1)>
<android.util.SparseArray: java.lang.Object valueAt(int)>
<com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: void <init>()>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String getRegexForShortMonths()>
<com.google.android.gms.measurement.internal.zzg: void zzX(long)>
<com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator: void <init>(com.facebook.soloader.ExoSoSource$ExoUnpacker)>
<com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean didDoubleTapR(int,android.view.View)>
<com.google.android.gms.internal.measurement.zzlf: com.google.android.gms.internal.measurement.zzlg zzc()>
<com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: boolean deleteDatabase()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.gms.cloudmessaging.CloudMessage: int zza(java.lang.String)>
<android.view.View: java.lang.Object getTag()>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<java.util.Calendar: void set(int,int)>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>
<com.azure.authenticator.storage.database.AccountDao: int getMaxAccountUxPosition()>
<com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableNativeMap getPhysicalPixelsNativeMap(android.util.DisplayMetrics,double)>
<android.app.Fragment: void setMenuVisibility(boolean)>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: void inject()>
<com.google.android.gms.internal.maps.zzi: com.google.android.gms.internal.maps.zzh zzc(android.os.IBinder)>
<ch.qos.logback.classic.LoggerContext: void incSize()>
<java.util.LinkedHashMap: void <init>()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$denyAadNgcSessionSuspend$2: java.lang.Object invokeSuspend(java.lang.Object)>
<ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator: void <init>()>
<com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver: java.util.List getViewManagerNames()>
<ch.qos.logback.core.joran.GenericConfigurator: void buildInterpreter()>
<com.airbnb.lottie.value.Keyframe: int getEndValueInt()>
<com.google.android.gms.internal.measurement.zzal: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String)>
<com.facebook.cache.common.CacheErrorLogger: void logError(com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory,java.lang.Class,java.lang.String,java.lang.Throwable)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setAutoMetadata(java.util.Map)>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<com.google.android.gms.internal.safetynet.zzw: void <init>(com.google.android.gms.internal.safetynet.zzk$zzf)>
<com.google.android.material.navigation.NavigationBarItemView: android.widget.FrameLayout getCustomParentForBadge(android.view.View)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectInteractionRequiredActionManager(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.azure.authenticator.ui.action.UserInteractionRequiredActionManager)>
<com.google.android.gms.internal.measurement.zzbr: void zze(com.google.android.gms.measurement.internal.zzgm)>
<androidx.legacy.content.WakefulBroadcastReceiver: boolean completeWakefulIntent(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzia: java.lang.String zzd(byte[])>
<com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)>
<com.google.android.datatransport.cct.internal.ClientInfo: com.google.android.datatransport.cct.internal.ClientInfo$Builder builder()>
<com.google.android.gms.measurement.internal.zzjg: boolean zza(int)>
<com.airbnb.lottie.model.layer.TextLayer: void drawGlyphTextLine(java.lang.String,com.airbnb.lottie.model.DocumentData,android.graphics.Matrix,com.airbnb.lottie.model.Font,android.graphics.Canvas,float,float)>
<com.google.android.material.floatingactionbutton.BorderDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>
<com.facebook.react.uimanager.events.Event: void onDispose()>
<com.google.android.gms.internal.measurement.zznj: void <init>()>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<ch.qos.logback.core.spi.AbstractComponentTracker: java.lang.Object getOrCreate(java.lang.String,long)>
<java.lang.reflect.Method: int getModifiers()>
<com.google.android.material.datepicker.MonthAdapter: boolean isLastInRow(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$Builder: void <init>()>
<com.google.android.gms.common.api.internal.zaaa: java.util.Map zag(com.google.android.gms.common.api.internal.zaaa)>
<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$approveAadNgcSessionSuspend$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.common.collect.MapMakerInternalMap$Segment: void maybeDrainReferenceQueues()>
<com.google.android.gms.internal.auth-api.zzai: void zzc(com.google.android.gms.common.api.internal.IStatusCallback,java.lang.String)>
<com.google.android.gms.measurement.internal.zzbq: void <init>()>
<com.google.android.gms.common.server.response.FastParser: int zao(java.io.BufferedReader)>
<com.facebook.soloader.SoLoader: void loadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.DateSelector getDateSelector()>
<com.google.android.gms.measurement.internal.zzg: void zzag(boolean)>
<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)>
<ch.qos.logback.classic.spi.LoggerContextListener: void onStop(ch.qos.logback.classic.LoggerContext)>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatablePointValue getStartPoint()>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: java.util.concurrent.Executor getBroadcastExecutor()>
<com.google.android.gms.common.api.internal.zaaj: void <init>(com.google.android.gms.common.api.internal.zaal,com.google.android.gms.common.api.internal.zaba,com.google.android.gms.common.ConnectionResult)>
<com.facebook.react.common.SystemClock: long currentTimeMillis()>
<com.facebook.common.internal.Sets: java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet()>
<com.google.android.gms.internal.measurement.zzim: com.google.android.gms.internal.measurement.zzhy zzd(int)>
<com.google.android.gms.internal.measurement.zzkg: long zzp(java.lang.Object,long)>
<com.azure.authenticator.databinding.EnableRemoteNgcSuccessBinding: com.azure.authenticator.databinding.EnableRemoteNgcSuccessBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.measurement.zzdu: long zzg()>
<com.adjust.sdk.DeviceInfo: void reloadNonPlayIds(android.content.Context)>
<com.google.android.gms.internal.maps.zzn: int getDefaultLevelIndex()>
<com.google.android.gms.measurement.internal.zzkk: void zzag(com.google.android.gms.internal.measurement.zzs,byte[])>
<com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.google.android.material.shape.ShapePath: void setCurrentShadowAngle(float)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzh()>
<com.google.android.material.appbar.AppBarLayout: void updateWillNotDraw()>
<android.widget.TextSwitcher: void setInAnimation(android.view.animation.Animation)>
<com.microsoft.authenticator.workaccount.entities.GetWpjUpnStatus$Success: java.lang.String getUsername()>
<android.os.Message: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gms.common.internal.IGmsCallbacks: void onPostInitComplete(int,android.os.IBinder,android.os.Bundle)>
<com.microsoft.authenticator.commonuilibrary.ui.ViewExtensionsKt: void setOnClickListenerWithGlobalCooldown(android.view.View,kotlin.jvm.functions.Function1)>
<com.facebook.imagepipeline.common.BytesRange: com.facebook.imagepipeline.common.BytesRange 'from'(int)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)>
<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer$FrameCallback)>
<com.airbnb.lottie.parser.PointFParser: android.graphics.PointF parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setExtras(android.os.PersistableBundle)>
<com.google.android.gms.internal.base.zaa: android.os.Parcel zaa()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateShadowNodeProp(com.facebook.react.uimanager.ReactShadowNode,java.lang.Object)>
<com.evernote.android.job.JobStorage$JobOpenHelper: void <init>(android.content.Context,java.lang.String,com.evernote.android.job.JobStorage$1)>
<com.facebook.jni.DestructorThread$Destructor: void <init>()>
<ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: javax.net.ssl.TrustManagerFactory createTrustManagerFactory()>
<com.google.android.gms.common.api.internal.zaaz: void zah(com.google.android.gms.common.api.internal.zaaz)>
<android.widget.ProgressBar: void measure(int,int)>
<java.lang.Runtime: long maxMemory()>
<com.google.android.gms.internal.measurement.zzbr: void zzh(java.lang.String,java.lang.String,android.os.Bundle)>
<com.airbnb.lottie.LottieCompositionFactory$4: void <init>(java.io.InputStream,java.lang.String)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.facebook.common.webp.WebpSupportStatus: boolean matchBytePattern(byte[],int,byte[])>
<com.google.android.gms.common.internal.zak: void zad(int)>
<com.azure.authenticator.databinding.FragmentAddCredentialBinding: com.azure.authenticator.databinding.FragmentAddCredentialBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<com.facebook.imageformat.ImageFormat$FormatChecker: com.facebook.imageformat.ImageFormat determineFormat(byte[],int)>
<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>
<com.google.android.gms.safetynet.SafetyNetApi: com.google.android.gms.common.api.PendingResult enableVerifyApps(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.datatransport.runtime.backends.BackendResponse: long getNextRequestWaitMillis()>
<com.azure.authenticator.accounts.AccountCapability: void <init>(com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum[])>
<com.azure.authenticator.storage.database.migration.Migration10To11: void migrateToVersion11(androidx.sqlite.db.SupportSQLiteDatabase)>
<com.adjust.sdk.AttributionHandler: void access$600(com.adjust.sdk.AttributionHandler,com.adjust.sdk.IActivityHandler,com.adjust.sdk.AttributionResponseData)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions rotateGesturesEnabled(boolean)>
<com.evernote.android.job.v21.PlatformJobService: boolean onStartJob(android.app.job.JobParameters)>
<com.facebook.cache.disk.DiskCacheConfig: boolean getIndexPopulateAtStartupEnabled()>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: void clearListener()>
<com.google.android.gms.internal.measurement.zzb: void <init>(java.lang.String)>
<com.google.android.gms.measurement.internal.zzja: void zza(android.content.Intent)>
<com.google.android.gms.auth.api.signin.internal.zzu: void <init>()>
<com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: java.util.concurrent.Executor get()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showAadNgcSessionDialog$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider exportPasswordsViewModelProvider()>
<ch.qos.logback.classic.spi.LoggingEvent: java.lang.String getFormattedMessage()>
<android.widget.ScrollView: int getWidth()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void <init>(android.content.Context,java.util.Set)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void enableFpsListener()>
<com.microsoft.authenticator.workaccount.entities.LeaveWpjStatus$Error: com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException getException()>
<com.adjust.sdk.AdjustInstance: void teardown()>
<android.view.MotionEvent: float getX()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<com.google.android.material.shape.ShapePath$PathArcOperation: void <init>(float,float,float,float)>
<android.util.JsonWriter: android.util.JsonWriter endObject()>
<com.microsoft.authenticator.backup.entities.CloudBackup: java.lang.String getMsaKeyId()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.common.internal.Supplier getIsPrefetchEnabledSupplier()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderColor(int,float,float)>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>
<com.adjust.sdk.Util: int hashObject(java.lang.Object)>
<ch.qos.logback.core.html.HTMLLayoutBase: void start()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void clearNotification()>
<com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()>
<com.azure.authenticator.databinding.CredentialListRowLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void registerBitmapMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache)>
<com.azure.authenticator.ui.RootActivityBase: void onActivityResult(int,int,android.content.Intent)>
<com.azure.authenticator.databinding.AccountAddMethodListWorkBinding: com.azure.authenticator.databinding.AccountAddMethodListWorkBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.microsoft.authenticator.location.abstraction.LocationPermissionRequestViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.Boolean isNeedClientAuth()>
<com.azure.authenticator.databinding.AccountFullscreenInfoFragmentBinding: android.widget.LinearLayout getRoot()>
<com.facebook.react.devsupport.LogBoxModule$2: void <init>(com.facebook.react.devsupport.LogBoxModule)>
<com.google.android.gms.common.data.DataBuffer: java.lang.Object get(int)>
<com.google.android.gms.internal.location.zzbm: java.lang.String zzd(int,int,java.lang.String)>
<com.microsoft.authenticator.msa.entities.GetMsaTicketResult$Error: void <init>(com.microsoft.authenticator.msa.entities.MsaAccountManagerError)>
<com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate createReactActivityDelegate()>
<com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()>
<com.google.android.gms.internal.measurement.zzbr: com.google.android.gms.measurement.api.AppMeasurementSdk zzb()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.evernote.android.job.JobExecutor: java.util.Set getAllJobs()>
<java.util.zip.GZIPOutputStream: void close()>
<com.adjust.sdk.ActivityHandler: void access$000(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.safetynet.zzg: void <init>()>
<com.google.android.material.button.MaterialButtonToggleGroup: void resetChildMargins(int)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.util.TriState access$700(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder)>
<java.io.RandomAccessFile: long length()>
<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<android.widget.DatePicker: void setMaxDate(long)>
<com.google.android.gms.internal.location.zzbc: com.google.android.gms.internal.location.zzbc zzc(com.google.android.gms.location.zzba,com.google.android.gms.internal.location.zzai)>
<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>
<com.google.android.gms.measurement.internal.zzde: void <init>()>
<com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)>
<com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker: boolean isBiometricAvailable()>
<android.widget.HorizontalScrollView: void setElevation(float)>
<com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)>
<com.facebook.react.MemoryPressureRouter: void destroy(android.content.Context)>
<com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet)>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL)>
<com.google.android.datatransport.cct.internal.AutoValue_LogRequest$Builder: void <init>()>
<com.google.android.material.card.MaterialCardViewHelper: void onMeasure(int,int)>
<com.google.android.material.timepicker.ClockHandView: void setCircleRadius(int)>
<androidx.preference.PreferenceFragmentCompat: void addPreferencesFromResource(int)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long,long)>
<com.airbnb.lottie.utils.Utils: boolean hasZeroScaleAxis(android.graphics.Matrix)>
<com.facebook.common.internal.Preconditions: int checkElementIndex(int,int,java.lang.String)>
<com.airbnb.lottie.model.KeyPath: boolean matches(java.lang.String,int)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void addStatus(ch.qos.logback.core.status.Status)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorGravity(int)>
<com.evernote.android.job.JobRequest: boolean isPeriodic()>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()>
<com.facebook.imagepipeline.platform.ArtDecoder: void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()>
<dummyMainClass: com.azure.authenticator.ui.MainActivity dummyMainMethod_com_azure_authenticator_ui_MainActivity(android.content.Intent)>
<com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()>
<com.evernote.android.job.JobApi: boolean isServiceEnabledAndHasPermission(android.content.Context,java.lang.Class,java.lang.String)>
<com.microsoft.authenticator.backup.abstraction.AutoBackupManager: boolean isAutoBackupWorkerScheduled(long)>
<android.text.TextPaint: float ascent()>
<com.facebook.systrace.SystraceMessage: com.facebook.systrace.SystraceMessage$Builder beginSection(long,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider enterpriseDenyListRefreshWorker_AssistedFactoryProvider()>
<com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setLogSourceName(java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: void <init>()>
<com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: void handleError(java.lang.String,java.lang.Throwable)>
<com.facebook.systrace.SystraceMessage$Builder: com.facebook.systrace.SystraceMessage$Builder arg(java.lang.String,java.lang.Object)>
<com.facebook.common.media.MimeTypeMapWrapper: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.widget.ScrollView: void onAttachedToWindow()>
<androidx.collection.LongSparseArray: void <init>(int)>
<com.google.android.gms.internal.common.zzi: boolean zza()>
<com.azure.authenticator.accounts.MsaAccount: boolean hasPassword()>
<com.google.android.gms.measurement.internal.zzk: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.measurement.internal.zzn)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setAccessibilityHint(android.view.View,java.lang.String)>
<android.graphics.Rect: int width()>
<com.google.android.gms.measurement.internal.zzfl: android.content.Context zzaw()>
<com.google.android.gms.internal.measurement.zzlc: boolean zze()>
<androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<ch.qos.logback.core.subst.Node: java.lang.String toString()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.generatepasswords.presentationlogic.ViewGeneratedPasswordViewModel access$14200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.internal.measurement.zzp: void setConsentThirdParty(android.os.Bundle,long)>
<com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)>
<ch.qos.logback.core.joran.util.Introspector: ch.qos.logback.core.joran.util.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class)>
<android.util.JsonReader: void beginObject()>
<com.google.android.material.datepicker.MonthAdapter: int positionToDay(int)>
<com.google.android.gms.internal.measurement.zzly: boolean zzb()>
<com.google.android.gms.internal.measurement.zzbu: void <init>()>
<android.animation.ValueAnimator: void end()>
<android.widget.FrameLayout: void bringToFront()>
<com.google.common.base.AbstractIterator: boolean tryToComputeNext()>
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>
<com.airbnb.lottie.value.Keyframe: int getStartValueInt()>
<com.facebook.react.bridge.JavaOnlyArray: int size()>
<com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder: com.google.android.gms.auth.api.identity.SavePasswordRequest build()>
<com.google.android.gms.cloudmessaging.zzq: void <init>(int,int,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzax: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm)>
<com.google.android.material.appbar.MaterialToolbar: void initBackground(android.content.Context)>
<com.google.android.gms.measurement.internal.zziy: void <init>(com.google.android.gms.measurement.internal.zzja)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: com.facebook.drawee.backends.pipeline.PipelineDraweeController newController()>
<com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.utils.LottieValueAnimator access$100(com.airbnb.lottie.LottieDrawable)>
<com.google.android.datatransport.runtime.AutoValue_EventInternal: void <init>(java.lang.String,java.lang.Integer,com.google.android.datatransport.runtime.EncodedPayload,long,long,java.util.Map)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.favicon.PicassoFaviconManager picassoFaviconManager()>
<java.util.Arrays: boolean equals(int[],int[])>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$2: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.gms.common.api.internal.LifecycleActivity: boolean isSupport()>
<com.fasterxml.jackson.core.util.TextBuffer: void clearSegments()>
<android.widget.TextView: void setId(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.jobs.DeferrableWorkerUtils deferrableWorkerUtils()>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse zaf()>
<ch.qos.logback.core.util.ContextUtil: void addProperties(java.util.Properties)>
<com.adjust.sdk.Util: java.lang.String getAndroidId(android.content.Context)>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>
<android.app.DialogFragment: void <init>()>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.tasks.zzh: com.google.android.gms.tasks.OnCanceledListener zzd(com.google.android.gms.tasks.zzh)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void <init>(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)>
<com.azure.authenticator.accounts.GenericAccount: boolean getIsTotpCodeShown()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: androidx.lifecycle.MutableLiveData access$get_selfhostControlResponseObject$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.google.android.gms.common.api.CommonStatusCodes: void <init>()>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setEventUptimeMs(long)>
<com.microsoft.authenticator.commonuilibrary.dialogs.RequestPermissionDialogs: void showContactsPermissionRationaleIfNeeded(androidx.fragment.app.FragmentActivity,java.lang.Runnable)>
<androidx.constraintlayout.widget.ConstraintSet: void constrainCircle(int,int,int,float)>
<com.facebook.react.common.LongArray: int size()>
<com.microsoft.authenticator.backup.entities.CloudBackup: java.lang.String getUpdatedDate()>
<com.google.android.gms.maps.model.zzq: void <init>()>
<com.azure.authenticator.PhoneFactorApplication$onCreate$2: java.lang.String invoke()>
<com.google.android.datatransport.cct.internal.AutoValue_ClientInfo: void <init>(com.google.android.datatransport.cct.internal.ClientInfo$ClientType,com.google.android.datatransport.cct.internal.AndroidClientInfo)>
<com.google.android.material.behavior.SwipeDismissBehavior: void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener)>
<com.adjust.sdk.Util$2: void onPostExecute(java.lang.String)>
<android.os.Parcel: int dataSize()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void access$startBackup(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer)>
<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>
<com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>
<com.google.android.material.internal.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>
<com.facebook.react.modules.network.ReactCookieJarContainer: void <init>()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper wrap(java.util.List)>
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean isOrWillBeShown()>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: java.lang.Object generatedComponent()>
<com.facebook.imagepipeline.producers.ProducerContext: com.facebook.imagepipeline.request.ImageRequest getImageRequest()>
<com.google.android.datatransport.cct.internal.AutoValue_LogEvent: void <init>(long,java.lang.Integer,long,byte[],java.lang.String,long,com.google.android.datatransport.cct.internal.NetworkConnectionInfo,com.google.android.datatransport.cct.internal.AutoValue_LogEvent$1)>
<com.google.android.gms.common.zzy: com.google.android.gms.common.zzy zzb(long)>
<com.google.android.material.datepicker.MaterialDatePicker$1: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase access$getWorkplaceJoinUseCase$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,android.graphics.ColorSpace)>
<java.io.FileInputStream: void <init>(java.lang.String)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.cache.disk.FileCache access$600(com.facebook.imagepipeline.cache.BufferedDiskCache)>
<com.adjust.sdk.PackageHandler: java.lang.Boolean deletePackageQueue(android.content.Context)>
<android.content.SharedPreferences$Editor: boolean commit()>
<com.facebook.react.ReactDelegate: void onHostDestroy()>
<android.graphics.Paint: void setStrokeMiter(float)>
<com.azure.authenticator.authentication.msa.ui.ActivityState: com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow getFlow()>
<com.google.android.gms.common.api.internal.zaao: void <init>(com.google.android.gms.common.api.internal.zaar)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int calcHash(java.lang.String)>
<java.io.DataInputStream: int readInt()>
<com.google.android.gms.measurement.internal.zzho: java.lang.String zzg()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void <init>()>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showUpgradeInfoDialogIfNecessary$upgradeInformationDialogBuilder$1: void <init>(com.azure.authenticator.storage.Storage)>
<com.google.android.material.animation.MatrixEvaluator: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>
<com.facebook.react.uimanager.ViewGroupManager: void <init>()>
<com.google.android.gms.internal.location.zzat: void <init>(com.google.android.gms.internal.location.zzau,android.location.Location)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int)>
<com.azure.authenticator.storage.database.DbAccount: void setAadSecurityDefaultsPolicyEnabled(boolean)>
<ch.qos.logback.core.subst.NodeToStringTransformer: boolean haveVisitedNodeAlready(ch.qos.logback.core.subst.Node,java.util.Stack)>
<com.airbnb.lottie.LottieDrawable: void setSystemAnimationsAreEnabled(java.lang.Boolean)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: void <init>(android.content.Context)>
<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void onViewHidden(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.rialto.RialtoSyncManager rialtoSyncManager()>
<com.facebook.react.ReactAndroidHWInputDeviceHelper: void dispatchEvent(java.lang.String,int)>
<com.evernote.android.job.Job: com.evernote.android.job.Job$Result getResult()>
<java.util.LinkedList: boolean isEmpty()>
<com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjy: void <init>()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<com.adjust.sdk.PackageBuilder: void addDateInMilliseconds(java.util.Map,java.lang.String,long)>
<com.facebook.shimmer.Shimmer: void <init>()>
<android.content.pm.Signature: java.lang.String toCharsString()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<bolts.CancellationToken: boolean isCancellationRequested()>
<com.adjust.sdk.ActivityHandler: void processSessionI()>
<com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.cct.CctTransportBackend$HttpResponse access$lambda$0(com.google.android.datatransport.cct.CctTransportBackend,com.google.android.datatransport.cct.CctTransportBackend$HttpRequest)>
<com.google.android.material.chip.ChipDrawable: float getChipStrokeWidth()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _reportTooManyCollisions()>
<com.google.android.gms.common.api.internal.zaaa: void zah(boolean,com.google.android.gms.common.api.Status)>
<com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.action.UserInteractionRequiredActionManager userInteractionRequiredActionManager()>
<com.microsoft.authenticator.msa.MsaGetTicketCallback: void setInteractive(int)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<android.widget.EditText: void invalidate()>
<com.facebook.common.webp.WebpBitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
<com.google.android.gms.common.internal.zzm: java.lang.String zza()>
<com.google.android.gms.measurement.internal.zzbw: void <init>()>
<com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeLocalUri(android.content.Context)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: java.util.Map getExtraMapOnSuccess(com.facebook.imagepipeline.image.EncodedImage)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.mfa.businessLogic.MfaSdkAuthenticatorDelegate access$6000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.imagepipeline.cache.MemoryCache: boolean contains(com.facebook.common.internal.Predicate)>
<com.facebook.react.module.model.ReactModuleInfo: boolean isCxxModule()>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: void hideTotp()>
<com.facebook.react.modules.network.NetworkingModule$1: void <init>(com.facebook.react.modules.network.NetworkingModule,java.lang.String,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)>
<com.google.android.gms.auth.api.credentials.HintRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig getHintPickerConfig()>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel injectBrooklynSharedViewModel(com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel)>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableScaleValue getScale()>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setBundleAssetName(java.lang.String)>
<android.widget.TextView: float getX()>
<com.google.android.gms.common.api.Status: void <init>(com.google.android.gms.common.ConnectionResult,java.lang.String,int)>
<com.adjust.sdk.AttributionHandler: void sendAttributionRequestI()>
<android.widget.Button: android.view.ViewPropertyAnimator animate()>
<com.microsoft.did.feature.cardinfo.presentationlogic.detailedreceipts.CardHistoryDetailViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.location.LocationResult: android.location.Location getLastLocation()>
<androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)>
<com.google.android.gms.common.api.internal.ActivityLifecycleObserver: void <init>()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$loadSections$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.facebook.react.views.text.ReactForegroundColorSpan: void <init>(int)>
<com.google.android.gms.measurement.internal.zzhn: void zzo(android.os.Bundle,int,long)>
<com.azure.authenticator.accounts.AadAccount: void setIsOathEnabled(boolean)>
<com.google.android.gms.measurement.internal.zzhs: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<android.util.SparseIntArray: void <init>()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRoundingParams(com.facebook.drawee.generic.RoundingParams)>
<com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum$Companion: void <init>()>
<com.google.android.gms.internal.measurement.zzgs: int zzm()>
<ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: java.lang.String getProvider()>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void finishTask(int)>
<ch.qos.logback.core.pattern.parser.CompositeNode: ch.qos.logback.core.pattern.parser.Node getChildNode()>
<com.google.android.material.chip.ChipDrawable: void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect)>
<com.google.android.material.internal.TextDrawableHelper: com.google.android.material.resources.TextAppearance getTextAppearance()>
<com.google.android.material.transformation.FabTransformationBehavior: void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)>
<android.widget.ImageView: int getWidth()>
<com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String nextName()>
<android.widget.ImageButton: void bringToFront()>
<com.facebook.common.memory.PooledByteBuffer: byte read(int)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setFadeDuration(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long getPageSize()>
<com.facebook.react.uimanager.events.EventDispatcher: void stopFrameCallback()>
<com.google.common.collect.MapMakerInternalMap$InternalEntry: java.lang.Object getValue()>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory create(javax.inject.Provider,javax.inject.Provider)>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<com.microsoft.authenticator.location.LocationManager: java.lang.Object getNearestAddress(double,double,kotlin.coroutines.Continuation)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<com.facebook.drawee.drawable.RoundedColorDrawable: void updatePath()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float)>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.facebook.imagepipeline.core.PriorityThreadFactory: void <init>(int,java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzez: void <init>()>
<androidx.lifecycle.ViewModel: void <init>()>
<com.google.android.material.chip.ChipDrawable: void setIconEndPadding(float)>
<ch.qos.logback.core.joran.spi.InterpretationContext: java.lang.String subst(java.lang.String)>
<android.widget.EditText: void setTextCursorDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.snackbar.SnackbarContentLayout: boolean updateViewsWithinLayout(int,int,int)>
<ch.qos.logback.core.rolling.helper.Compressor$CompressionRunnable: void <init>(ch.qos.logback.core.rolling.helper.Compressor,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.EditText: void setAutofillHints(java.lang.String[])>
<com.facebook.drawee.components.DeferredReleaser$Releasable: void release()>
<com.google.android.gms.common.internal.BaseGmsClient: void onPostInitHandler(int,android.os.IBinder,android.os.Bundle,int)>
<com.google.android.datatransport.runtime.backends.BackendResponse: void <init>()>
<com.fasterxml.jackson.core.JsonParser$Feature: int collectDefaults()>
<java.util.LinkedList: void push(java.lang.Object)>
<android.widget.Button: void setTextSize(float)>
<com.airbnb.lottie.parser.KeyframeParser: com.airbnb.lottie.value.Keyframe parseKeyframe(com.airbnb.lottie.LottieComposition,com.airbnb.lottie.parser.moshi.JsonReader,float,com.airbnb.lottie.parser.ValueParser)>
<com.facebook.react.bridge.ReactContext: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzkg: byte zza(java.lang.Object,long)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getContentRect(android.graphics.Rect)>
<com.adjust.sdk.AdjustInstance: void disableThirdPartySharing(android.content.Context)>
<ch.qos.logback.core.util.OptionHelper: java.lang.String substVars(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.AddCredentialViewModel access$11000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.adjust.sdk.SharedPreferencesManager: java.lang.String getString(java.lang.String)>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<com.google.crypto.tink.Registry$KeyManagerContainer: java.lang.Class getImplementingClass()>
<android.widget.Button: int[] mergeDrawableStates(int[],int[])>
<com.google.android.material.datepicker.MaterialCalendarGridView: boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)>
<com.google.android.gms.common.internal.GmsClientSupervisor: void zzc(com.google.android.gms.common.internal.zzm,android.content.ServiceConnection,java.lang.String)>
<com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)>
<com.google.android.gms.internal.measurement.zzlu: void <init>()>
<ch.qos.logback.core.encoder.Encoder: byte[] headerBytes()>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<com.google.android.gms.measurement.internal.zzr: void zza()>
<com.facebook.react.bridge.WritableArray: void pushNull()>
<androidx.cardview.widget.CardView: void setContentPadding(int,int,int,int)>
<com.google.android.gms.internal.measurement.zzbr: com.google.android.gms.internal.measurement.zzbr zza(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<com.google.android.material.textfield.TextInputLayout: int calculateExpandedLabelTop(android.graphics.Rect,float)>
<com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectMfaSdkStorage(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage)>
<com.facebook.datasource.DataSource: void subscribe(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor)>
<com.google.android.gms.internal.measurement.zzlo: boolean zzd()>
<ch.qos.logback.core.rolling.TriggeringPolicy: boolean isTriggeringEvent(java.io.File,java.lang.Object)>
<android.widget.EditText: boolean isHovered()>
<com.microsoft.authenticator.msa.entities.MsaAccountManagerError$ErrorType: com.microsoft.authenticator.msa.entities.MsaAccountManagerError$ErrorType[] values()>
<com.google.android.gms.internal.measurement.zzkh: byte zzH(java.lang.Object,long)>
<ch.qos.logback.classic.pattern.NopThrowableInformationConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult: void <init>(boolean,com.azure.authenticator.accounts.AccountType,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.microsoft.did.di.VcWalletModule_ProvidePresentationServiceFactory: com.microsoft.did.sdk.PresentationService providePresentationService(com.microsoft.did.di.VcWalletModule)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: java.lang.Object createBackup(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)>
<com.google.android.gms.internal.measurement.zzdj: int zzg()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>
<com.facebook.datasource.AbstractDataSource$DataSourceStatus: void <init>(java.lang.String,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$getNearestAddress$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,java.lang.Double,java.lang.Double,kotlin.coroutines.Continuation)>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent obtain()>
<com.google.android.gms.internal.measurement.zzjs: java.util.List zzh(com.google.android.gms.internal.measurement.zzjs)>
<com.facebook.drawee.components.DeferredReleaser: java.util.Set access$100(com.facebook.drawee.components.DeferredReleaser)>
<androidx.fragment.app.Fragment: void startActivity(android.content.Intent)>
<java.util.concurrent.locks.Condition: void await()>
<com.adjust.sdk.ActivityHandler: void resetSessionPartnerParametersI()>
<com.google.android.gms.common.api.Api$Client: android.content.Intent getSignInIntent()>
<com.google.android.gms.internal.measurement.zzlp: boolean zzb()>
<androidx.transition.AutoTransition: void <init>()>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.uimanager.ReactZIndexedViewGroup: int getZIndexMappedChildIndex(int)>
<java.util.concurrent.CountDownLatch: void countDown()>
<com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper: void <init>(android.content.Context)>
<com.google.android.gms.common.api.internal.zacl: void <init>(com.google.android.gms.common.api.internal.zaco)>
<java.util.concurrent.CancellationException: void <init>(java.lang.String)>
<android.app.Dialog: android.content.Context getContext()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setZoomGesturesEnabled(boolean)>
<com.google.android.gms.dynamic.zzb: void <init>(android.os.IBinder)>
<android.widget.Button: boolean isEnabled()>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>
<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
<android.util.StateSet: boolean stateSetMatches(int[],int[])>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzfc zzf()>
<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<java.security.MessageDigest: void update(byte[],int,int)>
<ch.qos.logback.classic.net.ReceiverBase: boolean isStarted()>
<java.util.concurrent.Callable: java.lang.Object call()>
<com.google.android.material.chip.ChipGroup: void setCheckedId(int,boolean)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setSource(java.lang.String)>
<com.facebook.react.ReactDelegate: void onActivityResult(int,int,android.content.Intent,boolean)>
<com.facebook.react.modules.storage.AsyncStorageModule$1: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: void <init>(java.lang.String,int)>
<com.google.common.base.Equivalence: boolean doEquivalent(java.lang.Object,java.lang.Object)>
<com.google.android.gms.maps.zzae: void <init>(com.google.android.gms.maps.StreetViewPanorama,com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaCameraChangeListener)>
<com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toResponseTask(com.google.android.gms.common.api.PendingResult,com.google.android.gms.common.api.Response)>
<com.google.android.material.bottomnavigation.BottomNavigationMenuView: boolean isItemHorizontalTranslationEnabled()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)>
<com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)>
<com.evernote.android.job.work.JobProxyWorkManager: java.lang.String createTag(int)>
<com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatablePointValue getSize()>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: void <init>(int,int,boolean)>
<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void <init>(java.lang.String)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doWrite(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>
<com.google.android.gms.internal.measurement.zzkn: int zzg(int,int,int)>
<com.facebook.react.modules.i18nmanager.I18nUtil: void allowRTL(android.content.Context,boolean)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)>
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzai(java.lang.String)>
<com.azure.authenticator.notifications.msa.MsaNotification_Factory: com.azure.authenticator.notifications.msa.MsaNotification get()>
<com.facebook.react.modules.core.JavaTimerManager: void createAndMaybeCallTimer(int,int,double,boolean)>
<com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout access$200(com.google.android.material.bottomsheet.BottomSheetDialog)>
<com.facebook.drawee.drawable.RoundedDrawable: int getIntrinsicHeight()>
<com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)>
<com.github.amlcurran.showcaseview.ShowcaseView: void insertShowcaseView(com.github.amlcurran.showcaseview.ShowcaseView,android.view.ViewGroup,int)>
<com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding: com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding bind(android.view.View)>
<com.facebook.imagepipeline.producers.LocalFetchProducer$1: com.facebook.imagepipeline.image.EncodedImage getResult()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$showAuthSessionDialog$4$AbstractAuthRequestActivity(android.view.View)>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.facebook.react.views.text.ReactRawTextManager: void <init>()>
<com.google.android.material.tabs.TabLayout: void populateFromPagerAdapter()>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzb(java.lang.String)>
<java.io.File: boolean setWritable(boolean,boolean)>
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>
<com.google.android.gms.measurement.internal.zzjl: void <init>(com.google.android.gms.measurement.internal.zzjm,long,long)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showBackupFailedDialog(com.microsoft.authenticator.backup.entities.BackupRestoreError)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void access$beginRecoverBackup(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.gms.common.internal.TelemetryLogging: com.google.android.gms.common.internal.TelemetryLoggingClient getClient(android.content.Context,com.google.android.gms.common.internal.TelemetryLoggingOptions)>
<com.facebook.react.TurboReactPackage$1$1: com.facebook.react.bridge.ModuleHolder next()>
<com.facebook.drawee.view.AspectRatioMeasure$Spec: void <init>()>
<com.google.android.material.button.MaterialButton: void resetIconDrawable()>
<com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaLongClickListener: void onStreetViewPanoramaLongClick(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)>
<com.google.android.gms.internal.measurement.zzjd: com.google.android.gms.internal.measurement.zzjc zza()>
<androidx.work.Data$Builder: androidx.work.Data$Builder putInt(java.lang.String,int)>
<java.util.Queue: boolean isEmpty()>
<com.airbnb.lottie.model.animatable.AnimatableTextFrame: com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation createAnimation()>
<com.facebook.react.animated.AnimatedNode: void <init>()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions: void <init>(boolean)>
<com.airbnb.lottie.LottieImageAsset: void setBitmap(android.graphics.Bitmap)>
<com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: void encode(com.google.android.datatransport.cct.internal.NetworkConnectionInfo,com.google.firebase.encoders.ObjectEncoderContext)>
<android.widget.TextView: int getWidth()>
<com.facebook.react.ViewManagerOnDemandReactPackage: java.util.List getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>
<com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setPositionWithRadiusAndSource(com.google.android.gms.maps.model.LatLng,int,com.google.android.gms.maps.model.StreetViewSource)>
<com.adjust.sdk.DeviceInfo: java.lang.String getDeviceType(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener)>
<com.google.crypto.tink.KeysetHandle: com.google.crypto.tink.proto.KeysetInfo getKeysetInfo()>
<com.google.android.gms.internal.common.zzq: java.lang.Object[] toArray()>
<com.microsoft.onlineid.AccountManager: void <init>(android.content.Context)>
<com.adjust.sdk.ActivityHandler: void launchAttributionListenerI(android.os.Handler)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNodeImpl)>
<androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipString()>
<com.google.android.material.textfield.TextInputLayout: boolean updateDummyDrawables()>
<androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zzb: void setActivity(android.app.Activity)>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void onDataSourceNewResult(int,com.facebook.datasource.DataSource)>
<java.lang.UnsatisfiedLinkError: java.lang.String getMessage()>
<java.security.SecureRandom: void nextBytes(byte[])>
<com.google.android.gms.auth.api.signin.internal.zzj: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.Object getObj()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int)>
<ch.qos.logback.core.joran.spi.ConsoleTarget$1: void <init>()>
<com.azure.authenticator.logging.ExternalLogger$Companion: int access$getMfaSdkLogLevel(com.azure.authenticator.logging.ExternalLogger$Companion,com.microsoft.authenticator.mfasdk.log.MfaSdkLogger$LogLevel)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int,int)>
<ch.qos.logback.core.util.Loader$2: java.lang.ClassLoader run()>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setThumbTintColor(android.view.View,java.lang.Integer)>
<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
<com.google.android.gms.maps.zzak: void <init>(com.google.android.gms.maps.SupportMapFragment$zza,com.google.android.gms.maps.OnMapReadyCallback)>
<com.google.android.gms.auth.api.accounttransfer.zzp: void <init>()>
<com.google.android.gms.signin.internal.zad: void <init>()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1: void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,android.util.Pair)>
<android.widget.Button: void setMinWidth(int)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher$IsEither isEither(char,char)>
<com.fasterxml.jackson.core.util.BufferRecycler: byte[] balloc(int)>
<com.google.android.material.internal.ViewUtils: void addOnGlobalLayoutListener(android.view.View,android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<com.adjust.sdk.ActivityHandler$16: void <init>(com.adjust.sdk.ActivityHandler,java.lang.String,java.lang.String)>
<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout getCustomParentForBadge(android.view.View)>
<com.google.android.material.internal.NavigationMenuItemView: void adjustAppearance()>
<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.google.android.gms.location.SleepSegmentRequest: int getRequestedDataType()>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$ViewC: void <init>()>
<java.lang.NullPointerException: void <init>()>
<com.google.android.gms.location.SleepClassifyEvent: int getMotion()>
<com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$100(com.facebook.react.devsupport.LogBoxModule)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: void setBackgroundColour(int)>
<com.google.android.gms.common.api.ResolvableApiException: void <init>(com.google.android.gms.common.api.Status)>
<androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()>
<com.google.android.gms.internal.maps.zzt: java.lang.String getSnippet()>
<android.widget.GridView: int getNumColumns()>
<com.facebook.react.modules.camera.ImageEditingManager$CleanTask: void cleanDirectory(java.io.File)>
<ch.qos.logback.core.OutputStreamAppender: void setOutputStream(java.io.OutputStream)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zai()>
<com.evernote.android.job.JobExecutor: boolean isRequestStarting(com.evernote.android.job.JobRequest)>
<com.facebook.react.modules.network.NetworkingModule$4: void <init>(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.bridge.ReactContext,int)>
<com.facebook.imagepipeline.memory.NativeMemoryChunkPool: com.facebook.imagepipeline.memory.NativeMemoryChunk alloc(int)>
<com.facebook.yoga.YogaNode: void setMaxWidthPercent(float)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()>
<java.lang.Integer: int compareTo(java.lang.Integer)>
<com.google.android.material.circularreveal.CircularRevealHelper: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.button.MaterialButton$OnCheckedChangeListener: void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean)>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<com.google.android.gms.internal.location.zzai: void zzc()>
<com.google.android.gms.internal.measurement.zzp: void endAdUnitExposure(java.lang.String,long)>
<com.microsoft.brooklyn.module.autofill.BrooklynAutofillService_MembersInjector: void injectAutofillNudgeHelper(com.microsoft.brooklyn.module.autofill.BrooklynAutofillService,com.microsoft.brooklyn.module.autofill.response.businesslogic.AutofillNudgeHelper)>
<ch.qos.logback.core.util.Loader: java.lang.Class loadClass(java.lang.String)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onCancelled(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer)>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: void onActivityResult(int,int,android.content.Intent)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipComma(int)>
<android.widget.CheckBox: void setTextAppearance(android.content.Context,int)>
<java.util.concurrent.ConcurrentHashMap: boolean remove(java.lang.Object,java.lang.Object)>
<java.nio.channels.ReadableByteChannel: int read(java.nio.ByteBuffer)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount: java.lang.String getTenantId()>
<com.google.android.material.textfield.TextInputLayout: void updateStrokeErrorColor(boolean,boolean)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder builder()>
<java.lang.StringBuilder: void <init>()>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void calculateImageMatrixFromScale(float,android.graphics.Matrix)>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.android.gms.measurement.internal.zzea: java.lang.String zzl()>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getAadNgcAccount(java.lang.String)>
<com.facebook.react.fabric.FabricUIManager: void dispatchCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)>
<com.facebook.imagepipeline.nativecode.WebpTranscoder: void transcodeWebpToJpeg(java.io.InputStream,java.io.OutputStream,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List access$400(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.facebook.imagepipeline.transcoder.DownsampleUtil: int determineSampleSize(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.util.concurrent.Callable)>
<java.lang.Object: void notify()>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setIndeterminate(android.view.View,boolean)>
<ch.qos.logback.classic.android.LogcatAppender: void start()>
<com.google.android.material.internal.FlowLayout: int getMeasuredDimension(int,int,int)>
<com.google.android.material.internal.CheckableImageButton$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<android.widget.LinearLayout: void setMeasuredDimension(int,int)>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$ActivityRetainedC: void <init>()>
<com.facebook.react.views.text.TextAttributeProps: int getIntProp(java.lang.String,int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.google.android.datatransport.runtime.TransportRuntime_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Metadata: void <init>(java.lang.String,java.lang.String)>
<com.google.android.material.timepicker.ChipTextInputComboView: boolean isChecked()>
<com.google.android.gms.internal.measurement.zzh: java.util.concurrent.ExecutorService zzb(java.util.concurrent.ThreadFactory,int)>
<com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.Bucket newBucket(int)>
<com.google.android.gms.tasks.zzl: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)>
<com.adjust.sdk.OnSessionTrackingFailedListener: void onFinishedSessionTrackingFailed(com.adjust.sdk.AdjustSessionFailure)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeParcelable(android.os.Parcel,int,android.os.Parcelable,int,boolean)>
<com.google.android.gms.measurement.internal.zzhn: void zzO(java.lang.String,java.lang.String,android.os.Bundle)>
<java.lang.Object: java.lang.String toString()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setFixedWidth(int)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInterface: void <init>(android.os.IBinder)>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerPosition(android.view.View,java.lang.String)>
<com.google.android.material.internal.CheckableImageButton$SavedState$1: com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel)>
<com.azure.authenticator.databinding.FragmentMainBinding: com.azure.authenticator.databinding.FragmentMainBinding bind(android.view.View)>
<android.widget.HorizontalScrollView: void setOverScrollMode(int)>
<com.google.android.gms.maps.model.PolygonOptions: java.util.List getStrokePattern()>
<com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)>
<java.lang.StringBuffer: java.lang.String toString()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onStop()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: void <init>()>
<android.view.ViewGroup: int getSuggestedMinimumWidth()>
<com.azure.authenticator.ui.Hilt_MainActivity: void <init>()>
<android.app.Fragment: boolean isResumed()>
<com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>
<ch.qos.logback.core.Context: java.lang.Object getConfigurationLock()>
<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)>
<javax.mail.internet.MimeBodyPart: void setText(java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.react.modules.fresco.FrescoModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int getScreenHeight()>
<com.google.android.gms.internal.measurement.zzic: com.google.android.gms.internal.measurement.zzic zzc()>
<javax.net.ssl.SSLSocket: java.net.SocketAddress getLocalSocketAddress()>
<java.io.ByteArrayInputStream: void close()>
<com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<java.util.concurrent.locks.Condition: long awaitNanos(long)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipCR()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setIndoorLevelPickerEnabled(boolean)>
<com.facebook.react.bridge.JSCJavaScriptExecutor: void <init>(com.facebook.react.bridge.ReadableNativeMap)>
<com.google.android.gms.maps.model.UrlTileProvider: java.net.URL getTileUrl(int,int,int)>
<com.evernote.android.job.JobBootReceiver: android.content.Intent getIntent()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void showSignInButton(java.lang.String)>
<ch.qos.logback.classic.html.DefaultThrowableRenderer: void render(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>
<android.widget.EditText: android.view.View$OnFocusChangeListener getOnFocusChangeListener()>
<java.io.IOException: void <init>(java.lang.Throwable)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: java.lang.Object retrieveBackup(java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<android.widget.CheckBox: void requestLayout()>
<com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: java.util.List getVisibleAccounts()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.MfaSdkManager mfaSdkManager()>
<com.google.android.gms.maps.GoogleMap$OnMyLocationClickListener: void onMyLocationClick(android.location.Location)>
<com.google.common.collect.AbstractIndexedListIterator: boolean hasPrevious()>
<com.microsoft.authenticator.logging.businesslogic.RemoveLogsUseCase: void <init>()>
<androidx.room.RoomDatabase: void beginTransaction()>
<android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>
<com.google.android.gms.maps.MapView$zzb: void <init>(android.view.ViewGroup,android.content.Context,com.google.android.gms.maps.GoogleMapOptions)>
<com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()>
<com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource getDataSourceWithResult()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>
<com.evernote.android.job.JobStorage: int nextJobId()>
<com.google.android.material.appbar.AppBarLayout: void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)>
<ch.qos.logback.core.rolling.helper.CompressionMode: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: void <init>()>
<com.google.gson.Gson: void <init>()>
<android.view.View: void setContentDescription(java.lang.CharSequence)>
<com.facebook.imagepipeline.memory.BasePool: void initBuckets()>
<com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,android.net.Uri,java.lang.Object)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: void <init>(android.content.Context,long,boolean,boolean)>
<com.google.android.gms.internal.measurement.zzid: void <init>(java.lang.String,int,java.lang.Class,java.lang.Class,java.lang.Object)>
<com.google.android.gms.common.api.internal.zabd: void zar(com.google.android.gms.common.api.internal.zabb)>
<java.lang.ref.SoftReference: java.lang.Object get()>
<ch.qos.logback.core.net.SMTPAppenderBase: void <init>()>
<com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void access$100(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zad(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: java.lang.String dbName()>
<com.evernote.android.job.JobProxy$Common: long getAverageDelayMs(com.evernote.android.job.JobRequest)>
<com.facebook.react.ReactRootView: int getUIManagerType()>
<android.net.NetworkInfo: int getSubtype()>
<com.android.installreferrer.api.InstallReferrerClient$Builder: void <init>(android.content.Context,com.android.installreferrer.api.InstallReferrerClient$1)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.ui.MainActivity access$getParentActivity$p(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<ch.qos.logback.classic.spi.ILoggingEvent: ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy()>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: boolean isIgnoredStackTraceLine(java.lang.String)>
<com.adjust.sdk.SharedPreferencesManager: boolean getBoolean(java.lang.String,boolean)>
<com.google.android.material.timepicker.TimePickerView: com.google.android.material.timepicker.TimePickerView$OnPeriodChangeListener access$100(com.google.android.material.timepicker.TimePickerView)>
<java.util.concurrent.CountDownLatch: void await()>
<java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<com.facebook.imagepipeline.common.RotationOptions: int hashCode()>
<com.google.android.gms.internal.measurement.zzkt: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.common.api.internal.zacw: void <init>(com.google.android.gms.common.api.internal.zacx)>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>
<androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()>
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF getControlPoint1()>
<com.google.android.gms.common.api.internal.zak: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel$launchGetDeviceId$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams: com.facebook.imagepipeline.memory.PoolParams get()>
<com.google.android.gms.internal.measurement.zzgf: long zze(byte[],int)>
<com.google.android.gms.measurement.internal.zzai: void zzV(android.content.ContentValues,java.lang.String,java.lang.Object)>
<com.facebook.react.views.text.ShadowStyleSpan: void <init>(float,float,float,int)>
<com.google.android.gms.measurement.internal.zzjq: void zzh(com.google.android.gms.measurement.internal.zzjq,long)>
<ch.qos.logback.core.util.StringCollectionUtil: void retainMatching(java.util.Collection,java.util.Collection)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.rootdetection.businesslogic.SafetyNetUseCase safetyNetUseCase()>
<com.google.android.gms.measurement.internal.zzdq: void <init>()>
<com.google.android.gms.maps.model.PolygonOptions: int getStrokeJointType()>
<com.facebook.react.uimanager.MatrixMathHelper: double v3Length(double[])>
<androidx.core.math.MathUtils: int clamp(int,int,int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel: void <init>(com.azure.authenticator.storage.database.AccountStorage)>
<com.facebook.drawee.controller.AbstractDraweeController: void releaseDrawable(android.graphics.drawable.Drawable)>
<com.adjust.sdk.AdjustInstance: void setTestOptions(com.adjust.sdk.AdjustTestOptions)>
<com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener: void onIndoorLevelActivated(com.google.android.gms.maps.model.IndoorBuilding)>
<com.google.android.gms.internal.measurement.zzms: boolean zzb()>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: boolean isAppLockEnabled()>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)>
<com.facebook.react.uimanager.PixelUtil: float toDIPFromPixel(float)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_Factory: com.azure.authenticator.ui.backup.BackupFlowViewModel get()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.businesslogic.CorrelationUseCase correlationUseCase()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$2: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void release()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<com.facebook.cache.disk.DiskStorage: boolean contains(java.lang.String,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzcd: boolean zzg()>
<com.azure.authenticator.Hilt_PhoneFactorApplication: java.lang.Object generatedComponent()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<ch.qos.logback.core.rolling.RollingFileAppender: void setFile(java.lang.String)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getAadMfaAccount(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.MainActivity: void requestContactsPermission(int)>
<androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresStorageNotLow(boolean)>
<androidx.appcompat.app.AppCompatDialog: void <init>(android.content.Context,int)>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: int getActionId()>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvidePasswordChangeAutomationClientFactory: com.microsoft.vienna.sdk.AutomationSpecClient providePasswordChangeAutomationClient(com.microsoft.brooklyn.module.di.BrooklynHiltModule,com.microsoft.vienna.vienna_utils_lib.logging.ILogger,com.microsoft.vienna.vienna_utils_lib.telemetry.ITelemetryLogger,android.content.Context)>
<android.widget.RelativeLayout$LayoutParams: void setMargins(int,int,int,int)>
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>
<com.microsoft.identity.client.PublicClientApplication: java.lang.String getSdkVersion()>
<ch.qos.logback.core.joran.spi.RuleStore: java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath)>
<android.app.Application: android.content.Context getApplicationContext()>
<com.facebook.soloader.UnpackingSoSource: void setSoSourceAbis(java.lang.String[])>
<java.lang.Float: int floatToIntBits(float)>
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzdi: void <init>()>
<android.widget.TextView: void bringToFront()>
<com.google.android.gms.auth.api.identity.SavePasswordRequest: com.google.android.gms.auth.api.identity.SignInPassword getSignInPassword()>
<com.google.android.gms.common.api.Batch: boolean zab(com.google.android.gms.common.api.Batch,boolean)>
<java.lang.ref.SoftReference: void clear()>
<com.google.android.gms.internal.measurement.zzjs: int zzl(java.lang.Comparable)>
<com.adjust.sdk.AdjustEvent: boolean checkRevenue(java.lang.Double,java.lang.String)>
<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>
<com.google.android.material.button.MaterialButtonHelper: void setInsetBottom(int)>
<com.azure.authenticator.databinding.FragmentEnableAppLockBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.internal.measurement.zzgz: int zzB(com.google.android.gms.internal.measurement.zzix,com.google.android.gms.internal.measurement.zzji)>
<androidx.work.impl.background.systemjob.SystemJobService: void <init>()>
<com.google.android.gms.internal.measurement.zzla: long zzm()>
<java.net.URI: java.lang.String getScheme()>
<com.google.android.material.chip.ChipDrawable: boolean isStateful(com.google.android.material.resources.TextAppearance)>
<com.google.android.gms.internal.measurement.zzhs: void zzby(java.lang.Class,com.google.android.gms.internal.measurement.zzhs)>
<androidx.collection.SimpleArrayMap: int size()>
<com.facebook.react.bridge.ModuleHolder: void <init>(com.facebook.react.bridge.NativeModule)>
<ch.qos.logback.core.sift.SiftingAppenderBase: java.lang.String getDiscriminatorKey()>
<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.internal.Objects: com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)>
<android.view.MotionEvent: float getRawY()>
<com.google.android.gms.common.server.converter.zaa: void <init>(int,com.google.android.gms.common.server.converter.StringToIntConverter)>
<com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper$ValueHolder addHolder()>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$302(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<ch.qos.logback.core.joran.util.StringToObjectConverter: java.lang.reflect.Method getValueOfMethod(java.lang.Class)>
<java.util.Set: boolean addAll(java.util.Collection)>
<com.evernote.android.job.JobCreatorHolder: com.evernote.android.job.Job createJob(java.lang.String)>
<com.airbnb.lottie.utils.Utils: android.graphics.Path createPath(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.BackoffStrategy getPackageHandlerBackoffStrategy()>
<ch.qos.logback.core.joran.action.Action: void <init>()>
<android.view.ViewGroup: void measure(int,int)>
<android.graphics.Paint$FontMetrics: void <init>()>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey getApiKey()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)>
<com.google.android.gms.maps.model.PolylineOptions: float getWidth()>
<com.google.android.gms.measurement.internal.zzg: void zzs(long)>
<com.google.android.gms.maps.internal.zzaw: void <init>()>
<com.google.android.gms.measurement.internal.zzy: com.google.android.gms.measurement.internal.zzt zzc(java.lang.Integer)>
<com.google.android.gms.common.api.internal.StatusPendingResult: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.policyChannel.businessLogic.AuthAppStateUseCase)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper newCameraPosition(com.google.android.gms.maps.model.CameraPosition)>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzU()>
<com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.DrawableParent getDrawableParentForIndex(int)>
<com.facebook.imagepipeline.producers.ProducerContext: com.facebook.imagepipeline.common.Priority getPriority()>
<android.view.ViewGroup: void setPadding(int,int,int,int)>
<com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[])>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckUseCase: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager,com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase,com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository,com.microsoft.authenticator.mfasdk.configuration.FeatureConfig,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate,com.microsoft.authenticator.mfasdk.authentication.businessLogic.GetEndpointManager)>
<com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray 'from'(java.util.List)>
<com.evernote.android.job.util.Clock: long elapsedRealtime()>
<com.google.android.gms.measurement.internal.zzkk: void zzz(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean)>
<com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.zzw zzc(com.google.android.gms.tasks.zzd)>
<com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)>
<androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>
<com.facebook.react.views.textinput.ReactEditText: void manageSpans(android.text.SpannableStringBuilder)>
<com.facebook.yoga.YogaValue: void <init>(float,com.facebook.yoga.YogaUnit)>
<com.google.android.gms.common.internal.zzo: android.os.IBinder zzi()>
<android.widget.CheckBox: void setMinLines(int)>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$cleanUpAfterUnsuccessfulRestore$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.azure.authenticator.databinding.FragmentEditCredentialBinding: com.azure.authenticator.databinding.FragmentEditCredentialBinding bind(android.view.View)>
<android.app.job.JobService: void onDestroy()>
<com.airbnb.lottie.utils.LottieValueAnimator: void reverseAnimationSpeed()>
<com.google.android.material.chip.Chip: android.graphics.RectF access$200(com.google.android.material.chip.Chip)>
<java.lang.String: java.lang.String toString()>
<com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock uptimeClock()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzt addMarker(com.google.android.gms.maps.model.MarkerOptions)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,boolean,int,boolean,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo)>
<com.facebook.imageutils.BitmapUtil: com.facebook.imageutils.ImageMetaData decodeDimensionsAndColorSpace(java.io.InputStream)>
<com.adjust.sdk.ActivityHandler: boolean toSendI()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)>
<com.google.android.gms.measurement.internal.zzil: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzgg)>
<com.airbnb.lottie.model.animatable.AnimatableScaleValue: void <init>(java.util.List)>
<com.google.android.gms.maps.GoogleMap$OnGroundOverlayClickListener: void onGroundOverlayClick(com.google.android.gms.maps.model.GroundOverlay)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer: java.lang.Object produce()>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult: com.azure.authenticator.accounts.AccountType getAccountType()>
<com.facebook.imagepipeline.image.CloseableBitmap: void <init>()>
<android.widget.TextView: void requestLayout()>
<ch.qos.logback.core.pattern.parser.TokenStream: void handleKeywordState(char,java.util.List,java.lang.StringBuffer)>
<android.widget.LinearLayout: int getVisibility()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketCancel$1$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzk()>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzx()>
<com.evernote.android.job.JobManager: boolean cancel(int)>
<com.airbnb.lottie.parser.moshi.JsonScope: java.lang.String getPath(int,int[],java.lang.String[],int[])>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<com.google.android.gms.common.internal.zzd: void <init>(com.google.android.gms.common.internal.BaseGmsClient,int)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void <init>(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()>
<com.google.android.datatransport.cct.CctTransportBackend: java.io.InputStream maybeUnGzip(java.io.InputStream,java.lang.String)>
<com.azure.authenticator.ui.action.ShowTurnOffBatteryOptimizationAction: void <init>(com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<com.adjust.sdk.PackageBuilder: void addString(java.util.Map,java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider mfaFcmChangeDeviceTokenWorker_AssistedFactoryProvider()>
<com.airbnb.lottie.LottieAnimationView$SavedState: void <init>(android.os.Parcel,com.airbnb.lottie.LottieAnimationView$1)>
<java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: boolean zzg(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_9_10$1: void <init>(int,int)>
<com.google.android.gms.measurement.internal.zzjb: java.lang.Boolean zzC()>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$approveAadNgcSession$1: java.lang.Object invokeSuspend(java.lang.Object)>
<kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>
<com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
<com.evernote.android.job.JobProxyIllegalStateException: void <init>(java.lang.String)>
<com.microsoft.authenticator.core.protocol.exception.GenericServiceException: int getUserFacingErrorMessageResourceId()>
<android.os.Bundle: void putAll(android.os.Bundle)>
<com.google.android.material.ripple.RippleUtils: android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList)>
<com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzdq zzc()>
<com.google.android.gms.internal.measurement.zzlr: boolean zzc()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_9_10$cp()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: ch.qos.logback.core.net.ssl.KeyStoreFactoryBean getTrustStore()>
<com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)>
<java.io.ByteArrayOutputStream: void reset()>
<com.google.android.gms.measurement.internal.zzel: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<com.google.android.gms.internal.measurement.zzdb: java.util.List zza()>
<com.facebook.drawee.gestures.GestureDetector$ClickListener: boolean onClick()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.repository.AddressesRepository getAddressesRepository()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getCommonNetworkFetchToEncodedMemorySequence()>
<com.azure.authenticator.utils.TestActivity_MembersInjector: void injectRegisterMsaAccountManager(com.azure.authenticator.utils.TestActivity,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager)>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setInfoWindowAdapter(com.google.android.gms.maps.internal.zzh)>
<android.content.ContextWrapper: java.io.File getNoBackupFilesDir()>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.bridge.JavaOnlyMap: void <init>()>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager: void showErrorDialogFragment$default(com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,androidx.fragment.app.FragmentActivity,java.lang.String,android.content.DialogInterface$OnClickListener,boolean,int,java.lang.Object)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries getAccountStorageCustomQueries$app_productionRelease()>
<android.widget.FrameLayout: int getPaddingLeft()>
<com.facebook.react.views.text.ReactTextShadowNode: void <init>()>
<com.facebook.cache.common.MultiCacheKey: void <init>(java.util.List)>
<com.azure.authenticator.logging.ExternalLogger: void e(java.lang.String)>
<com.google.android.material.chip.ChipGroup: boolean isSingleSelection()>
<com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)>
<com.google.android.datatransport.Event: java.lang.Object getPayload()>
<com.google.android.material.chip.ChipDrawable: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.android.gms.measurement.internal.zzcf: void <init>()>
<com.facebook.react.modules.blob.BlobCollector: void access$000(java.lang.Object,long)>
<com.adjust.sdk.ActivityHandler: boolean deleteSessionCallbackParameters(android.content.Context)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.cache.disk.FileCache getSmallImageFileCache()>
<com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker$doWork$2: java.lang.Object invokeSuspend(java.lang.Object)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.content.GradientType getGradientType()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void releaseImage(com.facebook.common.references.CloseableReference)>
<com.google.android.gms.measurement.internal.zzkm: void <init>(javax.net.ssl.SSLSocketFactory)>
<com.azure.authenticator.jwe.AlgorithmEnum: java.lang.String getMac()>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvideCommonLibraryControllerFactory: com.microsoft.utilitysdk.CommonLibraryController provideCommonLibraryController(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.google.android.gms.common.logging.Logger: void i(java.lang.String,java.lang.Object[])>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment$onCreateView$2$onComplete$1: void <init>(com.azure.authenticator.ui.fragment.main.ViewLogsFragment$onCreateView$2)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: int resolveGravity(int)>
<android.widget.EditText: void onDetachedFromWindow()>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)>
<com.facebook.imagepipeline.memory.DummyBitmapPool: void release(android.graphics.Bitmap)>
<com.google.android.gms.common.internal.zzt: java.lang.String zzb()>
<com.facebook.react.bridge.ReactBridge: void staticInit()>
<com.airbnb.lottie.value.Keyframe: float getEndProgress()>
<com.google.android.gms.internal.measurement.zzho: com.google.android.gms.internal.measurement.zzho zzaC(byte[],int,int,com.google.android.gms.internal.measurement.zzhe)>
<androidx.appcompat.widget.AppCompatEditText: void <init>(android.content.Context)>
<com.google.crypto.tink.KeyTypeManager$KeyFactory: java.lang.Object createKey(com.google.crypto.tink.shaded.protobuf.MessageLite)>
<com.google.android.gms.safetynet.SafeBrowsingData: byte[] getState()>
<com.google.android.material.shape.MaterialShapeDrawable: float getTopRightCornerResolvedSize()>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: java.io.Serializable toSerializable()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectMsaAccountManager(com.azure.authenticator.ui.MainActivity,com.azure.authenticator.authentication.msa.MsaAccountManager)>
<android.view.animation.AccelerateInterpolator: void <init>()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>
<com.google.android.gms.internal.measurement.zzcp: void zzo(com.google.android.gms.internal.measurement.zzcp)>
<com.google.android.gms.maps.internal.zzbq: void <init>()>
<com.google.android.material.chip.ChipDrawable: float getTextEndPadding()>
<com.google.crypto.tink.KeyTypeManager: java.lang.Class getKeyClass()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>
<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment: boolean getImportFailedSignin()>
<com.google.android.gms.measurement.internal.zzaq: java.lang.String zzd(java.lang.String)>
<com.google.android.gms.internal.location.zzad: void <init>(com.google.android.gms.internal.location.zzaf,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.zzbq)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries access$getAccountStorageCustomQueries$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.airbnb.lottie.utils.BaseLottieAnimator: android.animation.ValueAnimator setDuration(long)>
<com.facebook.react.uimanager.UIImplementation: java.util.Map getProfiledBatchPerfCounters()>
<com.facebook.drawee.controller.ControllerListener: void onIntermediateImageSet(java.lang.String,java.lang.Object)>
<java.lang.StringBuilder: void setLength(int)>
<com.facebook.imagepipeline.transcoder.DownsampleUtil: int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.measurement.internal.zzjb: void zzj(boolean)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void injectMsaRegistrationUseCase(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase)>
<ch.qos.logback.core.boolex.EventEvaluatorBase: void start()>
<com.fasterxml.jackson.core.util.TextBuffer: char[] contentsAsArray()>
<com.google.android.gms.internal.measurement.zzha: void zzF(int,java.util.List)>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void <init>(android.content.Context)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder requestServerAuthCode(java.lang.String,boolean)>
<com.azure.authenticator.ui.MainActivity$onCreate$1: void onChanged(java.lang.Boolean)>
<com.google.android.material.chip.ChipDrawable: void setChipEndPadding(float)>
<dalvik.system.PathClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager: void schedulePeriodicMsaUserDaRefreshIfNecessary()>
<com.azure.authenticator.notifications.msa.MsaProtectionNotification_Factory: com.azure.authenticator.notifications.msa.MsaProtectionNotification newInstance(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.google.android.material.snackbar.BaseTransientBottomBar: com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int)>
<com.google.android.gms.common.data.AbstractDataBuffer: android.os.Bundle getMetadata()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.google.android.gms.safetynet.SafetyNetClient safetyNetClient()>
<ch.qos.logback.core.util.OptionHelper: void setSystemProperty(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.producers.DecodeProducer: boolean access$000(com.facebook.imagepipeline.producers.DecodeProducer)>
<com.google.android.material.timepicker.ClockFaceView: void setRadius(int)>
<com.airbnb.lottie.LottieDrawable$14: void <init>(com.airbnb.lottie.LottieDrawable,int)>
<com.google.common.base.Preconditions: void checkState(boolean)>
<com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()>
<com.google.android.material.shape.ShapePath$PathArcOperation: float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation)>
<com.facebook.drawee.generic.RoundingParams: int getBorderColor()>
<com.google.android.gms.internal.location.zzj: void <init>(com.google.android.gms.location.zzs,java.util.List,java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>
<com.google.android.gms.common.api.internal.zabo: void <init>(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.Api$Client,com.google.android.gms.common.api.internal.ApiKey)>
<com.google.android.gms.maps.internal.zzby: void zza(android.os.Bundle,android.os.Bundle)>
<com.facebook.react.views.text.ReactBaseTextShadowNode: void <init>()>
<com.facebook.cache.disk.SettableCacheEvent: void reset()>
<com.google.android.gms.common.api.internal.zaar: void zat(com.google.android.gms.common.api.internal.zaar)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>
<ch.qos.logback.core.net.server.RemoteReceiverClient: void setQueue(java.util.concurrent.BlockingQueue)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$handleDeletionTicketResult$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)>
<com.google.android.gms.measurement.internal.zzf: boolean zze()>
<com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>
<java.util.Locale: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.common.api.internal.GoogleServices: void <init>(java.lang.String,boolean)>
<com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>
<com.facebook.react.animated.AdditionAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.airbnb.lottie.utils.Logger: void warning(java.lang.String)>
<com.google.android.gms.common.api.internal.zam: int zaa()>
<com.google.android.gms.common.util.WorkSourceUtil: void zza(android.os.WorkSource,int,java.lang.String)>
<com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding: void <init>(android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView)>
<com.google.android.gms.internal.measurement.zzja: java.lang.Object zzw(int)>
<com.google.common.collect.Lists: boolean equalsImpl(java.util.List,java.lang.Object)>
<ch.qos.logback.classic.net.server.RemoteAppenderStreamClient: void <init>(java.lang.String,java.net.Socket)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void injectBrooklynStorage(com.azure.authenticator.ui.fragment.main.SettingsFragment,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<com.azure.authenticator.logging.LoggingHelper: boolean isDndSettingLogged()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.lang.Throwable)>
<com.google.android.gms.internal.location.zzz: void <init>()>
<com.google.android.material.datepicker.MaterialDatePicker: boolean isFullscreen(android.content.Context)>
<com.google.android.gms.internal.auth.zzaq: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<android.graphics.Bitmap: boolean isRecycled()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAddAccountError$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.microsoft.onlineid.exception.AuthenticationException,kotlin.coroutines.Continuation)>
<dagger.hilt.android.internal.managers.FragmentComponentManager: android.content.Context findActivity(android.content.Context)>
<com.google.android.gms.internal.measurement.zzbb: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzbh)>
<com.google.android.material.badge.BadgeDrawable$SavedState: void <init>(android.os.Parcel)>
<com.google.android.gms.common.data.AbstractDataBuffer: boolean isClosed()>
<android.widget.TextView: int getJustificationMode()>
<com.google.android.gms.measurement.internal.zzg: void zzZ(long)>
<com.google.android.datatransport.runtime.TransportRuntime: java.util.Set getSupportedEncodings(com.google.android.datatransport.runtime.Destination)>
<com.google.android.gms.measurement.internal.zzg: void zzae(long)>
<com.facebook.react.common.DebugServerException: void <init>(java.lang.String,java.lang.Throwable)>
<java.lang.Math: double atan(double)>
<com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: com.google.android.datatransport.runtime.TransportContext getTransportContext()>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>
<com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle zza()>
<com.google.android.gms.location.ActivityRecognitionResult: boolean zzb(android.os.Bundle,android.os.Bundle)>
<com.google.android.gms.location.ActivityTransitionEvent: void <init>(int,int,long)>
<com.google.android.material.transformation.ExpandableTransformationBehavior$1: void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$showConfirmLeaveWpj(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<android.view.View: void setSelected(boolean)>
<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(java.lang.String,ch.qos.logback.classic.Level)>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,int)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getObjectId()>
<com.google.android.material.tabs.TabLayout$TabView: android.widget.FrameLayout createPreApi18BadgeAnchorRoot()>
<com.google.android.gms.internal.auth.zzah: void <init>(int,java.lang.String,android.app.PendingIntent)>
<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: android.content.Intent getIntent()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel access$11600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<android.database.Cursor: java.lang.String[] getColumnNames()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$mergeBrokerAccounts$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.yoga.YogaDisplay: int intValue()>
<com.google.android.gms.internal.measurement.zzhh: com.google.android.gms.internal.measurement.zzhf zzb()>
<com.google.android.gms.location.zzaa: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>
<com.google.android.gms.internal.measurement.zzcm: boolean zze()>
<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>
<com.facebook.soloader.SysUtil: int getAppVersionCode(android.content.Context)>
<com.google.android.gms.auth.api.identity.BeginSignInResult: void <init>(android.app.PendingIntent)>
<com.facebook.yoga.YogaNode: boolean isDirty()>
<android.icu.util.TimeZone: android.icu.util.TimeZone getTimeZone(java.lang.String)>
<com.airbnb.lottie.network.DefaultLottieFetchResult: void <init>(java.net.HttpURLConnection)>
<com.facebook.react.NativeModuleRegistryBuilder: void processPackage(com.facebook.react.ReactPackage)>
<android.widget.CheckBox: int getPaddingBottom()>
<com.airbnb.lottie.model.layer.BaseLayer: void buildParentLayerListIfNeeded()>
<com.google.android.gms.measurement.internal.zzkd: boolean zzL()>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object getWorkplaceJoinedState(kotlin.coroutines.Continuation)>
<java.util.Map: java.util.Collection values()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void onResume()>
<com.google.android.gms.internal.measurement.zzp: void generateEventId(com.google.android.gms.internal.measurement.zzs)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getForceStaticImage()>
<com.facebook.react.ReactInstanceManager$ReactContextInitParams: void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader)>
<com.airbnb.lottie.model.CubicCurveData: void setControlPoint2(float,float)>
<com.facebook.react.views.art.ARTShapeShadowNode: boolean setupFillPaint(android.graphics.Paint,float)>
<java.util.ArrayDeque: boolean add(java.lang.Object)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getApplicationBuild()>
<com.google.android.gms.internal.measurement.zzlc: boolean zzd()>
<android.view.animation.Interpolator: float getInterpolation(float)>
<com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>
<com.google.android.material.tabs.TabLayout$Tab: int access$1100(com.google.android.material.tabs.TabLayout$Tab)>
<com.google.android.gms.internal.auth-api-phone.zzb: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)>
<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()>
<com.google.android.material.timepicker.ClockFaceView: com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView)>
<com.adjust.sdk.ActivityHandler: void access$2500(com.adjust.sdk.ActivityHandler,java.lang.String,org.json.JSONObject)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$AccountPickerResultCallback: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<ch.qos.logback.core.status.StatusUtil: void <init>(ch.qos.logback.core.Context)>
<com.google.android.gms.internal.measurement.zzjk: void zzT(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void onViewAttachedToWindow(com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder)>
<com.azure.authenticator.notifications.aad.AadNgcNotification: java.lang.Object handleRequestWithResult$suspendImpl(com.azure.authenticator.notifications.aad.AadNgcNotification,android.os.Bundle,kotlin.coroutines.Continuation)>
<com.google.common.base.CharMatcher$Ascii: void <init>()>
<com.google.android.gms.internal.measurement.zzjh: void <init>(com.google.android.gms.internal.measurement.zzix,java.lang.String,java.lang.Object[])>
<android.util.SparseBooleanArray: void clear()>
<java.lang.Math: long round(double)>
<java.lang.StringBuffer: void setLength(int)>
<com.google.android.gms.measurement.internal.zzkk: void zzG(com.google.android.gms.measurement.internal.zzej,int)>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void logFailureResult(java.lang.Exception)>
<com.google.android.material.chip.ChipDrawable: boolean showsCloseIcon()>
<bolts.AndroidExecutors: java.util.concurrent.Executor uiThread()>
<android.graphics.Rect: int centerY()>
<com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment_MembersInjector: void injectRegisterThirdPartyAccountManager(com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment,com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountManager)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$$special$$inlined$viewModels$2: void <init>(androidx.activity.ComponentActivity)>
<android.app.Fragment: boolean getRetainInstance()>
<com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.LatLng getPosition()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setState(int)>
<com.microsoft.authenticator.mainactivity.entities.MainActivityFlow: android.os.Bundle getLaunchFragmentFlowParams$default(com.microsoft.authenticator.mainactivity.entities.MainActivityFlow,int,android.os.Bundle,int,java.lang.Object)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context)>
<com.google.android.gms.tasks.zzb: void <init>()>
<android.widget.LinearLayout: void setWillNotDraw(boolean)>
<com.facebook.react.uimanager.MatrixMathHelper: double v3Dot(double[],double[])>
<com.google.android.material.floatingactionbutton.FloatingActionButton: boolean isOrWillBeHidden()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ProducerSequenceFactory getProducerSequenceFactory()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.adjust.sdk.Util: java.lang.String[] getSupportedAbis()>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler: void configureExportPasswordsPreferenceWithAppLock(boolean,androidx.preference.Preference)>
<ch.qos.logback.core.util.FileSize: void <init>(long)>
<com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer: void <init>(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,int)>
<com.google.android.gms.auth.account.zzc: void zza(com.google.android.gms.auth.account.zza,java.lang.String)>
<com.facebook.react.views.modal.ReactModalHostManager: void <init>()>
<java.security.cert.CertificateEncodingException: java.lang.String getMessage()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBigDecimal(android.os.Parcel,int,java.math.BigDecimal,boolean)>
<com.google.android.gms.internal.measurement.zzdu: com.google.android.gms.internal.measurement.zzdu zzk()>
<com.azure.authenticator.jwe.JweEncryptionManager: byte[] getAdditionalAuthenticationHeader()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.graphclient.data.dataSource.AuthMethodsPolicyDatabase authMethodsPolicyDatabase()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSessionUseCase access$9800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.measurement.zzht: com.google.android.gms.internal.measurement.zzht zzd()>
<com.facebook.imagepipeline.producers.NetworkFetcher: com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.evernote.android.job.JobExecutor: com.evernote.android.job.util.JobCat access$200()>
<com.google.android.gms.internal.common.zzk: boolean zza(java.lang.Object,java.lang.Object)>
<com.google.android.material.timepicker.ClockHandView: void setHandRotation(float)>
<com.google.android.gms.internal.measurement.zzlo: boolean zzc()>
<com.google.android.gms.common.api.internal.LifecycleFragment: void startActivityForResult(android.content.Intent,int)>
<com.airbnb.lottie.parser.AnimatableTransformParser: boolean isSkewAngleIdentity(com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult$DeviceIdError: com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException getException()>
<com.facebook.imagepipeline.producers.FetchState: long getLastIntermediateResultTimeMs()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void showSignOutButton()>
<com.google.android.material.shape.ShapePath$PathArcOperation: void setSweepAngle(float)>
<com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding: com.google.android.material.card.MaterialCardView getRoot()>
<com.azure.authenticator.ui.LaunchActivity: void <init>()>
<com.adjust.sdk.ISdkClickHandler: void teardown()>
<okio.ByteString: java.lang.String base64()>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: void clearAndCloseDatabase()>
<ch.qos.logback.core.android.AndroidContextUtil: void <init>()>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.airbnb.lottie.utils.BaseLottieAnimator: void <init>()>
<com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockManager: void <init>()>
<com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.crypto.tink.proto.Keyset$Builder: com.google.crypto.tink.proto.Keyset$Builder setPrimaryKeyId(int)>
<com.google.android.material.timepicker.ClockHandView$OnActionUpListener: void onActionUp(float,boolean)>
<com.google.android.gms.measurement.internal.zzjb: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zzb: void zzd()>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _throwUnquotedSpace(int,java.lang.String)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: void access$setLogs$p(com.azure.authenticator.ui.fragment.main.ViewLogsFragment,java.lang.String)>
<androidx.sqlite.db.SupportSQLiteQueryBuilder: androidx.sqlite.db.SupportSQLiteQueryBuilder selection(java.lang.String,java.lang.Object[])>
<com.azure.authenticator.accounts.GenericAccount: long getId()>
<com.google.android.gms.internal.measurement.zzm: android.os.Bundle zzd(long)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List access$500(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.facebook.react.views.image.ReactImageView: void warnImageSource(java.lang.String)>
<java.util.Locale: boolean equals(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzhy: void <init>(com.google.android.gms.measurement.internal.zzib,long)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$800(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions getGoogleIdTokenRequestOptions()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequest: void <init>(com.facebook.imagepipeline.request.ImageRequestBuilder)>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void onHardCapReached()>
<com.airbnb.lottie.model.layer.BaseLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)>
<java.io.DataInputStream: void <init>(java.io.InputStream)>
<com.facebook.react.uimanager.UIImplementation: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.maps.internal.zzbl: void onStreetViewPanoramaClick(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<java.util.concurrent.BlockingQueue: int remainingCapacity()>
<com.adjust.sdk.PackageHandler: void <init>(com.adjust.sdk.IActivityHandler,android.content.Context,boolean)>
<com.facebook.imagepipeline.producers.ThumbnailSizeChecker: int getAcceptableSize(int)>
<com.google.android.material.internal.TextDrawableHelper: void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)>
<com.adjust.sdk.ResponseData: void <init>()>
<com.fasterxml.jackson.core.io.IOContext: void releaseWriteEncodingBuffer(byte[])>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2: void <init>(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,java.util.concurrent.Future,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.mfa.viewLogic.MfaSdkDeviceGestureManager mfaSdkDeviceGestureManager()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeParcelList(android.os.Parcel,int,java.util.List,boolean)>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaCameraChangeListener: void onStreetViewPanoramaCameraChange(com.google.android.gms.maps.model.StreetViewPanoramaCamera)>
<com.github.amlcurran.showcaseview.ShowcaseView: void fadeInShowcase()>
<com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)>
<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList asList()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _flushBuffer()>
<com.facebook.common.memory.PooledByteStreams: void <init>(com.facebook.common.memory.ByteArrayPool)>
<com.google.android.gms.internal.measurement.zzda: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.google.android.material.textfield.TextInputLayout: boolean hasEndIcon()>
<com.evernote.android.job.util.JobCat: void setLogcatEnabled(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.thirdparty.viewLogic.RegisterThirdPartyAccountFragment injectRegisterThirdPartyAccountFragment2(com.microsoft.authenticator.registration.thirdparty.viewLogic.RegisterThirdPartyAccountFragment)>
<com.evernote.android.job.JobManager$1: void <init>(com.evernote.android.job.JobManager,java.lang.String,android.content.Context)>
<com.facebook.drawee.drawable.DrawableUtils: int multiplyColorAlpha(int,int)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode$Companion: com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode convertToEnum(int)>
<com.google.android.gms.maps.internal.zzby: void zza(android.os.Bundle,java.lang.String,android.os.Parcelable)>
<com.evernote.android.job.JobStorage: boolean remove(com.evernote.android.job.JobRequest,int)>
<androidx.fragment.app.DialogFragment: void <init>()>
<com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText createInternalEditText()>
<ch.qos.logback.core.spi.ContextAware: void addError(java.lang.String)>
<com.adjust.sdk.AdjustFactory: java.lang.String getGdprUrl()>
<com.facebook.react.modules.storage.AsyncStorageModule$3: void doInBackgroundGuarded(java.lang.Void[])>
<com.google.android.gms.internal.measurement.zzcp: boolean zza()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseName2(int,int,int)>
<com.evernote.android.job.JobExecutor: void <init>()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectMfaUpdateRegistrationUseCase(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase)>
<com.facebook.react.modules.core.PermissionListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: androidx.work.ForegroundInfo access$createForegroundInfo(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker,com.microsoft.authenticator.authentication.msa.entities.MsaSession,com.azure.authenticator.notifications.AbstractNotification$Action)>
<com.google.android.gms.auth.zzd: java.lang.String getAccountId(android.content.Context,java.lang.String)>
<com.google.android.gms.internal.measurement.zzks: void <init>()>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String collectLogs(android.content.Context)>
<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder addTag(java.lang.String)>
<okio.Source: void close()>
<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>
<com.airbnb.lottie.LottieAnimationView$2: void <init>(com.airbnb.lottie.LottieAnimationView)>
<java.util.Calendar: void clear()>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment$getShowDeleteBackupConfirmDialogListener$1: void <init>(com.azure.authenticator.ui.fragment.main.BackupDetailsFragment)>
<kotlin.collections.SetsKt: java.util.Set minus(java.util.Set,java.lang.Iterable)>
<com.google.android.gms.internal.base.zaf: void <init>(com.google.android.gms.internal.base.zae)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: android.graphics.Bitmap getImageWithCircularBorder(android.graphics.Bitmap)>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder negativeButtonAction(java.lang.String,android.content.DialogInterface$OnClickListener)>
<com.facebook.common.memory.NoOpMemoryTrimmableRegistry: com.facebook.common.memory.NoOpMemoryTrimmableRegistry getInstance()>
<com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void access$displayAutofillDisableBannerIfRequired(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<java.util.AbstractList: java.lang.Object remove(int)>
<com.google.android.gms.internal.measurement.zzix: void zzbv(com.google.android.gms.internal.measurement.zzgz)>
<android.widget.GridView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.gms.maps.internal.zzp: void onCameraMoveCanceled()>
<com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountManager: void <init>(com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)>
<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<com.facebook.react.touch.JSResponderHandler: void setJSResponder(int,android.view.ViewParent)>
<com.facebook.cache.common.CacheEventListener: void onMiss(com.facebook.cache.common.CacheEvent)>
<com.google.android.gms.internal.measurement.zzdb: boolean zzi()>
<com.azure.authenticator.storage.Storage: void setShowCodesActionKey(boolean)>
<com.adjust.sdk.MacAddressUtil: java.lang.String getRawMacAddress(android.content.Context)>
<com.microsoft.authenticator.di.DidAppModule_ProvideDidAccountAndAuthenticationInterfaceFactory: com.microsoft.did.feature.notifications.AccountAndAuthenticationInterface provideDidAccountAndAuthenticationInterface(com.microsoft.authenticator.di.DidAppModule,com.microsoft.authenticator.features.did.DidAccountAndAuthenticationProvider)>
<ch.qos.logback.core.UnsynchronizedAppenderBase: void <init>()>
<com.azure.authenticator.ui.action.ActionStateManager: void refreshActionsIfNecessaryAsync()>
<com.google.android.gms.internal.maps.zzk: void setClickable(boolean)>
<com.google.android.gms.common.internal.zal: int zaa(android.content.Context,com.google.android.gms.common.api.Api$Client)>
<com.facebook.react.common.LongArray: long get(int)>
<com.adjust.sdk.InstallReferrer: void closeReferrerClient()>
<com.microsoft.authenticator.workaccount.entities.GetDeviceIdStatus$Error: com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException getException()>
<ch.qos.logback.core.rolling.helper.CompressionMode: ch.qos.logback.core.rolling.helper.CompressionMode[] values()>
<com.facebook.fbreact.specs.NativeJSDevSupportSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.imagepipeline.image.EncodedImage: void parseMetaData()>
<ch.qos.logback.core.net.AbstractSocketAppender: ch.qos.logback.core.net.ObjectWriter createObjectWriterForSocket()>
<com.evernote.android.job.Job$Params: boolean equals(java.lang.Object)>
<com.adjust.sdk.ActivityHandler$2: void <init>(com.adjust.sdk.ActivityHandler)>
<com.evernote.android.job.JobRequest$NetworkType: com.evernote.android.job.JobRequest$NetworkType[] values()>
<com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)>
<com.google.android.material.timepicker.TimeModel: int getPeriod(int)>
<com.airbnb.lottie.network.NetworkCache: void <init>(com.airbnb.lottie.network.LottieNetworkCacheProvider)>
<com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>
<com.google.android.gms.common.internal.zao: void <init>()>
<com.google.android.gms.measurement.internal.zzw: boolean zzc()>
<com.facebook.soloader.DirectorySoSource: int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void <init>(com.facebook.react.views.scroll.FpsListener)>
<com.google.android.gms.internal.measurement.zzm: void zzb(android.os.Bundle)>
<com.google.common.collect.MapMakerInternalMap: int size()>
<com.google.android.gms.common.api.internal.TaskUtil: void setResultOrApiException(com.google.android.gms.common.api.Status,java.lang.Object,com.google.android.gms.tasks.TaskCompletionSource)>
<com.azure.authenticator.databinding.PasswordAutoChangeExplainLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeExplainLayoutBinding bind(android.view.View)>
<com.google.android.gms.location.zzbs: void <init>(com.google.android.gms.location.LocationSettingsRequest)>
<com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setImageSize(int)>
<com.google.android.gms.internal.measurement.zzha: void zzb(int,int)>
<com.google.android.gms.internal.measurement.zzkg: java.lang.Object zzr(java.lang.Object,long)>
<com.azure.authenticator.databinding.ToolbarLayoutBinding: void <init>(com.microsoft.authenticator.common.viewLogic.AppBarLayout,com.microsoft.authenticator.common.viewLogic.AppBarLayout,androidx.constraintlayout.widget.ConstraintLayout,androidx.appcompat.widget.Toolbar)>
<com.google.android.gms.common.api.GoogleApiClient$Builder: void zaa(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.Scope[])>
<java.util.concurrent.atomic.AtomicLong: boolean compareAndSet(long,long)>
<com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzcz zzg(int)>
<java.lang.Float: boolean isNaN(float)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager$Companion: void <init>()>
<com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignSelf(com.facebook.yoga.YogaAlign)>
<com.google.android.material.datepicker.DaysOfWeekAdapter: void <init>()>
<com.google.android.gms.internal.measurement.zzjw: void zzi(java.lang.Object,com.google.android.gms.internal.measurement.zzha)>
<com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory: com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry)>
<com.adjust.sdk.ActivityHandler: void access$300(com.adjust.sdk.ActivityHandler)>
<com.facebook.jni.DestructorThread$Destructor: void <init>(java.lang.Object)>
<android.widget.EditText: int getCompoundPaddingTop()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions build()>
<com.azure.authenticator.databinding.AccountListRowBinding: com.azure.authenticator.databinding.AccountListRowBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void copyArrays()>
<com.azure.authenticator.OnAppUpgradeReceiver: com.microsoft.authenticator.selfhost.SelfhostConfigManager getSelfhostConfigManager()>
<com.microsoft.brooklyn.module.wstrust.WSTrustTicketProvider: void <init>(android.content.Context)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToCredentialListFragment: void <init>()>
<com.airbnb.lottie.model.content.MergePaths: void <init>(java.lang.String,com.airbnb.lottie.model.content.MergePaths$MergePathsMode,boolean)>
<com.google.android.gms.auth.api.credentials.Credential: android.net.Uri getProfilePictureUri()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _verifyNoLeadingZeroes()>
<android.app.Fragment: android.content.res.Resources getResources()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzaf(java.lang.String)>
<androidx.lifecycle.LifecycleService: void onStart(android.content.Intent,int)>
<android.graphics.PointF: boolean equals(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzo(long)>
<com.google.common.base.Splitter$SplittingIterator: int separatorEnd(int)>
<com.google.android.gms.common.api.internal.zaba: void zae()>
<com.google.android.material.bottomsheet.BottomSheetDialog: android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)>
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>
<dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories: androidx.lifecycle.ViewModelProvider$Factory getActivityFactory(androidx.activity.ComponentActivity,androidx.lifecycle.ViewModelProvider$Factory)>
<com.airbnb.lottie.parser.AnimatableTransformParser: boolean isScaleIdentity(com.airbnb.lottie.model.animatable.AnimatableScaleValue)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onCreateView$4: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void setIndeterminate(boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar: android.content.Context access$400(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int[],int)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setLatLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)>
<java.net.URI: java.lang.String getHost()>
<java.lang.Math: double toRadians(double)>
<com.google.android.gms.internal.measurement.zzcd: java.lang.String zzj()>
<com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForTrue(java.lang.Integer)>
<com.evernote.android.job.JobRequest: com.evernote.android.job.util.JobCat access$000()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.businesslogic.RemoveLogsUseCase removeLogsUseCase()>
<com.azure.authenticator.databinding.FragmentViewPaymentBinding: com.azure.authenticator.databinding.FragmentViewPaymentBinding bind(android.view.View)>
<com.google.android.gms.internal.measurement.zzcx: void zzj(com.google.android.gms.internal.measurement.zzcx,int)>
<com.google.android.gms.measurement.internal.zzkd: void zzt(com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.maps.model.Cap: void <init>(int,android.os.IBinder,java.lang.Float)>
<com.facebook.imagepipeline.producers.LocalFileFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity: void onCreate(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzK(long)>
<com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams: android.util.SparseIntArray generateBuckets(int,int,int)>
<androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment injectDeviceRegistrationFragment2(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.facebook.react.modules.network.NetworkingModule$ResponseHandler: boolean supports(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$denyAadNgcSession$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: java.lang.Object getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_Factory: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel newInstance(com.azure.authenticator.storage.database.AccountStorage)>
<com.google.android.gms.measurement.internal.zzfi: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.graphics.Bitmap createThumbnailFromContentProvider(android.content.ContentResolver,android.net.Uri)>
<ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<javax.net.ssl.SSLSocket: void shutdownInput()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_GeneratedInjector: void injectSettingsFragment(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$1)>
<android.content.DialogInterface: void dismiss()>
<com.google.android.gms.measurement.internal.zzjh: void zzi(com.google.android.gms.measurement.internal.zzei,android.app.job.JobParameters)>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void start()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: boolean isHttpRedirect(int)>
<com.google.android.gms.common.api.internal.zaar: com.google.android.gms.common.api.internal.zabd zal(com.google.android.gms.common.api.internal.zaar)>
<com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding bind(android.view.View)>
<com.facebook.react.modules.camera.ImageEditingManager$CleanTask: void doInBackgroundGuarded(java.lang.Void[])>
<com.google.android.gms.maps.model.zzm: void <init>()>
<kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>
<android.content.Intent: void <init>()>
<com.google.android.gms.internal.measurement.zzcf: boolean zze()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void removeCookies()>
<com.google.android.material.animation.MotionTiming: void <init>(long,long,android.animation.TimeInterpolator)>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage_Factory: com.azure.authenticator.storage.AuthenticatorMfaSdkStorage newInstance(android.content.Context,com.azure.authenticator.storage.Storage,com.azure.authenticator.storage.MfaSdkAccountTranslator,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter)>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isWebpSupportEnabled()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<ch.qos.logback.core.joran.spi.Interpreter: void setInterpretationContextPropertiesMap(java.util.Map)>
<com.facebook.imagepipeline.memory.BasePool: void trimToSoftCap()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void setVisibleAccounts(java.util.List)>
<com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>
<ch.qos.logback.classic.android.SQLiteLogCleaner: void performLogCleanup(android.database.sqlite.SQLiteDatabase,ch.qos.logback.core.util.Duration)>
<com.facebook.common.references.CloseableReference$LeakHandler: void reportLeak(com.facebook.common.references.SharedReference,java.lang.Throwable)>
<com.google.android.material.tabs.TabLayout: void setTabIndicatorAnimationMode(int)>
<android.graphics.Bitmap: boolean isMutable()>
<java.io.PrintStream: void println(java.lang.Object)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: ch.qos.logback.core.rolling.helper.DateTokenConverter getPrimaryDateTokenConverter()>
<com.google.android.material.datepicker.Month: java.lang.String getLongName(android.content.Context)>
<com.google.android.gms.internal.measurement.zzjx: int zze()>
<com.facebook.common.references.CloseableReference: void <init>(com.facebook.common.references.SharedReference,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)>
<com.google.android.gms.measurement.internal.zzjc: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectAadTokenRefreshManager(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<com.airbnb.lottie.utils.Utils: boolean isAtLeastVersion(int,int,int,int,int,int)>
<ch.qos.logback.core.net.AbstractSocketAppender: void <init>()>
<com.google.android.gms.maps.internal.zzk: void <init>(android.os.IBinder)>
<com.google.android.gms.common.api.internal.zaac: com.google.android.gms.tasks.TaskCompletionSource zab()>
<com.microsoft.authenticator.qrcode.abstraction.ScanQrCodeViewModel: void <init>()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void onCreate(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzic: com.google.android.gms.internal.measurement.zzic zzf()>
<com.google.android.gms.measurement.internal.zzkf: void zzG(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzs()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<com.facebook.soloader.MinElf: int getu16(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage_Factory: com.azure.authenticator.storage.AuthenticatorMfaSdkStorage get()>
<com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.adjust.sdk.ActivityHandler: void access$700(com.adjust.sdk.ActivityHandler)>
<ch.qos.logback.core.net.AbstractSSLSocketAppender: void <init>()>
<android.widget.LinearLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
<com.facebook.drawee.components.RetryManager: void <init>()>
<com.google.android.gms.signin.SignInOptions: void <init>(boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,java.lang.Long,java.lang.Long,com.google.android.gms.signin.zaf)>
<com.adjust.sdk.Util: java.lang.String getSdkPrefix(java.lang.String)>
<android.app.Fragment: void setUserVisibleHint(boolean)>
<com.google.android.gms.auth.api.signin.internal.zzq: com.google.android.gms.auth.api.signin.internal.zzq zzd(android.content.Context)>
<com.google.android.material.internal.DescendantOffsetUtils: void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)>
<com.google.android.gms.internal.maps.zzt: boolean isInfoWindowShown()>
<com.google.android.gms.common.images.zae: void <init>(android.widget.ImageView,android.net.Uri)>
<com.google.android.gms.common.api.internal.BasePendingResult: void setResultCallback(com.google.android.gms.common.api.ResultCallback,long,java.util.concurrent.TimeUnit)>
<android.widget.FrameLayout: void removeAllViews()>
<com.facebook.react.views.scroll.ReactScrollView: boolean access$002(com.facebook.react.views.scroll.ReactScrollView,boolean)>
<com.google.android.gms.internal.measurement.zzmv: long zzd()>
<com.facebook.cache.disk.DefaultDiskStorage: void recreateDirectoryIfVersionChanges()>
<com.google.android.gms.internal.maps.zzac: void setZIndex(float)>
<com.google.android.gms.measurement.internal.zzhn: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.azure.authenticator.storage.database.DatabaseConstants: void <init>()>
<com.google.android.gms.internal.location.zzbs: com.google.android.gms.internal.location.zzbv zzl(int)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: boolean isLiteral(int)>
<com.google.common.collect.RegularImmutableMap$KeySet: com.google.common.collect.UnmodifiableIterator iterator()>
<com.airbnb.lottie.L: void beginSection(java.lang.String)>
<com.azure.authenticator.profile.ProfileImageTaskCallback: void onImageUpdated(com.azure.authenticator.accounts.GenericAccount,android.graphics.Bitmap)>
<com.google.android.gms.signin.internal.zaf: void zag(com.google.android.gms.signin.internal.zai,com.google.android.gms.signin.internal.zae)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void onCancellation(com.facebook.imagepipeline.producers.FetchState)>
<com.facebook.react.uimanager.JSTouchDispatcher: int findTargetTagAndSetCoordinates(android.view.MotionEvent)>
<com.google.android.material.animation.MotionSpec: long getTotalDuration()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_1_7$cp()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)>
<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.azure.authenticator.accounts.SecretKeyBasedAccount: void <init>(java.lang.String,java.lang.String,java.lang.String,com.azure.authenticator.accounts.AccountCapability,java.lang.String,boolean)>
<android.widget.LinearLayout: int indexOfChild(android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.settings.StopSyncAccountFragment injectStopSyncAccountFragment2(com.microsoft.brooklyn.ui.settings.StopSyncAccountFragment)>
<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.AnimationFactory access$400(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.google.android.gms.measurement.internal.zziq: void <init>(com.google.android.gms.measurement.internal.zzjb,boolean,com.google.android.gms.measurement.internal.zzp,boolean,com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<com.adjust.sdk.InstallReferrer: java.lang.Object createProxyInstallReferrerStateListener(java.lang.Class)>
<com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)>
<com.google.android.material.datepicker.Month$1: void <init>()>
<com.google.android.gms.auth.api.identity.zzg: void <init>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<android.widget.ProgressBar: void setMax(int)>
<com.facebook.drawee.drawable.RoundedDrawable: boolean shouldRound()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: void initialize(com.facebook.imagepipeline.core.ImagePipelineConfig)>
<com.facebook.react.modules.core.DeviceEventManagerModule$1: void <init>(com.facebook.react.modules.core.DeviceEventManagerModule,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)>
<com.google.android.gms.internal.measurement.zzix: com.google.android.gms.internal.measurement.zziw zzbG()>
<ch.qos.logback.core.net.server.SSLServerSocketAppenderBase: ch.qos.logback.core.net.ssl.SSLConfiguration getSsl()>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<ch.qos.logback.core.net.server.ClientVisitor: void visit(ch.qos.logback.core.net.server.Client)>
<com.facebook.imagepipeline.memory.BasePool: int getBucketedSize(int)>
<com.facebook.react.views.text.ReactTextUpdate: float getPaddingTop()>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month)>
<com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase: void invalidateAadNgc(com.azure.authenticator.accounts.AadAccount)>
<com.fasterxml.jackson.core.io.CharacterEscapes: int[] getEscapeCodesForAscii()>
<com.microsoft.authenticator.registration.mfa.entities.AadMfaAccountAdditionalInformation: java.lang.String getTenantCountryCode()>
<com.azure.authenticator.databinding.AccountListRowBinding: com.azure.authenticator.databinding.AccountListRowBinding bind(android.view.View)>
<androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresBatteryNotLow(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.SDKInitHelper sDKInitHelper()>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getSupportedCipherSuites()>
<com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()>
<com.google.android.gms.internal.measurement.zzha: void zzI(int,java.util.List,boolean)>
<com.facebook.react.bridge.JavaMethodWrapper$3: void <init>()>
<android.widget.Button: void setPressed(boolean)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$trackDndSettingState$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries,com.azure.authenticator.storage.Storage,kotlin.coroutines.Continuation)>
<java.util.Enumeration: boolean hasMoreElements()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyCancel$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zznl: boolean zza()>
<com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)>
<androidx.appcompat.app.AppCompatViewInflater: void <init>()>
<com.google.android.gms.maps.zzaa: void <init>()>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest: java.lang.String getServerClientId()>
<com.google.android.gms.measurement.internal.zzae: boolean zzx(java.lang.String)>
<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>
<com.evernote.android.job.util.JobCat: void e(java.lang.String,java.lang.Object[])>
<com.google.common.io.BaseEncoding: java.lang.String encode(byte[],int,int)>
<android.widget.SeekBar: void setMax(int)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType forNumber(int)>
<com.google.android.gms.measurement.internal.zzai: void zzc()>
<ch.qos.logback.core.FileAppender: void <init>()>
<com.google.android.gms.internal.measurement.zzla: long zzu()>
<com.google.android.gms.internal.location.zzbs: com.google.android.gms.internal.location.zzbs zzi()>
<com.google.android.material.transformation.ExpandableTransformationBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator getInterpolator(com.facebook.react.uimanager.layoutanimation.InterpolatorType,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Boolean readBooleanObject(android.os.Parcel,int)>
<androidx.core.view.MarginLayoutParamsCompat: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)>
<com.airbnb.lottie.LottieDrawable$1: void <init>(com.airbnb.lottie.LottieDrawable)>
<com.google.android.gms.measurement.internal.zzhn: java.lang.Boolean zzi()>
<java.util.concurrent.BlockingDeque: boolean offerFirst(java.lang.Object)>
<com.airbnb.lottie.parser.AnimatableTransformParser: boolean isSkewIdentity(com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<com.google.android.material.datepicker.PickerFragment: void clearOnSelectionChangedListeners()>
<com.facebook.react.fabric.mounting.mountitems.InsertMountItem: void <init>(int,int,int)>
<com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableMap getWritableMap(com.facebook.react.bridge.ReadableMap)>
<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,int)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: android.os.Bundle toBundle()>
<com.facebook.react.modules.core.JavaTimerManager$Timer: void <init>(int,long,int,boolean)>
<com.google.android.gms.dynamite.zzi: void <init>()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzap(java.lang.String)>
<com.facebook.react.views.picker.ReactPicker$1: void <init>(com.facebook.react.views.picker.ReactPicker)>
<ch.qos.logback.classic.net.SocketReceiver: void dispatchEvents(ch.qos.logback.classic.LoggerContext)>
<com.facebook.cache.disk.DiskStorage: com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void configureDeviceIdInformation(android.view.View)>
<com.facebook.imagepipeline.producers.MultiplexProducer: java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.common.base.Preconditions: int checkElementIndex(int,int,java.lang.String)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zabl zag(com.google.android.gms.common.api.internal.ApiKey)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$showAuthSessionDialog$3$AbstractAuthRequestActivity(android.view.View)>
<android.os.Parcel: byte[] marshall()>
<com.google.android.gms.common.api.Api$Client: void onUserSignOut(com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks)>
<com.microsoft.brooklyn.ui.importCred.ImportPasswordsFragment_MembersInjector: void injectBrooklynStorage(com.microsoft.brooklyn.ui.importCred.ImportPasswordsFragment,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignItems(com.facebook.yoga.YogaAlign)>
<com.google.android.gms.cloudmessaging.zza: android.os.IBinder zza()>
<com.google.android.gms.internal.measurement.zzmp: com.google.android.gms.internal.measurement.zzmq zze()>
<com.adjust.sdk.Util: java.util.Locale getLocale(android.content.res.Configuration)>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableScaleValue parseScale(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketError$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.microsoft.authenticator.msa.entities.MsaAccountManagerError)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$$special$$inlined$viewModels$1: void <init>(androidx.fragment.app.Fragment)>
<com.google.android.gms.internal.measurement.zzha: void zzc(int,long)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
<com.google.android.gms.internal.measurement.zzkn: int zzi(int)>
<com.facebook.imagepipeline.common.BytesRange: void <init>(int,int)>
<android.app.Dialog: void setContentView(android.view.View)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzg(com.google.android.gms.internal.measurement.zzde)>
<com.google.android.gms.internal.measurement.zzbr: void zzO(android.content.Context)>
<android.graphics.RectF: float centerY()>
<com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.gms.common.internal.GetServiceRequest: void <init>(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,com.google.android.gms.common.Feature[],com.google.android.gms.common.Feature[],boolean,int,boolean,java.lang.String)>
<com.facebook.react.views.text.ReactTextView: void setBorderRadius(float,int)>
<com.azure.authenticator.ui.action.ActionStateManager: void <init>(android.content.Context,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<com.google.android.gms.cloudmessaging.IMessengerCompat$Impl: void send(android.os.Message)>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2: void <init>(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,java.util.concurrent.atomic.AtomicBoolean)>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP: boolean validDateAndIntegerTokens()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zab()>
<com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable)>
<com.google.android.gms.maps.internal.zzc: void onCancel()>
<androidx.work.ListenableWorker: android.content.Context getApplicationContext()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void showDeleteBackupConfirmDialog()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setExpandedOffset(int)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int totalCount()>
<java.io.Writer: void write(java.lang.String)>
<com.google.android.gms.measurement.internal.zzae: int zzl(java.lang.String,com.google.android.gms.measurement.internal.zzdv,int,int)>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.facebook.react.module.model.ReactModuleInfo: boolean hasConstants()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$4: androidx.lifecycle.ViewModelStore invoke()>
<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.text.TextPaint: void setTextSize(float)>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>
<com.google.android.gms.common.api.internal.zaca: void <init>(com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient)>
<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>
<com.google.android.gms.tasks.Task: java.lang.Exception getException()>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String getExcludedCipherSuites()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyCancel$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeEndArray()>
<android.widget.ImageButton: void setActivated(boolean)>
<com.google.android.material.badge.BadgeDrawable: void drawText(android.graphics.Canvas)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_Factory: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker newInstance(android.content.Context,androidx.work.WorkerParameters,com.azure.authenticator.authentication.msa.MsaAccountManager,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.common.server.response.zal: void <init>(int,java.lang.String,java.util.ArrayList)>
<ch.qos.logback.core.net.ssl.ConfigurableSSLSocketFactory: void <init>(ch.qos.logback.core.net.ssl.SSLParametersConfiguration,javax.net.ssl.SSLSocketFactory)>
<java.lang.Thread: void start()>
<com.google.android.gms.internal.measurement.zzkh: int zzD(java.lang.Class)>
<com.microsoft.aad.adal.Logger$LogLevel: com.microsoft.aad.adal.Logger$LogLevel[] values()>
<com.google.android.material.internal.TextScale$1: void <init>(com.google.android.material.internal.TextScale,android.widget.TextView)>
<com.google.android.gms.measurement.internal.zzja: void zzb()>
<com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: void <init>()>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void <init>(java.lang.Class,com.facebook.react.uimanager.ViewManagerPropertyUpdater$1)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$3: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)>
<kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>
<java.util.Arrays: int binarySearch(char[],char)>
<android.os.Looper: android.os.Looper getMainLooper()>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()>
<com.adjust.sdk.ActivityHandler: android.content.Context getContext()>
<com.microsoft.onlineid.AccountManager: com.microsoft.onlineid.AccountManager setTicketCallback(com.microsoft.onlineid.ITicketCallback)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: void <init>()>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity: void inject()>
<com.facebook.react.uimanager.ReactShadowNode: void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap)>
<androidx.sqlite.db.SupportSQLiteDatabase: boolean inTransaction()>
<com.facebook.common.executors.StatefulRunnable: java.lang.Object getResult()>
<com.facebook.react.bridge.Dynamic: boolean isNull()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory$InstanceHolder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory access$000()>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getSupportedProtocols()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isRotateGesturesEnabled()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)>
<com.facebook.common.logging.FLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.facebook.imagepipeline.core.ImagePipeline: void clearDiskCaches()>
<com.google.android.gms.safetynet.SafetyNetApi$zzc: boolean isVerifyAppsEnabled()>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void access$refreshActiveActionList(com.azure.authenticator.ui.action.UserInteractionRequiredActionManager)>
<com.google.android.gms.internal.common.zzg: com.google.android.gms.internal.common.zzd zza()>
<com.facebook.react.modules.core.TimingModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)>
<com.microsoft.identity.common.java.logging.Logger: boolean setLogger(java.lang.String,com.microsoft.identity.common.java.logging.ILoggerCallback)>
<android.net.Uri: java.lang.String getLastPathSegment()>
<com.facebook.soloader.SoSource: void prepare(int)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,float)>
<com.google.android.gms.internal.maps.zzt: java.lang.String getTitle()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: boolean isEnterNumberAllowed()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void <init>(int)>
<com.google.android.gms.common.zzm: java.lang.String zze(boolean,java.lang.String,com.google.android.gms.common.zzi)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$9: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<android.widget.ImageButton: boolean isInEditMode()>
<com.google.android.gms.auth.zzd: void zzb(android.accounts.Account)>
<com.facebook.common.references.CloseableReference$1: void release(java.io.Closeable)>
<com.airbnb.lottie.model.content.ShapeStroke: void <init>(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableFloatValue,java.util.List,com.airbnb.lottie.model.animatable.AnimatableColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.content.ShapeStroke$LineCapType,com.airbnb.lottie.model.content.ShapeStroke$LineJoinType,float,boolean)>
<androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)>
<com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: void setProgress(float)>
<com.google.android.gms.internal.auth-api.zzv: void zzd(com.google.android.gms.common.api.Status)>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>
<com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.InlineSuggestionUseCase)>
<com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node parse()>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>
<com.google.android.gms.common.server.response.FastParser: int zaa(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment: void lambda$onCreateView$0$RemoteMsaNgcUpsellFragment(boolean,java.lang.String,android.view.View)>
<com.azure.authenticator.ui.RootActivityBase$onResume$1: java.lang.String invoke()>
<com.facebook.react.DebugCorePackage: void <init>()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult$FailureUnknown: java.lang.Exception getException()>
<com.adjust.sdk.IPackageHandler: void init(com.adjust.sdk.IActivityHandler,android.content.Context,boolean)>
<com.google.android.gms.internal.measurement.zzla: long zzr()>
<com.azure.authenticator.logging.ExternalLogger$Companion: int access$getMsalLogLevel(com.azure.authenticator.logging.ExternalLogger$Companion,com.microsoft.identity.client.Logger$LogLevel)>
<com.adjust.sdk.scheduler.TimerCycle: void start()>
<com.facebook.common.references.SharedReference: boolean isValid(com.facebook.common.references.SharedReference)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.PrimitiveSet getPrimitives(com.google.crypto.tink.KeysetHandle,com.google.crypto.tink.KeyManager,java.lang.Class)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showGraphTokenExpiredScreen$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.api.internal.zav: void <init>(com.google.android.gms.common.api.internal.zax,com.google.android.gms.common.api.internal.zau)>
<com.google.android.gms.safetynet.zzm: void <init>(com.google.android.gms.safetynet.zzl,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.auth.zzal: void zzb(java.lang.String)>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getCheckedIcon()>
<android.widget.LinearLayout: void drawableStateChanged()>
<android.widget.CheckBox: void setMinWidth(int)>
<com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)>
<com.airbnb.lottie.utils.Utils: float getScale(android.graphics.Matrix)>
<com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener: void onDragStateChanged(int)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: void <init>(java.util.HashMap)>
<com.fasterxml.jackson.core.base.GeneratorBase: int _decodeSurrogate(int,int)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)>
<com.facebook.drawee.controller.AbstractDraweeController: boolean shouldHandleGesture()>
<com.azure.authenticator.storage.database.DbAccount: void setCid(java.lang.String)>
<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager access$2800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.measurement.internal.zzfc: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<java.util.HashMap: void clear()>
<com.google.android.gms.location.GeofencingRequest: com.google.android.gms.location.GeofencingRequest zza(java.lang.String)>
<com.facebook.react.views.art.ARTSurfaceViewManager: void setBackgroundColor(com.facebook.react.views.art.ARTSurfaceView,int)>
<com.microsoft.brooklyn.module.profile.ProfileDataCache: boolean isUserSignedIn()>
<com.facebook.react.ReactInstanceManager$5$2: void <init>(com.facebook.react.ReactInstanceManager$5,com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void drawRectangularBackgroundWithBorders(android.graphics.Canvas)>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzho zzbu()>
<com.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock uptimeClock()>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>
<com.facebook.react.uimanager.ReactShadowNode: void setReactTag(int)>
<android.widget.EditText: int getId()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory qrCodeResultHandlerFactory()>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet createKeySet()>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void <init>(android.content.Context)>
<com.facebook.react.modules.network.ProgressiveStringDecoder: void <init>(java.nio.charset.Charset)>
<com.google.android.material.floatingactionbutton.MotionStrategy: void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)>
<com.facebook.react.views.text.ReactFontManager$FontFamily: void <init>()>
<com.adjust.sdk.Util: java.lang.String sha1(java.lang.String)>
<com.google.android.gms.common.api.internal.BasePendingResult: void zan(com.google.android.gms.common.api.internal.zacw)>
<com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.common.CacheErrorLogger access$700(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<java.lang.Exception: java.lang.String toString()>
<com.airbnb.lottie.animation.content.ContentGroup: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeGroup)>
<com.github.amlcurran.showcaseview.AnimatorAnimationFactory$2: void <init>(com.github.amlcurran.showcaseview.AnimatorAnimationFactory,com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener)>
<com.google.common.collect.MapMakerInternalMap: boolean remove(java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.maps.zzk: float getZIndex()>
<com.facebook.shimmer.ShimmerDrawable: void startShimmer()>
<com.google.android.gms.internal.measurement.zzbg: void zza()>
<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase access$getWorkplaceJoinUseCase$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcase(com.github.amlcurran.showcaseview.targets.Target,boolean)>
<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionStateError(int)>
<androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)>
<com.facebook.react.modules.core.ReactChoreographer: java.lang.Object access$300(com.facebook.react.modules.core.ReactChoreographer)>
<com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaDeleteRegistrationUseCase: void <init>(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate,com.microsoft.authenticator.graphclient.GraphHelper)>
<com.facebook.react.uimanager.ReactShadowNode: int getScreenY()>
<com.evernote.android.job.JobRequest$Builder: boolean access$1000(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment_GeneratedInjector: void injectSharedDeviceModeFragment(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<com.google.android.gms.internal.measurement.zzno: boolean zza()>
<com.microsoft.authenticator.experimentation.di.ExperimentationHiltModule_ProvideTreatmentAssignmentServiceFactory: com.microsoft.authenticator.experimentation.businessLogic.TreatmentAssignmentService provideTreatmentAssignmentService(com.microsoft.authenticator.experimentation.di.ExperimentationHiltModule)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>
<com.github.amlcurran.showcaseview.ShowcaseView: void updateStyle(android.content.res.TypedArray,boolean)>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: int getPort()>
<com.google.android.gms.common.internal.TelemetryData: void <init>(int,java.util.List)>
<com.google.android.gms.measurement.internal.zzdb: void <init>()>
<com.facebook.react.ReactFragment: com.facebook.react.ReactFragment newInstance(java.lang.String,android.os.Bundle)>
<com.facebook.soloader.MinElf: java.lang.String getSz(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)>
<com.google.android.gms.common.api.GoogleApi: android.content.Context getApplicationContext()>
<com.facebook.imagepipeline.core.ExecutorSupplier: java.util.concurrent.Executor forBackgroundTasks()>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthCheckUseCase: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.microsoft.onlineid.sdk.extension.SessionManager,com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<okio.BufferedSource: boolean request(long)>
<ch.qos.logback.core.rolling.helper.FileFinder: java.util.List findFiles(java.util.List,java.util.List,int)>
<com.google.android.gms.internal.measurement.zzkh: void zzx(java.lang.Object,long,byte)>
<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.imagepipeline.image.EncodedImage buildEncodedImage(com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface)>
<com.azure.authenticator.storage.database.DbAccount: boolean getHasPassword()>
<com.facebook.react.fabric.mounting.mountitems.UpdateStateMountItem: void <init>(int,com.facebook.react.uimanager.StateWrapper)>
<com.google.android.gms.auth.api.identity.zzl: java.lang.String zzh()>
<androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>
<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>
<com.google.android.gms.internal.auth-api.zzba: java.lang.String zzw()>
<com.google.android.gms.auth.api.signin.internal.zzd: java.lang.Void zzn()>
<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>
<com.google.android.material.circularreveal.CircularRevealWidget: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)>
<com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Drawable getControllerOverlay()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.google.android.material.textview.MaterialTextView: boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>
<com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.model.animatable.AnimatableColorValue getColor()>
<com.facebook.react.views.text.ReactBaseTextShadowNode: void buildSpannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,android.text.SpannableStringBuilder,java.util.List,com.facebook.react.views.text.TextAttributes,boolean,java.util.Map,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void showWPJSectionWithRegisteredDevice(java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzp: void setMinimumSessionDuration(long)>
<com.google.android.gms.internal.measurement.zzbr: void zzu(java.lang.String)>
<com.google.android.gms.internal.measurement.zzhr: int[] zza()>
<com.google.android.gms.dynamic.LifecycleDelegate: void onResume()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionBroadcastReceiver injectMfaNotificationActionBroadcastReceiver2(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionBroadcastReceiver)>
<com.facebook.react.views.textinput.ReactEditText: void access$300(com.facebook.react.views.textinput.ReactEditText)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void addIgnoreStackTraceLine(java.lang.String)>
<com.google.android.gms.internal.measurement.zzcm: boolean zzc()>
<com.google.android.material.navigation.NavigationBarMenuView: int getItemTextAppearanceActive()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistered$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: android.net.Uri getSourceUri()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void setRegisterNgcSdkCallbacks()>
<ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction: java.lang.String defaultClassName()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.airbnb.lottie.parser.moshi.JsonReader: void beginArray()>
<java.net.HttpURLConnection: void connect()>
<com.google.android.material.chip.ChipDrawable: boolean showsCheckedIcon()>
<com.adjust.sdk.ActivityHandler: void startI()>
<android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.crypto.tink.Registry: java.lang.String toCommaSeparatedString(java.util.Set)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void onPause()>
<java.io.PrintWriter: void println(int)>
<com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.microsoft.authenticator.mfasdk.log.MfaSdkLogger$LogLevel: com.microsoft.authenticator.mfasdk.log.MfaSdkLogger$LogLevel[] values()>
<java.util.LinkedHashMap: void <init>(int,float,boolean)>
<com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object)>
<com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void showAadNgcSessionDialog(com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyData)>
<com.google.android.gms.measurement.internal.zzkc: void <init>(com.google.android.gms.measurement.internal.zzkd,com.google.android.gms.measurement.internal.zzjw)>
<com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fetchSync(java.lang.String,java.lang.String)>
<com.azure.authenticator.BootReceiver: android.content.Intent getIntent()>
<com.google.common.collect.MapMakerInternalMap$EntrySet: void <init>(com.google.common.collect.MapMakerInternalMap)>
<com.adjust.sdk.OnEventTrackingSucceededListener: void onFinishedEventTrackingSucceeded(com.adjust.sdk.AdjustEventSuccess)>
<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.OnShowcaseEventListener access$700(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.google.android.material.chip.ChipDrawable: java.lang.CharSequence getCloseIconContentDescription()>
<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>
<com.google.common.base.'-$$Lambda$Java8Usage$_bAPwwc4Nm33kMN79iqPlKkAoBQ': void <init>()>
<com.airbnb.lottie.LottieDrawable$10: void <init>(com.airbnb.lottie.LottieDrawable,java.lang.String)>
<com.google.android.material.datepicker.YearGridAdapter: com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>
<android.graphics.Bitmap: void prepareToDraw()>
<com.google.android.gms.measurement.internal.zzfl: void zzO(com.google.android.gms.measurement.internal.zzfl,com.google.android.gms.measurement.internal.zzgn)>
<com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider: void <init>(android.content.Context,com.microsoft.authenticator.core.navigation.InterModuleActivityLauncher)>
<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>
<com.facebook.cache.disk.DiskCacheConfig$Builder: long access$400(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.adjust.sdk.AdjustInstance: void resetSessionCallbackParameters()>
<android.graphics.Path: void lineTo(float,float)>
<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.microsoft.authenticator.location.abstraction.LocationPermissionManager: void <init>(androidx.fragment.app.FragmentActivity)>
<com.azure.authenticator.storage.Storage: java.lang.Boolean getIsWpjDeviceShared()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.google.android.gms.common.GoogleApiAvailability googleApiAvailability()>
<android.database.sqlite.SQLiteStatement: void clearBindings()>
<com.facebook.react.module.annotations.ReactModule: boolean needsEagerInit()>
<java.util.List: boolean addAll(java.util.Collection)>
<android.widget.Button: void setVisibility(int)>
<javax.net.ssl.SSLSocket: boolean getNeedClientAuth()>
<com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult delete(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.Credential)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: boolean tryStartingUpsellNgcFlow(android.os.Bundle)>
<com.azure.authenticator.storage.Storage: boolean readMsaSdkNgcServerKeyIdMigration()>
<com.facebook.react.animated.FrameBasedAnimationDriver: void resetConfig(com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.uimanager.PixelUtil: float toSPFromPixel(float)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.common.api.internal.zat: void zaa(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>
<androidx.preference.PreferenceFragmentCompat: void onSaveInstanceState(android.os.Bundle)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()>
<com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)>
<com.facebook.hermes.reactexecutor.HermesExecutorFactory: void <init>(com.facebook.hermes.reactexecutor.RuntimeConfig)>
<com.facebook.react.CoreModulesPackage$1: void <init>(com.facebook.react.CoreModulesPackage,java.util.Map)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setBorderBottomRightRadius(android.view.View,float)>
<com.facebook.react.uimanager.MatrixMathHelper: void applyScaleY(double[],double)>
<android.widget.Button: boolean isPressed()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<ch.qos.logback.core.OutputStreamAppender: void encoderClose()>
<com.facebook.drawee.controller.AbstractDraweeController: void release()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$Companion: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar: int access$2800(com.google.android.material.bottomappbar.BottomAppBar)>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectAccountStorage(com.azure.authenticator.OnAppUpgradeReceiver,com.azure.authenticator.storage.database.AccountStorage)>
<com.facebook.drawee.gestures.GestureDetector: void setClickListener(com.facebook.drawee.gestures.GestureDetector$ClickListener)>
<com.google.android.gms.common.api.internal.TaskUtil: com.google.android.gms.tasks.Task toVoidTaskThatFailsOnFalse(com.google.android.gms.tasks.Task)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.NotificationUseCase access$9300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.resources.TextAppearance: void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)>
<com.google.android.material.chip.ChipDrawable: int getIntrinsicHeight()>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: boolean hasAccountsConfiguredForNotifications(com.azure.authenticator.storage.Storage)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment: int getActionId()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: int schemaVersion()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderColor(int,float,float)>
<android.widget.TextView: int getVisibility()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.String generateUniqueControllerId()>
<com.google.android.gms.measurement.internal.zzg: long zzad()>
<com.facebook.imagepipeline.producers.BaseProducerContext: void <init>(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority)>
<com.google.android.gms.measurement.internal.zzbx: void <init>()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfData: void <init>(java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.image.ImageInfo,long,long,long,long,long,long,long,int,java.lang.String,boolean,int,int,int,long,long,java.lang.String)>
<com.airbnb.lottie.LottieImageAsset: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>
<com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,int)>
<com.google.android.gms.common.internal.zza: void <init>(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle)>
<android.widget.LinearLayout: int getRight()>
<com.facebook.react.ReactFragment: com.facebook.react.ReactFragment access$000(java.lang.String,android.os.Bundle)>
<com.google.android.gms.common.api.BatchResultToken: void <init>(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCI: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI,android.view.View,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String)>
<com.google.android.gms.internal.measurement.zzkz: long zzy()>
<com.google.android.gms.maps.MapView$zza: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)>
<com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener: void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: com.facebook.imagepipeline.image.EncodedImage getResult()>
<com.adjust.sdk.AdjustConfig: void <init>(android.content.Context,java.lang.String,java.lang.String)>
<org.json.JSONObject: java.lang.Object remove(java.lang.String)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)>
<com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()>
<com.azure.authenticator.authentication.msa.MsaAccountManager: android.content.Intent getAddAccountIntent$default(com.azure.authenticator.authentication.msa.MsaAccountManager,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,java.lang.String,java.lang.String,int,java.lang.Object)>
<androidx.viewpager.widget.PagerAdapter: int getCount()>
<com.facebook.react.views.text.ReactTextUpdate: int getTextAlign()>
<com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()>
<com.microsoft.authenticator.rootdetection.di.RootDetectionModule: void <init>()>
<com.adjust.sdk.ActivityPackage: void setClientSdk(java.lang.String)>
<java.lang.Exception: java.lang.String getMessage()>
<com.google.android.material.resources.TextAppearance$2: void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)>
<javax.net.ssl.SSLSocket: java.lang.String[] getEnabledCipherSuites()>
<com.google.android.gms.internal.measurement.zzhz: com.google.android.gms.internal.measurement.zzhz zze(int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setHideable(boolean)>
<com.google.android.material.textfield.IndicatorViewController: void removeIndicator(android.widget.TextView,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void unsuccessfulResultFromGetToken(java.lang.Integer)>
<com.azure.authenticator.ui.action.UserInteractionRequiredAction: int getActionIconResourceId()>
<com.google.android.gms.maps.MapFragment$zzb: void setActivity(android.app.Activity)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showStoreRatingDialog$storeRatingDialogBuilder$2: void <init>(com.azure.authenticator.ui.dialog.StoreRatingTask,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<ch.qos.logback.core.sift.SiftingAppenderBase: boolean eventMarksEndOfLife(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzbr: long zzy()>
<com.google.android.gms.measurement.internal.zzjh: void <init>(android.content.Context)>
<com.google.common.base.CharMatcher: java.lang.String retainFrom(java.lang.CharSequence)>
<java.util.Collection: boolean addAll(java.util.Collection)>
<com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)>
<com.google.android.gms.internal.measurement.zzhn: com.google.android.gms.internal.measurement.zzhn zza()>
<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void removeCoalescingKey(long)>
<com.google.android.gms.internal.auth-api-phone.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)>
<android.util.LongSparseArray: void clear()>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: void inject()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: void setActivityProgressDialogTag(java.lang.String)>
<com.adjust.sdk.PackageHandler: void access$600(com.adjust.sdk.PackageHandler)>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: dagger.hilt.android.internal.managers.FragmentComponentManager createComponentManager()>
<com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.internal.ApiKey zaa(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,java.lang.String)>
<android.widget.FrameLayout: android.view.View getRootView()>
<com.facebook.drawee.backends.pipeline.info.ImageOriginUtils: int mapProducerNameToImageOrigin(java.lang.String)>
<com.facebook.yoga.YogaNode: void setMarginAuto(com.facebook.yoga.YogaEdge)>
<com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)>
<com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.facebook.react.uimanager.ReactShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)>
<com.adjust.sdk.scheduler.FutureScheduler: java.util.concurrent.ScheduledFuture scheduleFutureWithFixedDelay(java.lang.Runnable,long,long)>
<com.azure.authenticator.authentication.msa.MsaAccountManager: void <init>(android.content.Context,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String)>
<com.google.android.datatransport.cct.internal.LogEvent: long getTimezoneOffsetSeconds()>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.airbnb.lottie.network.NetworkCache: android.util.Pair fetch(java.lang.String)>
<com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()>
<ch.qos.logback.core.net.SocketConnectorBase: java.net.Socket call()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onInflate(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.StreetViewPanoramaOptions,android.os.Bundle)>
<android.view.View: void setScaleY(float)>
<com.google.android.gms.common.api.Status: int getStatusCode()>
<com.google.android.gms.common.api.internal.zabw: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>
<com.facebook.react.views.scroll.ReactScrollView: java.lang.Runnable access$502(com.facebook.react.views.scroll.ReactScrollView,java.lang.Runnable)>
<com.adjust.sdk.AttributionHandler$6: void <init>(com.adjust.sdk.AttributionHandler)>
<com.google.android.material.bottomnavigation.BottomNavigationMenuView: void <init>(android.content.Context)>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: void handleError(java.lang.String,java.lang.Exception)>
<android.view.ViewStub: android.view.View inflate()>
<com.google.android.gms.measurement.internal.zzd: void zzd(com.google.android.gms.measurement.internal.zzd,java.lang.String,long)>
<com.adjust.sdk.AdjustFactory: com.adjust.sdk.IRequestHandler getRequestHandler(com.adjust.sdk.IActivityHandler,com.adjust.sdk.IPackageHandler)>
<com.google.android.gms.maps.model.PolygonOptions: java.util.List getPoints()>
<java.lang.String: int codePointCount(int,int)>
<android.widget.Button: int getMeasuredHeight()>
<android.widget.ImageButton: void setAlpha(float)>
<com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)>
<com.google.android.gms.common.api.internal.zabd: void <init>(android.content.Context,com.google.android.gms.common.api.internal.zaaz,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList,com.google.android.gms.common.api.internal.zabt)>
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>
<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<com.google.android.material.chip.Chip: void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable)>
<android.app.Fragment: android.os.Bundle getArguments()>
<com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: com.google.android.material.ripple.RippleDrawableCompat newDrawable()>
<com.google.android.material.transformation.ExpandableBehavior: boolean didStateChange(boolean)>
<com.facebook.react.ReactInstanceManager: void onWindowFocusChange(boolean)>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean)>
<com.google.android.material.tabs.TabLayout: void setScrollPosition(int,float,boolean,boolean)>
<java.io.ObjectInputStream: void close()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: float getMaxZoomLevel()>
<java.util.WeakHashMap: void <init>()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeDoubleObject(android.os.Parcel,int,java.lang.Double,boolean)>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>
<com.google.android.gms.internal.measurement.zzkg: boolean zzi()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void setControllerId(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjo: java.util.Iterator zzb()>
<ch.qos.logback.core.Context: ch.qos.logback.core.status.StatusManager getStatusManager()>
<com.facebook.datasource.AbstractDataSource: boolean hasFailed()>
<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.google.common.collect.Maps$EntryFunction$2: void <init>(java.lang.String,int)>
<com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings build()>
<com.facebook.react.modules.appstate.AppStateModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<androidx.collection.ArrayMap: void <init>(int)>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void addStatus(ch.qos.logback.core.Context,ch.qos.logback.core.status.Status)>
<com.azure.authenticator.accounts.GenericAccount: com.azure.authenticator.accounts.RestoreCapability getRestoreCapability()>
<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<ch.qos.logback.core.pattern.parser.Token: void <init>(int)>
<com.facebook.soloader.SoLoader: boolean checkIfSystemApp(android.content.Context,int)>
<com.google.android.gms.internal.measurement.zzjk: boolean zzD(java.lang.Object,java.lang.Object)>
<dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories_InternalFactoryFactory_Factory: dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories$InternalFactoryFactory newInstance(android.app.Application,java.util.Set,dagger.hilt.android.internal.builders.ViewModelComponentBuilder)>
<com.google.android.material.datepicker.Month$1: com.google.android.material.datepicker.Month[] newArray(int)>
<com.airbnb.lottie.model.KeyPath: boolean propagateToChildren(java.lang.String,int)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: long getCurrentTime()>
<java.io.Closeable: void close()>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: com.google.android.gms.common.api.Api getApi()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager$buildAndShowActionMenu$$inlined$apply$lambda$1: void <init>(androidx.appcompat.widget.ListPopupWindow,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter,com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void access$handleGraphPolicyResult(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.authentication.aad.entities.AadNgcGraphPolicyResult)>
<com.facebook.imagepipeline.memory.BucketsBitmapPool: void free(android.graphics.Bitmap)>
<java.lang.Math: double floor(double)>
<com.microsoft.authenticator.msa.entities.GetMsaTicketResult$Success: void <init>(com.microsoft.onlineid.Ticket)>
<com.google.android.gms.internal.auth-api-phone.zze: void zza(com.google.android.gms.internal.auth-api-phone.zzg)>
<android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
<com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator)>
<com.google.android.gms.common.internal.zzm: void <init>(android.content.ComponentName,int)>
<com.google.android.gms.internal.measurement.zzhi: boolean zzc()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onElevationsChanged(float,float,float)>
<com.facebook.react.modules.network.ProgressResponseBody: com.facebook.react.modules.network.ProgressListener access$200(com.facebook.react.modules.network.ProgressResponseBody)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: com.google.android.gms.maps.model.StreetViewPanoramaCamera getPanoramaCamera()>
<com.google.android.gms.maps.StreetViewPanoramaOptions: java.lang.String getPanoramaId()>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount: java.lang.String getUpn()>
<com.google.android.material.button.MaterialButtonHelper: boolean isCheckable()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$Companion: void <init>()>
<androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result failure()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$leaveWorkplaceJoin$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.listener.RequestListener: void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean)>
<com.google.android.gms.measurement.internal.zzai: void zzi(java.lang.String,java.lang.String)>
<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.facebook.react.jstasks.HeadlessJsTaskEventListener: void onHeadlessJsTaskStart(int)>
<com.google.android.material.datepicker.MaterialDatePicker: void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)>
<com.google.android.gms.common.api.internal.zal: void zac(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult,java.lang.String)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.onlineid.sdk.extension.SessionManager,com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.facebook.react.modules.network.ForwardingCookieHandler$4: void doInBackgroundGuarded(java.lang.Void[])>
<com.airbnb.lottie.model.DocumentData$Justification: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ResizeAndRotateProducer newResizeAndRotateProducer(com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)>
<java.util.LinkedList: java.lang.Object getLast()>
<com.google.android.material.transformation.ExpandableBehavior: com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>
<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)>
<com.google.android.gms.measurement.internal.zzaf: com.google.android.gms.measurement.internal.zzaf zzk(com.google.android.gms.measurement.internal.zzaf)>
<com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int getViewAbsoluteBottom()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onEnableNgcButtonClicked$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,java.lang.String)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<com.google.android.gms.measurement.internal.zzgu: void <init>(com.google.android.gms.measurement.internal.zzhn,java.lang.String,java.lang.String,java.lang.Object,long)>
<com.facebook.react.views.progressbar.ProgressBarShadowNode: void initMeasureFunction()>
<android.widget.TextView: int getPaddingLeft()>
<com.facebook.react.modules.websocket.WebSocketModule$ContentHandler: void onMessage(java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.google.android.material.chip.ChipGroup: void setChipSpacing(int)>
<com.microsoft.brooklyn.ui.payment.EditAddPaymentFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.payment.EditAddPaymentFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<android.view.ViewGroup: void setPressed(boolean)>
<ch.qos.logback.classic.spi.StackTraceElementProxy: ch.qos.logback.classic.spi.ClassPackagingData getClassPackagingData()>
<com.google.android.gms.maps.LocationSource: void activate(com.google.android.gms.maps.LocationSource$OnLocationChangedListener)>
<ch.qos.logback.core.net.SocketConnector: void setSocketFactory(javax.net.SocketFactory)>
<com.google.android.gms.dynamic.IObjectWrapper$Stub: void <init>()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()>
<com.google.android.gms.internal.measurement.zzjx: int zzf()>
<com.google.android.gms.common.server.response.zap: void <init>()>
<android.os.Bundle: void putFloat(java.lang.String,float)>
<com.adjust.sdk.Adjust: boolean isEnabled()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.microsoft.authenticator.mfasdk.configuration.MfaSdkEnvironmentInternal: com.microsoft.authenticator.mfasdk.configuration.MfaSdkEnvironmentInternal$MfaTargetEnvironmentEnum getMfaTargetEnvironment()>
<com.google.android.material.textfield.ClearTextEndIconDelegate: void animateIcon(boolean)>
<com.google.common.collect.RegularImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>
<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>
<android.app.job.JobParameters: android.os.Bundle getTransientExtras()>
<com.google.android.gms.common.data.AbstractDataBuffer: java.util.Iterator singleRefIterator()>
<com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String customType()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer newBranchOnSeparateImagesProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.common.api.internal.zax: boolean zai()>
<com.facebook.react.ReactInstanceManager: void onHostPause(android.app.Activity)>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>
<com.google.android.gms.common.images.Size: java.lang.NumberFormatException zaa(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: androidx.fragment.app.FragmentActivity access$4400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.CameraPosition getCamera()>
<com.google.android.material.textfield.TextInputLayout: boolean shouldUseEditTextBackgroundForBoxBackground()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.repository.PaymentsRepository paymentsRepository()>
<com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener)>
<com.facebook.imagepipeline.image.EncodedImage: void setBytesRange(com.facebook.imagepipeline.common.BytesRange)>
<androidx.fragment.app.Fragment: boolean getRetainInstance()>
<com.google.android.gms.internal.measurement.zzeu: com.google.android.gms.internal.measurement.zzeu zza(android.content.Context)>
<com.google.android.gms.internal.location.zzm: void <init>()>
<com.airbnb.lottie.model.KeyPath: boolean fullyResolvesTo(java.lang.String,int)>
<com.google.android.material.internal.CollapsingTextHelper: void ensureExpandedTexture()>
<androidx.preference.Preference: void setDefaultValue(java.lang.Object)>
<com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)>
<com.facebook.drawee.view.DraweeView: void doAttach()>
<android.util.JsonWriter: void <init>(java.io.Writer)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.google.android.gms.common.server.response.FastParser: long zap(java.io.BufferedReader)>
<android.widget.LinearLayout: int getPaddingRight()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void showEntropyLayout()>
<com.google.android.material.card.MaterialCardViewHelper: void updateContentPadding()>
<com.google.android.gms.safetynet.SafetyNetApi$SafeBrowsingResult: java.lang.String getMetadata()>
<androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.location.GeofencingRequest$Builder: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzaa()>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaValidateDeviceNotification: void <init>(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSessionUseCase,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase)>
<com.google.android.gms.auth.api.signin.internal.zzd: void <init>(android.content.Context,java.util.Set)>
<androidx.fragment.app.Fragment: boolean isInLayout()>
<com.google.android.material.chip.ChipDrawable: boolean canShowCheckedIcon()>
<com.google.android.material.card.MaterialCardView: void setAncestorContentPadding(int,int,int,int)>
<com.facebook.react.modules.camera.ImageEditingManager: java.io.File getFileFromUri(android.content.Context,android.net.Uri)>
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.google.android.material.internal.StateListAnimator: void setState(int[])>
<com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder zoom(float)>
<com.google.common.collect.ImmutableCollection: int internalArrayEnd()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.crypto.tink.Registry$2: void <init>(com.google.crypto.tink.KeyTypeManager)>
<android.widget.CheckedTextView: void setMaxLines(int)>
<com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEvent(java.lang.String)>
<com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBundle(android.os.Parcel,int,android.os.Bundle,boolean)>
<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.android.gms.internal.measurement.zzkj: boolean zza(byte[],int,int)>
<com.google.android.gms.internal.measurement.zzcx: void <init>()>
<com.airbnb.lottie.model.animatable.AnimatableValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.facebook.react.modules.core.ExceptionsManagerModule: void <init>(com.facebook.react.devsupport.interfaces.DevSupportManager)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: void <init>(android.content.ContentResolver,com.facebook.imagepipeline.core.ProducerFactory,com.facebook.imagepipeline.producers.NetworkFetcher,boolean,boolean,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,boolean,boolean,boolean,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)>
<androidx.fragment.app.FragmentActivity: void onPause()>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void addView(com.facebook.react.views.viewpager.ReactViewPager,android.view.View,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$8: com.microsoft.authenticator.notifications.controller.FcmTokenRefreshWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.maps.model.MarkerOptions: boolean isVisible()>
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker)>
<com.adjust.sdk.ActivityHandler$34: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.EventResponseData)>
<com.google.android.gms.common.api.internal.zabd: void zan(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<ch.qos.logback.core.rolling.helper.FileFilterUtil: java.io.File[] filesInFolderMatchingStemRegex(java.io.File,java.lang.String)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: int getApkVersion(android.content.Context)>
<com.adjust.sdk.SharedPreferencesManager: void saveBoolean(java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzbr: void zzU(com.google.android.gms.internal.measurement.zzbg)>
<com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator)>
<com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void <init>()>
<com.facebook.react.uimanager.ReactStylesDiffMap: int getInt(java.lang.String,int)>
<com.facebook.imagepipeline.core.ImagePipeline: void clearMemoryCaches()>
<com.google.android.gms.internal.measurement.zzmp: void <init>()>
<com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: void <init>(com.facebook.react.views.switchview.ReactSwitchManager$1)>
<com.google.android.gms.common.api.internal.zaba: boolean zad()>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<com.facebook.react.ReactActivityDelegate$2: void <init>(com.facebook.react.ReactActivityDelegate,int,java.lang.String[],int[])>
<com.google.android.gms.auth.api.identity.SignInCredential: java.lang.String getGivenName()>
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzkh: void zzo(java.lang.Object,long,java.lang.Object)>
<com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)>
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation createAnimation()>
<com.google.android.material.navigation.NavigationBarItemView: void access$100(com.google.android.material.navigation.NavigationBarItemView,android.view.View)>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzjb: void zzi()>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter findManagerSetter(java.lang.Class)>
<com.adjust.sdk.InstallReferrer: long getInstallBeginTimestampSeconds(java.lang.Object)>
<com.facebook.imagepipeline.memory.MemoryChunkPool: com.facebook.imagepipeline.memory.MemoryChunk alloc(int)>
<com.google.android.material.snackbar.BaseTransientBottomBar: com.google.android.material.snackbar.BaseTransientBottomBar setAnchorView(android.view.View)>
<com.google.android.gms.internal.measurement.zzha: void zzB(int,java.util.List,boolean)>
<com.google.android.gms.cloudmessaging.Rpc: void zza(android.content.Context,android.content.Intent)>
<com.airbnb.lottie.model.layer.TextLayer: void drawCharacterFromFont(java.lang.String,com.airbnb.lottie.model.DocumentData,android.graphics.Canvas)>
<sun.misc.Unsafe: float getFloat(java.lang.Object,long)>
<com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: boolean isAutoBackupSuccessful()>
<com.facebook.react.modules.network.ForwardingCookieHandler: void destroy()>
<android.text.Layout: int getEllipsisCount(int)>
<com.airbnb.lottie.LottieAnimationView: int access$000(com.airbnb.lottie.LottieAnimationView)>
<android.widget.EditText: void setMinWidth(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onCompatShadowChanged()>
<com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)>
<com.google.android.material.datepicker.YearGridAdapter: int getYearForPosition(int)>
<com.facebook.react.views.picker.ReactPickerItem: void <init>(com.facebook.react.bridge.ReadableMap)>
<com.microsoft.authenticator.registration.mfa.abstraction.QrCodeResultHandlerAadMfaAccount: void <init>(com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.microsoft.authenticator.registration.mfa.businessLogic.ActivationParametersParserAadMfa,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.widget.FrameLayout: void setBackgroundResource(int)>
<com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: void setFromDynamic(com.facebook.react.bridge.Dynamic)>
<com.facebook.shimmer.Shimmer$ColorHighlightBuilder: com.facebook.shimmer.Shimmer$ColorHighlightBuilder setHighlightColor(int)>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: java.lang.String zzh(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.azure.authenticator.databinding.ThirdPartyNoticeBinding: android.widget.RelativeLayout getRoot()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int doPeek()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void finishFlowWithErrorIfNeeded(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.google.android.gms.common.internal.ClientSettings: java.util.Map zaa()>
<com.google.android.datatransport.cct.CctTransportBackend: java.net.URL parseUrlOrThrow(java.lang.String)>
<com.airbnb.lottie.model.content.ShapePath: java.lang.String getName()>
<java.io.InputStream: void reset()>
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>
<androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)>
<com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeComment()>
<com.facebook.react.bridge.CatalystInstance: void destroy()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzac()>
<ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: void <init>()>
<androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.gms.internal.measurement.zzgz: void <init>(com.google.android.gms.internal.measurement.zzgw)>
<com.airbnb.lottie.model.content.ShapeData: void <init>(android.graphics.PointF,boolean,java.util.List)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider backupFlowViewModelProvider()>
<androidx.fragment.app.FragmentActivity: void <init>()>
<com.facebook.imagepipeline.core.CloseableReferenceFactory: java.lang.String access$000(java.lang.Throwable)>
<com.google.android.gms.internal.auth.zzk: void <init>(com.google.android.gms.internal.auth.zzj)>
<com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)>
<java.math.RoundingMode: int ordinal()>
<com.airbnb.lottie.animation.content.PolystarContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.PolystarShape)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onResume()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment_MembersInjector: void injectWorkplaceJoinUseCase(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase)>
<com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF getVertex()>
<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.location.zzp: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,android.location.Location)>
<com.azure.authenticator.logging.Hilt_LoggingReceiver: void <init>()>
<com.facebook.react.ReactInstanceManager: void destroy()>
<ch.qos.logback.classic.LoggerContext: void fireOnStart()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.common.BrooklynBGTaskScheduler access$8000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.measurement.zzbw: java.lang.String zzc()>
<com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy: void <init>()>
<com.facebook.react.views.scroll.ScrollEvent: java.lang.String getEventName()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void notifyStatusUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void disableFpsListener()>
<com.google.common.collect.ImmutableMap$SerializedForm: java.lang.Object legacyReadResolve()>
<com.google.android.gms.internal.measurement.zzjk: java.lang.Object zzG(int,java.util.List,com.google.android.gms.internal.measurement.zzhw,java.lang.Object,com.google.android.gms.internal.measurement.zzjw)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int nextByte()>
<com.airbnb.lottie.value.ScaleXY: void <init>(float,float)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getSkewAngle()>
<com.azure.authenticator.databinding.SharedDeviceModeBinding: com.azure.authenticator.databinding.SharedDeviceModeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.os.Parcel: void writeBinderList(java.util.List)>
<com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition build()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_Factory: com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel newInstance(android.content.Context,com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase)>
<com.facebook.imagepipeline.cache.CountingMemoryCache$1: int getSizeInBytes(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.google.android.gms.internal.maps.zzah: void <init>(android.os.IBinder)>
<com.facebook.react.views.text.TextAttributeProps: void setAllowFontScaling(boolean)>
<com.google.android.material.chip.Chip: boolean isCheckable()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void access$showAadNgcSessionDialog(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyData)>
<com.google.android.gms.common.images.ImageManager: com.google.android.gms.internal.base.zak zad(com.google.android.gms.common.images.ImageManager)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)>
<android.widget.FrameLayout: void setFocusable(boolean)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: java.lang.ref.WeakReference access$2400(com.google.android.material.bottomappbar.BottomAppBar$Behavior)>
<com.adjust.sdk.DeviceInfo: java.lang.String getApiLevel()>
<android.widget.TextView: int getMeasuredWidth()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$networkErrorDialogBuilder$2: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.google.android.gms.internal.measurement.zzdf: boolean zze()>
<com.google.android.gms.internal.measurement.zzdf: void zzy(com.google.android.gms.internal.measurement.zzdf)>
<com.google.android.material.shape.MaterialShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<com.facebook.common.disk.NoOpDiskTrimmableRegistry: com.facebook.common.disk.NoOpDiskTrimmableRegistry getInstance()>
<com.facebook.react.modules.dialog.DialogModule$1: void <init>(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper,android.os.Bundle,com.facebook.react.bridge.Callback)>
<com.google.android.gms.measurement.internal.zzai: long zzG(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: byte[] maybeBase64Decode(java.lang.String)>
<com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException: void <init>(int,int,int,int)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>
<com.google.android.gms.measurement.internal.zzkk: java.security.MessageDigest zzN()>
<com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)>
<com.google.android.gms.internal.measurement.zzji: boolean zzj(java.lang.Object)>
<ch.qos.logback.core.subst.NodeToStringTransformer: java.lang.String constructRecursionErrorMessage(java.util.Stack)>
<com.google.android.material.card.MaterialCardView: boolean isCheckable()>
<android.os.Parcel: void writeString(java.lang.String)>
<ch.qos.logback.core.joran.action.PropertyAction: void loadAndSetProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.io.InputStream,ch.qos.logback.core.joran.action.ActionUtil$Scope)>
<com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)>
<ch.qos.logback.core.util.InterruptUtil: void <init>(ch.qos.logback.core.Context)>
<com.facebook.imagepipeline.platform.PlatformDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace)>
<com.google.android.gms.measurement.internal.zzez: java.lang.String zza(com.google.android.gms.measurement.internal.zzez)>
<com.google.android.gms.internal.maps.zzc: boolean zza(android.os.Parcel)>
<com.facebook.react.uimanager.ThemedReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>
<com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult: com.microsoft.authenticator.graphclient.entities.Settings getSettings()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputMultiByteChar(int,int)>
<com.microsoft.authenticator.qrcode.abstraction.ScanQrCodeViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardlist.presentationlogic.CardListViewModel cardListViewModel()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_4_7()>
<com.airbnb.lottie.LottieDrawable$6: void <init>(com.airbnb.lottie.LottieDrawable,int)>
<androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
<com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation: com.airbnb.lottie.model.content.GradientColor getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.gms.maps.internal.zzad: void zzg(com.google.android.gms.internal.maps.zzt)>
<com.google.common.collect.Collections2: java.lang.StringBuilder newStringBuilderForCollection(int)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zad()>
<com.airbnb.lottie.animation.content.ContentGroup: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)>
<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>
<java.util.Map: int size()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(android.net.Uri)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment_GeneratedInjector: void injectBackupDetailsFragment(com.azure.authenticator.ui.fragment.main.BackupDetailsFragment)>
<ch.qos.logback.core.filter.Filter: void start()>
<com.fasterxml.jackson.core.base.GeneratorBase: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>
<ch.qos.logback.core.net.ssl.SSLConfiguration: ch.qos.logback.core.net.ssl.SSLParametersConfiguration getParameters()>
<com.google.android.datatransport.runtime.SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setEvent(com.google.android.datatransport.Event)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_13_14()>
<com.google.android.gms.internal.location.zzaz: void zzx(android.app.PendingIntent,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.adjust.sdk.AdjustInstance: void setSendingReferrersAsNotSent(android.content.Context)>
<com.google.android.material.chip.ChipDrawable: boolean getUseCompatRipple()>
<com.google.android.datatransport.cct.internal.ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo$Builder setAndroidClientInfo(com.google.android.datatransport.cct.internal.AndroidClientInfo)>
<com.google.android.material.shadow.ShadowRenderer: void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int)>
<android.widget.ListAdapter: int getItemViewType(int)>
<com.google.android.gms.internal.measurement.zzko: com.google.android.gms.internal.measurement.zzkp zza()>
<androidx.fragment.app.Fragment: void onResume()>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: void onSuccess(java.lang.Object)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate$4: void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate)>
<com.azure.authenticator.databinding.AccountListMenuItemBinding: void <init>(android.widget.TextView,android.widget.TextView)>
<com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)>
<com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)>
<java.util.Map: boolean containsKey(java.lang.Object)>
<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()>
<com.microsoft.authenticator.authentication.msa.entities.MsaSession: int getNotificationId()>
<com.google.android.material.textview.MaterialTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_4(int)>
<com.google.common.base.Optional: com.google.common.base.Optional absent()>
<java.util.logging.Logger: java.lang.String getName()>
<com.microsoft.authenticator.policyChannel.businessLogic.AuthAppStateUseCase: void <init>(com.microsoft.authenticator.policyChannel.repository.AuthAppStateRepository)>
<com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<com.google.android.gms.internal.measurement.zzja: boolean zzI(java.lang.Object,java.lang.Object,int)>
<com.facebook.yoga.YogaNode: void setAspectRatio(float)>
<com.google.android.gms.measurement.internal.zzes: void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,boolean)>
<com.google.android.material.snackbar.SnackbarManager: void showNextSnackbarLocked()>
<android.graphics.RectF: void offset(float,float)>
<com.facebook.react.views.textinput.ReactEditText: int incrementAndGetEventCounter()>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKatWatch()>
<com.azure.authenticator.storage.database.DbAccount: boolean isTotpCodeShown()>
<androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)>
<com.facebook.react.modules.systeminfo.AndroidInfoModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.measurement.zzla: long zzy()>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: boolean hasMfaAccountsConfiguredForNotifications(com.azure.authenticator.storage.Storage)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthAuto()>
<com.facebook.drawee.drawable.RoundedColorDrawable: void <init>(int)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void setSelection(int)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: void <init>()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.material.datepicker.MaterialCalendar: void postSmoothRecyclerViewScroll(int)>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: void <init>()>
<com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()>
<com.evernote.android.job.util.JobPreconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onStart()>
<kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectDidNotificationService(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.microsoft.did.feature.notifications.NotificationService)>
<com.azure.authenticator.ui.fragment.main.ViewLogTask: void onPostExecute(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FirebaseNotificationsWrapper firebaseNotificationsWrapper()>
<com.facebook.react.views.view.ReactViewGroup: void dispatchOverflowDraw(android.graphics.Canvas)>
<android.app.Fragment: android.app.Activity getActivity()>
<com.azure.authenticator.notifications.AbstractNotification: void logTelemetryForResult(java.lang.Object)>
<com.google.android.gms.internal.measurement.zznk: void <init>()>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)>
<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>
<com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.imagepipeline.cache.StagingArea access$100(com.facebook.imagepipeline.cache.BufferedDiskCache)>
<com.google.android.gms.internal.auth.zzaq: com.google.android.gms.auth.api.proxy.ProxyApi$SpatulaHeaderResult zzc(com.google.android.gms.common.api.Status)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void <init>(android.content.Context)>
<com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener: void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab)>
<com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableFloatValue getCopies()>
<com.google.android.material.button.MaterialButtonHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface: void setPrompt(android.view.View,java.lang.String)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>
<com.google.android.material.resources.CancelableFontCallback$ApplyFont: void apply(android.graphics.Typeface)>
<com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.google.android.datatransport.cct.CCTDestination: java.lang.String getAPIKey()>
<com.google.android.datatransport.runtime.SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest$Builder setTransportName(java.lang.String)>
<android.view.View: int getVisibility()>
<java.util.LinkedList: void clear()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.airbnb.lottie.LottieTask$LottieFutureTask: void <init>(com.airbnb.lottie.LottieTask,java.util.concurrent.Callable)>
<com.google.android.material.timepicker.ClockFaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void <init>()>
<com.adjust.sdk.IPackageHandler: void closeFirstPackage(com.adjust.sdk.ResponseData,com.adjust.sdk.ActivityPackage)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.settings.AutofillControlsFragment injectAutofillControlsFragment2(com.microsoft.brooklyn.ui.settings.AutofillControlsFragment)>
<com.google.android.gms.internal.measurement.zzjk: int zzb(java.util.List)>
<com.facebook.imagepipeline.animated.factory.AnimatedFactory: com.facebook.imagepipeline.decoder.ImageDecoder getWebPDecoder(android.graphics.Bitmap$Config)>
<com.airbnb.lottie.LottieDrawable: void cancelAnimation()>
<com.google.android.gms.internal.measurement.zzcn: boolean zzc()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>
<com.google.android.gms.common.api.internal.TaskApiCall: boolean shouldAutoResolveMissingFeatures()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_Factory: void <init>(javax.inject.Provider)>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectDeviceScreenLockConfigChecker(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<com.microsoft.authenticator.reactnative.ReactNativeApplication: void initReactNative(android.app.Application,boolean,java.util.List)>
<java.io.FilterInputStream: void <init>(java.io.InputStream)>
<com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzcx zzi()>
<com.facebook.react.ReactDelegate: com.facebook.react.ReactNativeHost getReactNativeHost()>
<android.widget.EditText: int getMaxLines()>
<com.facebook.cache.disk.DiskStorage: void clearAll()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<android.util.SparseLongArray: int keyAt(int)>
<com.google.android.gms.auth.api.signin.internal.zzg: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistered$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,kotlin.coroutines.Continuation)>
<android.os.Parcel: void writeBooleanArray(boolean[])>
<com.azure.authenticator.ui.backup.BackupFlowActivity$deleteBackupForCachedMsa$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,kotlin.coroutines.Continuation)>
<androidx.legacy.content.WakefulBroadcastReceiver: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>
<android.os.Looper: android.os.Looper myLooper()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao verifiableCredentialCardDao()>
<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>
<java.util.LinkedHashMap: java.util.Set keySet()>
<com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)>
<com.airbnb.lottie.network.DefaultLottieFetchResult: boolean isSuccessful()>
<com.google.android.gms.internal.measurement.zzco: int zza()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment injectNewAccountFragment2(com.microsoft.authenticator.registration.'unknown'.viewLogic.NewAccountFragment)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF)>
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.facebook.datasource.BaseDataSubscriber: void onFailureImpl(com.facebook.datasource.DataSource)>
<ch.qos.logback.core.rolling.helper.FileSorter$1: void <init>(ch.qos.logback.core.rolling.helper.FileSorter)>
<android.os.Parcel: java.lang.String readString()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void dispatchOnSlide(int)>
<com.facebook.imagepipeline.memory.MemoryChunk: java.nio.ByteBuffer getByteBuffer()>
<com.microsoft.brooklyn.module.autofill.heuristics.HeuristicsConnector: void <init>()>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.azure.authenticator.ui.fragment.main.Hilt_SendFeedbackFragment: dagger.hilt.android.internal.managers.FragmentComponentManager componentManager()>
<android.widget.AutoCompleteTextView: void setThreshold(int)>
<com.facebook.imagepipeline.drawable.DrawableFactory: android.graphics.drawable.Drawable createDrawable(com.facebook.imagepipeline.image.CloseableImage)>
<com.google.android.datatransport.runtime.backends.CreationContext: com.google.android.datatransport.runtime.backends.CreationContext create(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$enableBrowserAccess$enableBrowserAccessDialogBuilder$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<android.graphics.Color: int argb(int,int,int,int)>
<com.azure.authenticator.databinding.FragmentViewGeneratedPasswordBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)>
<com.facebook.imagepipeline.memory.BasePool: void ensurePoolSizeInvariant()>
<androidx.work.CoroutineWorker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.NativeModuleRegistry processPackages(com.facebook.react.bridge.ReactApplicationContext,java.util.List,boolean)>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: long getTimeout()>
<com.github.amlcurran.showcaseview.TextDrawer: void draw(android.graphics.Canvas)>
<com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog getErrorDialog(androidx.fragment.app.Fragment,int,int,android.content.DialogInterface$OnCancelListener)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _finishAndReturnString()>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: void setMethod(java.lang.String)>
<com.google.android.gms.common.api.internal.zaar: void zaF(com.google.android.gms.common.ConnectionResult)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void onBackPressed()>
<ch.qos.logback.core.FileAppender: void start()>
<com.microsoft.brooklyn.module.autofill.response.abstraction.SaveRequestFormHandlerFactory: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredentialSaveDatasetsUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressSaveDatasetsUseCase,com.microsoft.brooklyn.module.autofill.response.businesslogic.payment.PaymentSaveDatasetsUseCase)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)>
<bolts.Task$14: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,bolts.Continuation,bolts.Task)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>
<com.microsoft.aad.adal.Logger$LogLevel: com.microsoft.aad.adal.Logger$LogLevel valueOf(java.lang.String)>
<com.google.android.gms.measurement.internal.zzfd: java.lang.String zzb(java.lang.String,android.content.res.Resources,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setMaxAllowedDelay(long)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getPhoneAppDetailId()>
<java.lang.Object: java.lang.Object clone()>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: boolean applyValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.facebook.react.uimanager.ReactPointerEventsView: com.facebook.react.uimanager.PointerEvents getPointerEvents()>
<android.graphics.Paint: float ascent()>
<com.google.android.gms.common.api.internal.zabl: void zab(com.google.android.gms.common.ConnectionResult)>
<java.io.RandomAccessFile: long getFilePointer()>
<com.google.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer newPostprocessorBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer)>
<com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)>
<com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getFilename(java.lang.String)>
<com.fasterxml.jackson.core.json.JsonReadContext: void reset(int,int,int)>
<com.facebook.imageutils.ImageMetaData: void <init>(int,int,android.graphics.ColorSpace)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener: void onImageLoadStatusUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfData,int)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_Factory: com.azure.authenticator.ui.fragment.main.SettingsViewModel newInstance(android.content.Context,com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.ui.authentication.MsaSessionActivity injectMsaSessionActivity2(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isFirstLaunch()>
<android.widget.HorizontalScrollView: android.graphics.drawable.Drawable getBackground()>
<android.widget.LinearLayout: int getMeasuredWidth()>
<com.airbnb.lottie.model.layer.Layer: long getParentId()>
<com.airbnb.lottie.manager.FontAssetManager: android.graphics.Typeface typefaceForStyle(android.graphics.Typeface,java.lang.String)>
<com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)>
<com.google.android.material.shape.MaterialShapeDrawable: float getTranslationZ()>
<android.graphics.Path: void <init>()>
<com.google.android.gms.measurement.internal.zzg: long zzL()>
<com.google.android.gms.internal.measurement.zzgz: void zzg(int,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.mfa.businessLogic.MfaSdkAuthenticatorDelegate mfaSdkAuthenticatorDelegate()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void <init>()>
<com.airbnb.lottie.LottieCompositionFactory$9: com.airbnb.lottie.LottieResult call()>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient$Builder addOnConnectionFailedListener(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: boolean canReadAsFile(java.lang.String)>
<com.airbnb.lottie.utils.MiscUtils: int clamp(int,int,int)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean updateCheckedStates(int,boolean)>
<com.google.android.gms.internal.maps.zzf: com.google.android.gms.internal.maps.zze zzb(android.os.IBinder)>
<android.view.ViewGroup: int getScrollY()>
<com.google.android.gms.cloudmessaging.zzw: void <init>()>
<com.facebook.react.modules.websocket.WebSocketModule$ContentHandler: void onMessage(okio.ByteString,com.facebook.react.bridge.WritableMap)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void <init>(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.microsoft.authenticator.backup.abstraction.AutoBackupManager)>
<com.microsoft.brooklyn.module.autofill.authentication.CredentialsAutofillAuthActivity_MembersInjector: void injectCredAutofillCommonOperations(com.microsoft.brooklyn.module.autofill.authentication.CredentialsAutofillAuthActivity,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations)>
<com.google.android.gms.internal.measurement.zzkm: void <init>()>
<com.google.android.gms.internal.auth-api.zzab: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.auth.api.identity.zzf,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>
<com.facebook.react.views.art.ARTRenderableViewManager: void <init>(java.lang.String)>
<androidx.preference.TwoStatePreference: void setChecked(boolean)>
<com.facebook.react.views.text.ReactTextViewManagerCallback: void onPostProcessSpannable(android.text.Spannable)>
<com.google.android.gms.measurement.internal.zzht: java.lang.Object zzc(java.lang.Object)>
<com.google.android.gms.maps.zzah: void <init>(com.google.android.gms.maps.StreetViewPanoramaFragment$zza,com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.facebook.imagepipeline.memory.MemoryChunk: int read(int,byte[],int,int)>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object)>
<com.azure.authenticator.jobs.DeferrableWorkerUtils_Factory: void <init>(javax.inject.Provider)>
<java.net.HttpURLConnection: void setConnectTimeout(int)>
<com.github.amlcurran.showcaseview.ShowcaseAreaCalculator: android.graphics.Rect getShowcaseRect()>
<androidx.navigation.NavController: boolean popBackStack()>
<androidx.appcompat.widget.AppCompatSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.ads_identifier.zzg: void <init>(android.os.IBinder)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler: void setExportPasswordsFilePropertiesAndResult(com.microsoft.utilitysdk.CommonLibraryController$ExportInfo,android.net.Uri)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry)>
<com.google.android.gms.common.server.response.zaq: void <init>()>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setSourceExtensionJsonProto3(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)>
<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>
<android.graphics.Canvas: void rotate(float,float,float)>
<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>
<ch.qos.logback.core.joran.util.PropertyDescriptor: java.lang.Class getPropertyType()>
<com.airbnb.lottie.model.layer.Layer: long getId()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setProduct(java.lang.String)>
<com.google.android.material.bottomappbar.BottomAppBar$6: void <init>(com.google.android.material.bottomappbar.BottomAppBar)>
<kotlin.collections.MapsKt: java.util.HashMap hashMapOf(kotlin.Pair[])>
<com.azure.authenticator.databinding.SharedDeviceModeBinding: android.widget.LinearLayout getRoot()>
<com.facebook.react.uimanager.ThemedReactContext: void <init>(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String)>
<com.google.android.gms.tasks.OnSuccessListener: void onSuccess(java.lang.Object)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void access$300(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource)>
<com.azure.authenticator.databinding.ManageDeviceRegistrationBinding: com.azure.authenticator.databinding.ManageDeviceRegistrationBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$1300(com.google.android.material.badge.BadgeDrawable$SavedState)>
<ch.qos.logback.core.util.DefaultInvocationGate: void increaseMask()>
<javax.mail.Authenticator: void <init>()>
<ch.qos.logback.core.joran.spi.InterpretationContext: boolean isEmpty()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.qrcode.abstraction.IScanQrCodeAdapter access$6300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.facebook.cache.disk.DiskStorageCache: com.facebook.cache.disk.DiskStorage$Inserter startInsert(java.lang.String,com.facebook.cache.common.CacheKey)>
<android.os.StatFs: int getAvailableBlocks()>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>
<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>
<com.google.android.gms.internal.location.zza: void zzx(int,android.os.Parcel)>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager$Companion: void dismissProgressDialog()>
<com.google.android.gms.common.api.internal.GoogleApiManager: boolean zaA(com.google.android.gms.common.api.internal.GoogleApiManager,boolean)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalFileFetchProducer newLocalFileFetchProducer()>
<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>
<com.google.android.material.textfield.IndicatorViewController: int access$002(com.google.android.material.textfield.IndicatorViewController,int)>
<com.google.android.gms.measurement.internal.zzdz: void zzt(android.os.Bundle,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.common.util.WorkSourceUtil: android.os.WorkSource fromPackage(android.content.Context,java.lang.String)>
<android.view.View: void setCameraDistance(float)>
<com.google.android.gms.location.ActivityTransitionResult: boolean hasResult(android.content.Intent)>
<com.evernote.android.job.JobRequest$Builder: boolean access$1100(com.evernote.android.job.JobRequest$Builder)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$$special$$inlined$viewModels$1: void <init>(androidx.activity.ComponentActivity)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.TransportScheduleCallback,com.google.android.datatransport.runtime.EventInternal)>
<com.airbnb.lottie.model.LottieCompositionCache: void put(java.lang.String,com.airbnb.lottie.LottieComposition)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int)>
<ch.qos.logback.core.spi.ContextAwareBase: void <init>(ch.qos.logback.core.spi.ContextAware)>
<com.google.android.gms.internal.auth.zzag: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.gms.location.LocationAvailability: boolean isLocationAvailable()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zag(com.google.android.gms.common.server.response.FastJsonResponse$Field,float)>
<android.database.CursorWindow: boolean putNull(int,int)>
<com.google.android.gms.internal.location.zzaz: void zzC(com.google.android.gms.location.LocationRequest,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzai)>
<com.google.android.datatransport.cct.CctTransportBackend$HttpRequest: void <init>(java.net.URL,com.google.android.datatransport.cct.internal.BatchedLogRequest,java.lang.String)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<com.azure.authenticator.ui.MainActivity: void onNewIntent(android.content.Intent)>
<com.facebook.react.bridge.CatalystInstance: void initialize()>
<com.facebook.imagepipeline.listener.ForwardingRequestListener: void <init>(java.util.Set)>
<com.evernote.android.job.JobProxy$Common: int getRescheduleCount(com.evernote.android.job.JobRequest)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$Companion: void <init>()>
<ch.qos.logback.core.html.HTMLLayoutBase: java.util.Map getDefaultConverterMap()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.features.frx.viewLogic.FirstRunSetAsDefaultFragment injectFirstRunSetAsDefaultFragment2(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSetAsDefaultFragment)>
<android.view.ViewGroup: void drawableStateChanged()>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.AadAccount getAadAccount(java.lang.String,java.lang.String,java.lang.String)>
<android.app.Activity: android.content.pm.PackageManager getPackageManager()>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<com.airbnb.lottie.animation.content.PathContent: android.graphics.Path getPath()>
<com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder$coroutineTimer$1: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder)>
<ch.qos.logback.classic.spi.LoggerComparator: int compare(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Logger)>
<com.facebook.imagepipeline.core.ImagePipeline: boolean isInBitmapMemoryCache(android.net.Uri)>
<com.google.common.io.BaseEncoding$DecodingException: void <init>(java.lang.String)>
<com.facebook.react.views.switchview.ReactSwitchEvent: java.lang.String getEventName()>
<com.google.android.gms.auth.api.signin.internal.zzx: void <init>()>
<com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.auth.api.signin.internal.zzp: void zzp()>
<java.util.AbstractList: boolean removeAll(java.util.Collection)>
<android.widget.Button: void <init>(android.content.Context)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener: void <init>(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1)>
<java.util.LinkedList: boolean add(java.lang.Object)>
<com.google.android.material.internal.FlowLayout: boolean isSingleLine()>
<com.google.android.gms.internal.maps.zzz: java.util.List getPattern()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker getDeviceScreenLockConfigChecker()>
<com.google.android.gms.maps.model.zzr: void <init>()>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: androidx.core.app.NotificationCompat$Builder buildNotification(java.lang.String,java.lang.String,android.app.PendingIntent,boolean,boolean,int,java.lang.String)>
<com.google.android.gms.tasks.TaskCompletionSource: void setResult(java.lang.Object)>
<ch.qos.logback.core.FileAppender: void addErrorForCollision(java.lang.String,java.lang.String,java.lang.String)>
<com.microsoft.authenticator.notifications.controller.FcmListenerService_MembersInjector: void injectFcmRegistrationManager(com.microsoft.authenticator.notifications.controller.FcmListenerService,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<android.view.View: void onDraw(android.graphics.Canvas)>
<ch.qos.logback.core.joran.spi.ElementSelector: int getPrefixMatchLength(ch.qos.logback.core.joran.spi.ElementPath)>
<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)>
<com.google.android.gms.maps.internal.zzbp: void zza(com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate)>
<com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.datepicker.DatePickerDialogModule)>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()>
<androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<com.facebook.react.uimanager.ReactShadowNode: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _parseName(int)>
<com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()>
<com.google.android.datatransport.cct.internal.LogRequest: com.google.android.datatransport.cct.internal.ClientInfo getClientInfo()>
<com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker)>
<com.azure.authenticator.databinding.SharedDeviceModeBinding: com.azure.authenticator.databinding.SharedDeviceModeBinding inflate(android.view.LayoutInflater)>
<com.facebook.cache.disk.DefaultDiskStorage$FileInfo: void <init>(java.lang.String,java.lang.String,com.facebook.cache.disk.DefaultDiskStorage$1)>
<com.facebook.common.util.UriUtil: boolean isLocalContactUri(android.net.Uri)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.db.VcDatabase vcDatabase()>
<com.google.android.gms.common.api.internal.zaar: java.lang.String zaJ(int)>
<android.os.Bundle: int size()>
<com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setControllerListener(com.facebook.drawee.controller.ControllerListener)>
<com.facebook.react.modules.core.JavaTimerManager$Timer: int access$700(com.facebook.react.modules.core.JavaTimerManager$Timer)>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobStorage getJobStorage()>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: kotlinx.serialization.json.Json json()>
<javax.net.ssl.SSLSocket: int getReceiveBufferSize()>
<com.facebook.react.uimanager.ReactStylesDiffMap: boolean getBoolean(java.lang.String,boolean)>
<com.google.common.collect.Hashing: int smearedHash(java.lang.Object)>
<com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap getStartCap()>
<com.google.android.gms.internal.location.zzav: void zzh(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzai)>
<com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getFileTypefromExtension(java.lang.String)>
<com.facebook.react.views.text.ReactTagSpan: void <init>(int)>
<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>
<com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void onDataSourceNewResult(com.facebook.datasource.DataSource)>
<com.adjust.sdk.IActivityHandler: void trackEvent(com.adjust.sdk.AdjustEvent)>
<java.util.Arrays: double[] copyOf(double[],int)>
<java.io.BufferedReader: long skip(long)>
<com.google.android.gms.common.api.internal.IStatusCallback$Stub: void <init>()>
<com.google.android.gms.maps.StreetViewPanoramaFragment: void setArguments(android.os.Bundle)>
<com.google.android.gms.common.server.response.SafeParcelResponse: void <init>(int,android.os.Parcel,com.google.android.gms.common.server.response.zan)>
<ch.qos.logback.classic.spi.LoggerContextListener: void onStart(ch.qos.logback.classic.LoggerContext)>
<com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)>
<java.util.HashMap: int hashCode()>
<com.google.android.gms.internal.measurement.zzjk: com.google.android.gms.internal.measurement.zzjw zzC()>
<ch.qos.logback.classic.Logger: boolean isWarnEnabled(org.slf4j.Marker)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.storage.MfaSdkLocalStorage mfaSdkLocalStorage()>
<com.google.android.gms.internal.maps.zzg: void <init>(android.os.IBinder)>
<com.google.android.material.datepicker.DateValidatorPointForward$1: com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel)>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray)>
<okhttp3.Interceptor$Chain: okhttp3.Request request()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.drawable.ScalingUtils$ScaleType getResizeMode(java.lang.String)>
<com.facebook.fbreact.specs.NativeImageEditorSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String zzd(com.google.android.gms.auth.api.credentials.Credential)>
<com.facebook.imagepipeline.core.ExecutorSupplier: java.util.concurrent.Executor forLocalStorageRead()>
<com.google.android.datatransport.cct.internal.AutoValue_ClientInfo$Builder: void <init>()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _closeInput()>
<com.google.android.gms.common.images.ImageManager: android.os.Handler zaj(com.google.android.gms.common.images.ImageManager)>
<com.google.android.material.dialog.InsetDialogOnTouchListener: void <init>(android.app.Dialog,android.graphics.Rect)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.exportCred.ExportPasswordsViewModel exportPasswordsViewModel()>
<java.util.concurrent.locks.Lock: void lock()>
<com.google.android.gms.internal.measurement.zzgs: boolean zzh()>
<com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter: com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder reset()>
<com.facebook.drawee.drawable.ForwardingDrawable: void <init>(android.graphics.drawable.Drawable)>
<com.google.android.gms.maps.zzx: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraIdleListener)>
<com.google.android.gms.internal.measurement.zzis: void <init>()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment self()>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesConnection: void <init>(com.adjust.sdk.GooglePlayServicesClient$1)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)>
<ch.qos.logback.classic.spi.EventArgUtil: boolean successfulExtraction(java.lang.Throwable)>
<java.util.LinkedHashSet: java.util.Iterator iterator()>
<com.google.android.gms.measurement.internal.zzeg: void <init>(com.google.android.gms.measurement.internal.zzei,int,boolean,boolean)>
<com.facebook.react.modules.fresco.SystraceRequestListener: void <init>()>
<com.fasterxml.jackson.core.util.TextBuffer: void append(char[],int,int)>
<androidx.work.impl.background.systemjob.SystemJobService: android.os.IBinder onBind(android.content.Intent)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.Class getByConcreteType(java.lang.String,java.lang.reflect.Method)>
<android.widget.TextSwitcher: void setOnClickListener(android.view.View$OnClickListener)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordAutofillViewModel access$12700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)>
<com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormat getImageFormat_WrapIOException(java.io.InputStream)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>
<com.facebook.imagepipeline.producers.ProducerContext: java.lang.String getId()>
<com.google.android.gms.internal.location.zzbp: java.lang.Object[] zzb()>
<com.google.android.gms.internal.measurement.zzcm: com.google.android.gms.internal.measurement.zzcm zzb(java.lang.String)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenInfoFragment_MembersInjector: void injectAccountStorageCustomQueries(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenInfoFragment,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<androidx.core.os.LocaleListCompat: java.util.Locale get(int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseEscapedName(int[],int,int,int,int)>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isInBackground()>
<android.media.AudioManager: void playSoundEffect(int)>
<com.google.android.gms.measurement.internal.zzae: boolean zzw(java.lang.String)>
<com.azure.authenticator.databinding.FragmentImportPasswordsBinding: com.azure.authenticator.databinding.FragmentImportPasswordsBinding bind(android.view.View)>
<com.azure.authenticator.storage.database.migration.Migration10To11$Companion: void <init>()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zab(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<ch.qos.logback.core.subst.Node: void <init>(ch.qos.logback.core.subst.Node$Type,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzfg zza(java.lang.String,long)>
<android.widget.LinearLayout: void sendAccessibilityEvent(int)>
<com.google.android.gms.maps.internal.zzba: void <init>()>
<com.google.android.gms.dynamite.DynamiteModule: android.os.IBinder instantiate(java.lang.String)>
<java.lang.String: java.lang.String valueOf(char)>
<com.google.android.gms.common.zzk: byte[] zzc()>
<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void set(float,float,float)>
<com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll: void doInBackgroundGuarded(java.lang.Void[])>
<com.facebook.react.common.MapBuilder: java.util.HashMap newHashMap()>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)>
<com.azure.authenticator.accounts.GenericAccount: void <init>(java.lang.String,java.lang.String,com.azure.authenticator.accounts.AccountCapability,java.lang.String,boolean)>
<com.google.android.material.datepicker.UtcDates: android.icu.util.TimeZone getUtcAndroidTimeZone()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void nukeSymbols(boolean)>
<com.facebook.react.ReactFragment: com.facebook.react.ReactNativeHost getReactNativeHost()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setSdkVersion(java.lang.Integer)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>()>
<androidx.core.util.Pools$Pool: boolean release(java.lang.Object)>
<com.facebook.react.ReactInstanceManager: void recreateReactContextInBackgroundInner()>
<com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()>
<com.google.android.gms.internal.measurement.zzkn: int zzc(java.lang.CharSequence)>
<com.google.android.datatransport.runtime.TransportRuntime_Factory: com.google.android.datatransport.runtime.TransportRuntime_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.common.api.Batch: boolean zaf(com.google.android.gms.common.api.Batch)>
<com.adjust.sdk.Util: boolean isUrlFilteredOut(android.net.Uri)>
<com.google.android.material.datepicker.DateValidatorPointForward$1: com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int)>
<com.evernote.android.job.JobRequest: long getScheduledAt()>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRead(com.google.android.gms.common.api.internal.TaskApiCall)>
<androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: java.lang.CharSequence getStringWithColor(java.lang.String,int)>
<com.google.android.gms.location.LocationRequest: int hashCode()>
<ch.qos.logback.core.net.AbstractSocketAppender: javax.net.SocketFactory getSocketFactory()>
<com.facebook.binaryresource.FileBinaryResource: long size()>
<com.google.android.material.shape.MaterialShapeDrawable: void setPadding(int,int,int,int)>
<com.google.android.gms.tasks.zzs: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<com.facebook.imagepipeline.image.CloseableImage: void <init>()>
<android.widget.TextView: float getScaleX()>
<ch.qos.logback.core.rolling.RollingPolicyBase: void determineCompressionMode()>
<com.adjust.sdk.ActivityHandler$30: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.ads.identifier.zzc: void <init>()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseMediumName2(int,int)>
<com.facebook.yoga.YogaNode: void setPositionType(com.facebook.yoga.YogaPositionType)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.memory.MemoryTrimmableRegistry access$1500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>
<java.util.Queue: void clear()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: void init()>
<com.facebook.react.jstasks.HeadlessJsTaskContext: boolean isTaskRunning(int)>
<android.view.ViewGroup: void setTag(int,java.lang.Object)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity: void inject()>
<com.facebook.common.webp.WebpSupportStatus: boolean isSimpleWebpHeader(byte[],int)>
<com.google.android.material.floatingactionbutton.BorderDrawable$BorderState: void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<androidx.cardview.widget.CardView: float getCardElevation()>
<com.google.android.gms.location.SleepClassifyEvent: int getLight()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Integer readIntegerObject(android.os.Parcel,int)>
<com.google.android.gms.internal.auth.zzv: void <init>(int,java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker access$2800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator,boolean)>
<com.google.android.gms.internal.location.zzax: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)>
<com.google.android.material.shape.ShapeAppearancePathProvider: boolean pathOverlapsCorner(android.graphics.Path,int)>
<com.google.android.gms.measurement.internal.zzib: void zzu(com.google.android.gms.measurement.internal.zzib,android.os.Bundle,com.google.android.gms.measurement.internal.zzhu,com.google.android.gms.measurement.internal.zzhu,long)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float)>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: void updateNextCheck(long)>
<com.google.android.gms.internal.measurement.zzdq: int zzd()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void workAroundOreoBug(android.animation.ObjectAnimator)>
<com.adjust.sdk.ActivityHandler$26: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.common.internal.BaseGmsClient: void zzb(int,android.os.Bundle,int)>
<com.facebook.imagepipeline.core.ExecutorSupplier: java.util.concurrent.Executor forLightweightBackgroundTasks()>
<org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
<com.adjust.sdk.ActivityHandler: void access$200(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.common.api.internal.LifecycleCallback: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment)>
<com.google.android.gms.internal.measurement.zzci: void <init>()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)>
<com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader: void ensure()>
<com.facebook.react.views.text.TextAttributeProps: void setFontStyle(java.lang.String)>
<com.google.android.gms.tasks.zzj: java.lang.Object zzc(com.google.android.gms.tasks.zzj)>
<com.google.android.gms.measurement.internal.zzkd: void zzaf(com.google.android.gms.internal.measurement.zzdi,long,boolean)>
<com.facebook.imagepipeline.cache.CountingLruMap: int getValueSizeInBytes(java.lang.Object)>
<com.adjust.sdk.PackageBuilder: void checkDeviceIds(java.util.Map)>
<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float)>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>
<com.google.android.gms.common.util.DeviceProperties: boolean isAuto(android.content.Context)>
<com.google.android.gms.internal.measurement.zzck: boolean zze()>
<android.text.method.KeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<java.lang.Class: boolean isInstance(java.lang.Object)>
<com.facebook.react.uimanager.annotations.ReactPropGroup: float defaultFloat()>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.FillResponseSignedUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.response.abstraction.FillDatasetManager)>
<android.view.MenuItem: boolean isChecked()>
<ch.qos.logback.core.spi.AbstractComponentTracker: void setTimeout(long)>
<com.google.android.material.navigation.NavigationBarItemView: android.widget.ImageView access$000(com.google.android.material.navigation.NavigationBarItemView)>
<com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: com.google.android.datatransport.runtime.dagger.internal.Factory create(java.lang.Object)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity_GeneratedInjector: void injectSharedDeviceModeActivity(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_27_28$1: void <init>(int,int)>
<com.google.android.gms.internal.measurement.zzha: void zzJ(int,java.util.List,boolean)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: boolean maybeAddToExclusives(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.google.common.collect.MapMakerInternalMap$1: com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$DummyInternalEntry)>
<com.facebook.react.uimanager.ReactRoot: void setRootViewTag(int)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType)>
<android.text.TextPaint: float getTextSize()>
<com.google.android.material.internal.StaticLayoutBuilderCompat: void createConstructorWithReflection()>
<com.google.android.gms.internal.measurement.zzdq: void zzu(com.google.android.gms.internal.measurement.zzdq,java.lang.Iterable)>
<android.animation.Animator$AnimatorListener: void onAnimationCancel(android.animation.Animator)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)>
<com.google.crypto.tink.KeyManagerImpl: java.lang.String getKeyType()>
<com.airbnb.lottie.model.content.ShapeGroup: java.lang.String getName()>
<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetException(java.lang.Exception)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>
<com.microsoft.brooklyn.module.sync.CredentialsSDKConnector: void <init>(com.microsoft.rialto.RialtoSyncManager)>
<com.facebook.react.uimanager.ReactShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)>
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>
<com.microsoft.authenticator.mfasdk.log.MfaSdkLogger: void setCallback(com.microsoft.authenticator.mfasdk.log.MfaSdkLogTraceCallback)>
<com.microsoft.brooklyn.notifications.BrooklynIntroNotificationWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.brooklyn.notifications.BrooklynIntroNotificationManager,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<android.view.View: int getPaddingLeft()>
<com.adjust.sdk.Util: java.lang.String hash(java.lang.String,java.lang.String)>
<java.util.zip.GZIPInputStream: int read(byte[])>
<com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)>
<com.google.android.gms.common.internal.zzs: android.content.Intent zzc()>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: java.lang.String[] zzf(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: android.graphics.Matrix getMatrix()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext)>
<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>
<com.facebook.drawee.drawable.DrawableProperties: void setColorFilter(android.graphics.ColorFilter)>
<com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$900(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.facebook.react.modules.camera.ImageEditingManager: int access$600(int,int,int,int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: java.util.Set immutableSetOf(java.lang.Object[])>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.storage.ExperimentationStorage experimentationStorage()>
<com.google.android.gms.common.internal.zzt: boolean zzd()>
<android.widget.CheckBox: void setLayoutDirection(int)>
<com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()>
<com.facebook.react.uimanager.ReactRoot: int getUIManagerType()>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: int getSafeParcelableFieldId()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnCameraChangeListener(com.google.android.gms.maps.internal.zzl)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void access$showErrorDialog(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,java.lang.String)>
<com.facebook.react.modules.core.JavaTimerManager$Timer: boolean access$600(com.facebook.react.modules.core.JavaTimerManager$Timer)>
<com.google.android.gms.cloudmessaging.zze: int zza()>
<com.airbnb.lottie.model.MutablePair: void set(java.lang.Object,java.lang.Object)>
<com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: void <init>()>
<com.facebook.cache.disk.DiskStorageCache: com.facebook.binaryresource.BinaryResource endInsert(com.facebook.cache.disk.DiskStorage$Inserter,com.facebook.cache.common.CacheKey,java.lang.String)>
<com.google.android.gms.internal.location.zzbq: void <init>(com.google.android.gms.internal.location.zzbs,int)>
<ch.qos.logback.core.joran.action.ShutdownHookAction: void <init>()>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.Shapeable getMaskDrawable()>
<com.azure.authenticator.notifications.msa.MsaNotification: com.azure.authenticator.notifications.msa.MsaSessionProcessingResult initializeNotification(android.os.Bundle)>
<com.facebook.common.util.UriUtil: boolean isDataUri(android.net.Uri)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getAccountCid()>
<ch.qos.logback.core.net.AbstractSocketAppender: void dispatchEvents(ch.qos.logback.core.net.ObjectWriter)>
<com.google.android.gms.measurement.internal.zzjo: void zzb(long)>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zza(float)>
<android.widget.HorizontalScrollView: int getMeasuredWidth()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication mfaPinAuthentication()>
<com.microsoft.onlineid.sts.StsErrorCode: com.microsoft.onlineid.sts.StsErrorCode[] values()>
<com.airbnb.lottie.model.CubicCurveData: android.graphics.PointF getControlPoint2()>
<com.google.android.gms.internal.measurement.zzfb: void <init>(com.google.android.gms.internal.measurement.zzfe,java.lang.String,java.lang.Boolean,boolean)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$validateMsaAccounts$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<androidx.sqlite.db.SupportSQLiteQueryBuilder: androidx.sqlite.db.SupportSQLiteQueryBuilder columns(java.lang.String[])>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$mergeBrokerAccounts$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.databinding.FragmentSignInBinding: com.azure.authenticator.databinding.FragmentSignInBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.adjust.sdk.ActivityHandler$36: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.SessionResponseData)>
<com.azure.authenticator.common.Util$Companion: void copyTextToClipboard$default(com.azure.authenticator.common.Util$Companion,java.lang.String,android.view.View,int,int,int,java.lang.Object)>
<com.google.android.gms.common.api.Api$ClientKey: void <init>()>
<com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzfo zzb()>
<java.net.HttpURLConnection: void setDoOutput(boolean)>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<java.net.DatagramSocket: void close()>
<android.widget.HorizontalScrollView: boolean pageScroll(int)>
<com.facebook.fbreact.specs.NativeLogBoxSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.auth-api.zzat: void <init>(com.google.android.gms.internal.auth-api.zzao,com.google.android.gms.auth.api.identity.GetSignInIntentRequest)>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<com.google.android.gms.measurement.internal.zzit: void <init>(com.google.android.gms.measurement.internal.zzjb,java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp,com.google.android.gms.internal.measurement.zzs)>
<com.google.android.material.chip.ChipGroup$OnCheckedChangeListener: void onCheckedChanged(com.google.android.material.chip.ChipGroup,int)>
<com.fasterxml.jackson.core.JsonParser$Feature: boolean enabledByDefault()>
<java.util.TreeMap: void <init>(java.util.Map)>
<com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()>
<com.google.android.gms.internal.measurement.zzim: void zzg(long)>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>
<com.android.installreferrer.api.InstallReferrerClientImpl: boolean isReady()>
<com.google.android.gms.common.stats.StatsUtils: java.lang.String getEventKey(android.os.PowerManager$WakeLock,java.lang.String)>
<com.google.android.gms.measurement.internal.zzae: java.lang.String zzu()>
<com.airbnb.lottie.model.layer.SolidLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void setAnimating(boolean)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)>
<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.MaterialShapeDrawable getBackground()>
<com.google.android.material.timepicker.ClockHandView: void setHandRotation(float,boolean)>
<com.facebook.common.statfs.StatFsHelper$StorageType: void <init>(java.lang.String,int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$onActivityResult$$inlined$let$lambda$1: void <init>(java.lang.String,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void approveSession()>
<com.facebook.react.modules.i18nmanager.I18nUtil: void setPref(android.content.Context,java.lang.String,boolean)>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>
<com.facebook.yoga.YogaNode: void setOverflow(com.facebook.yoga.YogaOverflow)>
<com.microsoft.authenticator.authentication.msa.entities.MsaSession: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthenticationTimeTelemetry getMsaAuthenticationTimeTelemetry()>
<com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>
<com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)>
<com.google.android.gms.measurement.internal.zzdz: java.util.List zzq(java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.textfield.IndicatorViewController: boolean isCaptionView(int)>
<com.google.android.gms.internal.measurement.zzkz: long zzw()>
<com.google.android.material.shape.MaterialShapeDrawable: void invalidateSelf()>
<com.google.android.gms.auth.api.phone.zza: void <init>()>
<com.google.android.gms.common.api.Api$AbstractClientBuilder: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<java.util.AbstractCollection: void <init>()>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setOverrideDeadline(long)>
<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCBuilder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCBuilder view(android.view.View)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)>
<ch.qos.logback.core.spi.ContextAwareImpl: void addError(java.lang.String)>
<ch.qos.logback.core.rolling.helper.Compressor: void createMissingTargetDirsIfNecessary(java.io.File)>
<com.google.android.gms.auth.api.signin.internal.zzf: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.auth.api.signin.GoogleSignInOptions,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum: void <init>(java.lang.String,int,int)>
<ch.qos.logback.core.joran.action.IncludeAction: void setEventOffset(int)>
<ch.qos.logback.classic.html.HTMLLayout: void appendEventToBuffer(java.lang.StringBuilder,ch.qos.logback.core.pattern.Converter,ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<com.google.android.gms.location.LocationSettingsResult: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.location.LocationSettingsStates)>
<com.google.android.gms.common.api.internal.OnConnectionFailedListener: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>
<com.google.android.gms.measurement.internal.zzn: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzv)>
<ch.qos.logback.core.html.HTMLLayoutBase: java.util.Map getEffectiveConverterMap()>
<com.facebook.react.bridge.ReadableNativeArray: void <init>(com.facebook.jni.HybridData)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment2(java.lang.String,int,int)>
<com.facebook.imagepipeline.listener.ForwardingRequestListener: void onException(java.lang.String,java.lang.Throwable)>
<android.view.LayoutInflater: android.content.Context getContext()>
<com.evernote.android.job.v14.JobProxy14: void logScheduled(com.evernote.android.job.JobRequest)>
<com.google.android.gms.internal.measurement.zzap: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm)>
<com.evernote.android.job.JobConfig: boolean isSkipJobReschedule()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setTranslateX(android.view.View,float)>
<com.google.android.gms.auth.GooglePlayServicesAvailabilityException: int getConnectionStatusCode()>
<android.view.VelocityTracker: float getYVelocity()>
<com.google.android.gms.internal.measurement.zzck: java.util.List zzg()>
<com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>
<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzae(long)>
<com.google.android.gms.internal.common.zzw: void <init>(java.lang.Object[],int)>
<com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.common.api.internal.zaba: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zac(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.adjust.sdk.SdkClickResponseData: void <init>()>
<com.facebook.react.module.annotations.ReactModule: java.lang.String name()>
<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void observeAppLockEnforcement()>
<com.google.android.gms.common.internal.zzb: void zza(android.os.Message)>
<ch.qos.logback.core.sift.SiftingAppenderBase: void setAppenderFactory(ch.qos.logback.core.sift.AppenderFactory)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapPrepareProducer newBitmapPrepareProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()>
<com.facebook.imagepipeline.image.QualityInfo: boolean isOfFullQuality()>
<com.google.android.gms.common.api.internal.zad: void zac(com.google.android.gms.common.api.Status)>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectRemoveLogsUseCase(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.microsoft.authenticator.logging.businesslogic.RemoveLogsUseCase)>
<com.google.common.collect.MapMakerInternalMap$EntryIterator: java.util.Map$Entry next()>
<com.google.android.gms.internal.auth.zzae: void <init>()>
<com.airbnb.lottie.utils.MeanCalculator: void add(float)>
<com.azure.authenticator.logging.ExternalLogger: void e(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String zzj(com.google.android.gms.auth.api.credentials.Credential)>
<com.google.android.gms.common.internal.zzk: void <init>()>
<com.google.android.gms.internal.maps.zzt: int zzj()>
<ch.qos.logback.core.joran.event.InPlayListener: void inPlay(ch.qos.logback.core.joran.event.SaxEvent)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setRotation(android.view.View,float)>
<android.app.Activity: android.app.Application getApplication()>
<com.azure.authenticator.MainNavDirections$ToAccountListFragment: boolean getShowPhoneSignInMsg()>
<com.google.android.gms.measurement.internal.zzdo: void <init>()>
<com.facebook.react.fabric.mounting.MountingManager: void updatePadding(int,int,int,int,int)>
<com.google.android.gms.common.api.internal.zacv: void zaj()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectAccountListActionMenuManager(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager)>
<javax.net.ssl.HttpsURLConnection: void connect()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.viewlogic.CompleteRequestFragment injectCompleteRequestFragment2(com.microsoft.did.feature.cardflow.viewlogic.CompleteRequestFragment)>
<com.google.android.gms.internal.measurement.zzdu: java.lang.String zze()>
<com.google.android.gms.common.api.internal.zza: void <init>(com.google.android.gms.common.api.internal.zzb,com.google.android.gms.common.api.internal.LifecycleCallback,java.lang.String)>
<com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker)>
<android.webkit.CookieSyncManager: void sync()>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void setAppLockByDefaultEligible(boolean)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig getSmallImageDiskCacheConfig()>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
<android.widget.EditText: int getPaddingTop()>
<ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: void <init>(java.lang.Class,java.lang.String)>
<android.widget.TextView: void onDetachedFromWindow()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$showKeyInvalidatedScreen$1: void <init>(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)>
<com.google.android.material.transformation.FabTransformationBehavior: void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)>
<com.microsoft.authenticator.registration.mfa.abstraction.ActivationFailureDialogManager: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager)>
<com.google.android.gms.cloudmessaging.zzk: void <init>(com.google.android.gms.cloudmessaging.zzf,android.os.IBinder)>
<com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable)>
<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: int getMemoryChunkType()>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: ch.qos.logback.core.Context access$000(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter)>
<com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer)>
<com.google.android.material.navigation.NavigationBarView: com.google.android.material.navigation.NavigationBarPresenter getPresenter()>
<com.google.android.gms.location.ActivityTransitionEvent: int getTransitionType()>
<com.google.android.gms.measurement.internal.zzaq: java.lang.String toString()>
<android.widget.FrameLayout: android.view.View getChildAt(int)>
<com.facebook.imagepipeline.memory.FlexByteArrayPool$1: void <init>(com.facebook.imagepipeline.memory.FlexByteArrayPool)>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setFabCradleMargin(float)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void startAnimatingNode(int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int)>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String getLogSessionId()>
<android.os.Parcel: android.os.Bundle readBundle()>
<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<com.google.android.gms.common.api.internal.zap: void zag(com.google.android.gms.common.api.internal.zap)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.reflect.Method getMethod(java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getUsername()>
<com.google.android.gms.internal.maps.zzz: void setZIndex(float)>
<com.google.android.gms.internal.measurement.zzme: boolean zza()>
<com.adjust.sdk.ActivityState: void <init>()>
<com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: void <init>(int,int)>
<com.facebook.common.internal.Objects$ToStringHelper$ValueHolder: void <init>()>
<com.google.android.material.timepicker.TimePickerView: void setupDoubleTap()>
<ch.qos.logback.core.pattern.PatternLayoutBase: java.util.Map getDefaultConverterMap()>
<com.airbnb.lottie.value.LottieFrameInfo: com.airbnb.lottie.value.LottieFrameInfo set(float,float,java.lang.Object,java.lang.Object,float,float,float)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper zoomTo(float)>
<ch.qos.logback.core.pattern.FormattingConverter: void <init>()>
<com.adjust.sdk.AdjustInstance: java.lang.String getSdkVersion()>
<com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: void initMeasureFunction()>
<com.facebook.react.views.art.ARTShapeShadowNode: float modulus(float,float)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String getIncludedProtocols()>
<com.facebook.shimmer.Shimmer: void updatePositions()>
<com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)>
<com.airbnb.lottie.utils.LottieValueAnimator: float getAnimatedFraction()>
<com.microsoft.authenticator.telemetry.abstraction.AuthenticatorMfaTelemetryCallback: void <init>()>
<com.google.android.gms.internal.maps.zzx: com.google.android.gms.internal.maps.zzw zzh(android.os.IBinder)>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>
<com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzby zzf(int)>
<com.facebook.react.modules.timepicker.TimePickerDialogModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.measurement.zznb: void <init>()>
<com.adjust.sdk.SharedPreferencesManager: void removeRawReferrer(java.lang.String,long)>
<java.util.PriorityQueue: java.util.Iterator iterator()>
<com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: void <init>(java.lang.Object,java.lang.String)>
<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>
<com.google.android.gms.internal.maps.zzh: com.google.android.gms.maps.model.LatLng getCenter()>
<com.evernote.android.job.Job: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>
<com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()>
<android.app.job.JobService: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void registerActivityLaunchers()>
<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>
<com.google.android.material.button.MaterialButton: boolean isIconEnd()>
<com.adjust.sdk.ActivityHandler: void access$1000(com.adjust.sdk.ActivityHandler,com.adjust.sdk.AdjustEvent)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.math.BigDecimal[] createBigDecimalArray(android.os.Parcel,int)>
<com.google.android.material.shape.ShapePath$ArcShadowOperation: void <init>(com.google.android.material.shape.ShapePath$PathArcOperation)>
<com.google.android.gms.internal.measurement.zzbr: com.google.android.gms.internal.measurement.zzp zzc(android.content.Context,boolean)>
<com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double)>
<com.azure.authenticator.ui.Hilt_MainActivity: void _initHiltInternal()>
<com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)>
<android.text.TextPaint: int getColor()>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zzc(java.lang.String)>
<org.json.JSONObject: void <init>()>
<ch.qos.logback.core.util.CloseUtil: void closeQuietly(java.net.ServerSocket)>
<ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: java.lang.String getAlgorithm()>
<ch.qos.logback.core.joran.spi.JoranException: void <init>(java.lang.String,java.lang.Throwable)>
<com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: void <init>()>
<com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.signin.SignInOptions zac()>
<com.facebook.react.ReactInstanceManager$5$1: void <init>(com.facebook.react.ReactInstanceManager$5)>
<com.google.android.gms.measurement.internal.zzjh: void zzb()>
<com.facebook.fbreact.specs.NativeImageStoreSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<android.widget.LinearLayout: void setVisibility(int)>
<androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
<ch.qos.logback.core.rolling.helper.MonoTypedConverter: boolean isApplicable(java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity: void <init>()>
<com.facebook.react.views.picker.ReactPickerManager: void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvidePasswordChangeModelLoaderFactory: com.microsoft.vienna.rpa.model.AutomationModelLoader providePasswordChangeModelLoader(com.microsoft.brooklyn.module.di.BrooklynHiltModule,com.microsoft.vienna.vienna_utils_lib.logging.ILogger)>
<com.google.android.gms.auth.zzg: void <init>(java.lang.String,int)>
<android.graphics.Canvas: void scale(float,float)>
<androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)>
<com.google.android.material.navigation.NavigationBarPresenter$SavedState: void <init>()>
<android.graphics.RectF: void <init>(android.graphics.Rect)>
<com.google.common.net.InternetDomainName: boolean matchesWildcardSuffixType(com.google.common.base.Optional,java.lang.String)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.azure.authenticator.storage.database.AccountTranslator_Factory: void <init>()>
<com.facebook.imageformat.ImageFormatCheckerUtils: int indexOfPattern(byte[],int,byte[],int)>
<com.google.android.gms.internal.measurement.zzha: void zzu(int)>
<com.google.android.gms.measurement.internal.zzfi: void zzh(java.lang.Runnable)>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.NativeMemoryChunkPool getNativeMemoryChunkPool()>
<com.facebook.react.uimanager.events.EventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)>
<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.airbnb.lottie.LottieComposition: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void onCreate(android.os.Bundle)>
<ch.qos.logback.core.helpers.CyclicBuffer: void <init>(ch.qos.logback.core.helpers.CyclicBuffer)>
<com.facebook.imageutils.JfifUtil: boolean moveToMarker(java.io.InputStream,int)>
<android.os.Bundle: boolean isEmpty()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_AssistedFactory access$15700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.common.api.internal.zaba: void zag(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>
<com.google.android.gms.internal.location.zzbt: void <init>(java.lang.Object[],int)>
<com.google.android.gms.internal.measurement.zzp: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzs,long)>
<com.google.common.collect.RegularImmutableMap$EntrySet: int access$000(com.google.common.collect.RegularImmutableMap$EntrySet)>
<com.google.android.material.chip.ChipDrawable: void setText(java.lang.CharSequence)>
<com.evernote.android.job.JobStorage: void put(com.evernote.android.job.JobRequest)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: java.lang.String access$100(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.google.android.material.tabs.TabLayout: void addTabView(com.google.android.material.tabs.TabLayout$Tab)>
<com.facebook.react.uimanager.UIViewOperationQueue: boolean isEmpty()>
<android.os.Parcel: int[] createIntArray()>
<javax.net.ServerSocketFactory: void <init>()>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>
<com.azure.authenticator.databinding.AccountOtpViewLayoutBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextSwitcher,android.widget.ProgressBar,android.widget.TextView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView)>
<java.lang.System: void loadLibrary(java.lang.String)>
<com.google.android.material.internal.FlowLayout: void setItemSpacing(int)>
<com.adjust.sdk.IActivityHandler: void finishedTrackingActivity(com.adjust.sdk.ResponseData)>
<com.google.android.gms.internal.measurement.zzkj: int zzb(int,byte[],int,int)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState copy(java.lang.String,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<android.app.Activity: java.lang.String getLocalClassName()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showDeviceNotSupportedDialog$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider mfaAuthHiltViewModelProvider()>
<com.azure.authenticator.ui.dialog.AppDialogFragments: void showLockScreenRequiredDialog(boolean,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener)>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getInterpolatedCurrentKeyframeProgress()>
<javax.mail.internet.MimeMessage: void setSubject(java.lang.String,java.lang.String)>
<java.lang.ClassCastException: java.lang.String getMessage()>
<com.evernote.android.job.JobRequest$1: void <init>()>
<com.google.android.gms.internal.measurement.zzmj: void <init>()>
<com.google.android.gms.measurement.internal.zzkg: void <init>(com.google.android.gms.measurement.internal.zzki)>
<com.facebook.react.uimanager.UIViewOperationQueue: void pauseFrameCallback()>
<com.azure.authenticator.storage.Storage: void setLastTimeShowRatingKey(long)>
<com.google.android.gms.common.internal.TelemetryData: void zac(com.google.android.gms.common.internal.MethodInvocation)>
<android.animation.ValueAnimator: int getRepeatMode()>
<com.facebook.react.views.imagehelper.ImageSource: void <init>(android.content.Context,java.lang.String,double,double)>
<com.google.android.gms.auth.api.identity.zzf$zzc: void <init>()>
<ch.qos.logback.classic.Logger: ch.qos.logback.classic.Logger getChildByName(java.lang.String)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1$asyncResult$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.material.internal.CollapsingTextHelper: void onBoundsChanged()>
<com.facebook.react.modules.network.ForwardingCookieHandler$1: void onPostExecuteGuarded(java.lang.Boolean)>
<com.facebook.yoga.YogaNode: void setWrap(com.facebook.yoga.YogaWrap)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$showSignOutButton$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<android.text.Layout: int getLineDescent(int)>
<com.google.android.gms.internal.measurement.zzdu: double zzi()>
<com.google.android.gms.internal.measurement.zzcm: int zzf()>
<com.google.android.gms.internal.common.zzx: void <init>()>
<android.widget.Checkable: boolean isChecked()>
<com.microsoft.authenticator.di.AppModule: void <init>()>
<com.google.android.gms.internal.measurement.zznt: com.google.android.gms.internal.measurement.zznu zzc()>
<android.view.ViewGroup: android.view.ViewTreeObserver getViewTreeObserver()>
<com.google.common.base.Equivalence: com.google.common.base.Equivalence identity()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.rootdetection.RootDetectionManager rootDetectionManager()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onEnableNgcButtonClicked$1: void onChanged(com.microsoft.authenticator.registration.msa.entities.MsaNgcKeyGenerationStatus)>
<com.google.android.gms.measurement.internal.zzkk: void zzai(com.google.android.gms.internal.measurement.zzs,android.os.Bundle)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: void onPostExecute(com.azure.authenticator.profile.AbstractGetProfileImageTask$ImageResult)>
<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_EventStoreConfig: void <init>(long,int,int,long,int)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: void setShowcaseColour(int)>
<com.facebook.react.uimanager.events.Event: long getTimestampMs()>
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>
<com.google.android.gms.internal.measurement.zzla: long zzc()>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$FragmentC: void <init>()>
<androidx.core.app.SafeJobIntentService: void <init>()>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void setAdditionalHiddenOffsetY(android.view.View,int)>
<com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings$Builder setLooper(android.os.Looper)>
<com.azure.authenticator.databinding.PasswordAutoChangeDialogLayoutBinding: android.widget.LinearLayout getRoot()>
<com.google.android.gms.measurement.internal.zzkb: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.google.android.material.datepicker.TimeSource: com.google.android.material.datepicker.TimeSource system()>
<com.facebook.imageutils.TiffUtil: int getAutoRotateAngleFromOrientation(int)>
<com.facebook.react.ReactActivityDelegate: void onCreate(android.os.Bundle)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs: void <init>(java.util.HashMap)>
<com.microsoft.authenticator.commonuilibrary.intents.IntentFactory: android.content.Intent getNotificationsSettingsIntent(android.content.Context)>
<android.app.job.JobInfo: int getId()>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: boolean access$000(bolts.Task)>
<ch.qos.logback.core.html.HTMLLayoutBase: void <init>()>
<com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.google.android.gms.auth.api.signin.internal.zzo: void <init>(com.google.android.gms.auth.api.signin.internal.zzl)>
<com.google.android.gms.common.internal.zam: com.google.android.gms.dynamic.IObjectWrapper zae(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.common.internal.zax)>
<com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void onCacheHit(com.facebook.cache.common.CacheKey)>
<com.facebook.imagepipeline.image.EncodedImage: void close()>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)>
<com.facebook.yoga.YogaNode: boolean hasNewLayout()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Parcelable createParcelable(android.os.Parcel,int,android.os.Parcelable$Creator)>
<com.facebook.yoga.YogaNode: void setDirection(com.facebook.yoga.YogaDirection)>
<com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void onFree(int)>
<com.google.android.material.animation.Positioning: void <init>(int,float,float)>
<com.evernote.android.job.util.JobPreconditions: java.lang.CharSequence checkNotEmpty(java.lang.CharSequence)>
<com.facebook.react.uimanager.ReactShadowNode: float getLayoutWidth()>
<com.google.android.gms.measurement.internal.zzdk: void <init>()>
<com.fasterxml.jackson.core.io.NumberOutput: int full3(int,char[],int)>
<com.google.android.gms.auth.zzd: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: void setShouldSkipGmsCoreVersionCheck(boolean)>
<androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<com.google.android.gms.measurement.internal.zzcp: void <init>()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)>
<com.evernote.android.job.WakeLockUtil: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference cloneOrNull()>
<javax.crypto.Cipher: void init(int,java.security.Key)>
<com.microsoft.did.di.VcWalletModule_DefaultOkHttpClientFactory: okhttp3.OkHttpClient defaultOkHttpClient(com.microsoft.did.di.VcWalletModule)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String toString()>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>
<com.evernote.android.job.GcmAvailableHelper: void setServiceEnabled(android.content.Context,boolean)>
<android.graphics.DashPathEffect: void <init>(float[],float)>
<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getStrokeColor()>
<com.facebook.datasource.DataSources: com.facebook.datasource.DataSource immediateFailedDataSource(java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzw(long)>
<com.microsoft.authenticator.core.algorithms.EstsGuidHashAlgorithm: void <init>()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType()>
<com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)>
<com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)>
<com.google.android.gms.internal.measurement.zzdj: void zzav(com.google.android.gms.internal.measurement.zzdj,long)>
<com.google.android.gms.common.ConnectionResult: void <init>(int,int,android.app.PendingIntent,java.lang.String)>
<com.google.android.gms.maps.model.BitmapDescriptor: com.google.android.gms.dynamic.IObjectWrapper zzb()>
<com.google.android.gms.internal.measurement.zzmh: boolean zza()>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1: void <init>(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,com.facebook.react.bridge.ReactContext,int)>
<com.google.android.gms.internal.measurement.zzkz: long zzJ()>
<com.azure.authenticator.storage.database.AccountDao_Impl$4: void <init>(com.azure.authenticator.storage.database.AccountDao_Impl,androidx.room.RoomSQLiteQuery)>
<com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()>
<androidx.core.view.ViewCompat: float getElevation(android.view.View)>
<androidx.work.Data$Builder: androidx.work.Data$Builder putLong(java.lang.String,long)>
<com.azure.authenticator.databinding.PasswordAutoChangeExplainLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeExplainLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<ch.qos.logback.core.spi.PreSerializationTransformer: java.io.Serializable transform(java.lang.Object)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController)>
<com.facebook.react.views.textinput.ReactTextInputManager$2: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.facebook.imagepipeline.producers.ProducerContextCallbacks: void onIsIntermediateResultExpectedChanged()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: void ensurePlayServicesAvailable(android.content.Context,int)>
<com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding: android.widget.LinearLayout getRoot()>
<com.airbnb.lottie.parser.moshi.JsonReader: double nextDouble()>
<com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: java.lang.String getProfileImageFileName()>
<com.airbnb.lottie.network.NetworkCache: java.lang.String filenameForUrl(java.lang.String,com.airbnb.lottie.network.FileExtension,boolean)>
<com.adjust.sdk.SdkClickHandler$1: void <init>(com.adjust.sdk.SdkClickHandler,com.adjust.sdk.ActivityPackage)>
<dummyMainClass: com.azure.authenticator.ui.backup.RestoreFlowActivity dummyMainMethod_com_azure_authenticator_ui_backup_RestoreFlowActivity(android.content.Intent)>
<com.airbnb.lottie.model.content.GradientType: void <init>(java.lang.String,int)>
<com.airbnb.lottie.parser.JsonUtils: int jsonToColor(com.airbnb.lottie.parser.moshi.JsonReader)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean honorsDebugCertificates(android.content.Context)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: int getShowcaseWidth()>
<android.view.MotionEvent: int getPointerId(int)>
<android.util.SparseArray: void <init>(int)>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getIdentityProvider()>
<com.google.android.gms.internal.measurement.zzix: int zzbw()>
<android.text.TextPaint: void <init>(android.graphics.Paint)>
<com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int getRetries()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<com.google.android.gms.internal.measurement.zzdq: com.google.android.gms.internal.measurement.zzdp zzk()>
<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>
<com.facebook.react.modules.network.ResponseUtil: void onDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,com.facebook.react.bridge.WritableMap)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.util.ArrayList createStringList(android.os.Parcel,int)>
<com.google.android.gms.measurement.internal.zzei: java.lang.Object zzl(java.lang.String)>
<com.github.amlcurran.showcaseview.ShowcaseView: void hideImmediate()>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setRoundingParams(com.facebook.drawee.generic.RoundingParams)>
<com.facebook.react.modules.storage.AsyncStorageModule$1: void doInBackgroundGuarded(java.lang.Void[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel wpjStatusViewModel()>
<java.lang.Exception: void <init>(java.lang.Throwable)>
<com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: void <init>()>
<com.google.android.datatransport.runtime.EventInternal: int getInteger(java.lang.String)>
<com.google.android.gms.maps.model.CustomCap: void <init>(com.google.android.gms.maps.model.BitmapDescriptor,float)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeByte(android.os.Parcel,int,byte)>
<com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzby zzd(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.policyChannel.repository.AuthAppStateRepository authAppStateRepository()>
<com.airbnb.lottie.manager.ImageAssetManager: void <init>(android.graphics.drawable.Drawable$Callback,java.lang.String,com.airbnb.lottie.ImageAssetDelegate,java.util.Map)>
<com.google.android.gms.internal.measurement.zzhk: int zza()>
<java.lang.Exception: void <init>()>
<android.widget.EditText: void refreshDrawableState()>
<com.facebook.react.views.text.TextAttributes: float getHeightOfTallestInlineViewOrImage()>
<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>
<com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: byte[] readPayload(long)>
<com.facebook.drawee.controller.AbstractDraweeController: java.lang.Object getImageInfo(java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getNextToken()>
<com.adjust.sdk.ActivityHandler: void access$2800(com.adjust.sdk.ActivityHandler)>
<java.nio.ByteBuffer: java.nio.Buffer flip()>
<com.airbnb.lottie.LottieDrawable: android.graphics.Typeface getTypeface(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.cache.StagingArea: boolean containsKey(com.facebook.cache.common.CacheKey)>
<com.adjust.sdk.ActivityPackage: java.lang.String getFailureMessage()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeight(float)>
<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()>
<android.util.LongSparseArray: java.lang.Object get(long)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void finishActivity()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setOnScreenWidth(int)>
<android.os.Handler: android.os.Looper getLooper()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.Set getPendingDeletionsForTag(int)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1: java.lang.Object invokeSuspend(java.lang.Object)>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void addInfo(ch.qos.logback.core.Context,java.lang.String)>
<androidx.fragment.app.DialogFragment: void setCancelable(boolean)>
<com.facebook.react.modules.network.ProgressResponseBody: long contentLength()>
<ch.qos.logback.core.net.SocketConnector$ExceptionHandler: void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$showToastAndEnableRegisterButton(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,java.lang.String,boolean)>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)>
<com.microsoft.ngc.aad.NgcSession: java.lang.String getSessionId()>
<android.app.AlertDialog$Builder: void <init>(android.content.Context,int)>
<com.facebook.react.uimanager.UIImplementation: void profileNextBatch()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void maybeNotifyOnNewResult(com.facebook.common.references.CloseableReference,int)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: void <init>()>
<com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
<ch.qos.logback.classic.pattern.CallerDataConverter: boolean isRange(java.lang.String)>
<com.google.android.gms.internal.location.zzbf: void <init>()>
<com.facebook.react.bridge.ProxyJavaScriptExecutor: void <init>(com.facebook.react.bridge.JavaJSExecutor)>
<com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)>
<com.google.android.gms.common.api.Status: void <init>(int,int,java.lang.String,android.app.PendingIntent)>
<com.google.common.collect.MapMakerInternalMap$Segment: void clear()>
<com.facebook.imageformat.ImageFormatChecker: void <init>()>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>
<com.google.android.gms.measurement.internal.zzea: java.util.List zzo()>
<com.adjust.sdk.InstallReferrerReadListener: void onInstallReferrerRead(java.lang.String,long,long)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _verifyNeedForRehash()>
<com.facebook.react.uimanager.events.Event: int getUniqueID()>
<com.google.android.gms.internal.maps.zzac: boolean getFadeIn()>
<com.azure.authenticator.accounts.AccountType: com.azure.authenticator.accounts.AccountType[] values()>
<com.google.android.gms.measurement.internal.zzam: void zze()>
<ch.qos.logback.core.ContextBase: void stopExecutorService()>
<com.google.android.gms.common.data.DataBuffer: void close()>
<com.azure.authenticator.storage.Storage: java.lang.String readDosPreventer()>
<com.facebook.binaryresource.BinaryResource: java.io.InputStream openStream()>
<com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)>
<com.google.android.material.button.MaterialButton$SavedState$1: com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<android.widget.GridView: void setEnabled(boolean)>
<android.widget.OverScroller: int getFinalY()>
<com.google.common.base.Java8Usage: java.lang.String performCheck()>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment_MembersInjector: void injectPowerLiftUseCase(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment,com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase)>
<com.facebook.cache.disk.DefaultDiskStorage: boolean query(java.lang.String,boolean)>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isKleeneStar(java.lang.String)>
<ch.qos.logback.core.AsyncAppenderBase: boolean isDiscardable(java.lang.Object)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void tryExecuteRunnable(java.lang.Runnable)>
<okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)>
<com.google.android.datatransport.runtime.dagger.internal.InstanceFactory: void <init>(java.lang.Object)>
<com.google.android.gms.common.data.DataHolder: void zad(java.lang.String,int,int,android.database.CharArrayBuffer)>
<okio.Buffer: void <init>()>
<com.facebook.cache.disk.DiskCacheConfig: com.facebook.cache.common.CacheEventListener getCacheEventListener()>
<com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEventOrEnqueue(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: int schemaVersion()>
<com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void remove(java.lang.Runnable)>
<com.google.android.gms.common.api.Result: com.google.android.gms.common.api.Status getStatus()>
<com.google.android.material.badge.BadgeDrawable: void setVerticalOffset(int)>
<android.view.ViewGroup: void setNextFocusLeftId(int)>
<com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)>
<com.azure.authenticator.databinding.EnableRemoteNgcCommonBinding: void <init>(android.view.View,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button)>
<com.google.android.gms.common.internal.RootTelemetryConfiguration: void <init>(int,boolean,boolean,int,int)>
<com.google.android.gms.location.LocationRequest: long getInterval()>
<com.google.common.net.InternetDomainName: boolean validateSyntax(java.util.List)>
<com.evernote.android.job.WakeLockUtil: void releaseWakeLock(android.os.PowerManager$WakeLock)>
<com.google.android.material.navigation.NavigationBarPresenter: void setUpdateSuspended(boolean)>
<com.facebook.react.views.textinput.ReactEditText: java.util.ArrayList access$200(com.facebook.react.views.textinput.ReactEditText)>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)>
<com.microsoft.authenticator.authentication.aad.entities.GetAadTokenResult$Failure: java.lang.Exception getException()>
<com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)>
<android.widget.HorizontalScrollView: int getPaddingLeft()>
<com.google.android.gms.internal.measurement.zzla: long zzf()>
<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView()>
<android.database.CursorWindow: boolean allocRow()>
<java.security.NoSuchAlgorithmException: java.lang.String toString()>
<com.google.android.gms.internal.measurement.zzbr: void zzd(com.google.android.gms.measurement.internal.zzgl)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getTopLeftCornerSize()>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher any()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>
<com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)>
<com.facebook.react.uimanager.UIImplementation$1: void <init>(com.facebook.react.uimanager.UIImplementation,com.facebook.react.uimanager.ReactShadowNode)>
<com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForShadowNodeClass(java.lang.Class)>
<com.google.android.gms.common.images.WebImage: void <init>(android.net.Uri,int,int)>
<dagger.hilt.android.internal.managers.ApplicationComponentManager: java.lang.Object generatedComponent()>
<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<com.facebook.drawee.view.DraweeView: void init(android.content.Context)>
<com.google.android.gms.internal.measurement.zzla: long zzn()>
<com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException: void <init>(long,long)>
<com.facebook.cache.common.CacheKey: java.lang.String getUriString()>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: dagger.hilt.android.internal.managers.FragmentComponentManager componentManager()>
<com.google.android.gms.common.api.internal.zabd: void zal()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: java.util.Map getValues()>
<com.google.android.gms.internal.maps.zzt: void setTitle(java.lang.String)>
<com.airbnb.lottie.LottieAnimationView: void cancelAnimation()>
<com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)>
<com.google.android.material.chip.ChipDrawable: void setChipIconTintResource(int)>
<com.facebook.soloader.FileLocker: void close()>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.google.android.gms.location.zzv: void <init>(com.google.android.gms.location.FusedLocationProviderClient)>
<com.facebook.imagepipeline.bitmaps.ArtBitmapFactory: void <init>(com.facebook.imagepipeline.memory.BitmapPool,com.facebook.imagepipeline.core.CloseableReferenceFactory)>
<com.google.android.gms.maps.model.IndoorLevel: void <init>(com.google.android.gms.internal.maps.zzq)>
<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<java.io.FileReader: void <init>(java.lang.String)>
<com.evernote.android.job.JobRequest: long getEndMs()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()>
<com.facebook.react.views.textinput.ReactTextChangedEvent: void <init>(int,java.lang.String,int)>
<com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.registration.msa.abstraction.MsaAccountActivityLauncher,com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.facebook.imagepipeline.producers.ThrottlingProducer: void <init>(int,java.util.concurrent.Executor,com.facebook.imagepipeline.producers.Producer)>
<com.airbnb.lottie.LottieCompositionFactory: java.lang.Boolean isZipCompressed(okio.BufferedSource)>
<com.google.android.gms.internal.maps.zzag: void <init>()>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)>
<com.facebook.imagepipeline.common.ResizeOptions: void <init>(int,int)>
<com.google.android.material.card.MaterialCardViewHelper: float getCornerRadius()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()>
<java.lang.System: int identityHashCode(java.lang.Object)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$registerActivityLaunchers$7$SettingsFragment(androidx.activity.result.ActivityResult)>
<java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>
<com.azure.authenticator.databinding.QrScannerBinding: com.azure.authenticator.databinding.QrScannerBinding bind(android.view.View)>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)>
<com.azure.authenticator.ui.action.UserInteractionRequiredAction: int getActionContentDescriptionTextResourceId()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder run(com.google.android.gms.common.api.internal.RemoteCall)>
<com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)>
<com.facebook.react.ReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getCloudAadMfaAccounts(java.lang.String,java.lang.String)>
<com.google.android.datatransport.runtime.backends.AutoValue_CreationContext: void <init>(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,java.lang.String)>
<com.adjust.sdk.EventResponseData: com.adjust.sdk.AdjustEventFailure getFailureResponseData()>
<javax.net.ssl.SSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<com.fasterxml.jackson.core.io.MergedStream: int read(byte[],int,int)>
<com.google.android.gms.internal.measurement.zzp: void setMeasurementEnabled(boolean,long)>
<android.widget.CheckBox: android.view.ViewParent getParent()>
<java.util.concurrent.FutureTask: boolean cancel(boolean)>
<com.google.android.gms.location.ActivityTransitionEvent: int getActivityType()>
<com.facebook.react.views.modal.ReactModalHostView: void dismiss()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void handleMsaNgcLoginResult(com.microsoft.authenticator.authentication.msa.entities.MsaOperationResult)>
<com.google.android.gms.internal.measurement.zzla: long zzl()>
<com.facebook.react.devsupport.LogBoxModule: android.view.View access$002(com.facebook.react.devsupport.LogBoxModule,android.view.View)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: com.google.android.gms.dynamic.IObjectWrapper orientationToPoint(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)>
<com.google.android.gms.measurement.internal.zzib: com.google.android.gms.measurement.internal.zzhu zzD(android.app.Activity)>
<com.google.android.gms.internal.maps.zzac: void setFadeIn(boolean)>
<com.facebook.react.ReactActivityDelegate: boolean onKeyDown(int,android.view.KeyEvent)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)>
<com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll$1: void <init>(com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll)>
<com.google.android.gms.common.api.internal.zaar: com.google.android.gms.common.internal.IAccountAccessor zaq(com.google.android.gms.common.api.internal.zaar)>
<androidx.appcompat.app.AppCompatActivity: void onStop()>
<com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor: void <init>(int)>
<com.google.android.gms.common.api.internal.zabf: java.util.concurrent.Executor zaa(android.os.Handler)>
<com.google.android.gms.internal.measurement.zzep: java.lang.Object zza(com.google.android.gms.internal.measurement.zzeq)>
<com.google.android.gms.auth.api.identity.zzo: void <init>()>
<com.google.android.gms.internal.measurement.zzbu: java.util.List zzc()>
<com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: boolean equals(java.lang.Object)>
<com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: void <init>(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: android.os.MemoryFile copyToMemoryFile(com.facebook.common.references.CloseableReference,int,byte[])>
<com.microsoft.authenticator.graphclient.entities.GetCachedPolicyResult$SuccessCacheExpiredOutGracePeriod: com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult getPolicy()>
<com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)>
<com.fasterxml.jackson.core.util.TextBuffer: char[] emptyAndGetCurrentSegment()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void lambda$ensureContextsScheduled$1(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.facebook.react.views.text.TextAttributeProps: int parseNumericFontWeight(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void injectDeviceScreenLockConfigChecker(com.azure.authenticator.ui.fragment.main.SettingsFragment,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<com.facebook.react.NativeModuleRegistryBuilder: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager)>
<androidx.core.app.JobIntentService: void onDestroy()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback: com.azure.authenticator.ui.backup.BackupFlowActivity$Flow access$getFlow$p(com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback)>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createForegroundRippleDrawable()>
<com.google.android.material.datepicker.MaterialCalendar$9: void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter)>
<android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)>
<com.azure.authenticator.ui.action.ActionStateManager_Factory: com.azure.authenticator.ui.action.ActionStateManager newInstance(android.content.Context,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)>
<com.google.android.material.snackbar.BaseTransientBottomBar$14: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)>
<ch.qos.logback.classic.android.SQLiteAppender: boolean lastCheckExpired(ch.qos.logback.core.util.Duration,long)>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createCheckedIconLayer()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: boolean initialize(android.content.Intent)>
<com.facebook.drawee.drawable.VisibilityCallback: void onDraw()>
<com.evernote.android.job.JobStorageDatabaseErrorHandler: void deleteApi14(android.content.Context,java.io.File)>
<com.facebook.drawee.drawable.FadeDrawable: void beginBatchMode()>
<com.google.android.gms.measurement.internal.zzai: long zzC(java.lang.String,java.lang.String)>
<com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: int getMaxMethodInvocationsLogged()>
<android.widget.EditText: android.content.Context getContext()>
<com.adjust.sdk.DeviceInfo: java.lang.String getHardwareName()>
<com.google.android.gms.internal.auth.zzi: void <init>(com.google.android.gms.internal.auth.zzh,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.GoogleApiClient,boolean)>
<com.google.android.gms.auth.api.signin.internal.zzr: void zzf(com.google.android.gms.common.api.Status)>
<com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void setInputType(int)>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
<com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8()>
<android.os.StatFs: long getBlockSizeLong()>
<android.app.Fragment: void <init>()>
<com.google.android.gms.location.ActivityTransitionRequest: void <init>(java.util.List,java.lang.String,java.util.List,java.lang.String)>
<com.facebook.common.memory.PooledByteBufferFactory: com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream,int)>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.gms.internal.measurement.zzhb: java.lang.String zzg(int)>
<java.io.RandomAccessFile: void write(byte[],int,int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.animation.ValueAnimator getAlphaAnimator(int,float[])>
<com.airbnb.lottie.LottieDrawable: void setProgress(float)>
<com.facebook.react.uimanager.UIImplementation: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.common.api.internal.zack: com.google.android.gms.common.api.Status zaa()>
<com.google.android.gms.safetynet.SafetyNetApi$AttestationResponse: void <init>()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexGrow(float)>
<com.google.crypto.tink.KeysetHandle: void <init>(com.google.crypto.tink.proto.Keyset)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.azure.authenticator.authentication.msa.MsaAccountManager,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.facebook.react.uimanager.events.EventDispatcher: android.util.LongSparseArray access$1500(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.gms.internal.measurement.zzgb: void zzbs(java.lang.Iterable,java.util.List)>
<ch.qos.logback.classic.net.server.HardenedLoggingEventInputStream: void <init>(java.io.InputStream)>
<com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,boolean,boolean)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.measurement.internal.zzfu: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)>
<com.google.android.gms.internal.measurement.zzds: boolean zza()>
<com.google.android.material.tabs.TabLayout: int getDefaultHeight()>
<com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()>
<com.google.android.material.shape.MaterialShapeDrawable: boolean isElevationOverlayEnabled()>
<javax.net.ssl.SSLSocket: int getSoTimeout()>
<com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder forceEnableSaveDialog()>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<ch.qos.logback.classic.net.SocketReceiver: boolean shouldStart()>
<com.facebook.imagepipeline.cache.InstrumentedMemoryCache: void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCacheTracker)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void showConfirmLeaveWpj()>
<com.facebook.react.uimanager.UIViewOperationQueue: java.util.Map getProfiledBatchPerfCounters()>
<com.google.android.gms.common.internal.ClientSettings: java.lang.String zab()>
<com.google.android.gms.maps.model.PolylineOptions: int getColor()>
<com.facebook.react.views.modal.ReactModalHostView: void onDropInstance()>
<com.facebook.imagepipeline.memory.PoolBackend: java.lang.Object pop()>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: void <init>(java.lang.String,int,int)>
<com.evernote.android.job.v21.JobProxy21: android.app.job.JobScheduler getJobScheduler()>
<com.google.android.gms.internal.location.zzag: void <init>(android.os.IBinder)>
<com.facebook.common.internal.Predicate: boolean apply(java.lang.Object)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: int getApkVersion(android.content.Context)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem: void <init>(int,int,int,int)>
<com.adjust.sdk.Util: java.lang.String md5(java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _verifyNoLeadingZeroes()>
<android.graphics.ColorFilter: void <init>()>
<com.adjust.sdk.AdjustInstance$3: void <init>(com.adjust.sdk.AdjustInstance,java.lang.String)>
<com.facebook.react.views.text.TextAttributeProps: com.facebook.react.bridge.ReadableArray getArrayProp(java.lang.String)>
<com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory: void <init>()>
<com.google.android.gms.internal.measurement.zzkh: byte zzI(java.lang.Object,long)>
<com.microsoft.authenticator.reactnative.modules.NotificationsPackage: void <init>()>
<com.google.android.material.snackbar.BaseTransientBottomBar$11: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<android.view.View: void sendAccessibilityEvent(int)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setLocale(java.lang.String)>
<java.util.Deque: boolean add(java.lang.Object)>
<androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
<ch.qos.logback.core.spi.CyclicBufferTracker: ch.qos.logback.core.helpers.CyclicBuffer buildComponent(java.lang.String)>
<com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.gms.measurement.internal.zzgf: boolean zzu()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object access$2700(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.google.android.gms.location.zzaz: com.google.android.gms.location.zzba zzb(android.os.IBinder)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void <init>()>
<com.adjust.sdk.PackageBuilder: void addDouble(java.util.Map,java.lang.String,java.lang.Double)>
<com.airbnb.lottie.LottieDrawable$15: void <init>(com.airbnb.lottie.LottieDrawable,float)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.databinding.ManageDeviceRegistrationBinding getBinding()>
<com.facebook.react.ReactActivityDelegate: void onDestroy()>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$1000(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.gms.common.SignInButton: void setStyle(int,int)>
<com.google.android.gms.internal.maps.zzh: java.lang.String getId()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: void <init>()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setCountry(java.lang.String)>
<android.app.Dialog: void show()>
<android.content.Context: android.content.ComponentName startService(android.content.Intent)>
<com.facebook.cache.disk.DefaultDiskStorage: boolean isExternal(java.io.File,com.facebook.cache.common.CacheErrorLogger)>
<com.google.android.material.datepicker.MaterialDatePicker: java.lang.String getHeaderText()>
<com.google.android.material.chip.ChipDrawable: void setChipStrokeColor(android.content.res.ColorStateList)>
<android.view.View: void setSystemUiVisibility(int)>
<com.facebook.soloader.SystemLoadLibraryWrapper: void loadLibrary(java.lang.String)>
<java.lang.Integer: int compare(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager registerMsaAccountManager()>
<com.google.android.datatransport.runtime.EventInternal$Builder: void <init>()>
<com.google.android.gms.measurement.internal.zzeu: void zzb(long)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void clearRunningAndStartIfDirty()>
<android.view.Display: int getRotation()>
<java.lang.Float: boolean isInfinite(float)>
<com.google.android.gms.internal.measurement.zzdj: long zzX()>
<com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler: void <init>(com.facebook.react.bridge.Callback,com.facebook.react.uimanager.NativeViewHierarchyManager$1)>
<com.microsoft.authenticator.graphclient.entities.GetCachedPolicyResult$SuccessCacheNotExpired: com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult getPolicy()>
<com.google.android.material.chip.Chip: void applyChipDrawable(com.google.android.material.chip.ChipDrawable)>
<com.google.android.material.tabs.TabLayout: void selectTab(com.google.android.material.tabs.TabLayout$Tab)>
<androidx.work.WorkManager: androidx.work.Operation cancelAllWorkByTag(java.lang.String)>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment: void setArguments(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzhg: void <init>()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void onDestroyView()>
<android.widget.EditText: void setHintTextColor(int)>
<java.net.URL: java.net.URLConnection openConnection()>
<androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>
<com.facebook.react.views.picker.ReactDropdownPickerManager: void <init>()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void <init>(android.content.res.Resources,int,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzu()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel getWpjViewModel()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig create(com.google.android.datatransport.runtime.time.Clock,java.util.Map)>
<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>
<com.adjust.sdk.PackageBuilder: void addDuration(java.util.Map,java.lang.String,long)>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTransform getTransform()>
<android.app.Activity: java.lang.String getPackageName()>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getClickableForeground()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean getKeyManagerFactory()>
<java.util.concurrent.BlockingQueue: java.lang.Object peek()>
<com.facebook.drawee.controller.AbstractDraweeController: void onFailureInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean)>
<okhttp3.Headers: okhttp3.Headers of(java.util.Map)>
<com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JavaScriptExecutorFactory getJsExecutorFactory()>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectNotificationHelper(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.google.android.gms.common.api.internal.GoogleApiManager: boolean zaC(com.google.android.gms.common.api.internal.GoogleApiManager)>
<com.facebook.cache.disk.FileCache: void remove(com.facebook.cache.common.CacheKey)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: void <init>()>
<com.adjust.sdk.ActivityPackage: long getInstallBeginTimeInSeconds()>
<kotlinx.coroutines.android.AndroidDispatcherFactory: void <init>()>
<ch.qos.logback.core.pattern.FormatInfo: int hashCode()>
<com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener: void onNavigationItemReselected(android.view.MenuItem)>
<android.graphics.RectF: void set(float,float,float,float)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$loadMetadata$14(java.util.Map,android.database.Cursor)>
<ch.qos.logback.core.status.OnPrintStreamStatusListenerBase: java.io.PrintStream getPrintStream()>
<com.facebook.yoga.YogaNode: void setMaxHeightPercent(float)>
<com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager: java.lang.String getCachedMsaFcmToken()>
<com.google.android.gms.common.api.internal.zaar: com.google.android.gms.common.GoogleApiAvailabilityLight zaj(com.google.android.gms.common.api.internal.zaar)>
<com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<com.facebook.fbreact.specs.NativeAppStateSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getTenantCountryCode()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: boolean isValueChanged(float)>
<android.app.Application$ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<java.util.ArrayList: java.lang.Object get(int)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void setContext(ch.qos.logback.core.Context)>
<com.google.android.material.navigation.NavigationBarMenuView: int getItemTextAppearanceInactive()>
<com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.evernote.android.job.util.Clock$1: void <init>()>
<android.net.UrlQuerySanitizer: void <init>()>
<com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.uimanager.ReactShadowNode getNode(int)>
<com.google.android.gms.maps.SupportMapFragment: void setArguments(android.os.Bundle)>
<ch.qos.logback.classic.joran.JoranConfigurator: void <init>()>
<com.google.android.gms.internal.measurement.zzkg: void zzq(java.lang.Object,long,long)>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: com.microsoft.authenticator.msa.MsaGetTicketCallback setTicketCallback(android.content.Context,com.microsoft.onlineid.SecurityScope,com.microsoft.authenticator.msa.MsaGetTicketCallback$ICompletion)>
<com.facebook.react.views.text.ReactTextView: void setBorderWidth(int,float)>
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>
<com.microsoft.aad.adal.Logger: void setLogLevel(com.microsoft.aad.adal.Logger$LogLevel)>
<com.facebook.drawee.controller.ForwardingControllerListener: void addListener(com.facebook.drawee.controller.ControllerListener)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: void printPeriodicity(ch.qos.logback.core.spi.ContextAwareBase)>
<com.facebook.imagepipeline.platform.PreverificationHelper: void <init>()>
<com.azure.authenticator.databinding.GpListRowLayoutBinding: void <init>(android.widget.RelativeLayout,android.widget.TextView,android.widget.CheckBox,androidx.cardview.widget.CardView,android.widget.ImageView,android.widget.TextView)>
<com.google.android.gms.internal.measurement.zzja: com.google.android.gms.internal.measurement.zzji zzv(int)>
<com.google.android.gms.internal.maps.zzk: float getTransparency()>
<com.facebook.react.ReactRootView: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)>
<android.widget.Button: void setEnabled(boolean)>
<com.google.android.material.appbar.ViewOffsetBehavior: void setHorizontalOffsetEnabled(boolean)>
<com.facebook.react.animated.TransformAnimatedNode$TransformConfig: void <init>(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1)>
<com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getPostprocessorSequence(com.facebook.imagepipeline.producers.Producer)>
<okhttp3.Call: boolean isCanceled()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzh addCircle(com.google.android.gms.maps.model.CircleOptions)>
<com.google.android.material.internal.CheckableImageButton$1: void <init>(com.google.android.material.internal.CheckableImageButton)>
<com.google.android.gms.internal.measurement.zzkz: long zzr()>
<com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean access$100(com.facebook.react.modules.core.JavaTimerManager)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getPlaceholderImageScaleType()>
<androidx.cardview.widget.CardView: void setCardElevation(float)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.google.android.material.tabs.TabLayout: boolean isTabIndicatorFullWidth()>
<androidx.fragment.app.FragmentViewModelLazyKt: kotlin.Lazy createViewModelLazy(androidx.fragment.app.Fragment,kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)>
<com.facebook.soloader.SoLoader: void init(android.content.Context,int,com.facebook.soloader.SoFileLoader)>
<okhttp3.Response: int code()>
<com.google.android.gms.internal.measurement.zzjk: void zzO(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()>
<com.airbnb.lottie.model.animatable.AnimatablePointValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.facebook.react.views.text.ReactBaseTextShadowNode: void <init>(com.facebook.react.views.text.ReactTextViewManagerCallback)>
<com.google.android.gms.internal.measurement.zzcp: java.util.List zze()>
<com.microsoft.authenticator.accountFullscreen.abstraction.ActionViewHolderFactory: void <init>(com.microsoft.authenticator.registration.aad.presentationlogic.AadNgcPnRegistrationUpsell,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager,com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectWorkerFactory(com.azure.authenticator.PhoneFactorApplication,androidx.hilt.work.HiltWorkerFactory)>
<com.airbnb.lottie.LottieAnimationView: void enableMergePathsForKitKatAndAbove(boolean)>
<com.google.android.gms.cloudmessaging.zzr: void <init>(android.content.Context)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$showGraphTokenExpiredScreen$1$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzia: int zzh(int,byte[],int,int)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier: com.facebook.datasource.IncreasingQualityDataSourceSupplier create(java.util.List,boolean)>
<com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)>
<android.view.ViewGroup: void drawableHotspotChanged(float,float)>
<com.facebook.react.uimanager.ReactShadowNode: void setViewClassName(java.lang.String)>
<com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException: com.microsoft.identity.broker4j.workplacejoin.WorkplaceJoinFailure getFailureType()>
<com.google.android.gms.measurement.internal.zzht: java.lang.String zzb(android.content.Context,java.lang.String,java.lang.String)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)>
<com.google.android.gms.common.internal.zzx: com.google.android.gms.common.internal.zzy zzg(android.os.IBinder)>
<com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)>
<com.airbnb.lottie.LottieAnimationView$1: void <init>()>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction: void goToBackgroundDataRestrictionsSettings(android.content.Context)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int getState()>
<okhttp3.Response: java.lang.String header(java.lang.String)>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path$Direction)>
<ch.qos.logback.core.rolling.helper.LiteralPathPart: void <init>(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: android.animation.Animator createElevationAnimator(float,float)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar)>
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>
<com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)>
<com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation: void execute(com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzp()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager getMsaRefreshUserDaManager()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: void <init>(com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzl(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isEnabled()>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueRemoveRootView(int)>
<com.facebook.react.uimanager.ViewProps: boolean isLayoutOnly(com.facebook.react.bridge.ReadableMap,java.lang.String)>
<com.google.android.material.datepicker.MonthAdapter: int lastPositionInMonth()>
<com.microsoft.brooklyn.ui.settings.EnterpriseSettingsHandler: void <init>(com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAadMfaAccountsWithUsername(java.lang.String)>
<com.facebook.react.bridge.JSApplicationCausedNativeException: void <init>(java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding: android.widget.LinearLayout getRoot()>
<com.azure.authenticator.ui.action.ActionStateManager: boolean isBackgroundDataUsageRestricted()>
<com.airbnb.lottie.value.Keyframe: float getEndValueFloat()>
<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>
<com.google.android.gms.common.zzp: int zza(int)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextUnquotedValue()>
<android.widget.Spinner: android.content.Context getContext()>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)>
<okhttp3.OkHttpClient$Builder: void <init>()>
<com.azure.authenticator.databinding.ManageDeviceRegistrationBinding: com.azure.authenticator.databinding.ManageDeviceRegistrationBinding bind(android.view.View)>
<ch.qos.logback.core.status.Status: java.util.Iterator iterator()>
<com.google.android.gms.auth.api.signin.GoogleSignInResult: com.google.android.gms.common.api.Status getStatus()>
<com.facebook.drawee.generic.WrappingUtils: void applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams)>
<com.google.android.gms.common.UserRecoverableException: void <init>(java.lang.String,android.content.Intent)>
<com.google.android.material.shape.MaterialShapeDrawable: boolean updateColorsForState(int[])>
<com.google.android.gms.internal.measurement.zzah: void <init>(com.google.android.gms.internal.measurement.zzbr,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzv()>
<android.app.Dialog: void onStart()>
<com.google.android.gms.internal.measurement.zzmk: boolean zzd()>
<com.google.android.material.tabs.TabLayout$TabView: void tryAttachBadgeToAnchor(android.view.View)>
<com.azure.authenticator.OnAppUpgradeReceiver: void <init>()>
<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>
<com.google.android.gms.tasks.zzw: boolean zzb(java.lang.Object)>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.animation.ValueAnimator: void setIntValues(int[])>
<ch.qos.logback.core.subst.Node: void append(ch.qos.logback.core.subst.Node)>
<com.google.android.gms.location.LocationRequest: void <init>()>
<android.database.sqlite.SQLiteStatement: void execute()>
<com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeLatin1JsNames()>
<com.adjust.sdk.AdjustFactory: java.lang.String byte2HexFormatted(byte[])>
<com.google.android.gms.internal.measurement.zzmw: boolean zza()>
<androidx.cardview.widget.CardView: boolean getUseCompatPadding()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onConfigure(android.database.sqlite.SQLiteDatabase)>
<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<com.google.android.gms.internal.measurement.zzmy: com.google.android.gms.internal.measurement.zzmz zzc()>
<com.facebook.drawee.controller.AbstractDraweeController: void setRetainImageOnFailure(boolean)>
<com.google.common.collect.ImmutableList$Builder: void <init>()>
<com.facebook.common.memory.PooledByteBufferOutputStream: void close()>
<com.google.android.gms.common.internal.zak: void zaa()>
<com.azure.authenticator.accounts.GenericAccount: void setAccountName(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjx: void zzi(com.google.android.gms.internal.measurement.zzha)>
<com.adjust.sdk.AdjustConfig: boolean checkContext(android.content.Context)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Activity: java.lang.String getString(int)>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.facebook.react.modules.core.ChoreographerCompat: void choreographerRemoveFrameCallback(android.view.Choreographer$FrameCallback)>
<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onFailure(java.lang.Throwable)>
<com.facebook.yoga.YogaUnit: int intValue()>
<com.google.android.gms.common.zzc: void <init>()>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<com.google.android.gms.internal.measurement.zzei: void zzc(java.lang.Object,java.lang.String,java.lang.String)>
<java.util.concurrent.BlockingQueue: int size()>
<com.microsoft.authenticator.appcenter.AppCenterManager: void initialize(android.app.Application,kotlin.jvm.functions.Function0)>
<ch.qos.logback.core.subst.Tokenizer: void handleStartState(char,java.util.List,java.lang.StringBuilder)>
<com.google.android.gms.common.config.zze: void <init>(java.lang.String,java.lang.String)>
<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable access$600(com.google.android.material.tabs.TabLayout$TabView)>
<java.lang.StringBuilder: int capacity()>
<com.google.android.gms.measurement.internal.zzjb: com.google.android.gms.measurement.internal.zzdz zzK(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzdz)>
<com.airbnb.lottie.model.layer.TextLayer: java.util.List getTextLines(java.lang.String)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>
<com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>
<com.google.android.material.textfield.TextInputLayout$1: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.facebook.cache.common.CacheEventListener: void onReadException(com.facebook.cache.common.CacheEvent)>
<com.google.android.gms.measurement.internal.zzg: long zzB()>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor(android.widget.ProgressBar)>
<java.lang.CharSequence: char charAt(int)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: ch.qos.logback.core.net.server.ServerListener createServerListener(java.net.ServerSocket)>
<com.google.android.gms.tasks.zzf: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzw)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: android.os.Bundle toBundle()>
<com.google.android.material.tabs.TabLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.FrameLayout: int getPaddingRight()>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zzb: void getStreetViewPanoramaAsync(com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.facebook.react.views.picker.ReactPickerManager: void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)>
<com.google.common.collect.MapMakerInternalMap$Segment: void preWriteCleanup()>
<java.util.concurrent.TimeUnit: long toDays(long)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.measurement.zzp: void getTestFlag(com.google.android.gms.internal.measurement.zzs,int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: void serializeToIntentExtra(com.google.android.gms.common.internal.safeparcel.SafeParcelable,android.content.Intent,java.lang.String)>
<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: void registerConfigurationWatchList(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.ConfigurationWatchList)>
<ch.qos.logback.core.status.OnPrintStreamStatusListenerBase: boolean isElapsedTimeLongerThanThreshold(long,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInUnregistrationViewModel aadPhoneSignInUnregistrationViewModel()>
<com.google.android.gms.internal.measurement.zzla: long zzz()>
<com.google.android.gms.measurement.internal.zzgf: boolean zza()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: void getCachedPolicyForRichContext()>
<com.adjust.sdk.IActivityHandler: void addSessionCallbackParameter(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.internal.zze: com.google.android.gms.internal.maps.zze zzf()>
<com.google.android.gms.measurement.internal.zzaq: java.lang.Double zzc(java.lang.String)>
<com.facebook.drawee.generic.RoundingParams: float[] getOrCreateRoundedCornersRadii()>
<ch.qos.logback.classic.Logger: void setAdditive(boolean)>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setColor(android.view.View,java.lang.Integer)>
<com.google.android.material.tabs.TabLayout$TabView: void updateTextAndIcon(android.widget.TextView,android.widget.ImageView)>
<android.widget.FrameLayout: boolean post(java.lang.Runnable)>
<com.facebook.cache.disk.DiskCacheConfig: int getVersion()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker getCloseableReferenceLeakTracker()>
<com.google.android.gms.internal.auth.zze: android.os.Bundle zza(java.lang.String,android.os.Bundle)>
<com.google.android.datatransport.runtime.backends.BackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)>
<com.facebook.imagepipeline.producers.ThumbnailBranchProducer: int findFirstProducerForSize(int,com.facebook.imagepipeline.common.ResizeOptions)>
<com.google.android.gms.internal.measurement.zzjs: java.lang.Object get(java.lang.Object)>
<com.airbnb.lottie.LottieAnimationView: void setImageDrawable(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.util.FileSize: long getSize()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void access$unsuccessfulResultFromGetToken(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,java.lang.Integer)>
<com.google.android.gms.common.internal.zzo: boolean zzh()>
<com.microsoft.workaccount.workplacejoin.WorkplaceJoin: void isSharedDevice(android.content.Context,com.microsoft.workaccount.workplacejoin.WorkplaceJoin$OnIsSharedDeviceCallback)>
<android.widget.EditText: void setFilters(android.text.InputFilter[])>
<com.google.android.material.internal.CollapsingTextHelper: float calculateCollapsedTextWidth()>
<com.google.android.material.shape.ShapePath$PathArcOperation: float access$900(com.google.android.material.shape.ShapePath$PathArcOperation)>
<android.app.Fragment: boolean isHidden()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void toggleBatteryOptimizationPreference()>
<android.view.ViewGroup: int getId()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$startUrlWithCookies$$inlined$apply$lambda$1: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment,java.util.Set)>
<com.fasterxml.jackson.core.util.TextBuffer: java.lang.String setCurrentAndReturn(int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountItemTouchHelper: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.AccountItemTouchHelper$AccountItemTouchAdapter)>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$1: void <init>(com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder)>
<com.facebook.imagepipeline.core.ImagePipeline$7: void <init>(com.facebook.imagepipeline.core.ImagePipeline,android.net.Uri)>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity: void <init>()>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: void <init>(com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.image.QualityInfo,int,int)>
<com.evernote.android.job.v21.JobProxy21: void <init>(android.content.Context)>
<com.facebook.cache.disk.DiskStorageCache: void evictAboveSize(long,com.facebook.cache.common.CacheEventListener$EvictionReason)>
<com.azure.authenticator.utils.Hilt_TestActivity$1: void <init>(com.azure.authenticator.utils.Hilt_TestActivity)>
<android.widget.EditText: int getSelectionStart()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$silentlyRegisterForAadPhoneSignInPushNotifications$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.image.ImmutableQualityInfo: void <init>(int,boolean,boolean)>
<android.graphics.drawable.Drawable: void invalidateSelf()>
<androidx.work.impl.foreground.SystemForegroundService: android.content.Intent getIntent()>
<com.google.android.material.shape.MaterialShapeDrawable$2: void <init>(com.google.android.material.shape.MaterialShapeDrawable,float)>
<com.google.android.gms.measurement.internal.zzkk: void zzac(android.os.Bundle,long)>
<com.google.android.gms.auth.account.zza: void zzc(android.accounts.Account)>
<com.google.android.gms.safetynet.SafetyNetApi$zzb: java.util.List getHarmfulAppsList()>
<com.google.android.gms.internal.measurement.zzcz: int zzb()>
<com.facebook.imagepipeline.request.ImageRequest: boolean getLocalThumbnailPreviewsEnabled()>
<com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.disk.DiskCacheConfig build()>
<com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.io.InputStream,java.lang.String)>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods$Builder unregister(com.google.android.gms.common.api.internal.RemoteCall)>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: dagger.hilt.android.internal.managers.FragmentComponentManager createComponentManager()>
<com.google.android.gms.internal.measurement.zzkh: byte zzp(byte[],long)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: long getId()>
<com.google.android.gms.maps.model.zzg: void <init>()>
<com.evernote.android.job.JobManager: java.util.Set getAllJobRequests(java.lang.String,boolean,boolean)>
<com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder: void <init>(android.view.View)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$500(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: java.lang.Object savePlaceHolderPolicy(kotlin.coroutines.Continuation)>
<com.google.android.gms.common.api.internal.zai: void zae(com.google.android.gms.common.api.internal.zaaa,boolean)>
<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<com.google.android.gms.internal.measurement.zzdr: com.google.android.gms.internal.measurement.zzdr zzb(java.lang.Iterable)>
<java.io.PrintStream: void write(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.common.api.internal.BackgroundDetector: boolean isInBackground()>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()>
<android.widget.TextView: int getTotalPaddingLeft()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.backup.abstraction.AutoBackupManager access$4300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.gms.internal.measurement.zzdf: java.lang.String zzb()>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordsViewModel: void <init>(com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.repository.UtilitySDKRepository)>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: android.view.View getViewAt(int)>
<com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void transcodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.net.HttpURLConnection openConnectionTo(android.net.Uri)>
<com.adjust.sdk.DeviceInfo: java.lang.String getClientSdk(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: boolean getRegisterSilentlyForAadNgcPn()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.thirdparty.businessLogic.AddThirdPartyAccountUseCase addThirdPartyAccountUseCase()>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzG()>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectMfaPinAuthentication(com.azure.authenticator.OnAppUpgradeReceiver,com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication)>
<com.google.android.gms.internal.measurement.zzdj: void zzbj(com.google.android.gms.internal.measurement.zzdj,java.lang.Iterable)>
<com.google.android.gms.internal.measurement.zzdj: void zzbl(com.google.android.gms.internal.measurement.zzdj,long)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$onTicketAcquired$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.react.shell.MainPackageConfig: com.facebook.imagepipeline.core.ImagePipelineConfig getFrescoConfig()>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager: void showInfoDialogFragment(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment)>
<com.google.android.material.datepicker.DateSelector: java.util.Collection getSelectedDays()>
<com.facebook.react.uimanager.events.EventDispatcher: com.facebook.react.uimanager.events.Event[] access$1200(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory access$000()>
<com.facebook.cache.disk.DiskStorageCache$Params: void <init>(long,long,long)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzL(java.lang.String)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper,com.google.android.gms.dynamic.LifecycleDelegate)>
<android.view.View: int getTop()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$Companion: java.lang.String getMsaAccountPageUrl()>
<com.facebook.imagepipeline.image.EncodedImage: void <init>(com.facebook.common.internal.Supplier,int)>
<com.google.android.gms.internal.measurement.zzbk: void <init>(com.google.android.gms.internal.measurement.zzbq,android.app.Activity)>
<ch.qos.logback.core.net.LoginAuthenticator: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.cloudmessaging.IMessengerCompat$Proxy: void <init>(android.os.IBinder)>
<com.facebook.react.uimanager.ReactRoot: void runApplication()>
<com.facebook.soloader.UnpackingSoSource: java.lang.Object getLibraryLock(java.lang.String)>
<com.microsoft.authenticator.authentication.entities.EntropySignEnum: com.microsoft.authenticator.authentication.entities.EntropySignEnum[] values()>
<android.view.ViewGroup: java.lang.Object getTag(int)>
<com.google.android.gms.internal.location.zzw: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,android.app.PendingIntent)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void setBorderStyle(java.lang.String)>
<com.facebook.imagepipeline.core.PriorityThreadFactory$1: void <init>(com.facebook.imagepipeline.core.PriorityThreadFactory,java.lang.Runnable)>
<com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()>
<com.google.android.gms.measurement.internal.zzkd: void zzM(com.google.android.gms.measurement.internal.zzp)>
<com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode toTileMode(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: void zzaX(com.google.android.gms.internal.measurement.zzdj,boolean)>
<com.google.crypto.tink.proto.Keyset$Builder: java.util.List getKeyList()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.internal.Supplier isLazyDataSource()>
<com.facebook.react.views.art.ARTSurfaceViewManager: void <init>()>
<com.airbnb.lottie.model.animatable.AnimatableShapeValue: void <init>(java.util.List)>
<android.view.ViewGroup: int getPaddingBottom()>
<android.database.sqlite.SQLiteDatabase: void close()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: boolean isCachedValueEnabled(float)>
<com.azure.authenticator.OnAppUpgradeReceiver$configureSelfhostControls$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.adjust.sdk.Util: java.util.Map mergeParameters(java.util.Map,java.util.Map,java.lang.String)>
<com.google.android.gms.common.server.response.SafeParcelResponse: void zaJ(java.lang.StringBuilder,com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)>
<com.facebook.imagepipeline.memory.DefaultBitmapPoolParams: int getMaxSizeHardCap()>
<com.google.android.material.chip.ChipDrawable: int getIntrinsicWidth()>
<okio.Okio: okio.Sink sink(java.io.OutputStream)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.material.tabs.TabLayout: void applyGravityForModeScrollable(int)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zoomControlsEnabled(boolean)>
<com.google.android.datatransport.runtime.TransportInternal: void send(com.google.android.datatransport.runtime.SendRequest,com.google.android.datatransport.TransportScheduleCallback)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion: void onNgcRegistrationCancel()>
<android.widget.AutoCompleteTextView: int getMeasuredHeight()>
<com.adjust.sdk.IPackageHandler: void sendFirstPackage()>
<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<com.google.android.material.button.MaterialButtonHelper: void updateStroke()>
<com.facebook.imagepipeline.producers.BaseConsumer: boolean isNotLast(int)>
<com.google.android.gms.internal.measurement.zzkh: java.lang.Object zzn(java.lang.Object,long)>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.SafeBrowsingData)>
<com.google.android.gms.maps.model.MarkerOptions: void <init>(com.google.android.gms.maps.model.LatLng,java.lang.String,java.lang.String,android.os.IBinder,float,float,boolean,boolean,boolean,float,float,float,float,float)>
<com.facebook.react.views.viewpager.PageScrollEvent: void <init>(int,int,float)>
<ch.qos.logback.core.util.StatusPrinter: void print(ch.qos.logback.core.status.StatusManager,long)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.PrimitiveSet getPrimitives(com.google.crypto.tink.KeysetHandle,java.lang.Class)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<ch.qos.logback.core.util.COWArrayList: void refreshCopy()>
<com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(float)>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.gms.location.zzp: void <init>()>
<android.view.ViewGroup: int getBottom()>
<com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager: void <init>(com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyStorage,com.microsoft.authenticator.graphclient.GraphHelper)>
<com.microsoft.authenticator.graphclient.entities.FetchNewPolicyResult$Success: com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyData getPolicyResult()>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabIndicatorInterpolator access$1200(com.google.android.material.tabs.TabLayout)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations credAutofillCommonOperations()>
<com.airbnb.lottie.parser.AnimatableValueParser: java.util.List parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,com.airbnb.lottie.parser.ValueParser)>
<com.google.android.gms.common.internal.BaseGmsClient: void triggerNotAvailable(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks,int,android.app.PendingIntent)>
<android.graphics.Paint: void setStrokeWidth(float)>
<android.widget.AdapterView$OnItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.util.Random: void <init>()>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zzc(java.lang.String)>
<com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type[] values()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.CardUseCase cardUseCase()>
<com.google.android.gms.measurement.internal.zzkk: boolean zzam(android.os.Bundle,int)>
<com.google.android.gms.location.ActivityTransitionResult: void <init>(java.util.List,android.os.Bundle)>
<com.microsoft.onlineid.AccountManager: void getAccountById(java.lang.String,android.os.Bundle)>
<java.util.Deque: boolean remove(java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.airbnb.lottie.model.layer.Layer: int getPreCompWidth()>
<java.util.concurrent.ConcurrentHashMap: void clear()>
<com.adjust.sdk.ActivityHandler: void access$2100(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.internal.measurement.zzlw: void <init>()>
<android.widget.ImageButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.android.gms.internal.measurement.zzmg: void <init>()>
<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>
<com.azure.authenticator.storage.database.DbAccount: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzha: void zzD(int,java.util.List,boolean)>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zzg(double)>
<com.facebook.react.ReactNativeHost: boolean getUseDeveloperSupport()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.safetynet.zzh: void <init>()>
<com.facebook.react.animated.NativeAnimatedNodesManager: void setAnimatedNodeValue(int,double)>
<com.google.crypto.tink.KeyTypeManager: com.google.crypto.tink.KeyTypeManager$KeyFactory keyFactory()>
<com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.interfaces.DraweeController getController()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator(int)>
<com.facebook.drawee.components.DeferredReleaser: void <init>()>
<java.nio.channels.FileChannel: long size()>
<com.google.android.gms.common.sqlite.CursorWrapper: android.database.CursorWindow getWindow()>
<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()>
<com.facebook.common.media.MediaUtils: boolean isVideo(java.lang.String)>
<com.google.android.gms.common.api.Batch: boolean zac(com.google.android.gms.common.api.Batch,boolean)>
<com.google.android.gms.cloudmessaging.zzf: void <init>(com.google.android.gms.cloudmessaging.zze,com.google.android.gms.cloudmessaging.zzg)>
<com.adjust.sdk.ActivityHandler: void writeAttributionI()>
<androidx.fragment.app.Fragment: void onLowMemory()>
<java.text.SimpleDateFormat: void setDateFormatSymbols(java.text.DateFormatSymbols)>
<com.google.android.gms.measurement.internal.zzkk: int zzD(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,android.os.Bundle,java.util.List,boolean,boolean)>
<com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getCustomImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzao zzf(java.lang.String,java.lang.String)>
<android.view.View: int resolveSize(int,int)>
<com.google.android.material.internal.CollapsingTextHelper: void drawMultilineTransition(android.graphics.Canvas,float,float)>
<com.facebook.react.modules.toast.ToastModule$2: void <init>(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int)>
<com.fasterxml.jackson.core.io.UTF8Writer: java.io.Writer append(char)>
<android.widget.LinearLayout: int[] getDrawableState()>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>
<com.google.android.gms.common.api.internal.LifecycleFragment: android.app.Activity getLifecycleActivity()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void logLocalAuthResult(boolean,int)>
<com.google.android.material.navigation.NavigationBarItemView: int getItemLayoutResId()>
<com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()>
<com.google.android.material.datepicker.MaterialDatePicker: int getDialogPickerHeight(android.content.Context)>
<com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult disableAutoSignIn(com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)>
<com.facebook.react.views.image.ReactImageView: void setBorderColor(int)>
<com.facebook.react.views.slider.ReactSlidingCompleteEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.google.android.gms.common.api.internal.zaaa: void zad()>
<androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
<com.google.android.gms.internal.measurement.zzcw: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.airbnb.lottie.model.KeyPathElement: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult save(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.Credential)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()>
<android.widget.CheckBox: int getMinHeight()>
<android.util.Property: void set(java.lang.Object,java.lang.Object)>
<com.google.android.material.textfield.IndicatorViewController: void setHelperTextViewTextColor(android.content.res.ColorStateList)>
<com.google.android.material.tabs.TabLayout: com.google.android.material.tabs.TabLayout$Tab createTabFromPool()>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$ServiceC: void <init>()>
<com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)>
<android.view.Window: int getStatusBarColor()>
<com.google.android.gms.common.server.response.FastParser: long zab(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.google.android.gms.internal.measurement.zzdu: boolean zzd()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>
<com.google.android.gms.common.internal.zak: void zak(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void forwardNewResult(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imageformat.ImageFormat)>
<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.databinding.GeneratorHistoryLayoutBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
<com.facebook.react.uimanager.UIImplementationProvider: com.facebook.react.uimanager.UIImplementation createUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)>
<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<com.google.android.gms.internal.measurement.zzha: void zzv(int,java.util.List,boolean)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: void <init>(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder,java.util.Map)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$enableBrowserAccess$enableBrowserAccessDialogBuilder$1$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.location.LocationResult: void <init>(java.util.List)>
<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>
<com.google.android.gms.measurement.internal.zzff: void <init>(com.google.android.gms.measurement.internal.zzfi,java.lang.String)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient$zzd: void <init>(com.google.android.gms.auth.api.signin.zzc)>
<android.webkit.WebView: void scrollTo(int,int)>
<com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)>
<com.google.android.material.circularreveal.CircularRevealWidget: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)>
<com.airbnb.lottie.LottieLogger: void debug(java.lang.String)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<com.google.android.material.datepicker.MaterialDatePicker$2: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>
<com.google.android.datatransport.runtime.logging.Logging: void d(java.lang.String,java.lang.String,java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationWorker brooklynIntroNotificationWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)>
<com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)>
<com.airbnb.lottie.animation.content.GradientFillContent: android.graphics.LinearGradient getLinearGradient()>
<com.facebook.react.views.art.ARTVirtualNode: void <init>()>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: android.content.Intent getIntent()>
<androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.gms.internal.measurement.zzmn: boolean zza()>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: java.lang.String getDeviceId()>
<com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)>
<ch.qos.logback.core.rolling.helper.Compressor: java.lang.String computeFileNameStrWithoutCompSuffix(java.lang.String,ch.qos.logback.core.rolling.helper.CompressionMode)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaf(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<com.azure.authenticator.accounts.RestoreCapability: void <init>()>
<com.google.android.gms.measurement.internal.zzg: void zzP(long)>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int)>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>
<com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getFriendlyDeviceName()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.location.LocationManager access$5700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<androidx.room.RoomSQLiteQuery: void release()>
<com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()>
<android.view.ViewGroup: float getAlpha()>
<com.azure.authenticator.databinding.FragmentSignInBinding: android.widget.ScrollView getRoot()>
<com.airbnb.lottie.utils.Utils$1: android.graphics.PathMeasure initialValue()>
<com.facebook.react.modules.core.ReactChoreographer: java.util.ArrayDeque[] access$500(com.facebook.react.modules.core.ReactChoreographer)>
<java.lang.Number: int intValue()>
<com.google.android.gms.common.api.internal.zap: void zaa()>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
<com.azure.authenticator.databinding.WebviewBinding: android.widget.LinearLayout getRoot()>
<com.google.android.gms.common.images.ImageManager: android.content.Context zac(com.google.android.gms.common.images.ImageManager)>
<com.adjust.sdk.ILogger: void setLogLevel(com.adjust.sdk.LogLevel,boolean)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void <init>(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: float getBlockedRadius()>
<com.google.android.gms.measurement.internal.zzjz: void <init>(com.google.android.gms.measurement.internal.zzkd,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.common.util.zzb: boolean zza()>
<com.azure.authenticator.databinding.TestActivityLayoutBinding: com.azure.authenticator.databinding.TestActivityLayoutBinding bind(android.view.View)>
<android.app.job.JobScheduler: void cancel(int)>
<com.facebook.react.views.textinput.ReactTextInputLocalData: void apply(android.widget.EditText)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.concurrent.Executor access$000(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBackgroundLocalFileFetchToEncodeMemorySequence()>
<com.microsoft.authenticator.registration.msa.entities.MsaNgcKeyGenerationStatus$Success: com.microsoft.ngc.provider.cryptography.NgcKeyInfo getNgcKeyInfo()>
<com.azure.authenticator.storage.database.AccountDao: androidx.lifecycle.LiveData getAllAccountsObservable()>
<com.google.android.datatransport.runtime.TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setPriority(com.google.android.datatransport.Priority)>
<com.azure.authenticator.storage.Storage: void writeIsMfaBiometricPreferenceOptedIn(android.content.Context,boolean)>
<com.facebook.soloader.ApkSoSource: void <init>(android.content.Context,java.io.File,java.lang.String,int)>
<com.google.android.material.navigation.NavigationBarPresenter$SavedState$1: void <init>()>
<com.google.android.gms.internal.auth.zze: android.os.Bundle zza(java.lang.String)>
<com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int)>
<com.google.android.gms.common.api.internal.zaaa: java.util.Map zaf(com.google.android.gms.common.api.internal.zaaa)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureMfaFingerprintPreference()>
<com.google.android.gms.internal.measurement.zzcd: void <init>()>
<android.widget.EditText: boolean requestFocus(int,android.graphics.Rect)>
<com.adjust.sdk.Util: int getNetworkType(android.content.Context)>
<com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.facebook.react.modules.network.ForwardingCookieHandler$2: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.Callback)>
<com.google.android.material.behavior.SwipeDismissBehavior$1: boolean shouldDismiss(android.view.View,float)>
<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>
<com.google.crypto.tink.Registry$3: void <init>(com.google.crypto.tink.PrivateKeyTypeManager,com.google.crypto.tink.KeyTypeManager)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountViewModel registerThirdPartyAccountViewModel()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isMostlyScrolledInView(android.view.View)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_7_8$1: void <init>(int,int)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar)>
<ch.qos.logback.classic.net.SimpleSocketServer: java.lang.String getClientThreadName(java.net.Socket)>
<com.google.android.gms.common.api.internal.zaar: void zay(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.signin.internal.zak)>
<com.facebook.imagepipeline.memory.BufferMemoryChunk: long getUniqueId()>
<com.facebook.imagepipeline.memory.Bucket: void incrementInUseCount()>
<android.widget.CheckBox: void playSoundEffect(int)>
<com.google.android.datatransport.runtime.SendRequest$Builder: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.service.BrooklynConfigsServiceInterface brooklynConfigsServiceInterface()>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setPresentationStyle(android.view.View,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void mergeBrokerAccounts(java.util.List)>
<com.google.android.gms.maps.GoogleMap$InfoWindowAdapter: android.view.View getInfoWindow(com.google.android.gms.maps.model.Marker)>
<com.google.android.datatransport.runtime.backends.AutoValue_BackendResponse: void <init>(com.google.android.datatransport.runtime.backends.BackendResponse$Status,long)>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)>
<android.content.res.TypedArray: int getInt(int,int)>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String zzh(com.google.android.gms.auth.api.credentials.Credential)>
<dagger.hilt.android.internal.managers.ActivityComponentManager: void <init>(android.app.Activity)>
<com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>
<com.google.android.gms.internal.location.zzbm: int zza(int,int,java.lang.String)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.evernote.android.job.work.PlatformWorker: int getJobId()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: float getBorderRadiusOrDefaultTo(float,com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.google.android.gms.internal.maps.zzh: void setCenter(com.google.android.gms.maps.model.LatLng)>
<com.google.android.gms.internal.measurement.zzgx: void zzp(byte[],int,int)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>
<com.adjust.sdk.PackageHandler: void sendFirstI()>
<android.os.Parcel: void writeFloatArray(float[])>
<com.google.android.gms.maps.SupportMapFragment$zza: void <init>(androidx.fragment.app.Fragment,com.google.android.gms.maps.internal.IMapFragmentDelegate)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: android.content.Intent getIntent()>
<com.google.android.gms.measurement.internal.zzae: long zzz()>
<com.google.android.gms.internal.location.zzaq: void <init>(com.google.android.gms.internal.location.zzar,com.google.android.gms.location.LocationAvailability)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void access$600(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference,int)>
<com.google.android.gms.measurement.internal.zzbh: void <init>()>
<ch.qos.logback.core.FileAppender: java.lang.String rawFileProperty()>
<com.google.android.material.badge.BadgeDrawable$SavedState$1: com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int)>
<ch.qos.logback.core.joran.spi.InterpretationContext: void setPropertiesMap(java.util.Map)>
<com.google.android.gms.measurement.internal.zzfi: com.google.android.gms.measurement.internal.zzfh zzp(com.google.android.gms.measurement.internal.zzfi,com.google.android.gms.measurement.internal.zzfh)>
<com.facebook.react.uimanager.TouchTargetHelper: boolean isTransformedTouchPointInView(float,float,android.view.ViewGroup,android.view.View,android.graphics.PointF)>
<com.google.android.gms.common.internal.ClientSettings: void zae(java.lang.Integer)>
<com.github.amlcurran.showcaseview.ShotStateStore: void setSingleShot(long)>
<com.facebook.systrace.Systrace: void traceCounter(long,java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzfm: java.lang.Object zzb()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase denyAadNgcSessionUseCase()>
<com.google.android.gms.internal.measurement.zzl: void <init>(android.os.Looper)>
<com.google.android.material.textfield.CutoutDrawable: void setCutout(android.graphics.RectF)>
<com.google.android.gms.internal.location.zzy: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzw(com.google.android.gms.common.AccountPicker$AccountChooserOptions,boolean)>
<com.google.android.gms.internal.measurement.zzmv: long zze()>
<com.google.android.gms.ads.identifier.zza: void <init>(com.google.android.gms.ads.identifier.AdvertisingIdClient,java.util.Map)>
<ch.qos.logback.core.joran.spi.DefaultClass: java.lang.Class value()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int spilloverCount()>
<com.google.android.gms.common.api.internal.zacv: void zab()>
<android.media.ExifInterface: void <init>(java.lang.String)>
<com.adjust.sdk.AndroidIdUtil: java.lang.String getAndroidId(android.content.Context)>
<com.google.android.gms.common.api.internal.zabl: void zaE()>
<ch.qos.logback.classic.spi.ILoggingEvent: java.util.Map getMDCPropertyMap()>
<com.google.android.gms.internal.safetynet.zzq: void <init>(com.google.android.gms.internal.safetynet.zzk,com.google.android.gms.common.api.GoogleApiClient)>
<ch.qos.logback.core.pattern.parser.Node: void setNext(ch.qos.logback.core.pattern.parser.Node)>
<com.facebook.common.file.FileUtils$RenameException: void <init>(java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.animation.content.GreedyContent: void absorbContent(java.util.ListIterator)>
<android.view.View: int getScrollX()>
<com.google.android.material.navigation.NavigationBarView: void setElevation(float)>
<com.google.android.gms.internal.location.zzbu: void <init>()>
<ch.qos.logback.classic.net.ReceiverBase: void start()>
<com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieTask fromRawRes(int)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setTransientExtras(android.os.Bundle)>
<com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog zad(android.app.Activity,android.content.DialogInterface$OnCancelListener)>
<ch.qos.logback.classic.pattern.ContextNameConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.microsoft.ngc.provider.cryptography.NgcKeyInfo: boolean isHardwareBacked()>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomRightCornerSize()>
<com.azure.authenticator.MainNavDirections$ToAccountListFragment: int getActionId()>
<javax.net.ssl.SSLSocket: void setReuseAddress(boolean)>
<com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature[] values()>
<com.facebook.react.animated.AnimatedNode: void onDetachedFromNode(com.facebook.react.animated.AnimatedNode)>
<com.google.android.gms.safetynet.SafetyNetApi$VerifyAppsUserResponse: void <init>()>
<com.airbnb.lottie.model.layer.BaseLayer: void getBounds(android.graphics.RectF,android.graphics.Matrix,boolean)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBigIntegerArray(android.os.Parcel,int,java.math.BigInteger[],boolean)>
<com.google.common.collect.RegularImmutableMap$KeySet: com.google.common.collect.ImmutableList asList()>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] ensureDsos()>
<com.google.android.material.shape.ShapePath$PathArcOperation: float access$800(com.google.android.material.shape.ShapePath$PathArcOperation)>
<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>
<com.airbnb.lottie.model.content.ShapeGroup: void <init>(java.lang.String,java.util.List,boolean)>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>
<com.google.android.material.shape.MaterialShapeDrawable: void calculatePath(android.graphics.RectF,android.graphics.Path)>
<ch.qos.logback.core.util.CachingDateFormatter: java.lang.String format(long)>
<com.google.android.gms.internal.maps.zzh: float getZIndex()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void w(java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: java.lang.String getSessionDetails()>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onMemoryCacheMiss()>
<com.facebook.common.file.FileTree: boolean deleteContents(java.io.File)>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.widget.ScrollView: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
<com.google.android.material.chip.ChipDrawable: float getIconEndPadding()>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: ch.qos.logback.core.net.server.ServerRunner createServerRunner(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor)>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzj(java.lang.Iterable)>
<com.google.android.gms.common.internal.Asserts: void checkNotNull(java.lang.Object)>
<android.animation.Animator: void start()>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzc: void <init>(com.google.android.gms.auth.api.accounttransfer.zzc)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment: void access$sendLogsViaPowerLift(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.google.android.gms.internal.measurement.zzjk: int zzf(java.util.List)>
<com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)>
<com.google.android.gms.measurement.internal.zzik: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp,android.os.Bundle)>
<com.microsoft.brooklyn.ui.credential.AddCredentialViewModel: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.authenticator.core.telemetry.TelemetryManager,com.microsoft.brooklyn.module.favicon.PicassoFaviconManager,com.microsoft.brooklyn.module.common.dropdown.businesslogic.UsernameDropdownUseCase)>
<ch.qos.logback.core.util.OptionHelper: boolean isEmpty(java.lang.String)>
<androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>
<com.google.android.material.navigation.NavigationBarMenuView: int getLabelVisibilityMode()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showResultAndRatingDialogIfNecessary(int,com.microsoft.authenticator.authentication.entities.AuthFlowType)>
<com.google.android.material.badge.BadgeDrawable: java.lang.String getBadgeText()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.PersonalDataChangedObserver personalDataChangedObserver()>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop: void <init>()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIntegerObject(android.os.Parcel,int,java.lang.Integer,boolean)>
<com.azure.authenticator.databinding.AadAccountPageWebViewFragmentBinding: com.azure.authenticator.databinding.AadAccountPageWebViewFragmentBinding bind(android.view.View)>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)>
<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface: void setColor(android.view.View,java.lang.Integer)>
<com.facebook.datasource.SimpleDataSource: boolean setFailure(java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzdg: com.google.android.gms.internal.measurement.zzdg zzb(com.google.android.gms.internal.measurement.zzdi)>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onChildStartedNativeGesture(android.view.MotionEvent)>
<com.google.android.gms.internal.maps.zzt: boolean isVisible()>
<com.microsoft.ngc.aad.NgcSession: java.lang.String getVerificationSign2()>
<com.azure.authenticator.common.Util$Companion$setupLongClickCopyText$1: void <init>(java.lang.String,android.view.View,int,int)>
<com.airbnb.lottie.LottieCompositionFactory$3: com.airbnb.lottie.LottieResult call()>
<com.google.android.gms.internal.measurement.zzix: com.google.android.gms.internal.measurement.zziw zzbH()>
<com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdh zzd()>
<ch.qos.logback.classic.sift.SiftingJoranConfigurator: void <init>(java.lang.String,java.lang.String,java.util.Map)>
<com.azure.authenticator.databinding.AddNewAccountBinding: android.widget.ScrollView getRoot()>
<android.widget.ImageButton: int getBottom()>
<com.google.android.material.internal.CollapsingTextHelper: int getCurrentExpandedTextColor()>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setBackgroundImage(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.measurement.zzdi: long zzs()>
<com.google.android.gms.common.internal.BaseGmsClient: void zzi(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IInterface)>
<com.google.android.gms.signin.internal.zae: void zab(com.google.android.gms.signin.internal.zak)>
<com.evernote.android.job.util.JobUtil: boolean hasBootPermission(android.content.Context)>
<com.facebook.imagepipeline.image.EncodedImage: int getRotationAngle()>
<com.facebook.react.modules.network.ResponseUtil: void onResponseReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,int,com.facebook.react.bridge.WritableMap,java.lang.String)>
<android.widget.EditText: int getBaseline()>
<javax.net.ssl.SSLSocket: boolean isClosed()>
<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: void <init>(int,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdj: void zzbc(com.google.android.gms.internal.measurement.zzdj)>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.google.android.material.appbar.HeaderBehavior: boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float)>
<ch.qos.logback.core.net.ssl.SSLConfigurable: void setNeedClientAuth(boolean)>
<java.util.AbstractList: int indexOf(java.lang.Object)>
<java.lang.IllegalStateException: java.lang.String getMessage()>
<com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)>
<com.facebook.react.uimanager.UIImplementation: void replaceExistingNonRootView(int,int)>
<bolts.AndroidExecutors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<com.facebook.react.ReactDelegate: void loadApp(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue: void <init>(long,long,java.util.Set,com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$1)>
<com.microsoft.authenticator.commonuilibrary.dialogqueue.DialogTaskQueue: void clear()>
<com.facebook.react.ReactInstanceManager: void onBackPressed()>
<java.util.Collections: java.util.Set emptySet()>
<com.google.android.gms.common.api.internal.zal: java.util.Set zaa()>
<com.airbnb.lottie.utils.MiscUtils: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath,com.airbnb.lottie.animation.content.KeyPathElementContent)>
<com.facebook.fbreact.specs.NativeDeviceInfoSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.common.api.internal.TaskApiCall: void <init>(com.google.android.gms.common.Feature[],boolean,int)>
<com.facebook.react.ReactRootView: void removeOnGlobalLayoutListener()>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.google.crypto.tink.KeysetManager: int addNewKey(com.google.crypto.tink.proto.KeyTemplate,boolean)>
<com.facebook.shimmer.ShimmerFrameLayout: void stopShimmer()>
<android.widget.Spinner: void setEnabled(boolean)>
<ch.qos.logback.core.joran.spi.Interpreter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void rehash()>
<androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.util.LruCache: void <init>(int)>
<com.azure.authenticator.utils.TestActivity$Companion: void <init>()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>
<com.google.android.material.animation.ArgbEvaluatorCompat: com.google.android.material.animation.ArgbEvaluatorCompat getInstance()>
<com.microsoft.authenticator.backup.businessLogic.BackupEncryptionManager: void <init>()>
<com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler get()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void setRegisterSilentlyForAadNgcPn(boolean)>
<com.facebook.react.uimanager.UIImplementation: void setJSResponder(int,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.backuprestore.viewlogic.BackupPromptFragment injectBackupPromptFragment2(com.microsoft.did.feature.backuprestore.viewlogic.BackupPromptFragment)>
<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer)>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<java.lang.Math: double sin(double)>
<com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)>
<com.google.android.gms.internal.maps.zzh: boolean isClickable()>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage: java.lang.Object delete(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount,kotlin.coroutines.Continuation)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: java.lang.String getMsaCid()>
<android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_11_12()>
<com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)>
<com.google.android.gms.maps.StreetViewPanoramaView$zza: void <init>(android.view.ViewGroup,com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate)>
<com.facebook.react.modules.storage.AsyncStorageModule$5: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)>
<ch.qos.logback.core.joran.action.IncludeAction: void trimHeadAndTail(ch.qos.logback.core.joran.event.SaxEventRecorder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationManager mfaSilentLocationManager()>
<com.facebook.react.uimanager.UIImplementation: void registerRootView(android.view.View,int,com.facebook.react.uimanager.ThemedReactContext)>
<com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment_MembersInjector: void injectActivationFailureDialogManager(com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment,com.microsoft.authenticator.registration.mfa.abstraction.ActivationFailureDialogManager)>
<com.adjust.sdk.ActivityHandler: void access$1100(com.adjust.sdk.ActivityHandler,boolean)>
<androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipToEndOfLine()>
<com.azure.authenticator.ui.dialog.StoreRatingTask$Companion: void <init>()>
<com.google.android.material.shape.ShapePath: void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)>
<com.facebook.react.modules.network.ProgressResponseBody: long access$002(com.facebook.react.modules.network.ProgressResponseBody,long)>
<com.facebook.common.references.SharedReference: void deleteReference()>
<com.microsoft.authenticator.di.MsaSdkModule_ProvideMsaSessionManagerFactory: com.microsoft.onlineid.sdk.extension.SessionManager provideMsaSessionManager(com.microsoft.authenticator.di.MsaSdkModule,android.content.Context)>
<com.google.android.gms.common.config.GservicesValue: void <init>(java.lang.String,java.lang.Object)>
<com.adjust.sdk.DeviceInfo: java.lang.String getAppUpdateTime(android.content.Context)>
<ch.qos.logback.core.net.ssl.SSLConfigurable: void setEnabledCipherSuites(java.lang.String[])>
<com.google.android.gms.auth.AccountChangeEventsRequest: com.google.android.gms.auth.AccountChangeEventsRequest setEventIndex(int)>
<com.google.android.gms.common.api.internal.zaaz: void disconnect()>
<android.widget.LinearLayout: void setOrientation(int)>
<com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>
<com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.navigation.NavigationBarItemView findItemView(int)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getFailureImageScaleType()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.rpa.model.AutomationModelLoader access$10100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: java.lang.Object unregisterAccount(java.lang.String,kotlin.coroutines.Continuation)>
<com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)>
<com.google.android.gms.internal.measurement.zzkh: double zzl(java.lang.Object,long)>
<com.google.android.gms.common.api.Status: void <init>(int,java.lang.String)>
<com.google.android.gms.internal.measurement.zzcp: void zzn(com.google.android.gms.internal.measurement.zzcp,int,com.google.android.gms.internal.measurement.zzcn)>
<com.google.android.material.floatingactionbutton.BorderDrawable: void setBorderTint(android.content.res.ColorStateList)>
<com.google.android.material.floatingactionbutton.BorderDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.material.snackbar.SnackbarContentLayout: void updateTopBottomPadding(android.view.View,int,int)>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage: java.lang.Object save(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount,kotlin.coroutines.Continuation)>
<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>
<java.util.zip.ZipEntry: void <init>(java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: java.lang.String getUserNameForLogging(com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.material.navigation.NavigationBarMenuView: android.content.res.ColorStateList getIconTintList()>
<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAccountAdded$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.datatransport.cct.internal.BatchedLogRequest: void <init>()>
<com.google.android.datatransport.runtime.EncodedPayload: byte[] getBytes()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void <init>()>
<com.microsoft.authenticator.workaccount.entities.CheckWpjStatus$WpjRetrievalComplete: boolean isSharedDevice()>
<ch.qos.logback.core.util.Loader: java.net.URL getResourceBySelfClassLoader(java.lang.String)>
<ch.qos.logback.core.pattern.SpacePadder: void leftPad(java.lang.StringBuilder,java.lang.String,int)>
<com.google.android.gms.common.internal.GmsClient: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailability,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<com.evernote.android.job.v14.JobProxy14: void plantOneOffExact(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)>
<com.fasterxml.jackson.core.util.TextBuffer: char[] expandCurrentSegment()>
<com.azure.authenticator.databinding.AddressDataPlaceholderLayoutBinding: com.azure.authenticator.databinding.AddressDataPlaceholderLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<java.text.BreakIterator: int next()>
<com.google.common.io.BaseEncoding$Alphabet: char encode(int)>
<android.view.View: boolean isInEditMode()>
<com.facebook.cache.disk.DiskCacheConfig$Builder: void <init>(android.content.Context,com.facebook.cache.disk.DiskCacheConfig$1)>
<com.google.common.base.Splitter$SplittingIterator: void <init>(com.google.common.base.Splitter,java.lang.CharSequence)>
<com.google.android.gms.measurement.internal.zzib: void zzn(java.lang.String,com.google.android.gms.measurement.internal.zzhu)>
<com.adjust.sdk.AdjustEventSuccess: void <init>()>
<ch.qos.logback.core.status.StatusBase: void add(ch.qos.logback.core.status.Status)>
<com.facebook.react.bridge.JavaMethodWrapper$8: void <init>()>
<com.facebook.react.modules.statusbar.StatusBarModule$4: void <init>(com.facebook.react.modules.statusbar.StatusBarModule,android.app.Activity,java.lang.String)>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zzb: void zzd()>
<java.io.PrintStream: void write(byte[],int,int)>
<ch.qos.logback.core.rolling.helper.RenameUtil: java.lang.Boolean areOnDifferentVolumes(java.io.File,java.io.File)>
<com.google.android.gms.measurement.internal.zzkf: com.google.android.gms.internal.measurement.zzdf zzz(com.google.android.gms.internal.measurement.zzdb,java.lang.String)>
<com.facebook.shimmer.Shimmer: int height(int)>
<java.util.List: boolean retainAll(java.util.Collection)>
<com.google.android.gms.measurement.internal.zzfb$zza: void doStartService(android.content.Context,android.content.Intent)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: boolean isUserNavigationEnabled()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,java.lang.String,com.microsoft.onlineid.Ticket,com.microsoft.authenticator.backup.entities.CloudBackup)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: com.airbnb.lottie.parser.moshi.JsonReader$Token peek()>
<com.airbnb.lottie.model.content.ShapeTrimPath: java.lang.String getName()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setOnStreetViewPanoramaClickListener(com.google.android.gms.maps.internal.zzbl)>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)>
<com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(double)>
<com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccountOrDefault()>
<com.facebook.react.animated.AnimationDriver: void runAnimationStep(long)>
<com.azure.authenticator.databinding.FragmentMainBinding: com.azure.authenticator.databinding.FragmentMainBinding inflate(android.view.LayoutInflater)>
<com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException: void <init>(int)>
<com.google.android.gms.internal.measurement.zzp: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void showReRegisterAadNgcScreen(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$Companion$AadNgcStateInvalidationReason)>
<com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void reset()>
<android.widget.Button: java.lang.CharSequence getText()>
<com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.google.android.gms.maps.model.Circle: void <init>(com.google.android.gms.internal.maps.zzh)>
<java.lang.String: int lastIndexOf(int)>
<com.google.android.gms.location.zzba: void zze(com.google.android.gms.location.LocationAvailability)>
<com.facebook.react.uimanager.ReactShadowNode: void setLocalData(java.lang.Object)>
<ch.qos.logback.classic.spi.ThrowableProxy: ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator()>
<com.google.android.material.chip.ChipGroup$LayoutParams: void <init>(int,int)>
<com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>
<com.facebook.react.bridge.CatalystInstanceImpl$3: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountViewModel registerAadMfaAccountViewModel()>
<ch.qos.logback.classic.pattern.MarkerConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<java.util.Properties: java.util.Set stringPropertyNames()>
<com.google.android.gms.internal.location.zzbb: void <init>()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$Companion: void <init>()>
<com.facebook.react.modules.systeminfo.AndroidInfoHelpers: boolean isRunningOnGenymotion()>
<com.azure.authenticator.storage.Storage: void writeAadFcmToken(java.lang.String)>
<com.facebook.react.modules.network.NetworkingModule: void addRequest(int)>
<android.widget.ImageView: int getPaddingBottom()>
<com.google.android.gms.maps.SupportMapFragment$zzb: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)>
<com.evernote.android.job.v21.TransientBundleCompat: boolean startWithTransientBundle(android.content.Context,com.evernote.android.job.JobRequest)>
<java.lang.Character: char toUpperCase(char)>
<com.google.android.gms.auth.api.signin.internal.zzt: void zzd(com.google.android.gms.auth.api.signin.internal.zzr,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<ch.qos.logback.classic.spi.LoggerContextVO: java.util.Map getPropertyMap()>
<com.github.amlcurran.showcaseview.TextDrawer: void setTitleStyling(int)>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: void <init>()>
<com.google.android.gms.measurement.AppMeasurement: void <init>(com.google.android.gms.measurement.internal.zzho)>
<com.google.android.gms.cloudmessaging.zzz: void <init>()>
<com.facebook.imagepipeline.producers.ThumbnailSizeChecker: boolean isImageBigEnough(int,int,com.facebook.imagepipeline.common.ResizeOptions)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setQosTier(com.google.android.datatransport.cct.internal.QosTier)>
<androidx.preference.Preference: java.lang.CharSequence getSummary()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$onTicketAcquired$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzjk: int zzi(int,java.util.List,boolean)>
<com.google.android.gms.common.internal.AccountAccessor: android.accounts.Account getAccountBinderSafe(com.google.android.gms.common.internal.IAccountAccessor)>
<com.google.android.gms.internal.location.zzaz: void zzI(boolean)>
<bolts.Task: java.lang.Object getResult()>
<java.lang.String: int indexOf(java.lang.String)>
<com.facebook.imagepipeline.producers.BitmapPrepareProducer: void <init>(com.facebook.imagepipeline.producers.Producer,int,int,boolean)>
<com.airbnb.lottie.LottieTask: void <init>(java.util.concurrent.Callable)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$Flow: com.azure.authenticator.ui.backup.BackupFlowActivity$Flow[] values()>
<android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
<com.google.android.gms.internal.maps.zzt: void zze(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.material.datepicker.MaterialTextInputPicker: void <init>()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$updateDeviceIdText(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,java.lang.String)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketComplete$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<kotlin.jvm.internal.MutablePropertyReference0Impl: void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>
<com.google.android.gms.common.api.internal.zap: int zac(com.google.android.gms.common.api.internal.zam)>
<com.google.android.gms.maps.GoogleMap$OnMapClickListener: void onMapClick(com.google.android.gms.maps.model.LatLng)>
<javax.net.ssl.SSLServerSocket: java.lang.String[] getEnabledCipherSuites()>
<com.airbnb.lottie.network.LottieNetworkCacheProvider: java.io.File getCacheDir()>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>
<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>
<com.google.android.gms.common.api.internal.TaskUtil: void setResultOrApiException(com.google.android.gms.common.api.Status,com.google.android.gms.tasks.TaskCompletionSource)>
<com.adjust.sdk.Reflection: java.lang.Object invokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>
<com.google.android.gms.location.zzai: void <init>(android.location.Location)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: com.microsoft.authenticator.authentication.msa.entities.MsaSession getMsaSession()>
<java.io.ObjectOutputStream: void close()>
<ch.qos.logback.classic.spi.PackagingDataCalculator: void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[])>
<com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager: void scheduleFcmTokenDailyRetryRefreshIfNecessary()>
<com.google.android.gms.internal.common.zzc: boolean zza(android.os.Parcel)>
<android.view.View: int getWidth()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: void lambda$onStartJob$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService,android.app.job.JobParameters)>
<com.google.android.gms.measurement.internal.zzdx: void <init>(android.os.IBinder)>
<com.facebook.cache.common.CacheEventListener: void onCleared()>
<android.os.Trace: void endSection()>
<java.util.Calendar: long getTimeInMillis()>
<ch.qos.logback.core.pattern.parser.OptionTokenizer: void <init>(ch.qos.logback.core.pattern.parser.TokenStream,ch.qos.logback.core.pattern.util.IEscapeUtil)>
<com.adjust.sdk.Adjust: com.adjust.sdk.AdjustInstance getDefaultInstance()>
<com.adjust.sdk.OnAttributionChangedListener: void onAttributionChanged(com.adjust.sdk.AdjustAttribution)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<com.adjust.sdk.ActivityHandler: void sendReftagReferrerI()>
<bolts.Task: boolean trySetError(java.lang.Exception)>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void onAlloc(int)>
<com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()>
<java.util.TreeSet: void <init>(java.util.Comparator)>
<com.google.android.material.internal.ViewUtils$RelativePadding: void applyToView(android.view.View)>
<com.facebook.react.views.picker.ReactPicker$2: void <init>(com.facebook.react.views.picker.ReactPicker)>
<com.evernote.android.job.gcm.JobProxyGcm: java.lang.String createTag(com.evernote.android.job.JobRequest)>
<com.adjust.sdk.Util: void getGoogleAdId(android.content.Context,com.adjust.sdk.OnDeviceIdsRead)>
<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void <init>()>
<com.facebook.yoga.YogaNode: void setFlexShrink(float)>
<com.airbnb.lottie.model.layer.CompositionLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer,java.util.List,com.airbnb.lottie.LottieComposition)>
<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.Shader createGradientShader()>
<ch.qos.logback.core.android.AndroidContextUtil: void setupProperties(ch.qos.logback.classic.LoggerContext)>
<com.google.android.gms.common.api.internal.zax: com.google.android.gms.common.api.internal.zax zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaz,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)>
<com.azure.authenticator.common.Util$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<android.content.Context: java.lang.String getPackageName()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewHolderFactory: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType getAccountViewType(boolean,com.azure.authenticator.accounts.GenericAccount)>
<com.microsoft.brooklyn.ui.credential.CredentialListFragment_MembersInjector: void injectAutofillPromotionManager(com.microsoft.brooklyn.ui.credential.CredentialListFragment,com.microsoft.brooklyn.common.AutofillPromotionManager)>
<com.google.android.material.timepicker.ClockHandView: void access$000(com.google.android.material.timepicker.ClockHandView,float,boolean)>
<android.content.Intent: void <init>(java.lang.String)>
<com.google.android.material.appbar.ViewOffsetHelper: void setHorizontalOffsetEnabled(boolean)>
<com.google.android.material.tabs.TabLayout$TabView: void addOnLayoutChangeListener(android.view.View)>
<com.google.android.gms.tasks.OnFailureListener: void onFailure(java.lang.Exception)>
<com.google.android.gms.measurement.internal.zzdp: void <init>()>
<com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)>
<com.google.android.gms.common.util.BiConsumer: void accept(java.lang.Object,java.lang.Object)>
<com.google.android.material.resources.MaterialResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int)>
<com.google.android.material.chip.ChipDrawable: float getChipStartPadding()>
<kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>
<java.util.HashSet: boolean add(java.lang.Object)>
<java.util.Properties: void <init>()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void flingAndSnap(int)>
<com.google.android.gms.common.GoogleApiAvailability: void <init>()>
<com.google.android.gms.internal.location.zzba: void <init>(com.google.android.gms.location.LocationRequest,java.util.List,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,boolean,java.lang.String,long)>
<ch.qos.logback.core.util.CloseUtil: void closeQuietly(java.net.Socket)>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>
<android.widget.FrameLayout: void setAddStatesFromChildren(boolean)>
<android.view.View: boolean hasOverlappingRendering()>
<android.animation.ValueAnimator: void removeAllUpdateListeners()>
<com.adjust.sdk.RequestHandler: void sendI(com.adjust.sdk.ActivityPackage,int)>
<com.facebook.react.views.art.ARTTextShadowNode: void applyTextPropertiesToPaint(android.graphics.Paint)>
<com.google.android.gms.measurement.internal.zzhn: void zzW(com.google.android.gms.measurement.internal.zzhn,com.google.android.gms.measurement.internal.zzaf,int,long,boolean,boolean)>
<android.graphics.drawable.ColorDrawable: void <init>()>
<com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.encryption.businessLogic.MfaPinEncryptionManager,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.evernote.android.job.GcmAvailableHelper: int isGcmServiceRegistered(android.content.Context)>
<java.util.Date: void <init>(long)>
<android.graphics.drawable.Drawable: void setDither(boolean)>
<android.view.ViewGroup: void setVisibility(int)>
<com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()>
<com.azure.authenticator.storage.database.AppDatabase$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<androidx.fragment.app.Fragment: void setRetainInstance(boolean)>
<com.google.android.gms.internal.maps.zzw: int getFillColor()>
<com.microsoft.identity.client.Logger$LogLevel: com.microsoft.identity.client.Logger$LogLevel[] values()>
<com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void <init>(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)>
<com.google.android.gms.internal.measurement.zzgz: void zzj(byte)>
<java.io.FileReader: void <init>(java.io.File)>
<android.database.CursorWindow: float getFloat(int,int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void clearImagePerfDataListeners()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.CredentialViewModel credentialViewModel()>
<com.google.common.math.MathPreconditions: int checkPositive(java.lang.String,int)>
<com.google.android.gms.internal.maps.zzad: com.google.android.gms.internal.maps.zzac zzj(android.os.IBinder)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>
<com.facebook.shimmer.ShimmerDrawable: void stopShimmer()>
<java.lang.StringBuffer: void <init>(int)>
<ch.qos.logback.core.util.PropertySetterException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.maps.zzw: void setHoles(java.util.List)>
<com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry: void setCachedPolicyStatus(java.lang.String)>
<com.adjust.sdk.SharedPreferencesManager: int getRawReferrerIndex(java.lang.String,long)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void access$showBackupConfirmedDialog(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String)>
<com.google.android.material.navigation.NavigationBarView: void applyWindowInsets()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel: void launchGetDeviceId()>
<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void onCancellationImpl()>
<com.google.android.material.bottomnavigation.BottomNavigationView: boolean shouldDrawCompatibilityTopDivider()>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: ch.qos.logback.core.net.server.ServerListener createServerListener(java.net.ServerSocket)>
<com.google.android.material.internal.ParcelableSparseArray$1: com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel)>
<android.text.StaticLayout: int getWidth()>
<java.io.File: java.lang.String getAbsolutePath()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<com.google.common.collect.MapMakerInternalMap: void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.airbnb.lottie.value.ScaleXY: void set(float,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl: java.lang.Object lifecycle()>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface: void setSelected(android.view.View,int)>
<com.facebook.react.ReactInstanceManager: void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)>
<com.google.android.gms.internal.auth-api.zzam: void <init>()>
<com.google.android.gms.measurement.internal.zzai: long zzZ(java.lang.String,java.lang.String[])>
<com.google.android.gms.internal.maps.zzac: java.lang.String getId()>
<com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)>
<com.google.android.gms.common.images.zag: void zab(android.content.Context,android.graphics.Bitmap,boolean)>
<com.google.android.gms.measurement.internal.zzkd: void zzU(com.google.android.gms.measurement.internal.zzaa,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.cache.disk.DefaultDiskStorage: java.lang.String access$800(java.lang.String)>
<ch.qos.logback.core.joran.action.ActionUtil: ch.qos.logback.core.joran.action.ActionUtil$Scope stringToScope(java.lang.String)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBasicDecodedImageSequence(com.facebook.imagepipeline.request.ImageRequest)>
<com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback: void onMapLoaded()>
<ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.runtime.TransportContext getTransportContext()>
<com.google.android.gms.internal.safetynet.zzc: void zza(android.os.Parcel,android.os.IInterface)>
<java.util.ArrayList: java.lang.Object remove(int)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueCreateView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)>
<android.widget.AutoCompleteTextView: int getPaddingBottom()>
<com.facebook.react.bridge.ReadableArray: int size()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getDevice()>
<com.facebook.react.modules.storage.AsyncStorageModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)>
<java.util.List: boolean addAll(int,java.util.Collection)>
<com.microsoft.did.feature.cardlist.presentationlogic.CardListViewModel: void <init>(com.microsoft.did.businesslogic.CardUseCase,com.microsoft.did.feature.notifications.NotificationService,com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void startAddAccountFlow(boolean)>
<com.airbnb.lottie.LottieImageAsset: android.graphics.Bitmap getBitmap()>
<com.facebook.react.bridge.CatalystInstanceImpl$7: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.google.android.gms.internal.measurement.zzgs: byte zzb(int)>
<android.graphics.Paint: void setAntiAlias(boolean)>
<com.adjust.sdk.ISdkClickHandler: void pauseSending()>
<com.azure.authenticator.databinding.PaymentListRowLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setKeyboardDismissMode(android.view.View,java.lang.String)>
<com.google.android.gms.signin.internal.zak: com.google.android.gms.common.ConnectionResult zaa()>
<com.facebook.react.uimanager.UIBlock: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)>
<androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.authenticator.notifications.controller.FcmListenerService injectFcmListenerService2(com.microsoft.authenticator.notifications.controller.FcmListenerService)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer)>
<com.google.android.gms.tasks.zzaa: void zza()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidInitial(int)>
<com.google.android.gms.measurement.internal.zzg: void zzA(long)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel$performSessionRequest$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.microsoft.brooklyn.module.common.BrooklynStorage: void <init>(android.content.Context)>
<android.widget.CheckedTextView: void setDuplicateParentStateEnabled(boolean)>
<com.airbnb.lottie.model.animatable.AnimatablePointValue: void <init>(java.util.List)>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<com.facebook.drawee.interfaces.SettableDraweeHierarchy: void setProgress(float,boolean)>
<java.io.File: java.lang.String getParent()>
<com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)>
<com.google.android.gms.cloudmessaging.zzd: void <init>(com.google.android.gms.cloudmessaging.CloudMessagingReceiver,android.content.Intent,android.content.Context,boolean,android.content.BroadcastReceiver$PendingResult)>
<android.database.CursorWrapper: int getCount()>
<ch.qos.logback.classic.db.names.TableName: void <init>(java.lang.String,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int)>
<com.airbnb.lottie.model.content.RectangleShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getCornerRadius()>
<com.google.android.material.tabs.TabLayout$TabView: void setTab(com.google.android.material.tabs.TabLayout$Tab)>
<com.google.android.material.animation.MotionTiming: long getDuration()>
<com.google.android.gms.internal.measurement.zzha: void <init>(com.google.android.gms.internal.measurement.zzgz)>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(org.xml.sax.InputSource)>
<com.google.android.material.textfield.TextInputLayout: void access$200(com.google.android.material.textfield.TextInputLayout,int)>
<com.google.common.collect.ImmutableList: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment: void access$toastNotificationSwitch(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment,java.lang.String,boolean)>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<com.facebook.cache.disk.DiskStorage$Entry: java.lang.String getId()>
<com.google.android.gms.common.internal.BaseGmsClient: android.os.IInterface getService()>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.microsoft.authenticator.backup.entities.metadata.BackupMsaMetadata: java.lang.String getBackupAccountUsername()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$3: androidx.fragment.app.Fragment invoke()>
<android.widget.ImageView: void onSizeChanged(int,int,int,int)>
<com.fasterxml.jackson.core.JsonParseException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
<ch.qos.logback.core.joran.action.PropertyAction: boolean checkValueNameAttributesSanity(org.xml.sax.Attributes)>
<com.facebook.jni.DestructorThread$DestructorList: void <init>()>
<ch.qos.logback.core.spi.AbstractComponentTracker: void <init>()>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)>
<com.facebook.react.views.text.TextAttributeProps: void setTextDecorationLine(java.lang.String)>
<com.airbnb.lottie.animation.content.ContentGroup: android.graphics.Path getPath()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: void <init>()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object retryIfDbLocked(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Producer,com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void addTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener)>
<androidx.appcompat.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)>
<android.os.Process: int myUid()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)>
<com.google.android.gms.common.internal.ClientSettings: java.lang.Integer zad()>
<com.facebook.imagepipeline.memory.BitmapCounterProvider: int getMaxSizeHardCap()>
<com.airbnb.lottie.model.content.GradientStroke: java.lang.String getName()>
<ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator: void <init>(int)>
<com.facebook.imagepipeline.producers.Consumer: void onProgressUpdate(float)>
<com.google.android.material.circularreveal.CircularRevealHelper: boolean isOpaque()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.airbnb.lottie.model.CubicCurveData: void <init>(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF)>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<com.google.android.gms.auth.CookieUtil: boolean zza(java.lang.Boolean)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.facebook.react.views.scroll.VelocityHelper: float getXVelocity()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setWindowInsetsListener(android.view.View)>
<com.google.android.material.animation.MotionTiming: int getRepeatCount()>
<com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicWidth()>
<com.google.common.io.BaseEncoding: int decodeTo(byte[],java.lang.CharSequence)>
<com.google.android.gms.common.data.Freezable: java.lang.Object freeze()>
<com.airbnb.lottie.LottieAnimationView$SavedState: void <init>(android.os.Parcelable)>
<com.facebook.yoga.YogaNode: void setHeight(float)>
<androidx.recyclerview.widget.ItemTouchHelper: void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder)>
<com.google.android.gms.internal.auth-api.zzq: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.auth.api.Auth$AuthCredentialsOptions,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<ch.qos.logback.core.joran.spi.RuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String)>
<com.google.android.gms.maps.GoogleMapOptions: void <init>(byte,byte,int,com.google.android.gms.maps.model.CameraPosition,byte,byte,byte,byte,byte,byte,byte,byte,byte,java.lang.Float,java.lang.Float,com.google.android.gms.maps.model.LatLngBounds,byte)>
<com.evernote.android.job.JobManager: java.util.concurrent.CountDownLatch access$100(com.evernote.android.job.JobManager)>
<com.facebook.imagepipeline.producers.FetchState: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.request.FillEventHistoryProcessor fillEventHistoryProcessor()>
<androidx.recyclerview.widget.RecyclerView$Adapter: void notifyDataSetChanged()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: androidx.lifecycle.MutableLiveData access$get_leaveWpjStatus$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setRequiredNetwork(int)>
<com.airbnb.lottie.LottieListener: void onResult(java.lang.Object)>
<com.google.android.material.textfield.TextInputLayout: void drawBoxUnderline(android.graphics.Canvas)>
<com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdj zzb(int)>
<com.google.android.gms.internal.measurement.zzjs: java.lang.Object zzj(com.google.android.gms.internal.measurement.zzjs,int)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setElevation(android.view.View,float)>
<com.adjust.sdk.ActivityHandler$22: void <init>(com.adjust.sdk.ActivityHandler,boolean,java.lang.String)>
<ch.qos.logback.classic.android.SQLiteAppender: void append(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider brooklynSharedViewModelProvider()>
<com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener: void reset()>
<com.google.android.gms.internal.measurement.zzp: void setSessionTimeoutDuration(long)>
<com.microsoft.identity.client.Logger: void setLogLevel(com.microsoft.identity.client.Logger$LogLevel)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>
<com.google.android.gms.tasks.zzb: void zza()>
<com.google.android.gms.common.GoogleSignatureVerifier: boolean isGooglePublicSignedPackage(android.content.pm.PackageInfo)>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzh(java.lang.Iterable)>
<com.google.android.material.shape.MaterialShapeDrawable: void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF)>
<com.google.android.gms.common.UserRecoverableException: android.content.Intent getIntent()>
<com.google.android.gms.common.api.internal.zad: void zag(com.google.android.gms.common.api.internal.zabl)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.microsoft.authenticator.di.BrokerModule_ProvideBrokerApiFactory: com.microsoft.identity.client.api.BrokerHostingAppPublicApi provideBrokerApi(com.microsoft.authenticator.di.BrokerModule)>
<com.facebook.imagepipeline.memory.BucketsBitmapPool: boolean isReusable(android.graphics.Bitmap)>
<com.adjust.sdk.PackageHandler$6: void <init>(com.adjust.sdk.PackageHandler,com.adjust.sdk.SessionParameters)>
<com.google.android.gms.internal.measurement.zzdq: java.util.List zzh()>
<com.facebook.react.bridge.JSIModuleType: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.memory.BitmapPoolBackend: boolean isReusable(android.graphics.Bitmap)>
<com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest$Builder setExecutionWindow(long,long)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zav(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.facebook.common.logging.FLog: void wtf(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void injectMembers(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder setApplicationContext(android.content.Context)>
<com.google.android.gms.maps.internal.zzx: void zza(com.google.android.gms.internal.maps.zzk)>
<com.google.android.gms.measurement.internal.zzy: boolean zzd(int,int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel$generateMsaNgcKeyAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>
<android.graphics.Matrix: boolean preTranslate(float,float)>
<com.google.android.gms.internal.auth-api.zzao: void <init>(android.content.Context,com.google.android.gms.auth.api.identity.zzl)>
<com.google.android.gms.safetynet.zzd: void <init>(long,com.google.android.gms.safetynet.HarmfulAppsData[],int,boolean)>
<com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void dismissExisting()>
<com.facebook.drawee.gestures.GestureDetector: void <init>(android.content.Context)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void accept(ch.qos.logback.core.net.server.ClientVisitor)>
<com.google.android.material.shape.MaterialShapeDrawable: java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable)>
<ch.qos.logback.classic.Logger: ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level)>
<com.facebook.imagepipeline.common.BytesRange: com.facebook.imagepipeline.common.BytesRange fromContentRangeHeader(java.lang.String)>
<com.microsoft.aad.adal.Logger: void setExternalLogger(com.microsoft.aad.adal.Logger$ILogger)>
<com.airbnb.lottie.utils.MiscUtils: float clamp(float,float,float)>
<com.google.android.gms.internal.measurement.zzcf: com.google.android.gms.internal.measurement.zzby zzd()>
<com.google.crypto.tink.proto.KeysetInfo$Builder: com.google.crypto.tink.proto.KeysetInfo$Builder addKeyInfo(com.google.crypto.tink.proto.KeysetInfo$KeyInfo)>
<com.google.android.gms.location.GeofencingEvent: void <init>(int,int,java.util.List,android.location.Location)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void setCustomOnBackPressedBehavior(boolean)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.common.util.Clock zzax()>
<com.google.android.gms.common.api.Batch: com.google.android.gms.common.api.PendingResult[] zai(com.google.android.gms.common.api.Batch)>
<com.google.android.material.shape.MaterialShapeDrawable: void drawStrokeShape(android.graphics.Canvas)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void saveOriginalTextCsl()>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int roundNumerator(float,float)>
<com.google.android.gms.internal.auth-api.zzz: void <init>(com.google.android.gms.auth.api.credentials.Credential)>
<com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()>
<com.google.android.gms.location.ActivityTransitionResult: java.util.List getTransitionEvents()>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.GenericAccount getAccountWithId(long)>
<com.google.android.gms.common.data.DataHolder: void zaf(java.lang.String,int)>
<com.evernote.android.job.Job$Params: int getId()>
<com.google.common.collect.MapMakerInternalMap$Strength: void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1)>
<com.google.android.material.internal.CollapsingTextHelper: boolean setExpandedTypefaceInternal(android.graphics.Typeface)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.facebook.cache.disk.DiskStorage: long remove(com.facebook.cache.disk.DiskStorage$Entry)>
<com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()>
<com.google.android.datatransport.runtime.EncodedPayload: com.google.android.datatransport.Encoding getEncoding()>
<android.database.Cursor: long getLong(int)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAadMfaAccounts(java.lang.String,java.lang.String)>
<com.google.common.io.BaseEncoding: java.lang.CharSequence trimTrailingPadding(java.lang.CharSequence)>
<com.facebook.react.uimanager.RootViewManager: void <init>()>
<com.google.android.gms.location.zzbc: com.google.android.gms.location.zzbd zzb(android.os.IBinder)>
<com.azure.authenticator.jwe.CryptoHelper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.common.internal.zau: void <init>()>
<com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.gms.tasks.zzw: boolean isComplete()>
<ch.qos.logback.core.util.COWArrayList: java.lang.Object[] asTypedArray()>
<com.google.android.gms.auth.api.credentials.CredentialRequestResponse: void <init>()>
<com.google.android.gms.common.internal.zzt: java.lang.String zza()>
<com.evernote.android.job.JobRequest: com.evernote.android.job.JobRequest$Builder cancelAndEdit()>
<com.facebook.react.views.image.ReactImageView: void cornerRadii(float[])>
<com.google.android.gms.auth.api.credentials.CredentialRequest: boolean isIdTokenRequested()>
<com.azure.authenticator.storage.Storage: long getLastTimeShowRatingKey()>
<com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)>
<ch.qos.logback.core.sift.SiftingJoranConfiguratorBase: void doConfigure(java.util.List)>
<com.google.android.gms.internal.measurement.zzkn: int zzf(int,int)>
<com.facebook.react.modules.network.ProgressRequestBody$1: void sendProgressUpdate()>
<com.facebook.react.views.picker.ReactPicker: void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener)>
<com.azure.authenticator.storage.database.AccountWriter: void saveSecretKeyBasedAccount(com.azure.authenticator.storage.database.DbAccount)>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadAddAccountViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<androidx.collection.ArraySet: boolean add(java.lang.Object)>
<java.util.Random: void <init>(long)>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node T()>
<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: boolean equals(java.lang.Object)>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory$Options)>
<com.google.android.gms.common.api.internal.zac: boolean zab(com.google.android.gms.common.api.internal.zabl)>
<com.azure.authenticator.ui.MainActivity$promptForAppLockIfNecessary$1: void <init>(com.azure.authenticator.ui.MainActivity,kotlin.coroutines.Continuation)>
<java.lang.Character: boolean isLetter(int)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzi()>
<com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)>
<ch.qos.logback.core.net.SocketConnectorBase$DelayStrategy: int nextDelay()>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInfo: java.lang.Boolean isTrackingEnabled()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.GoogleApiAvailability zaD(com.google.android.gms.common.api.internal.GoogleApiManager)>
<com.facebook.imagepipeline.core.ImagePipeline: boolean isInDiskCacheSync(android.net.Uri)>
<com.microsoft.authenticator.core.common.Assertion: void assertStringNotNullOrEmpty(java.lang.String,java.lang.String)>
<com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()>
<com.google.android.material.chip.ChipDrawable: void setCheckableResource(int)>
<com.google.android.gms.measurement.internal.zzae: long zzf()>
<com.google.android.gms.internal.auth-api-phone.zzc: void zza(android.os.Parcel,android.os.IInterface)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureSelfhostControls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.maps.zzw: float getStrokeWidth()>
<com.evernote.android.job.JobRequest$Builder: long access$600(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.gms.internal.maps.zzac: void setTransparency(float)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_25_26$1: void <init>(int,int)>
<com.google.android.gms.internal.base.zaa: void <init>(android.os.IBinder,java.lang.String)>
<com.google.android.gms.internal.location.zzaz: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener,java.lang.String,com.google.android.gms.common.internal.ClientSettings)>
<com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)>
<com.facebook.react.views.textinput.ReactTextInputManager: android.widget.EditText createInternalEditText(com.facebook.react.uimanager.ThemedReactContext)>
<com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)>
<android.util.SparseBooleanArray: void <init>()>
<com.google.android.material.navigation.NavigationBarMenuView: void updateMenuView()>
<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>
<com.azure.authenticator.Hilt_PhoneFactorApplication: dagger.hilt.android.internal.managers.ApplicationComponentManager componentManager()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod: com.facebook.imagepipeline.core.ProducerFactory createProducerFactory(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int,com.facebook.imagepipeline.core.CloseableReferenceFactory)>
<com.facebook.imagepipeline.producers.JobScheduler: void doJob()>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)>
<java.text.DateFormatSymbols: java.lang.String[] getMonths()>
<com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.measurement.internal.zzif: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.elevation.ElevationOverlayProvider: boolean isThemeElevationOverlayEnabled()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnInfoWindowLongClickListener(com.google.android.gms.maps.internal.zzaf)>
<com.facebook.drawee.components.DraweeEventTracker$Event: void <init>(java.lang.String,int)>
<ch.qos.logback.core.joran.spi.ElementPath: int size()>
<com.microsoft.authenticator.common.abstraction.BottomNavigationController: void setupBottomNavigationMenu(android.app.Activity)>
<android.widget.LinearLayout: void setKeyboardNavigationCluster(boolean)>
<android.widget.ImageView: void onFinishTemporaryDetach()>
<com.google.android.gms.common.api.internal.LifecycleActivity: void <init>(android.app.Activity)>
<com.google.android.gms.internal.measurement.zzcw: com.google.android.gms.internal.measurement.zzcw zzd(boolean)>
<ch.qos.logback.core.rolling.helper.FileProvider: boolean deleteFile(java.io.File)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<com.google.common.collect.ImmutableSet$SerializedForm: void <init>(java.lang.Object[])>
<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>
<androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>
<com.facebook.react.bridge.JSBundleLoader$1: void <init>(android.content.Context,java.lang.String,boolean)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$4: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)>
<java.lang.Thread: boolean isInterrupted()>
<com.google.android.gms.internal.measurement.zzei: java.util.concurrent.atomic.AtomicBoolean zzb()>
<java.nio.CharBuffer: int length()>
<com.facebook.react.animated.NativeAnimatedNodesManager: void access$000(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event)>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.bottomsheet.BottomSheetBehavior 'from'(android.view.View)>
<com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: void <init>(com.google.android.gms.auth.api.signin.GoogleSignInOptionsExtension)>
<com.google.android.gms.common.data.AbstractDataBuffer: java.util.Iterator iterator()>
<com.facebook.react.bridge.ModuleHolder: void markInitializable()>
<java.lang.Character: boolean isJavaIdentifierStart(char)>
<com.google.android.gms.dynamic.zab: void <init>(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.app.Activity,android.os.Bundle,android.os.Bundle)>
<java.util.concurrent.atomic.AtomicReferenceArray: int length()>
<com.google.android.gms.maps.model.PolygonOptions: void <init>(java.util.List,java.util.List,float,int,int,float,boolean,boolean,boolean,int,java.util.List)>
<com.adjust.sdk.DeviceInfo: java.lang.String getDisplayWidth(android.util.DisplayMetrics)>
<com.facebook.react.views.image.ImageLoadEvent: void <init>(int,int,java.lang.String,int,int,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onStart()>
<com.google.android.gms.common.ConnectionResult: void <init>(int)>
<com.evernote.android.job.v24.JobProxy24: int convertNetworkType(com.evernote.android.job.JobRequest$NetworkType)>
<com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToCredentialListFragment: java.lang.String getImportPasswordStatus()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>
<com.google.android.gms.internal.measurement.zzla: long zzt()>
<com.google.android.gms.internal.measurement.zzjk: int zzt(java.util.List)>
<com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>
<com.evernote.android.job.util.JobCat: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
<android.widget.LinearLayout: int[] onCreateDrawableState(int)>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)>
<android.widget.GridView: android.view.View getChildAt(int)>
<com.google.android.material.badge.BadgeDrawable: void setNumber(int)>
<com.google.android.gms.measurement.internal.zzib: com.google.android.gms.measurement.internal.zzhu zzh(boolean)>
<com.google.android.gms.auth.api.credentials.Credential: android.net.Uri zze(com.google.android.gms.auth.api.credentials.Credential)>
<com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()>
<androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>
<java.lang.Exception: void <init>(java.lang.String)>
<bolts.Task: boolean isCancelled()>
<java.math.BigDecimal: void <init>(java.math.BigInteger)>
<android.view.View: void invalidate()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>
<ch.qos.logback.core.ConsoleAppender: void targetWarn(java.lang.String)>
<com.airbnb.lottie.model.content.GradientFill: void <init>(java.lang.String,com.airbnb.lottie.model.content.GradientType,android.graphics.Path$FillType,com.airbnb.lottie.model.animatable.AnimatableGradientColorValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatablePointValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)>
<android.text.Layout: float getPrimaryHorizontal(int)>
<ch.qos.logback.core.rolling.helper.RenameUtil: void <init>()>
<com.microsoft.brooklyn.module.common.BrooklynStorage: void writeIsAutofillDisabledBannerVisible(boolean)>
<com.google.android.gms.common.api.internal.ApiKey: void <init>(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,java.lang.String)>
<com.facebook.react.views.checkbox.ReactCheckBoxEvent: void <init>(int,boolean)>
<okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)>
<com.facebook.soloader.MinElf$ElfError: void <init>(java.lang.String)>
<com.evernote.android.job.util.JobPreconditions: long checkArgumentNonnegative(long,java.lang.String)>
<com.google.android.gms.common.api.internal.BasePendingResult: boolean isCanceled()>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<com.azure.authenticator.databinding.AddThirdPartyAccountBinding: void <init>(android.widget.ScrollView,android.widget.EditText,android.widget.Button,android.widget.EditText)>
<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>
<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAdapterPosition()>
<com.google.android.gms.common.util.CollectionUtils: java.util.List listOf()>
<ch.qos.logback.core.spi.AbstractComponentTracker: void removeStaleComponents(long)>
<com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.common.api.Status getStatus()>
<ch.qos.logback.core.util.EnvUtil: boolean isJDK7OrHigher()>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder setFeatures(com.google.android.gms.common.Feature[])>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath)>
<com.google.android.gms.common.api.internal.BasePendingResult: void cancel()>
<com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest$Builder setExact(long)>
<com.facebook.common.util.UriUtil: boolean isLocalAssetUri(android.net.Uri)>
<com.fasterxml.jackson.core.io.UTF32Reader: void reportUnexpectedEOF(int,int)>
<ch.qos.logback.core.joran.spi.ElementSelector: boolean equalityCheck(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.location.zzam: void zzf(java.lang.String[],com.google.android.gms.internal.location.zzak,java.lang.String)>
<com.google.android.gms.common.api.internal.zabt: void zab(com.google.android.gms.common.ConnectionResult)>
<com.google.android.material.internal.CheckableImageButton: boolean isCheckable()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.generic.GenericDraweeHierarchyBuilder newInstance(android.content.res.Resources)>
<com.adjust.sdk.scheduler.TimerCycle: void <init>(java.lang.Runnable,long,long,java.lang.String)>
<com.google.android.gms.common.api.Api$AbstractClientBuilder: void <init>()>
<com.facebook.react.animated.SpringAnimation$PhysicsState: void <init>()>
<com.google.android.material.timepicker.ClockFaceView: int access$100(com.google.android.material.timepicker.ClockFaceView)>
<com.google.android.gms.measurement.internal.zzho: void zza(java.lang.String,java.lang.String,android.os.Bundle)>
<com.facebook.react.views.scroll.ReactScrollView: void setBorderWidth(int,float)>
<com.evernote.android.job.work.JobProxyWorkManager: void plantPeriodic(com.evernote.android.job.JobRequest)>
<com.google.android.material.datepicker.MaterialCalendar$5: void <init>(com.google.android.material.datepicker.MaterialCalendar)>
<com.google.android.datatransport.runtime.AutoValue_SendRequest: void <init>(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Event,com.google.android.datatransport.Transformer,com.google.android.datatransport.Encoding,com.google.android.datatransport.runtime.AutoValue_SendRequest$1)>
<android.util.JsonReader: android.util.JsonToken peek()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[])>
<com.google.android.gms.measurement.internal.zzjb: boolean zzH()>
<android.widget.CompoundButton: int getId()>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: void access$countDownAction(com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder)>
<android.os.Looper: void prepare()>
<android.widget.CheckBox: void setEnabled(boolean)>
<com.google.android.gms.internal.measurement.zzbl: void <init>(com.google.android.gms.internal.measurement.zzbq,android.app.Activity)>
<java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.base.Function: boolean equals(java.lang.Object)>
<android.widget.EditText: boolean canScrollHorizontally(int)>
<com.facebook.react.modules.network.NetworkingModule$3: void <init>(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)>
<com.facebook.react.bridge.GuardedRunnable: void <init>(com.facebook.react.bridge.ReactContext)>
<com.facebook.yoga.YogaNodeJNIBase: void <init>(long)>
<com.google.android.gms.internal.location.zzk: void <init>()>
<java.lang.ThreadLocal: java.lang.Object get()>
<com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getDefaultThemeDrawable(android.content.Context)>
<com.facebook.react.views.text.CustomLetterSpacingSpan: void apply(android.text.TextPaint)>
<com.google.android.material.bottomappbar.BottomAppBar: void access$2100(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean)>
<com.azure.authenticator.authentication.msa.ui.ActivityState: com.azure.authenticator.authentication.msa.ui.ActivityState copy(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,boolean,java.lang.String)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: boolean retryTask(int)>
<java.util.Random: double nextDouble()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerIntermediateImageSetTimeMs(long)>
<ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter)>
<com.google.android.material.datepicker.Month: boolean equals(java.lang.Object)>
<com.google.android.material.datepicker.Month: int daysFromStartOfWeekToFirstOfMonth()>
<java.util.concurrent.CopyOnWriteArrayList: boolean retainAll(java.util.Collection)>
<java.util.concurrent.TimeoutException: void setStackTrace(java.lang.StackTraceElement[])>
<androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>
<com.evernote.android.job.JobProxy: void cancel(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void onActivityResult(int,int,android.content.Intent)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void maybeSetFailure()>
<com.google.android.gms.common.server.response.FastParser$ParseException: void <init>(java.lang.String)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion: void onAccountAdded(boolean,java.lang.String,boolean)>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: void stop()>
<com.microsoft.authenticator.graphclient.di.GraphModule: void <init>()>
<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder setNetworkType(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType)>
<com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean)>
<com.microsoft.brooklyn.ui.settings.StopSyncAccountFragment_MembersInjector: void injectBrooklynMSASignOutUseCase(com.microsoft.brooklyn.ui.settings.StopSyncAccountFragment,com.microsoft.brooklyn.common.BrooklynMSASignOutUseCase)>
<ch.qos.logback.core.spi.ContextAwareBase: ch.qos.logback.core.Context getContext()>
<com.google.android.gms.measurement.internal.zzdz: void zzs(com.google.android.gms.measurement.internal.zzp)>
<ch.qos.logback.core.joran.spi.ConsoleTarget: java.io.OutputStream getStream()>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>
<com.facebook.imagepipeline.memory.MemoryChunk: long getUniqueId()>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.material.textfield.CutoutDrawable: void setPaintStyles()>
<java.lang.Thread: void interrupt()>
<com.google.android.gms.measurement.internal.zzib: void zzm(com.google.android.gms.measurement.internal.zzhu,android.os.Bundle,boolean)>
<com.google.android.material.shape.MaterialShapeDrawable: boolean isRoundRect()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSessionUseCase: void <init>(com.microsoft.authenticator.mfasdk.authentication.businessLogic.RichContextSessionUseCase,com.microsoft.authenticator.mfasdk.configuration.FeatureConfig)>
<java.io.ObjectInputStream: void <init>(java.io.InputStream)>
<com.google.android.gms.internal.safetynet.zzv: void <init>(com.google.android.gms.internal.safetynet.zzk$zze)>
<com.google.android.gms.internal.location.zzc: void zzd(android.os.Parcel,android.os.IInterface)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.common.internal.Predicate predicateForUri(android.net.Uri)>
<com.google.android.gms.measurement.internal.zzho: void zzn(android.os.Bundle)>
<com.airbnb.lottie.animation.content.MergePathsContent: void opFirstPathWithRest(android.graphics.Path$Op)>
<com.google.android.gms.internal.measurement.zzp: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzs)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zan(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<com.google.android.gms.maps.StreetViewPanoramaFragment: void <init>()>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onDiskCacheHit(com.facebook.cache.common.CacheKey)>
<com.facebook.drawee.drawable.ArrayDrawable: void <init>(android.graphics.drawable.Drawable[])>
<com.google.android.gms.measurement.internal.zzed: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void onSuccess(com.facebook.common.references.CloseableReference)>
<java.io.File: boolean delete()>
<com.google.android.gms.internal.location.zzaa: void <init>(com.google.android.gms.common.api.Status)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig getDefaultImageRequestConfig()>
<ch.qos.logback.core.joran.spi.ElementSelector: boolean fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath)>
<com.microsoft.brooklyn.module.common.BrooklynStorage: boolean readIsAutofillEnabled(android.content.Context)>
<com.azure.authenticator.databinding.FragmentAddressListBinding: com.azure.authenticator.databinding.FragmentAddressListBinding bind(android.view.View)>
<java.lang.Character: boolean isWhitespace(char)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb: void <init>()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.internal.maps.zzac addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzei zzat()>
<com.google.android.gms.internal.measurement.zzle: void <init>()>
<com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method zzc(android.content.Context,java.lang.String,java.lang.String,java.lang.Class[])>
<com.google.android.gms.internal.auth-api.zzl: void <init>(com.google.android.gms.internal.auth-api.zzi)>
<com.google.android.gms.internal.safetynet.zzk$zzb: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<java.util.Queue: java.util.Iterator iterator()>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager: void showErrorDialogFragment$default(com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,androidx.fragment.app.FragmentActivity,int,android.content.DialogInterface$OnClickListener,int,java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel getAddMsaAccountViewModel()>
<com.google.android.gms.internal.maps.zzw: void setStrokeColor(int)>
<com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)>
<com.facebook.react.uimanager.ReactShadowNode: java.lang.Integer getWidthMeasureSpec()>
<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>
<kotlin.ResultKt: void throwOnFailure(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$SwitchingProvider: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,int)>
<com.google.android.gms.common.api.internal.zzd: com.google.android.gms.common.api.internal.zzd zza(androidx.fragment.app.FragmentActivity)>
<ch.qos.logback.classic.LoggerContext: ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: androidx.lifecycle.LiveData getMsaNgcResponseStatus()>
<kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>
<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
<ch.qos.logback.classic.AsyncAppender: boolean isDiscardable(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.material.bottomsheet.BottomSheetDialog$4: void <init>(com.google.android.material.bottomsheet.BottomSheetDialog)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void <init>(ch.qos.logback.core.net.server.ConcurrentServerRunner,ch.qos.logback.core.net.server.Client)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipCR()>
<com.facebook.react.animated.NativeAnimatedNodesManager: com.facebook.react.animated.AnimatedNode getNodeById(int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void <init>(android.content.Context,androidx.lifecycle.LifecycleCoroutineScope,java.util.List)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$600(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.common.zzs: void <init>(java.lang.String,android.os.IBinder,boolean,boolean)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzd(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.facebook.react.modules.core.ReactChoreographer: void initializeChoreographer(java.lang.Runnable)>
<com.google.crypto.tink.KeyTypeManager$PrimitiveFactory: java.lang.Object getPrimitive(java.lang.Object)>
<java.util.PriorityQueue: boolean add(java.lang.Object)>
<com.google.crypto.tink.Registry: void ensureKeyManagerInsertable(java.lang.String,java.lang.Class,boolean)>
<com.google.android.gms.internal.auth.zzac: void <init>()>
<com.google.android.gms.internal.maps.zzt: java.lang.String getId()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageRequestStartTimeMs(long)>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder: com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder zzg(java.lang.String)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<ch.qos.logback.core.net.ssl.SSLConfigurable: void setEnabledProtocols(java.lang.String[])>
<com.google.android.gms.maps.internal.zzs: void <init>()>
<androidx.viewpager.widget.PagerAdapter: void notifyDataSetChanged()>
<com.google.android.material.datepicker.MaterialTextInputPicker: com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel: void <init>(com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: void access$setListPopupWindow$p(com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager,androidx.appcompat.widget.ListPopupWindow)>
<com.google.android.gms.measurement.internal.zzgf: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.github.amlcurran.showcaseview.ShowcaseView: void access$900(com.github.amlcurran.showcaseview.ShowcaseView,com.github.amlcurran.showcaseview.ShowcaseDrawer)>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildCreateExceptionTableSQL(ch.qos.logback.classic.db.names.DBNameResolver)>
<com.facebook.react.views.textinput.ReactTextInputBlurEvent: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: void updateLiftedStateIfNeeded(android.view.View,android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.SignUpFormDatasetsUseCase signUpFormDatasetsUseCase()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.widget.LinearLayout: boolean isSelected()>
<android.view.View: float getTranslationX()>
<com.adjust.sdk.ActivityHandler: void transferSessionPackageI(long)>
<com.google.android.gms.internal.location.zzaz: void zzr(com.google.android.gms.location.ActivityTransitionRequest,android.app.PendingIntent,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field forString(java.lang.String,int)>
<com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.google.android.gms.internal.common.zzb: boolean zza(int,android.os.Parcel,android.os.Parcel,int)>
<com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: long access$000(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState)>
<com.facebook.drawee.view.DraweeHolder: void onVisibilityChange(boolean)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$initialize$2: void onChanged(com.microsoft.authenticator.authentication.aad.entities.AadNgcDenySessionResult)>
<ch.qos.logback.core.joran.event.SaxEvent: java.lang.String getQName()>
<com.airbnb.lottie.model.content.PolystarShape: java.lang.String getName()>
<com.facebook.react.views.text.TextAttributes: float getEffectiveLineHeight()>
<com.google.common.collect.Lists: int indexOfImpl(java.util.List,java.lang.Object)>
<android.widget.EditText: int getCompoundPaddingLeft()>
<com.facebook.react.views.text.TextAttributeProps: void setFontFamily(java.lang.String)>
<com.google.android.gms.auth.api.signin.internal.zzr: void zze(com.google.android.gms.common.api.Status)>
<com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)>
<com.facebook.react.modules.blob.BlobCollector: void install(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setUptimeMillis(long)>
<com.google.android.gms.measurement.internal.zzt: void <init>(com.google.android.gms.measurement.internal.zzy,java.lang.String,com.google.android.gms.measurement.internal.zzs)>
<com.airbnb.lottie.LottieAnimationView$SavedState: void <init>(android.os.Parcel)>
<com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzbv zze(int,com.google.android.gms.internal.measurement.zzby)>
<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.net.DatagramSocket: void <init>()>
<com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.ConnectionResult zag(long,java.util.concurrent.TimeUnit)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.internal.zzbw: void <init>(android.os.IBinder)>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity: void _initHiltInternal()>
<com.google.android.gms.location.SleepSegmentEvent: long getEndTimeMillis()>
<com.azure.authenticator.databinding.DropdownWithIconBinding: com.azure.authenticator.databinding.DropdownWithIconBinding bind(android.view.View)>
<com.google.android.material.navigation.NavigationBarItemView: void removeBadge()>
<com.google.android.material.bottomappbar.BottomAppBar: int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean)>
<com.facebook.react.modules.timepicker.TimePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)>
<ch.qos.logback.classic.selector.DefaultContextSelector: void <init>(ch.qos.logback.classic.LoggerContext)>
<com.google.android.gms.common.api.internal.LifecycleActivity: androidx.fragment.app.FragmentActivity asFragmentActivity()>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: androidx.core.app.NotificationCompat$Builder buildActionableNotification(java.lang.String,java.lang.String,android.app.PendingIntent,boolean,boolean,int,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date normalizeDate(java.util.Date)>
<com.google.android.gms.common.api.zzb: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketError$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext)>
<java.util.zip.ZipEntry: java.lang.String getName()>
<ch.qos.logback.classic.net.SocketReceiver: javax.net.SocketFactory getSocketFactory()>
<com.facebook.imagepipeline.common.RotationOptions: boolean rotationEnabled()>
<com.google.android.material.chip.ChipDrawable: void setTextEndPaddingResource(int)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.BufferedDiskCache getSmallImageBufferedDiskCache()>
<com.facebook.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDetachedFromLayoutParams()>
<com.google.android.gms.internal.measurement.zzbr: java.lang.String zzx()>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getNativeParent()>
<ch.qos.logback.classic.html.HTMLLayout: java.lang.String computeConverterName(ch.qos.logback.core.pattern.Converter)>
<com.google.android.material.datepicker.CalendarConstraints$DateValidator: boolean isValid(long)>
<com.google.android.gms.measurement.internal.zzx: boolean zzd(java.lang.Long,java.lang.Long,com.google.android.gms.internal.measurement.zzdu,boolean)>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zze(int,com.google.android.gms.internal.measurement.zzde)>
<com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager: java.lang.Object getCachedAuthMethodPolicy(java.lang.String,java.lang.String,com.microsoft.authenticator.graphclient.AuthenticationMethod,com.microsoft.authenticator.core.protocol.CloudEnvironment,com.microsoft.authenticator.graphclient.GraphApiEndPoint,com.microsoft.authenticator.graphclient.PolicyExpirationDuration,com.microsoft.authenticator.graphclient.GracePeriodMaxDuration,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zad(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource tryGetAndClearDataSource(int,com.facebook.datasource.DataSource)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[],int,int,int)>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobCreatorHolder getJobCreatorHolder()>
<com.google.android.gms.internal.measurement.zzcn: boolean zzb()>
<android.view.animation.Animation: void <init>()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>
<com.airbnb.lottie.model.FontCharacter: void <init>(java.util.List,char,double,double,java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.FragmentEditCredentialBinding: void <init>(android.widget.ScrollView,android.widget.Button,com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,android.widget.TextView,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int getForceRotatedInvertedExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: long getScheduleDelay(com.google.android.datatransport.Priority,long,int)>
<com.facebook.fbreact.specs.NativeStatusBarManagerIOSSpec: java.util.Map getTypedExportedConstants()>
<com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()>
<com.facebook.imagepipeline.common.ResizeOptions: int hashCode()>
<androidx.work.ListenableWorker: androidx.work.Data getInputData()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.common.BrooklynMSASignOutUseCase getBrooklynMSASignOutUseCase()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void setInEditMode(boolean)>
<com.facebook.react.uimanager.UIImplementation: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.uimanager.ReactStylesDiffMap)>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object)>
<com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.api.Batch: com.google.android.gms.common.api.BatchResult createFailedResult(com.google.android.gms.common.api.Status)>
<com.google.android.gms.stats.WakeLock: java.util.List zza()>
<com.google.android.gms.location.SleepSegmentRequest: void <init>(java.util.List,int)>
<com.airbnb.lottie.model.content.MergePaths: java.lang.String getName()>
<ch.qos.logback.classic.AsyncAppender: void preprocess(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)>
<com.facebook.react.uimanager.events.EventDispatcher: java.util.List access$1600(com.facebook.react.uimanager.events.EventDispatcher)>
<com.adjust.sdk.ActivityHandler$17: void <init>(com.adjust.sdk.ActivityHandler,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.common.ImageDecodeOptions: void <init>(com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder)>
<com.adjust.sdk.IActivityHandler: void setOfflineMode(boolean)>
<com.facebook.react.jstasks.HeadlessJsTaskContext: void removeTimeout(int)>
<android.widget.LinearLayout: java.lang.CharSequence getContentDescription()>
<com.google.android.material.datepicker.UtcDates: java.util.Calendar getUtcCalendar()>
<com.google.common.base.AbstractIterator$State: void <init>(java.lang.String,int)>
<com.airbnb.lottie.utils.Utils$4: float[] initialValue()>
<ch.qos.logback.core.spi.AppenderAttachableImpl: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void handleGetEncryptionKeyResult(com.microsoft.authenticator.msa.entities.GetMsaEncryptionKeyResult,java.lang.String,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)>
<com.adjust.sdk.Adjust: void onResume()>
<com.facebook.react.uimanager.MatrixMathHelper: double determinant(double[])>
<com.google.android.material.shape.ShapePath$LineShadowOperation: float getAngle()>
<com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)>
<com.airbnb.lottie.LottieDrawable: android.graphics.Bitmap getImageAsset(java.lang.String)>
<androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)>
<com.google.android.gms.internal.measurement.zzgz: void zzq(byte[],int,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: void inject()>
<com.facebook.drawee.interfaces.SettableDraweeHierarchy: void setRetry(java.lang.Throwable)>
<com.microsoft.brooklyn.ui.importCred.ImportFromChromeFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.importCred.ImportFromChromeFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzar(java.lang.String,java.lang.String[])>
<com.google.android.gms.location.zzbh: void <init>()>
<com.google.android.gms.internal.common.zzq: java.lang.Object[] zzb()>
<com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zab(java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(android.view.View,int,int,int,int)>
<java.lang.String: int hashCode()>
<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>
<com.facebook.soloader.UnpackingSoSource$InputDsoIterator: void close()>
<androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()>
<com.azure.authenticator.logging.LoggingReceiver_MembersInjector: void injectPowerLiftUploadManager(com.azure.authenticator.logging.LoggingReceiver,com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadManager)>
<com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.Clock get()>
<android.widget.LinearLayout: android.view.View findViewById(int)>
<com.adjust.sdk.SdkClickHandler: void access$500(com.adjust.sdk.SdkClickHandler,com.adjust.sdk.ActivityPackage)>
<ch.qos.logback.classic.html.DefaultThrowableRenderer: void render(java.lang.StringBuilder,ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void transcodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)>
<com.google.android.gms.safetynet.SafeBrowsingData: java.lang.String getMetadata()>
<com.facebook.react.fabric.FabricSoLoader: void staticInit()>
<com.microsoft.authenticator.graphclient.entities.FetchNewPolicyResult$Failure: com.microsoft.authenticator.graphclient.entities.GetPolicyFromGraphFailureReason getFailureReason()>
<android.view.ViewGroup: android.view.ViewParent getParent()>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>
<com.google.android.gms.internal.maps.zzk: void setPosition(com.google.android.gms.maps.model.LatLng)>
<java.lang.Thread: void <init>(java.lang.String)>
<com.facebook.drawee.drawable.ScaleTypeDrawable: void <init>(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager_MembersInjector: void injectAdalTokenRefreshManager(com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.authentication.aad.abstraction.AdalTokenRefreshManager)>
<com.facebook.imagepipeline.cache.BufferedDiskCache$5: java.lang.Void call()>
<com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)>
<com.azure.authenticator.databinding.GpListRowLayoutBinding: com.azure.authenticator.databinding.GpListRowLayoutBinding bind(android.view.View)>
<com.adjust.sdk.AdjustInstance: com.adjust.sdk.AdjustAttribution getAttribution()>
<com.google.android.gms.internal.measurement.zzla: long zzs()>
<com.facebook.imagepipeline.producers.BaseConsumer: void onCancellationImpl()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setPositionWithID(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: java.util.Map discover(android.content.Context)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void denySession()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider aadPhoneSignInSetupViewModelProvider()>
<android.widget.FrameLayout: void setAlpha(float)>
<com.azure.authenticator.ui.MainActivity: void setStausbarColorForFragments(androidx.navigation.NavController)>
<com.google.android.gms.common.api.internal.LifecycleFragment: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)>
<com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)>
<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>
<com.facebook.cache.disk.DiskStorage$Inserter: com.facebook.binaryresource.BinaryResource commit(java.lang.Object)>
<com.azure.authenticator.storage.Storage: boolean readShowCodesActionKey()>
<androidx.recyclerview.widget.LinearSmoothScroller: void <init>(android.content.Context)>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback: void <init>(com.facebook.react.uimanager.events.EventDispatcher)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: void updateProfileImage(android.graphics.Bitmap)>
<com.google.android.gms.internal.maps.zzw: void setStrokeWidth(float)>
<com.google.android.gms.measurement.internal.zzib: void zzB(com.google.android.gms.measurement.internal.zzhu,com.google.android.gms.measurement.internal.zzhu,long,boolean,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzmt: boolean zza()>
<com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.Layer getLayerModel()>
<com.google.android.gms.common.api.internal.StatusPendingResult: void <init>(android.os.Looper)>
<com.facebook.react.animated.ValueAnimatedNode: void onValueUpdate()>
<com.google.android.gms.internal.measurement.zzgz: int zzA(com.google.android.gms.internal.measurement.zzgs)>
<com.google.android.gms.common.api.internal.zabe: java.util.concurrent.ExecutorService zaa()>
<com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)>
<com.google.android.gms.internal.measurement.zzam: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String)>
<com.adjust.sdk.PackageBuilder: void addBoolean(java.util.Map,java.lang.String,java.lang.Boolean)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver: android.content.Intent getIntent()>
<com.google.android.gms.measurement.internal.zzij: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzhu)>
<com.fasterxml.jackson.core.util.TextBuffer: int size()>
<com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.math.MathUtils: float dist(float,float,float,float)>
<com.google.android.gms.measurement.internal.zzai: boolean zzx()>
<java.util.Collections: java.util.Map emptyMap()>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: char readEscapeCharacter()>
<com.google.android.gms.internal.measurement.zzlx: com.google.android.gms.internal.measurement.zzly zzd()>
<org.slf4j.event.LoggingEvent: java.lang.String getMessage()>
<com.facebook.react.modules.camera.CameraRollManager: void putEdges(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void resetFade()>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>
<com.evernote.android.job.JobExecutor: java.util.concurrent.Future execute(android.content.Context,com.evernote.android.job.JobRequest,com.evernote.android.job.Job,android.os.Bundle)>
<com.azure.authenticator.common.Util$Companion: void setupTotpText(java.lang.String,android.widget.TextSwitcher,android.view.View)>
<com.adjust.sdk.AttributionHandler$3: void <init>(com.adjust.sdk.AttributionHandler,com.adjust.sdk.SessionResponseData)>
<com.google.common.collect.RegularImmutableMap$EntrySet$1: java.util.Map$Entry get(int)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void <init>()>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.MemoryChunkPool getMemoryChunkPool(int)>
<android.graphics.Matrix: void getValues(float[])>
<android.os.Process: int getThreadPriority(int)>
<com.azure.authenticator.storage.database.AccountWriter: void saveMsaAccount(com.azure.authenticator.storage.database.DbAccount)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void <init>(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor)>
<com.google.android.datatransport.cct.internal.ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo build()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.DataPlaceholderLayoutBinding: void <init>(android.widget.RelativeLayout,androidx.cardview.widget.CardView)>
<com.google.android.material.snackbar.BaseTransientBottomBar: com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketComplete$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: void <init>()>
<com.evernote.android.job.JobRequest$NetworkType: com.evernote.android.job.JobRequest$NetworkType valueOf(java.lang.String)>
<com.azure.authenticator.databinding.FragmentEditAddPaymentBinding: android.widget.ScrollView getRoot()>
<com.facebook.imagepipeline.producers.DelegatingConsumer: void onProgressUpdateImpl(float)>
<ch.qos.logback.core.joran.action.IADataForBasicProperty: void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String)>
<com.microsoft.did.di.VcWalletModule_VcDatabaseFactory: com.microsoft.did.datasource.db.VcDatabase vcDatabase(com.microsoft.did.di.VcWalletModule,android.content.Context)>
<com.adjust.sdk.Util: java.lang.Object readObjectField(java.io.ObjectInputStream$GetField,java.lang.String,java.lang.Object)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void makeOrphan(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager getDialogFragmentManager$app_productionRelease()>
<com.google.android.gms.measurement.internal.zzkk: void zzaf(com.google.android.gms.internal.measurement.zzs,int)>
<com.google.android.gms.measurement.internal.zzae: java.lang.String zzi(java.lang.String,com.google.android.gms.measurement.internal.zzdv)>
<com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.uimanager.UIManagerModule$1)>
<com.facebook.react.uimanager.ReactShadowNode: void removeAllNativeChildren()>
<com.airbnb.lottie.LottieDrawable: void setMinProgress(float)>
<com.google.common.base.Splitter: com.google.common.base.Splitter on(com.google.common.base.CharMatcher)>
<com.google.android.gms.measurement.internal.zzkd: void zzaa(com.google.android.gms.measurement.internal.zzkd,com.google.android.gms.measurement.internal.zzke)>
<com.adjust.sdk.scheduler.TimerCycle$1: void <init>(com.adjust.sdk.scheduler.TimerCycle)>
<com.microsoft.authenticator.workaccount.businesslogic.Broker$Companion: boolean isAuthenticatorBroker(android.content.Context)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconStartPadding(float)>
<com.google.android.gms.internal.measurement.zzkz: long zzG()>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void onNotificationDismissed(android.content.Context,android.os.Bundle)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getVersionName()>
<com.google.android.material.badge.BadgeDrawable: void setBadgeGravity(int)>
<com.adjust.sdk.SdkClickHandler: void retrySendingI(com.adjust.sdk.ActivityPackage)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void access$300(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.material.bottomsheet.BottomSheetDialog: void setLightStatusBar(android.view.View,boolean)>
<com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.ReactChoreographer access$1000(com.facebook.react.modules.core.JavaTimerManager)>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.lang.String)>
<com.facebook.imagepipeline.memory.Bucket: java.lang.Object get()>
<com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory create()>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient$Builder setHandler(android.os.Handler)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getCloudAadMfaAccounts(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer$2: void <init>(com.facebook.imagepipeline.producers.DiskCacheReadProducer,java.util.concurrent.atomic.AtomicBoolean)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int nextNonWhitespace(boolean)>
<com.fasterxml.jackson.core.base.ParserBase: int _eofAsNextChar()>
<com.google.android.gms.common.images.ImageManager: java.util.Map zab(com.google.android.gms.common.images.ImageManager)>
<com.facebook.imagepipeline.memory.PoolConfig: void <init>(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketError$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.maps.zzt: void setZIndex(float)>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)>
<java.util.Set: int size()>
<com.google.crypto.tink.KeysetHandle: com.google.crypto.tink.proto.Keyset getKeyset()>
<com.fasterxml.jackson.core.io.UTF32Reader: void reportBounds(char[],int,int)>
<ch.qos.logback.core.util.AggregationType: ch.qos.logback.core.util.AggregationType[] values()>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: float getBorderWidthOrDefaultTo(float,int)>
<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(java.lang.String,java.lang.String,java.lang.Character)>
<com.google.android.gms.measurement.internal.zzed: java.lang.String zzf(android.os.Bundle)>
<com.azure.authenticator.logging.LoggingHelper: void <init>()>
<com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,int,int)>
<com.google.android.gms.stats.WakeLock: void <init>(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)>
<java.lang.CharSequence: java.lang.String toString()>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>
<com.google.android.material.navigation.NavigationBarItemView: void setIconTintList(android.content.res.ColorStateList)>
<com.facebook.react.uimanager.UIImplementation: void setLayoutAnimationEnabledExperimental(boolean)>
<com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)>
<com.google.android.material.navigation.NavigationBarPresenter$SavedState$1: com.google.android.material.navigation.NavigationBarPresenter$SavedState createFromParcel(android.os.Parcel)>
<com.google.android.gms.internal.measurement.zzhe: void <init>(boolean)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void <init>(android.content.Context)>
<com.google.android.gms.internal.safetynet.zzy: void <init>()>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: boolean access$200(com.adjust.sdk.scheduler.SingleThreadCachedScheduler)>
<com.facebook.react.uimanager.ReactRoot: void onStage(int)>
<com.adjust.sdk.ActivityKind: com.adjust.sdk.ActivityKind[] values()>
<com.evernote.android.job.util.JobCat: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.measurement.internal.zzed: java.lang.String zze(java.lang.String)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromUrl(android.content.Context,java.lang.String,java.lang.String)>
<android.widget.ImageButton: int[] getDrawableState()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketCancel$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.material.shape.ShapePath$PathArcOperation: float getSweepAngle()>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getDisplayTitle()>
<com.facebook.common.util.UriUtil: java.lang.String getSchemeOrNull(android.net.Uri)>
<com.google.android.gms.auth.account.WorkAccountClient: void <init>(android.app.Activity)>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node Eopt()>
<com.azure.authenticator.storage.Storage: void writePreviousAadFcmToken(java.lang.String)>
<ch.qos.logback.classic.Level: void <init>(int,java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: void keepUserPreferences(com.azure.authenticator.storage.database.DbAccount,com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.material.animation.MotionSpec: void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshWorker_AssistedFactory appIdDomainRefreshWorker_AssistedFactory()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshWorker_AssistedFactory access$15000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.evernote.android.job.WakeLockUtil: android.os.PowerManager$WakeLock acquireWakeLock(android.content.Context,java.lang.String,long)>
<com.google.android.material.internal.NavigationMenuItemView: android.graphics.drawable.StateListDrawable createDefaultBackground()>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zza: void <init>(android.app.Fragment,com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate)>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.layer.Layer$LayerType getLayerType()>
<com.google.crypto.tink.proto.Keyset$Builder: com.google.crypto.tink.proto.Keyset$Key getKey(int)>
<com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse fatalError()>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastR()>
<com.google.android.gms.internal.measurement.zzel: void <init>(com.google.android.gms.internal.measurement.zzen)>
<com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()>
<com.google.android.material.tabs.TabLayout$TabView: void access$1000(com.google.android.material.tabs.TabLayout$TabView,android.view.View)>
<com.adjust.sdk.Util: void runInBackground(java.lang.Runnable)>
<com.adjust.sdk.Reflection: java.lang.Object invokeMethod(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Class[],java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzbx: void <init>(com.google.android.gms.internal.measurement.zzbs)>
<com.azure.authenticator.databinding.AddNewAccountBinding: com.azure.authenticator.databinding.AddNewAccountBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.chip.Chip$1: void <init>(com.google.android.material.chip.Chip)>
<com.facebook.react.uimanager.ViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)>
<com.facebook.react.bridge.JavaModuleWrapper: void findMethods()>
<com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap,android.graphics.Bitmap)>
<com.google.android.gms.common.api.internal.zaai: void <init>(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.common.api.Api,boolean)>
<ch.qos.logback.core.util.ContextUtil: java.util.Map getFilenamePatternCollisionMap(ch.qos.logback.core.Context)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: int getItemCount()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setRippleColor(android.content.res.ColorStateList)>
<android.view.ViewGroup: int[] mergeDrawableStates(int[],int[])>
<ch.qos.logback.core.FileAppender: void safeWrite(java.lang.Object)>
<com.azure.authenticator.ui.msa.'-$$Lambda$RemoteMsaNgcUpsellFragment$x2ZH15DdpGtKo2A5v62awVfc4lQ': void <init>(com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment)>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void addToWatchList(java.net.URL)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.lang.String zzm(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIconTint(android.content.res.ColorStateList)>
<com.google.android.gms.internal.location.zzbi: void <init>()>
<com.facebook.yoga.YogaNode: void setFlex(float)>
<com.fasterxml.jackson.core.base.ParserBase: void loadMoreGuaranteed()>
<com.google.android.gms.internal.common.zzt: void <init>(com.google.android.gms.internal.common.zzu,int,int)>
<com.google.android.material.internal.TextDrawableHelper: float getTextWidth(java.lang.String)>
<com.facebook.react.views.textinput.ReactTextInputSelectionEvent: void <init>(int,int,int)>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean access$000(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: void <init>(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager aadNgcPnRegistrationManager()>
<com.google.android.gms.common.images.zae: void <init>(android.widget.ImageView,int)>
<com.google.android.gms.internal.measurement.zza: android.os.Parcel zza()>
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.location.zzr: void <init>()>
<com.google.android.gms.internal.maps.zzh: void setRadius(double)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.maps.model.CameraPosition getCameraPosition()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readHeader(android.os.Parcel)>
<com.adjust.sdk.ActivityHandler$35: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.EventResponseData)>
<com.fasterxml.jackson.core.io.CharTypes: void appendQuoted(java.lang.StringBuilder,java.lang.String)>
<com.google.android.gms.common.api.internal.zaar: boolean zax(com.google.android.gms.common.api.internal.zaar)>
<com.google.android.gms.location.SleepSegmentEvent: int getStatus()>
<com.google.android.gms.common.api.internal.zaaz: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.abstraction.FillDatasetManager fillDatasetManager()>
<com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel access$getAadNgcSessionViewModel$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<android.widget.LinearLayout: int getBottom()>
<okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>
<com.adjust.sdk.IActivityHandler: void teardown()>
<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder zzd(java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void updateOrRecreateIndicatorAnimation(boolean,int,int)>
<com.google.android.gms.measurement.internal.zzaf: boolean zzm(int,int)>
<java.lang.Class: java.lang.Class getSuperclass()>
<android.widget.ImageButton: void setTranslationX(float)>
<com.google.android.gms.internal.auth-api-phone.zzm: void zzb(com.google.android.gms.common.api.Status)>
<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)>
<com.google.android.material.ripple.RippleUtils: boolean shouldDrawRippleCompat(int[])>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void start()>
<com.facebook.imagepipeline.producers.JobScheduler: void access$000(com.facebook.imagepipeline.producers.JobScheduler)>
<com.google.android.gms.internal.measurement.zzjk: int zzx(int,java.util.List,com.google.android.gms.internal.measurement.zzji)>
<com.facebook.drawee.controller.AbstractDraweeController: java.lang.Object getCachedImage()>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>
<com.google.android.gms.internal.measurement.zzgi: void <init>(com.google.android.gms.internal.measurement.zzgs)>
<com.facebook.common.util.UriUtil: boolean isLocalFileUri(android.net.Uri)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.internal.GmsClient: java.util.Set validateScopes(java.util.Set)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: java.lang.String getText()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshManager appIdDomainRefreshManager()>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb: void zza(com.google.android.gms.internal.auth.zzz)>
<ch.qos.logback.core.spi.AbstractComponentTracker: java.lang.Object buildComponent(java.lang.String)>
<androidx.cardview.widget.CardView: void onMeasure(int,int)>
<com.google.android.gms.internal.auth.zzad: void <init>(java.lang.String)>
<ch.qos.logback.classic.turbo.TurboFilter: void <init>()>
<com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()>
<com.facebook.react.bridge.Dynamic: boolean asBoolean()>
<com.facebook.react.ReactActivityDelegate: com.facebook.react.modules.core.PermissionListener access$002(com.facebook.react.ReactActivityDelegate,com.facebook.react.modules.core.PermissionListener)>
<com.facebook.common.file.FileUtils: void rename(java.io.File,java.io.File)>
<com.google.android.datatransport.runtime.backends.BackendRegistry: com.google.android.datatransport.runtime.backends.TransportBackend get(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<com.azure.authenticator.ui.MainActivity$onResume$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.azure.authenticator.utils.Hilt_TestActivity: void _initHiltInternal()>
<com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()>
<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean didEndFrameIdle(long,long)>
<com.facebook.cache.disk.DiskStorageCache: void <init>(com.facebook.cache.disk.DiskStorage,com.facebook.cache.disk.EntryEvictionComparatorSupplier,com.facebook.cache.disk.DiskStorageCache$Params,com.facebook.cache.common.CacheEventListener,com.facebook.cache.common.CacheErrorLogger,com.facebook.common.disk.DiskTrimmableRegistry,android.content.Context,java.util.concurrent.Executor,boolean)>
<ch.qos.logback.core.net.AbstractSocketAppender$1: void <init>(ch.qos.logback.core.net.AbstractSocketAppender)>
<com.evernote.android.job.JobApi: com.evernote.android.job.JobProxy createProxy(android.content.Context)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateImageMatrixScale()>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity: void <init>()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,java.util.Set,com.facebook.drawee.backends.pipeline.DraweeConfig)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueShowPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.google.android.gms.maps.Projection: void <init>(com.google.android.gms.maps.internal.IProjectionDelegate)>
<com.facebook.drawee.backends.pipeline.info.ImageOriginUtils: java.lang.String toString(int)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.gms.measurement.internal.zzfi: java.lang.Object zzi(java.util.concurrent.atomic.AtomicReference,long,java.lang.String,java.lang.Runnable)>
<com.azure.authenticator.storage.MfaSdkAccountTranslator: com.azure.authenticator.accounts.AadAccount mfaSdkAccountToAadAccount$app_productionRelease(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount)>
<com.facebook.common.executors.StatefulRunnable: void onCancellation()>
<com.google.android.gms.location.LocationAvailability: void <init>(int,int,int,long,com.google.android.gms.location.zzbo[])>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$2: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.airbnb.lottie.model.layer.BaseLayer: void applyMasks(android.graphics.Canvas,android.graphics.Matrix)>
<com.google.android.gms.measurement.internal.zzkk: com.google.android.gms.measurement.internal.zzas zzV(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,long,boolean,boolean)>
<com.google.android.material.card.MaterialCardViewHelper: float calculateActualCornerPadding()>
<com.microsoft.authenticator.backup.abstraction.AutoBackupManager: void <init>(com.azure.authenticator.jobs.DeferrableWorkerUtils)>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int)>
<com.adjust.sdk.ActivityHandler: void setEnabledI(boolean)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<okhttp3.Call: void cancel()>
<android.widget.CheckedTextView: void setVisibility(int)>
<com.facebook.imagepipeline.producers.LocalFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory)>
<com.google.common.collect.MapMakerInternalMap: boolean containsKey(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzla: long zzg()>
<com.google.android.datatransport.runtime.SendRequest: com.google.android.datatransport.Transformer getTransformer()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setShouldDecodePrefetches(java.lang.Boolean)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections$ActionAccountListFragmentToFullscreenAccountPage: void <init>(long)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder fromRequest(com.facebook.imagepipeline.request.ImageRequest)>
<com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getConstants()>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastN()>
<com.google.common.collect.Maps: boolean equalsImpl(java.util.Map,java.lang.Object)>
<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest build()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()>
<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>
<com.microsoft.did.feature.cardlist.viewlogic.CardListFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.cardlist.viewlogic.CardListFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyCancel$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.nativecode.NativeBlurFilter: void iterativeBoxBlur(android.graphics.Bitmap,int,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void <init>()>
<com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)>
<com.google.android.gms.common.GoogleApiAvailability: boolean showErrorDialogFragment(android.app.Activity,int,int,android.content.DialogInterface$OnCancelListener)>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>
<com.google.android.gms.internal.common.zzq: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.storage.database.AccountStorage getAccountStorage$app_productionRelease()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()>
<com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace)>
<android.content.res.TypedArray: float getDimension(int,float)>
<com.adjust.sdk.scheduler.TimerOnce: void <init>(java.lang.Runnable,java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNodeImpl)>
<com.google.android.gms.internal.measurement.zzbr: java.util.List zzm(java.lang.String,java.lang.String)>
<com.google.android.gms.common.internal.BaseGmsClient: android.content.Context getContext()>
<com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)>
<ch.qos.logback.core.android.SystemPropertiesProxy: void <init>(java.lang.ClassLoader)>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getApiFeatures()>
<com.google.android.gms.measurement.internal.zzkk: boolean zzP(android.content.Context,boolean)>
<java.lang.Math: long min(long,long)>
<com.adjust.sdk.PackageHandler: void sendNextI()>
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int)>
<com.google.android.gms.tasks.zzw: void zzc(java.lang.Exception)>
<android.content.res.TypedArray: float getFloat(int,float)>
<com.google.android.gms.measurement.internal.zzg: long zzv()>
<com.google.common.base.Ascii: char toUpperCase(char)>
<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>
<com.google.android.material.card.MaterialCardViewHelper: void setCardForegroundColor(android.content.res.ColorStateList)>
<com.google.android.gms.internal.measurement.zzkn: int zzk(int,int)>
<com.google.android.gms.internal.common.zzt: com.google.android.gms.internal.common.zzu zzh(int,int)>
<com.google.android.gms.dynamic.ObjectWrapper: void <init>(java.lang.Object)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.generic.RoundingParams getRoundingParams()>
<com.google.android.gms.internal.maps.zzaf: com.google.android.gms.maps.model.Tile getTile(int,int,int)>
<com.microsoft.authenticator.mfasdk.account.businessLogic.MfaStateUseCase: void <init>(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])>
<com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: void <init>(com.google.android.gms.common.internal.BaseGmsClient)>
<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo: void <init>(int,int,int[],com.fasterxml.jackson.core.sym.Name[],com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[],int,int,int)>
<com.google.android.gms.internal.measurement.zzcw: com.google.android.gms.internal.measurement.zzcw zza(int)>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>
<com.google.android.material.timepicker.ClockHandView: boolean handleTouchInput(float,float,boolean,boolean,boolean)>
<com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: void <init>(com.azure.authenticator.databinding.AccountListRowDefaultModeBinding,com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType,androidx.lifecycle.LifecycleCoroutineScope,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter)>
<com.adjust.sdk.DeviceInfo: java.lang.String getFacebookAttributionId(android.content.Context)>
<com.microsoft.authenticator.registration.mfa.businessLogic.ActivationParametersParserAadMfa: void <init>()>
<com.adjust.sdk.Util: int hashString(java.lang.String)>
<com.google.android.material.textfield.ClearTextEndIconDelegate$4: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setStep(android.view.View,double)>
<java.lang.reflect.Field: java.lang.Class getType()>
<com.azure.authenticator.accounts.AadAccount: com.azure.authenticator.accounts.AadAccount createNgcBrokerAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.microsoft.authenticator.rootdetection.businesslogic.SafetyNetUseCase: void <init>(com.google.android.gms.safetynet.SafetyNetClient)>
<com.facebook.react.views.scroll.VelocityHelper: void calculateVelocity(android.view.MotionEvent)>
<com.facebook.cache.common.CacheEventListener$EvictionReason: void <init>(java.lang.String,int)>
<ch.qos.logback.core.spi.AppenderAttachable: void addAppender(ch.qos.logback.core.Appender)>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>
<ch.qos.logback.core.rolling.RollingFileAppender: java.lang.String getFile()>
<ch.qos.logback.core.Appender: java.lang.String getName()>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
<com.facebook.imagepipeline.memory.MemoryChunk: void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int)>
<androidx.navigation.fragment.FragmentKt: androidx.navigation.NavController findNavController(androidx.fragment.app.Fragment)>
<com.azure.authenticator.jwe.CryptoHelper: byte[] getAuthTagWithHmac(byte[],byte[],java.lang.String)>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.AadAccount getAadMfaAccount(java.lang.String,java.lang.String)>
<com.facebook.yoga.YogaNode: void setDisplay(com.facebook.yoga.YogaDisplay)>
<com.facebook.binaryresource.BinaryResource: long size()>
<com.facebook.react.CoreModulesPackage: com.facebook.react.ReactInstanceManager access$000(com.facebook.react.CoreModulesPackage)>
<com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: android.graphics.PointF getValue(com.airbnb.lottie.value.Keyframe,float)>
<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>
<com.google.android.material.badge.BadgeDrawable: java.lang.CharSequence getContentDescription()>
<com.google.android.gms.internal.maps.zzh: void setZIndex(float)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int size()>
<com.facebook.react.uimanager.ShadowNodeRegistry: void removeNode(int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer$$Lambda$1: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void <init>(com.facebook.drawee.generic.GenericDraweeHierarchyBuilder)>
<com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipUtf8_3(int)>
<com.google.android.gms.cloudmessaging.CloudMessage: void <init>(android.content.Intent)>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: android.graphics.BitmapFactory$Options getBitmapFactoryOptions(int,android.graphics.Bitmap$Config)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInOnPremQrFragment injectAadPhoneSignInOnPremQrFragment2(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInOnPremQrFragment)>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()>
<com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser: void <init>()>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage$Companion: com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage fromBundle(android.os.Bundle)>
<com.google.android.material.appbar.MaterialToolbar: android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable)>
<ch.qos.logback.classic.selector.DefaultContextSelector: ch.qos.logback.classic.LoggerContext getDefaultLoggerContext()>
<com.azure.authenticator.utils.TestActivity_MembersInjector: void <init>(javax.inject.Provider)>
<com.airbnb.lottie.value.Keyframe: float getStartValueFloat()>
<com.facebook.imagepipeline.memory.MemoryChunk: int getSize()>
<com.airbnb.lottie.LottieDrawable: void invalidateSelf()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)>
<com.google.android.gms.common.internal.GmsClientSupervisor: void unbindService(android.content.ComponentName,android.content.ServiceConnection,java.lang.String)>
<com.azure.authenticator.databinding.MsaSessionDialogBinding: android.widget.ScrollView getRoot()>
<android.widget.Spinner: void layout(int,int,int,int)>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showNotificationDisabledDialog$notificationDisabledDialogBuilder$1: void <init>(com.azure.authenticator.ui.dialog.AppDialogFragments,android.content.DialogInterface$OnClickListener)>
<com.airbnb.lottie.LottieAnimationView: void setAnimationFromUrl(java.lang.String)>
<com.airbnb.lottie.model.content.ShapeTrimPath: boolean isHidden()>
<com.google.android.gms.safetynet.SafetyNetApi$RecaptchaTokenResponse: void <init>()>
<com.google.android.material.button.MaterialButtonToggleGroup: int getIndexWithinVisibleButtons(android.view.View)>
<com.google.android.gms.internal.measurement.zzbt: void <init>(com.google.android.gms.internal.measurement.zzbs)>
<java.io.OutputStream: void write(byte[])>
<com.adjust.sdk.AdjustFactory$1: void <init>()>
<com.google.android.gms.internal.maps.zzac: void clearTileCache()>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder bearing(float)>
<com.evernote.android.job.Job$Params: java.lang.String getTag()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)>
<com.google.android.material.snackbar.BaseTransientBottomBar$5: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.evernote.android.job.Job: boolean meetsRequirements(boolean)>
<com.google.android.gms.measurement.internal.zzbg: void <init>()>
<com.google.android.material.internal.ParcelableSparseArray: void <init>()>
<com.evernote.android.job.JobStorage: com.evernote.android.job.util.JobCat access$300()>
<com.facebook.react.uimanager.annotations.ReactProp: java.lang.String customType()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.signin.SignInViewModel signInViewModel()>
<com.google.android.gms.internal.measurement.zzlv: boolean zzb()>
<com.google.android.gms.internal.measurement.zzjb: void <init>(com.google.android.gms.internal.measurement.zzjw,com.google.android.gms.internal.measurement.zzhf,com.google.android.gms.internal.measurement.zzix)>
<com.google.android.gms.auth.api.zza: void <init>()>
<ch.qos.logback.classic.net.SSLSocketAppender: void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzf)>
<android.view.View$BaseSavedState: void <init>(android.os.Parcel)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void fadeInLayer(int)>
<com.google.android.gms.internal.measurement.zzji: java.lang.Object zza()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)>
<com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: void <init>()>
<com.google.android.gms.internal.location.zzbs: int indexOf(java.lang.Object)>
<com.facebook.react.modules.camera.ImageEditingManager: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.common.data.DataBufferRef: void zaa(int)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
<com.azure.authenticator.storage.Storage: java.lang.String readMsaFcmToken()>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenDailyRetryRefreshWorker_AssistedFactory access$15300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.github.amlcurran.showcaseview.TextDrawer: boolean shouldDrawText()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onPositiveButtonClick()>
<java.util.HashSet: boolean contains(java.lang.Object)>
<com.facebook.react.uimanager.UIImplementation: void measureInWindow(int,com.facebook.react.bridge.Callback)>
<com.google.android.gms.measurement.internal.zzkd: void zzc()>
<com.google.android.gms.auth.api.identity.zzf: com.google.android.gms.auth.api.identity.zzf$zzc zzg()>
<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_MembersInjector: void injectLocationManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker,com.microsoft.authenticator.location.LocationManager)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.AutofillNudgeHelper: void <init>(android.content.Context,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider)>
<com.google.android.gms.common.api.internal.zax: void zaA()>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])>
<com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)>
<android.widget.FrameLayout: void onAttachedToWindow()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider viewGeneratedPasswordViewModelProvider()>
<com.adjust.sdk.SdkClickHandler: void init(com.adjust.sdk.IActivityHandler,boolean)>
<com.github.amlcurran.showcaseview.AnimationFactory: void animateTargetToPoint(com.github.amlcurran.showcaseview.ShowcaseView,android.graphics.Point)>
<com.google.android.material.chip.ChipDrawable: void setChipCornerRadius(float)>
<com.facebook.react.modules.core.JavaTimerManager: void clearFrameCallback()>
<com.evernote.android.job.util.JobCat: void d(java.lang.String)>
<com.azure.authenticator.accounts.AadAccount: com.azure.authenticator.accounts.AadAccount createBrokerOnlyAccount(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.TouchTargetHelper: int getTouchTargetForView(android.view.View,float,float)>
<com.fasterxml.jackson.core.util.TextBuffer: void setCurrentLength(int)>
<com.google.android.gms.common.internal.zzl: void <init>()>
<com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountViewModel: void <init>(android.content.Context,com.microsoft.authenticator.core.telemetry.TelemetryManager,com.microsoft.authenticator.registration.mfa.businessLogic.RegisterAadMfaAccountUseCase)>
<com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPath addKey(java.lang.String)>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.RemoteCall zaa(com.google.android.gms.common.api.internal.TaskApiCall$Builder)>
<com.azure.authenticator.accounts.GenericAccount: java.lang.String getUsername()>
<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$202(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView createRootView()>
<com.google.android.gms.common.zzq: int zzc()>
<com.google.android.gms.internal.measurement.zzha: void zzw(int,java.util.List,boolean)>
<com.google.android.gms.internal.measurement.zzkg: void <init>(sun.misc.Unsafe)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void access$showWPJSectionWithRegisteredDevice(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,java.lang.String,boolean)>
<android.view.ViewGroup: int[] getDrawableState()>
<com.google.android.gms.auth.zzf: void <init>(java.lang.String,android.os.Bundle)>
<com.facebook.imagepipeline.systrace.FrescoSystrace: boolean isTracing()>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$14P1hQpjMxqMPQ9E0tzbdcQMcy4': void <init>()>
<com.azure.authenticator.databinding.FragmentViewGeneratedPasswordBinding: com.azure.authenticator.databinding.FragmentViewGeneratedPasswordBinding bind(android.view.View)>
<com.adjust.sdk.ActivityPackage: void setClickTimeInMilliseconds(long)>
<java.net.Socket: java.net.InetAddress getInetAddress()>
<com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()>
<com.facebook.imagepipeline.common.RotationOptions: int getForcedAngle()>
<com.google.android.datatransport.runtime.backends.BackendRequest$Builder: com.google.android.datatransport.runtime.backends.BackendRequest build()>
<com.facebook.react.views.view.ColorUtil: int multiplyColorAlpha(int,int)>
<com.google.android.gms.internal.auth.zzg: void <init>(android.os.IBinder)>
<com.google.android.material.navigation.NavigationBarMenuView: void removeBadge(int)>
<com.google.android.material.resources.MaterialResources: android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int)>
<android.widget.TextView: void setPivotX(float)>
<kotlin.coroutines.AbstractCoroutineContextElement: void <init>(kotlin.coroutines.CoroutineContext$Key)>
<com.evernote.android.job.JobRequest: boolean requiresStorageNotLow()>
<android.view.View: int getLayerType()>
<com.facebook.cache.disk.DefaultDiskStorage: void <init>(java.io.File,int,com.facebook.cache.common.CacheErrorLogger)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: java.lang.String getContentMessage()>
<com.evernote.android.job.JobCreator$AddJobCreatorReceiver: void addJobCreator(android.content.Context,com.evernote.android.job.JobManager)>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment_MembersInjector: void injectTelemetryManager(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<java.lang.InheritableThreadLocal: void <init>()>
<com.evernote.android.job.JobStorage: void remove(com.evernote.android.job.JobRequest)>
<com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()>
<com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager: void schedulePeriodicFcmTokenRefreshIfNecessary()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier: com.facebook.datasource.DataSource get()>
<com.facebook.drawee.view.DraweeView: void <init>(android.content.Context)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.airbnb.lottie.parser.moshi.JsonReader$Options: com.airbnb.lottie.parser.moshi.JsonReader$Options of(java.lang.String[])>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setChildDrawableAtIndex(int,android.graphics.drawable.Drawable)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void reset()>
<com.google.android.gms.measurement.internal.zzkd: long zzy()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getProgress()>
<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>
<com.github.amlcurran.showcaseview.StandardShowcaseDrawer: int getShowcaseHeight()>
<android.widget.FrameLayout: void setClipToOutline(boolean)>
<com.microsoft.authenticator.di.MsaSdkModule_ProvideMsaStorageMigrationFactory: com.microsoft.onlineid.sdk.extension.storage.StorageMigrationManager provideMsaStorageMigration(com.microsoft.authenticator.di.MsaSdkModule,android.content.Context)>
<android.webkit.CookieManager: void flush()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setBuildingsEnabled(boolean)>
<com.google.android.material.chip.ChipDrawable: void setChipStartPadding(float)>
<com.google.common.collect.MapMakerInternalMap$Segment: void initTable(java.util.concurrent.atomic.AtomicReferenceArray)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setPageMargin(com.facebook.react.views.viewpager.ReactViewPager,int)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: void ensureValid()>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onDestroyView()>
<com.facebook.common.internal.Objects: int hashCode(java.lang.Object[])>
<com.airbnb.lottie.LottieImageAsset: int getWidth()>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>
<com.facebook.soloader.SoLoader: void assertInitialized()>
<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>
<com.adjust.sdk.scheduler.TimerOnce: java.lang.Runnable access$200(com.adjust.sdk.scheduler.TimerOnce)>
<com.google.android.material.chip.ChipDrawable: void setShouldDrawText(boolean)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: void validateEncodedImageRequest(com.facebook.imagepipeline.request.ImageRequest)>
<com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onPause()>
<com.facebook.common.internal.Preconditions: void checkState(boolean)>
<com.google.android.gms.internal.location.zzav: void zzl(android.location.Location)>
<android.util.SparseArray: int indexOfKey(int)>
<com.google.android.gms.common.internal.BaseGmsClient: void checkConnected()>
<androidx.customview.widget.ExploreByTouchHelper: void <init>(android.view.View)>
<com.google.android.gms.internal.measurement.zzja: boolean zzJ(java.lang.Object,int,int,int,int)>
<com.facebook.imagepipeline.memory.BucketsBitmapPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.facebook.drawee.interfaces.DraweeHierarchy: android.graphics.drawable.Drawable getTopLevelDrawable()>
<ch.qos.logback.classic.android.SQLiteAppender: java.lang.String asStringTruncatedTo254(java.lang.Object)>
<com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createRootShadowNode()>
<com.facebook.react.views.view.ReactViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<ch.qos.logback.core.Context: long getBirthTime()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions getPasswordRequestOptions()>
<android.view.View: boolean isSelected()>
<com.facebook.cache.disk.DiskCacheConfig: long getLowDiskSpaceSizeLimit()>
<com.google.android.datatransport.runtime.AutoValue_SendRequest: void <init>(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Event,com.google.android.datatransport.Transformer,com.google.android.datatransport.Encoding)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setLocalThumbnailPreviewsEnabled(boolean)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,double)>
<com.google.android.material.textfield.CutoutDrawable: boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)>
<com.airbnb.lottie.LottieDrawable: void endAnimation()>
<com.azure.authenticator.storage.Storage: java.lang.String readPreviousAadFcmToken()>
<com.google.android.gms.internal.measurement.zzdu: void zzm(com.google.android.gms.internal.measurement.zzdu,long)>
<com.google.android.gms.common.api.internal.ConnectionCallbacks: void onConnected(android.os.Bundle)>
<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>
<android.text.TextPaint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback: void post()>
<android.widget.ImageButton: int getTop()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer newLocalVideoThumbnailProducer()>
<com.google.android.gms.measurement.internal.zzhn: void zzM(android.os.Bundle)>
<androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.database.CursorWindow: double getDouble(int,int)>
<com.facebook.react.views.text.ReactUnderlineSpan: void <init>()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzj(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.google.common.collect.MapMakerInternalMap$HashIterator: void advance()>
<com.airbnb.lottie.utils.Logger: void debug(java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int[],int,int,int)>
<com.google.android.gms.cloudmessaging.zze: com.google.android.gms.cloudmessaging.zze zza(android.content.Context)>
<android.view.MotionEvent: int getActionIndex()>
<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback)>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()>
<com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getMax(com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.request.ImageRequest$RequestLevel)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.ReceiptUseCase access$8900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.evernote.android.job.work.TransientBundleHolder: void cleanUpBundle(int)>
<com.google.android.gms.maps.model.LatLng: java.lang.String toString()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.TelemetryLoggingClient zaL()>
<com.azure.authenticator.jobs.DeferrableWorkerUtils: android.content.Context getContext()>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzi()>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void onCookiesModified()>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.measurement.zzbg: void zzb()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnCameraIdleListener(com.google.android.gms.maps.internal.zzn)>
<com.azure.authenticator.ui.MainActivity: void <init>()>
<androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.github.amlcurran.showcaseview.TextDrawer: float[] getBestTextPosition()>
<com.google.android.gms.maps.internal.zzbf: void zza(com.google.android.gms.internal.maps.zzz)>
<com.facebook.soloader.SoLoader: java.io.File unpackLibraryBySoName(java.lang.String)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity$1: void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void enableUserNavigation(boolean)>
<com.facebook.soloader.MinElf: java.lang.String[] extract_DT_NEEDED(java.nio.channels.FileChannel)>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback: void <init>(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.events.EventDispatcher$1)>
<androidx.work.Data$Builder: void <init>()>
<androidx.appcompat.widget.SwitchCompat: void <init>(android.content.Context)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel aadRemoteNgcSessionViewModel()>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector)>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectMembers(com.azure.authenticator.ui.MainActivity)>
<com.google.android.material.datepicker.MaterialCalendar$10: void <init>(com.google.android.material.datepicker.MaterialCalendar,int)>
<com.google.android.material.shadow.ShadowRenderer: void <init>(int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$onActivityResult$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.common.internal.Ints: int max(int[])>
<com.facebook.react.animated.NativeAnimatedNodesManager: void <init>(com.facebook.react.uimanager.UIManagerModule)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: int zze(com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder)>
<com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result await()>
<com.google.android.material.animation.MotionTiming: long getDelay()>
<ch.qos.logback.core.joran.action.TimestampAction: void <init>()>
<com.evernote.android.job.JobRequest: void <init>(com.evernote.android.job.JobRequest$Builder)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager: void buildAndShowActionMenu(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,android.view.View)>
<android.widget.EditText: android.os.IBinder getWindowToken()>
<com.adjust.sdk.scheduler.TimerCycle: java.lang.String access$000(com.adjust.sdk.scheduler.TimerCycle)>
<androidx.activity.ComponentActivity: void reportFullyDrawn()>
<com.facebook.drawee.drawable.ScaleTypeDrawable: void setFocusPoint(android.graphics.PointF)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void <init>(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,int)>
<com.google.android.gms.common.api.internal.zabo: void zaf(com.google.android.gms.common.api.internal.zabo)>
<java.util.Set: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>
<com.google.android.material.internal.TextScale: void captureValues(androidx.transition.TransitionValues)>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider brooklynIntroNotificationWorker_AssistedFactoryProvider()>
<com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: boolean access$getAutoEnableRemoteNgc$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback)>
<com.google.android.material.button.MaterialButton$SavedState: void <init>(android.os.Parcelable)>
<com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdatesIfNeeded()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipWS2()>
<com.google.common.io.BaseEncoding$Alphabet: char[] access$000(com.google.common.io.BaseEncoding$Alphabet)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)>
<com.google.android.gms.measurement.internal.zzht: java.lang.String zzd(java.lang.String,java.lang.String[],java.lang.String[])>
<java.util.Date: boolean before(java.util.Date)>
<javax.net.ssl.SSLSocket: void startHandshake()>
<com.airbnb.lottie.LottieDrawable: void drawWithNewAspectRatio(android.graphics.Canvas)>
<com.google.android.material.shape.MaterialShapeDrawable: android.content.res.ColorStateList getTintList()>
<com.google.android.gms.measurement.internal.zzkf: void zzd(com.google.android.gms.internal.measurement.zzde,java.lang.Object)>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setRefreshing(android.view.View,boolean)>
<com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository: java.lang.Object hasAppLockEnforced(kotlin.coroutines.Continuation)>
<com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate: void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider msaRefreshUserDaWorker_AssistedFactoryProvider()>
<androidx.appcompat.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)>
<com.google.android.gms.maps.GoogleMap$OnMarkerDragListener: void onMarkerDrag(com.google.android.gms.maps.model.Marker)>
<com.google.android.material.navigation.NavigationBarView: int getMaxItemCount()>
<android.text.TextPaint: float measureText(java.lang.CharSequence,int,int)>
<com.android.installreferrer.commons.InstallReferrerCommons: void logVerbose(java.lang.String,java.lang.String)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableCollection values()>
<com.facebook.imagepipeline.core.FileCacheFactory: com.facebook.cache.disk.FileCache get(com.facebook.cache.disk.DiskCacheConfig)>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zzh(double,com.google.android.gms.internal.measurement.zzcd)>
<com.google.android.material.badge.BadgeUtils: android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray)>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: void <init>(com.google.android.gms.common.api.internal.zacp)>
<com.google.android.gms.internal.measurement.zzir: void zzb(com.google.android.gms.internal.measurement.zzir)>
<com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions autoRotate()>
<com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.common.Priority)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_23_24$1: void <init>(int,int)>
<com.azure.authenticator.databinding.FrxPrivacyConsentBinding: void <init>(android.widget.ScrollView,android.widget.LinearLayout,android.widget.Button,com.airbnb.lottie.LottieAnimationView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzT(java.lang.String)>
<com.google.android.gms.internal.measurement.zzgq: int zzc()>
<com.google.android.gms.internal.measurement.zzc: void zze(android.os.Parcel,android.os.IInterface)>
<com.evernote.android.job.gcm.JobProxyGcm: com.google.android.gms.gcm.Task$Builder prepareBuilder(com.google.android.gms.gcm.Task$Builder,com.evernote.android.job.JobRequest)>
<com.azure.authenticator.databinding.AadPhoneSignInCompleteBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView,android.widget.LinearLayout,android.widget.ImageView,android.widget.TextView,android.view.View,android.view.View,android.widget.Button,android.widget.TextView,android.widget.ImageView,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.LinearLayout,android.widget.TextView,android.widget.ScrollView,android.widget.TextView,android.widget.ImageView,android.widget.LinearLayout,android.widget.TextView)>
<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable getChipIcon()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zae(com.google.android.gms.common.api.internal.zaab)>
<com.google.android.gms.measurement.internal.zzjg: void zzc(android.content.Intent)>
<com.adjust.sdk.scheduler.ThreadExecutor: void teardown()>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry newInstance(android.content.Context,java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager access$9700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.net.URI: int getPort()>
<android.view.ViewGroup: void removeView(android.view.View)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutHeight()>
<ch.qos.logback.core.joran.event.SaxEventRecorder: void <init>(ch.qos.logback.core.Context)>
<com.google.android.gms.internal.location.zzbo: boolean hasNext()>
<com.google.android.gms.common.api.internal.zac: void <init>(int)>
<com.microsoft.authenticator.di.MsaSdkModule_ProvideNgcCredentialManagerFactory: com.microsoft.ngc.provider.cryptography.NgcCredentialManager provideNgcCredentialManager(com.microsoft.authenticator.di.MsaSdkModule)>
<ch.qos.logback.core.rolling.helper.FileProvider: java.io.File[] listFiles(java.io.File,java.io.FilenameFilter)>
<com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener: void onDayClick(long)>
<com.google.android.gms.measurement.internal.zze: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<com.google.android.gms.measurement.internal.zzat: void zza(com.google.android.gms.measurement.internal.zzas,android.os.Parcel,int)>
<com.adjust.sdk.ActivityHandler: void init(com.adjust.sdk.AdjustConfig)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable,java.util.Set)>
<com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void stopAnimation()>
<com.google.android.gms.internal.measurement.zznh: boolean zzb()>
<com.azure.authenticator.storage.database.migration.Migration24To25: void createDatabaseVersion25(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig: boolean shouldShowAddAccountButton()>
<android.os.Process: boolean is64Bit()>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>
<com.microsoft.authenticator.registration.mfa.viewLogic.RegisterAadMfaAccountFragment_MembersInjector: void injectActivationFailureDialogManager(com.microsoft.authenticator.registration.mfa.viewLogic.RegisterAadMfaAccountFragment,com.microsoft.authenticator.registration.mfa.abstraction.ActivationFailureDialogManager)>
<androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>
<ch.qos.logback.classic.spi.LoggerContextListener: boolean isResetResistant()>
<android.widget.FrameLayout: int getMeasuredHeight()>
<com.google.android.gms.internal.location.zzba: com.google.android.gms.internal.location.zzba zzc(java.lang.String)>
<com.facebook.react.fabric.mounting.mountitems.UpdateLayoutMountItem: int convertLayoutDirection(int)>
<com.google.android.gms.common.api.internal.zaaz: void zan()>
<com.google.android.gms.common.util.DeviceProperties: boolean isTv(android.content.pm.PackageManager)>
<com.google.android.material.textfield.CutoutDrawable: void preDraw(android.graphics.Canvas)>
<com.google.android.gms.common.api.internal.zzd: void <init>()>
<android.widget.EditText: int getInputType()>
<com.google.android.gms.internal.measurement.zzkh: boolean zza()>
<com.google.android.gms.measurement.internal.zzkk: byte[] zzX(android.os.Parcelable)>
<com.google.android.gms.location.DetectedActivity: void <init>(int,int)>
<com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,androidx.fragment.app.Fragment,int,android.content.DialogInterface$OnCancelListener)>
<com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder: void <init>()>
<android.widget.FrameLayout: void setTranslationY(float)>
<com.facebook.react.views.view.ReactClippingViewManager: void <init>()>
<com.google.android.gms.common.internal.service.zai: void <init>(android.os.IBinder)>
<com.facebook.cache.disk.FileCache: boolean hasKeySync(com.facebook.cache.common.CacheKey)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setWaitForAccurateLocation(boolean)>
<ch.qos.logback.classic.net.SocketReceiver: java.util.concurrent.Future activateConnector(ch.qos.logback.core.net.SocketConnector)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void showErrorDialog(java.lang.String)>
<java.lang.Byte: java.lang.Byte valueOf(byte)>
<com.google.android.gms.internal.auth-api.zzav: void <init>(com.google.android.gms.internal.auth-api.zzao,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.measurement.zzdn: void <init>(java.lang.String,int,int)>
<com.facebook.react.views.text.ReactTextShadowNode: void initMeasureFunction()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char getNextChar(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$FragmentC build()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.PartialDiskCacheProducer newPartialDiskCacheProducer(com.facebook.imagepipeline.producers.Producer)>
<android.widget.ScrollView: int getPaddingTop()>
<com.google.android.gms.auth.api.identity.zzf: java.lang.String zzh()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<kotlinx.coroutines.Deferred: java.lang.Object await(kotlin.coroutines.Continuation)>
<ch.qos.logback.core.net.SocketConnector: java.net.Socket call()>
<com.google.android.gms.internal.maps.zzy: void <init>(android.os.IBinder)>
<bolts.BoltsExecutors$ImmediateExecutor: void <init>(bolts.BoltsExecutors$1)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>
<android.view.View: android.content.res.Resources getResources()>
<com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void <init>(com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient$zzd: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.payment.ViewPaymentFragment injectViewPaymentFragment2(com.microsoft.brooklyn.ui.payment.ViewPaymentFragment)>
<com.microsoft.authenticator.backup.abstraction.AutoBackupManager: void enqueueDefaultPeriodicWork()>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: android.os.Bundle getMetadata(android.content.Context)>
<ch.qos.logback.core.pattern.PatternLayoutBase: void <init>()>
<com.microsoft.authenticator.core.storage.BaseStorage: void <init>(android.content.Context)>
<com.facebook.react.views.imagehelper.ImageSource: void <init>(android.content.Context,java.lang.String)>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: ch.qos.logback.core.Context access$100(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter)>
<com.google.android.material.navigation.NavigationBarItemView: void setTextAppearanceInactive(int)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setManufacturer(java.lang.String)>
<ch.qos.logback.classic.jul.JULHelper: java.util.logging.Level asJULLevel(ch.qos.logback.classic.Level)>
<com.google.android.gms.internal.measurement.zzdj: void zzaB(com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.material.chip.ChipDrawable: void setCheckable(boolean)>
<com.google.android.gms.internal.measurement.zzdj: void zzaC(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<ch.qos.logback.core.pattern.PatternLayoutBase: java.util.Map getInstanceConverterMap()>
<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter$getView$$inlined$apply$lambda$1: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter,int,android.view.ViewGroup,android.view.View)>
<com.google.android.gms.internal.measurement.zzcf: int zzb()>
<com.microsoft.onlineid.OnlineIdConfiguration: com.microsoft.onlineid.OnlineIdConfiguration setSkipLastUsedProof(boolean)>
<com.google.android.material.snackbar.SnackbarContentLayout: void updateActionTextColorAlphaIfNeeded(float)>
<com.azure.authenticator.storage.database.migration.Migration12To13$migrateToVersion13$queryLambda$1: void invoke(android.database.Cursor)>
<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>
<com.facebook.shimmer.Shimmer$ColorHighlightBuilder: com.facebook.shimmer.Shimmer$ColorHighlightBuilder getThis()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyCancel$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback)>
<com.google.android.material.color.MaterialColors: int layer(android.view.View,int,int,float)>
<com.azure.authenticator.storage.database.AccountTranslator: java.util.List extractAccountListGeneric$app_productionRelease(java.util.List)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzZ()>
<com.google.android.gms.maps.internal.zza: byte zza(java.lang.Boolean)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setMinimumValue(android.view.View,double)>
<com.facebook.soloader.NativeLoaderToSoLoaderDelegate: void <init>()>
<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isMeasureDefined()>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllMsaAccounts()>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker initialCapacity(int)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean close()>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$100(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getFingerprint()>
<ch.qos.logback.classic.spi.LoggerContextVO: void <init>(ch.qos.logback.classic.LoggerContext)>
<com.google.android.gms.internal.maps.zzw: boolean isVisible()>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: void <init>(android.content.Context,com.azure.authenticator.accounts.GenericAccount,com.azure.authenticator.profile.ProfileImageTaskCallback)>
<com.facebook.soloader.UnpackingSoSource: java.io.File getSoStorePath(android.content.Context,java.lang.String)>
<com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment: android.widget.Button access$getSendButton$p(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>
<com.adjust.sdk.Util: int hashEnum(java.lang.Enum)>
<androidx.room.RoomOpenHelper$Delegate: void <init>(int)>
<ch.qos.logback.classic.spi.LoggingEventVO: void <init>()>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBooleanArray(android.os.Parcel,int,boolean[],boolean)>
<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeAnchor()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver_GeneratedInjector: void injectMsaNotificationActionBroadcastReceiver(com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver)>
<com.google.android.gms.tasks.zzm: void <init>(com.google.android.gms.tasks.zzn,com.google.android.gms.tasks.Task)>
<com.airbnb.lottie.model.layer.BaseLayer: void recordRenderTime(float)>
<com.facebook.imagepipeline.memory.LruBucketsPoolBackend: java.lang.Object get(int)>
<com.google.android.gms.internal.maps.zzq: java.lang.String getShortName()>
<com.google.android.gms.maps.model.MarkerOptions: java.lang.String getSnippet()>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: java.lang.Object getEncryptionKeyInteractively(androidx.appcompat.app.AppCompatActivity,int,java.lang.String,java.lang.String,kotlin.coroutines.Continuation)>
<com.adjust.sdk.ActivityHandler: void access$2600(com.adjust.sdk.ActivityHandler)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.azure.authenticator.BootReceiver: void <init>()>
<com.google.android.gms.internal.safetynet.zzt: void <init>(com.google.android.gms.internal.safetynet.zzk$zzc)>
<com.adjust.sdk.ActivityHandler$InternalState: boolean itHasToUpdatePackages()>
<com.google.android.gms.internal.measurement.zzht: void <init>(int[],int)>
<android.animation.Animator$AnimatorListener: void onAnimationStart(android.animation.Animator,boolean)>
<com.google.android.gms.common.api.internal.zabi: void <init>(com.google.android.gms.common.api.internal.zabl,int)>
<com.google.android.gms.tasks.zzp: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation,com.google.android.gms.tasks.zzw)>
<com.adjust.sdk.DeviceInfo: java.lang.String getDeviceName()>
<com.google.android.gms.common.images.ImageManager$OnImageLoadedListener: void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable,boolean)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment)>
<com.facebook.react.views.picker.ReactPickerAdapter: void setBackgroundColor(java.lang.Integer)>
<android.text.Layout: int getLineEnd(int)>
<com.adjust.sdk.SharedPreferencesManager: java.lang.String getDeeplinkUrl()>
<com.azure.authenticator.jwe.JweEncryptionException: void <init>(com.azure.authenticator.jwe.JweEncryptionException$JweEncryptionError)>
<ch.qos.logback.core.joran.spi.InterpretationContext: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.util.List removeIncludeEvents(java.util.List)>
<com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzz zzas()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<org.json.JSONObject: boolean has(java.lang.String)>
<com.google.android.gms.auth.zzd: java.lang.Object zza(java.lang.Object)>
<com.facebook.react.uimanager.UIViewOperationQueue$1: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,java.util.ArrayList,java.util.ArrayDeque,java.util.ArrayList,long,long,long,long)>
<com.google.android.gms.location.LocationRequest: long getMaxWaitTime()>
<ch.qos.logback.core.util.CharSequenceState: void <init>(char)>
<com.azure.authenticator.common.HttpCacheHelper: void initializeCache(android.content.Context)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean zad(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.gms.measurement.internal.zzdc: void <init>()>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$2: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver)>
<android.widget.LinearLayout: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)>
<com.google.android.material.chip.ChipDrawable: com.google.android.material.animation.MotionSpec getShowMotionSpec()>
<com.google.android.material.tabs.TabLayout$TabView: void inflateAndAddDefaultTextView()>
<ch.qos.logback.core.subst.NodeToStringTransformer: java.lang.String substituteVariable(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer)>
<ch.qos.logback.core.net.SyslogAppenderBase: void start()>
<com.microsoft.did.feature.cardinfo.presentationlogic.detailedreceipts.CardHistoryDetailViewModel: void <init>(com.microsoft.did.businesslogic.ReceiptUseCase,com.microsoft.did.businesslogic.CardUseCase)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.gms.internal.auth.zzap: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidthPercent(float)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>
<com.facebook.yoga.YogaNode: void setFlexBasisPercent(float)>
<com.azure.authenticator.authentication.msa.ui.ActivityState: void <init>(android.os.Bundle)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$002(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)>
<com.azure.authenticator.databinding.AccountListRowDefaultModeBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView,android.widget.ImageButton,android.widget.TextView,android.widget.TextView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView,android.widget.TextSwitcher,android.widget.ImageView,android.widget.ProgressBar,android.widget.TextView,androidx.constraintlayout.helper.widget.Flow)>
<com.google.android.gms.common.internal.zzad: com.google.android.gms.common.internal.zzae zzb(android.os.IBinder)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getInternalID()>
<com.facebook.react.common.MapBuilder$Builder: void <init>()>
<android.widget.ListView: boolean performItemClick(android.view.View,int,long)>
<com.microsoft.authenticator.mfasdk.telemetry.MfaSdkTelemetryManager: com.microsoft.authenticator.mfasdk.telemetry.MfaSdkTelemetryManager setCallback(com.microsoft.authenticator.mfasdk.telemetry.businessLogic.MfaTelemetryCallback)>
<com.google.android.material.internal.CollapsingTextHelper$1: void <init>(com.google.android.material.internal.CollapsingTextHelper)>
<com.evernote.android.job.JobRequest: boolean requiresBatteryNotLow()>
<com.facebook.react.ReactInstanceManager: com.facebook.react.ReactInstanceManagerBuilder builder()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion: void onSignOutError(com.microsoft.onlineid.exception.AuthenticationException)>
<com.facebook.react.animated.AnimationDriver: void resetConfig(com.facebook.react.bridge.ReadableMap)>
<com.airbnb.lottie.model.content.GradientStroke: float getMiterLimit()>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment: void <init>()>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig: void <init>(com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder,com.google.android.gms.auth.api.credentials.zzd)>
<com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)>
<com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)>
<com.google.android.gms.common.internal.zzc: void zzg()>
<com.google.android.gms.measurement.internal.zzg: long zzp()>
<com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener: boolean onNavigationItemSelected(android.view.MenuItem)>
<android.view.View: int getPaddingBottom()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>
<com.facebook.yoga.YogaUnit: void <init>(java.lang.String,int,int)>
<com.google.android.gms.measurement.internal.zzjc: android.util.Pair zzc(java.lang.String,com.google.android.gms.measurement.internal.zzaf)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationManager brooklynIntroNotificationManager()>
<com.adjust.sdk.PackageHandler: void addI(com.adjust.sdk.ActivityPackage)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment: java.lang.String getCallerFragmentInfo()>
<com.adjust.sdk.ActivityHandler: boolean isToUpdatePackagesI()>
<com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)>
<com.airbnb.lottie.parser.JsonUtils: float valueFromObject(com.airbnb.lottie.parser.moshi.JsonReader)>
<com.microsoft.authenticator.backup.entities.DeleteBackupResult$Error: com.microsoft.authenticator.backup.entities.BackupRestoreError getError()>
<com.fasterxml.jackson.core.base.ParserMinimalBase: java.lang.String _getCharDesc(int)>
<com.facebook.imagepipeline.memory.PoolConfig: java.lang.String getBitmapPoolType()>
<com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: void <init>(java.util.List)>
<com.airbnb.lottie.model.layer.BaseLayer: void applyIntersectMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean setResolvedLayoutDirection(int)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.adjust.sdk.ActivityHandler: boolean updateActivityStateI(long)>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity: void _initHiltInternal()>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllAadMfaAccounts()>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>
<javax.net.ssl.SSLSocket: boolean getWantClientAuth()>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>
<com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme: java.lang.String getScheme()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setDropoff(float)>
<com.google.android.gms.measurement.internal.zzki: void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.Object)>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidChar(int)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: float getLinearCurrentKeyframeProgress()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue build()>
<com.google.android.gms.location.SleepSegmentEvent: boolean hasEvents(android.content.Intent)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)>
<com.google.android.material.tabs.TabLayout$TabView: boolean hasBadgeDrawable()>
<com.facebook.react.modules.core.ReactChoreographer: boolean access$402(com.facebook.react.modules.core.ReactChoreographer,boolean)>
<com.adjust.sdk.Reflection: java.lang.Object createDefaultInstance(java.lang.Class)>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<com.microsoft.authenticator.authentication.aad.businessLogic.TokenParseUseCase: void <init>()>
<com.facebook.react.views.text.TextAttributes: void setLetterSpacing(float)>
<com.facebook.drawee.view.DraweeHolder: void registerWithContext(android.content.Context)>
<android.widget.LinearLayout: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>
<com.google.android.gms.internal.measurement.zzbt: com.google.android.gms.internal.measurement.zzcf zzb(int)>
<com.google.android.gms.tasks.Task: boolean isSuccessful()>
<com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength[] $values()>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getBitmapPoolParams()>
<com.google.android.gms.location.ActivityTransitionRequest: com.google.android.gms.location.ActivityTransitionRequest zza(java.lang.String)>
<com.airbnb.lottie.value.ScaleXY: float getScaleX()>
<com.facebook.react.modules.network.ForwardingCookieHandler: void runInBackground(java.lang.Runnable)>
<com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding)>
<com.google.android.gms.maps.model.Marker: void <init>(com.google.android.gms.internal.maps.zzt)>
<com.azure.authenticator.accounts.AadAccount: void setActivatedDeviceToken(java.lang.String)>
<com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest$NetworkType access$1300(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.material.datepicker.UtcDates: com.google.android.material.datepicker.TimeSource getTimeSource()>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment_MembersInjector: void injectScanUnknownQrCodeManager(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment,com.microsoft.authenticator.registration.'unknown'.abstraction.ScanUnknownQrCodeManager)>
<kotlin.jvm.internal.Lambda: void <init>(int)>
<com.google.android.material.appbar.AppBarLayout: com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.HorizontalScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<com.evernote.android.job.JobRequest$Builder: boolean access$1800(com.evernote.android.job.JobRequest$Builder)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity: android.content.Intent getIntent()>
<com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.facebook.react.animated.NativeAnimatedModule)>
<java.util.Arrays: char[] copyOf(char[],int)>
<com.google.android.gms.internal.measurement.zzjf: void <init>()>
<android.graphics.Rect: void inset(int,int)>
<com.google.android.gms.measurement.internal.zzft: void <init>(com.google.android.gms.measurement.internal.zzgd,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,float,float)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$restoreBackupAsync$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,com.microsoft.onlineid.UserKey,com.microsoft.authenticator.backup.entities.CloudBackup,java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.facebook.drawee.controller.AbstractDraweeController: void logMessageAndFailure(java.lang.String,java.lang.Throwable)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getPrimaryButtonLabel()>
<android.os.Handler: void removeMessages(int)>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: boolean hasPendingEventsFor(com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$1)>
<com.facebook.react.bridge.ReadableNativeArray: int size()>
<com.airbnb.lottie.model.layer.CompositionLayer: void setOutlineMasksAndMattes(boolean)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: java.lang.String getContentMessage()>
<java.lang.String: java.lang.String toUpperCase()>
<com.google.android.gms.internal.firebase_messaging.zzi: void <init>()>
<com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)>
<com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode forId(int)>
<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void closeSafely(com.facebook.datasource.DataSource)>
<com.azure.authenticator.accounts.RestoreCapability: void removeCapability(com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum)>
<com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler: okhttp3.RequestBody toRequestBody(com.facebook.react.bridge.ReadableMap,java.lang.String)>
<com.facebook.react.views.text.TextAttributeProps: int getTextAlignment(com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.gms.internal.measurement.zzne: com.google.android.gms.internal.measurement.zznf zzc()>
<com.google.android.gms.measurement.internal.zzhh: void <init>(com.google.android.gms.measurement.internal.zzhn,java.lang.Boolean)>
<androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()>
<com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: void <init>(com.facebook.react.devsupport.DoubleTapReloadRecognizer)>
<java.util.Arrays: java.lang.String toString(byte[])>
<android.graphics.Paint: void set(android.graphics.Paint)>
<android.view.View: void setId(int)>
<android.graphics.Rect: boolean equals(java.lang.Object)>
<com.microsoft.brooklyn.config.BrooklynConfig: void checkBuildFlavorAndSetupBrooklynModule()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: long adjustedExponentialBackoff(int,long)>
<com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.Producer access$900(com.facebook.imagepipeline.producers.MultiplexProducer)>
<com.adjust.sdk.InstallReferrer: java.lang.Class getInstallReferrerStateListenerClass()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyComplete$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()>
<com.fasterxml.jackson.core.io.IOContext: void releaseReadIOBuffer(byte[])>
<com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager: java.lang.Object runBrooklynEnterpriseControls(kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzmm: boolean zzb()>
<com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: boolean isReverse()>
<com.facebook.react.common.ClearableSynchronizedPool: void <init>(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.app.Service)>
<java.io.BufferedReader: void reset()>
<com.google.android.material.shape.ShapePath: void setStartX(float)>
<com.facebook.react.animated.NativeAnimatedModule$2: void <init>(com.facebook.react.animated.NativeAnimatedModule,java.util.ArrayList)>
<com.facebook.datasource.DataSource: boolean hasResult()>
<com.facebook.react.modules.debug.interfaces.DeveloperSettings: boolean isAnimationFpsDebugEnabled()>
<com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.common.collect.MapMakerInternalMap$SerializationProxy: void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap)>
<com.google.android.gms.internal.base.zai: boolean zaa()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient$zza: void <init>(com.google.android.gms.ads.identifier.AdvertisingIdClient,long)>
<android.view.GestureDetector$SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>
<androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder setCallerContext(java.lang.Object)>
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>
<com.facebook.react.modules.core.JavaTimerManager: void access$1900(com.facebook.react.modules.core.JavaTimerManager)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase getWorkplaceJoinUseCase$app_productionRelease()>
<com.facebook.cache.disk.EntryEvictionComparatorSupplier: com.facebook.cache.disk.EntryEvictionComparator get()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureSelfhostControls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.airbnb.lottie.utils.Utils: void closeQuietly(java.io.Closeable)>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.ColorFilter getActualImageColorFilter()>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobProxy getJobProxy(com.evernote.android.job.JobApi)>
<com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)>
<com.facebook.common.util.UriUtil: android.net.Uri getUriForResourceId(int)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: void <init>(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.ImageRequest)>
<com.google.android.gms.internal.measurement.zzm: java.lang.String zzc(long)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onProgressUpdate(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,float)>
<android.widget.HorizontalScrollView: int getScrollY()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>
<com.google.android.datatransport.cct.CctTransportBackend: com.google.android.datatransport.cct.CctTransportBackend$HttpRequest lambda$send$0(com.google.android.datatransport.cct.CctTransportBackend$HttpRequest,com.google.android.datatransport.cct.CctTransportBackend$HttpResponse)>
<com.airbnb.lottie.LottieCompositionFactory$2: void <init>(android.content.Context,java.lang.String,java.lang.String)>
<dummyMainClass: com.evernote.android.job.JobRescheduleService dummyMainMethod_com_evernote_android_job_JobRescheduleService(android.content.Intent)>
<com.google.android.gms.common.data.DataHolder: void <init>(com.google.android.gms.common.data.DataHolder$Builder,int,android.os.Bundle)>
<com.google.common.collect.ImmutableList$SubList: void <init>(com.google.common.collect.ImmutableList,int,int)>
<com.adjust.sdk.ActivityPackage: void setInstallBeginTimeInSeconds(long)>
<com.facebook.common.logging.LoggingDelegate: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.model.GroundOverlay: void <init>(com.google.android.gms.internal.maps.zzk)>
<com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableNativeMap getDisplayMetricsNativeMap(double)>
<android.widget.DatePicker: void setMinDate(long)>
<ch.qos.logback.classic.util.ContextInitializer: void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.lang.String)>
<com.facebook.react.animated.ValueAnimatedNode: java.lang.Object getAnimatedObject()>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()>
<androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)>
<com.azure.authenticator.databinding.PasswordAutoChangeDialogLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeDialogLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.auth.api.identity.SavePasswordRequest: void <init>(com.google.android.gms.auth.api.identity.SignInPassword,java.lang.String)>
<com.microsoft.identity.client.Logger: void setExternalLogger(com.microsoft.identity.client.ILoggerCallback)>
<com.google.android.gms.measurement.internal.zzjh: com.google.android.gms.measurement.internal.zzei zzk()>
<com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaValue valueFromLong(long)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzhn zzk()>
<ch.qos.logback.core.status.OnPrintStreamStatusListenerBase: void retrospectivePrint()>
<com.airbnb.lottie.parser.moshi.JsonReader: void endArray()>
<com.google.android.gms.internal.measurement.zzjk: int zze(int,java.util.List,boolean)>
<okhttp3.Request$Builder: void <init>()>
<com.google.android.material.textfield.IndicatorViewController: int getIndicatorPadding(boolean,int,int)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setRepeatCount(int)>
<android.os.Parcel: void unmarshall(byte[],int,int)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: void setPageWithoutAnimation(com.facebook.react.views.viewpager.ReactViewPager,int)>
<com.google.android.gms.common.api.internal.zabc: void <init>(com.google.android.gms.common.api.internal.zabd,android.os.Looper)>
<com.google.android.gms.cloudmessaging.zzr: int zzb()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onResume()>
<com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory)>
<com.google.android.material.tabs.TabLayout: void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab)>
<android.view.ViewGroup: void getLocationOnScreen(int[])>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase msaAccountUseCase()>
<com.google.android.gms.measurement.internal.zzjh: boolean zzg(android.app.job.JobParameters)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: void <init>()>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: void <init>(com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.common.Feature[],boolean,int)>
<java.util.concurrent.atomic.AtomicLong: long get()>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: int getPort()>
<javax.net.ssl.SSLSocket: void setPerformancePreferences(int,int,int)>
<com.facebook.imagepipeline.memory.BasePool: java.lang.Object get(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)>
<com.azure.authenticator.logging.ExternalLogger$Companion: int getMfaSdkLogLevel(com.microsoft.authenticator.mfasdk.log.MfaSdkLogger$LogLevel)>
<com.facebook.datasource.DataSource: float getProgress()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_18_19$cp()>
<android.widget.AutoCompleteTextView: void setMeasuredDimension(int,int)>
<com.google.android.gms.maps.model.TileProvider: com.google.android.gms.maps.model.Tile getTile(int,int,int)>
<com.facebook.react.views.text.ReactTextUpdate: void <init>(android.text.Spannable,int,boolean,float,float,float,float,int,int,int)>
<com.google.android.gms.measurement.internal.zzkk: void zzL(android.os.Bundle,java.lang.String,java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.presentationlogic.ChangePasswordAutofillViewModel access$12100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<android.webkit.WebChromeClient: void <init>()>
<com.facebook.react.uimanager.UIImplementationProvider: void <init>()>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()>
<com.google.android.material.datepicker.MonthsPagerAdapter: int getPosition(com.google.android.material.datepicker.Month)>
<java.util.Arrays: void sort(char[])>
<com.microsoft.brooklyn.ui.generatepasswords.presentationlogic.ViewGeneratedPasswordViewModel: void <init>(com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper,com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository,com.microsoft.brooklyn.module.repository.UtilitySDKRepository)>
<com.google.android.gms.common.internal.service.zad: void <init>(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<java.net.HttpURLConnection: void setReadTimeout(int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.NativeKind getNativeKind()>
<com.google.android.gms.safetynet.SafetyNetApi: com.google.android.gms.common.api.PendingResult listHarmfulApps(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.internal.measurement.zzdu: void zzr(com.google.android.gms.internal.measurement.zzdu)>
<com.azure.authenticator.storage.Storage: boolean readIsNotificationSoundEnabled(android.content.Context)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$$special$$inlined$viewModels$2: void <init>(androidx.activity.ComponentActivity)>
<com.microsoft.brooklyn.ui.credential.EditCredentialViewModel_MembersInjector: void injectAutomationSpecClient(com.microsoft.brooklyn.ui.credential.EditCredentialViewModel,com.microsoft.vienna.sdk.AutomationSpecClient)>
<com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.KeyData getKeyData()>
<com.google.android.gms.measurement.internal.zzao: com.google.android.gms.measurement.internal.zzao zzb(long,long)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype forNumber(int)>
<com.azure.authenticator.databinding.GpListRowLayoutBinding: com.azure.authenticator.databinding.GpListRowLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.auth.api.signin.GoogleSignInResult: void <init>(com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.common.api.Status)>
<android.widget.EditText: void setHint(java.lang.CharSequence)>
<android.graphics.drawable.GradientDrawable: void setShape(int)>
<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.measurement.zza: void zzc(int,android.os.Parcel)>
<ch.qos.logback.core.spi.ContextAwareBase: void addStatus(ch.qos.logback.core.status.Status)>
<com.azure.authenticator.OnAppUpgradeReceiver$configureSelfhostControls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: java.util.Set getViewModelKeys()>
<com.google.android.gms.internal.measurement.zzbu: int zzg()>
<com.facebook.soloader.SoLoader: int makePrepareFlags()>
<android.widget.LinearLayout: void addView(android.view.View,int,int)>
<com.facebook.imagepipeline.core.CloseableReferenceFactory$1: void <init>(com.facebook.imagepipeline.core.CloseableReferenceFactory,com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker)>
<com.google.android.gms.internal.measurement.zzja: com.google.android.gms.internal.measurement.zzja zzk(java.lang.Class,com.google.android.gms.internal.measurement.zziu,com.google.android.gms.internal.measurement.zzjc,com.google.android.gms.internal.measurement.zzil,com.google.android.gms.internal.measurement.zzjw,com.google.android.gms.internal.measurement.zzhf,com.google.android.gms.internal.measurement.zzis)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaq(com.google.android.gms.common.server.response.FastJsonResponse$Field,byte[])>
<com.google.android.gms.measurement.internal.zzkk: void zzah(com.google.android.gms.internal.measurement.zzs,boolean)>
<com.azure.authenticator.storage.database.AccountDao_Impl$4: java.util.List call()>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient$Builder addConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdb zzd(int)>
<com.google.android.gms.common.api.internal.zacf: void <init>(com.google.android.gms.common.util.BiConsumer)>
<java.lang.Character: boolean isLetterOrDigit(int)>
<ch.qos.logback.core.util.COWArrayList: void <init>(java.lang.Object[])>
<com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase getWorkplaceJoinUseCase$app_productionRelease()>
<com.facebook.imageutils.ImageMetaData: android.graphics.ColorSpace getColorSpace()>
<com.google.android.datatransport.cct.internal.LogRequest: java.lang.Integer getLogSource()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadAddAccountViewModel access$10400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.modules.core.JavaTimerManager: void setChoreographerIdleCallback()>
<com.google.android.gms.internal.safetynet.zza: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)>
<com.adjust.sdk.UtilNetworking$ConnectionOptions: void applyConnectionOptions(javax.net.ssl.HttpsURLConnection,java.lang.String)>
<com.adjust.sdk.Reflection: java.lang.String getPlayAdId(android.content.Context)>
<com.google.android.material.stateful.ExtendableSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setRedBoxHandler(com.facebook.react.devsupport.RedBoxHandler)>
<com.facebook.imagepipeline.memory.BasePool: void free(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.address.AddEditAddressFragment injectAddEditAddressFragment2(com.microsoft.brooklyn.ui.address.AddEditAddressFragment)>
<com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$loadSections$2: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider powerLiftUploadWorker_AssistedFactoryProvider()>
<android.widget.CheckBox: boolean isClickable()>
<com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: java.lang.reflect.Method getFileDescriptorMethod()>
<com.facebook.react.views.text.TextAttributeProps: boolean getBooleanProp(java.lang.String,boolean)>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<java.io.InputStream: boolean markSupported()>
<com.microsoft.did.feature.cardlist.presentationlogic.CardListViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onPause()>
<com.google.common.collect.Maps$EntryFunction$1: java.lang.Object apply(java.util.Map$Entry)>
<android.os.Parcel: float[] createFloatArray()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: java.util.LinkedList zab(com.google.android.gms.dynamic.DeferredLifecycleHelper)>
<com.google.android.gms.internal.measurement.zzdf: long zzf()>
<java.util.List: boolean isEmpty()>
<com.google.android.gms.internal.firebase_messaging.zzf: void <init>(java.io.InputStream,long)>
<com.facebook.imagepipeline.producers.BaseConsumer: void onNewResultImpl(java.lang.Object,int)>
<com.airbnb.lottie.model.animatable.AnimatableColorValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.facebook.react.modules.intent.IntentModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.textfield.IndicatorViewController: int getHelperTextViewCurrentTextColor()>
<com.adjust.sdk.ILogger: void info(java.lang.String,java.lang.Object[])>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void startInspector()>
<com.google.android.gms.measurement.internal.zzhn: java.lang.Double zzm()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getElevation()>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>
<com.google.android.gms.internal.measurement.zzma: boolean zzb()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: void <init>()>
<com.google.android.gms.common.internal.RootTelemetryConfigManager: void zza(com.google.android.gms.common.internal.RootTelemetryConfiguration)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: void cancelAvailabilityErrorNotifications(android.content.Context)>
<com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieResult access$000(com.airbnb.lottie.LottieTask)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: boolean isStorageAtLimit()>
<ch.qos.logback.core.spi.AbstractComponentTracker: void setMaxComponents(int)>
<com.google.android.material.datepicker.MaterialDatePicker: void access$700(com.google.android.material.datepicker.MaterialDatePicker)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_15_16$1: void <init>(int,int)>
<android.webkit.CookieManager: void removeExpiredCookie()>
<com.evernote.android.job.JobExecutor$JobCallable: com.evernote.android.job.Job$Result runJob()>
<com.google.android.gms.common.zzm: void zzf()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void updateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage,com.facebook.drawee.debug.DebugControllerOverlayDrawable)>
<com.google.android.gms.internal.safetynet.zzx: java.lang.String zzb(java.lang.String)>
<org.slf4j.Logger: void warn(java.lang.String)>
<com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: long ensureTransportContext(android.database.sqlite.SQLiteDatabase,com.google.android.datatransport.runtime.TransportContext)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _skipComment()>
<ch.qos.logback.core.rolling.helper.RollingCalendar: boolean collision(long)>
<androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>
<com.google.android.material.chip.ChipDrawable: void setChipIconTint(android.content.res.ColorStateList)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.AddCredentialViewModel addCredentialViewModel()>
<com.airbnb.lottie.parser.AnimatableTextPropertiesParser: com.airbnb.lottie.model.animatable.AnimatableTextProperties parseAnimatableTextProperties(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.common.collect.Ordering: void <init>()>
<com.google.android.gms.internal.measurement.zzli: com.google.android.gms.internal.measurement.zzlj zzc()>
<com.google.android.material.shape.AbsoluteCornerSize: void <init>(float)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: java.lang.String getValue(com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole)>
<com.google.android.gms.internal.measurement.zzld: long zze()>
<ch.qos.logback.classic.spi.IThrowableProxy: ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray()>
<com.azure.authenticator.databinding.AccountListBinding: com.azure.authenticator.databinding.AccountListBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isCompassEnabled()>
<com.google.android.gms.internal.measurement.zzgz: void zzi(int,com.google.android.gms.internal.measurement.zzgs)>
<com.evernote.android.job.JobConfig: boolean isCloseDatabase()>
<com.facebook.react.views.text.CustomLetterSpacingSpan: void <init>(float)>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<com.azure.authenticator.databinding.EnableRemoteNgcUpsellBinding: com.azure.authenticator.databinding.EnableRemoteNgcUpsellBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.microsoft.authenticator.experimentation.di.ExperimentationHiltModule: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$showProgress(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,int)>
<com.google.android.gms.internal.measurement.zzkz: long zzl()>
<com.google.android.gms.measurement.internal.zzez: void <init>(com.google.android.gms.measurement.internal.zzfa,java.lang.String)>
<com.google.android.gms.internal.measurement.zzp: void getAppInstanceId(com.google.android.gms.internal.measurement.zzs)>
<com.google.android.gms.measurement.internal.zzei: char zzr(com.google.android.gms.measurement.internal.zzei,char)>
<com.google.android.material.bottomappbar.BottomAppBar: void dispatchAnimationEnd()>
<com.google.android.gms.maps.model.CircleOptions: void <init>(com.google.android.gms.maps.model.LatLng,double,float,int,int,float,boolean,boolean,java.util.List)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: void <init>(java.lang.CharSequence,android.text.TextPaint,int)>
<com.google.android.material.bottomappbar.BottomAppBar$8: void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean)>
<ch.qos.logback.classic.Logger: void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext)>
<com.google.android.gms.common.api.internal.zabl: void zam()>
<ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<com.facebook.yoga.YogaNode: void setFlexGrow(float)>
<com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()>
<com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: void <init>(int,java.lang.String)>
<com.google.android.gms.measurement.internal.zzdg: void <init>()>
<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<com.airbnb.lottie.utils.Utils: float getAnimationScale(android.content.Context)>
<ch.qos.logback.core.spi.LifeCycle: boolean isStarted()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: void initAnimators()>
<com.facebook.imagepipeline.core.CloseableReferenceFactory: void <init>(com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: boolean isBrokerIgnoringBatteryOptimizations()>
<ch.qos.logback.core.util.ExecutorServiceUtil: java.util.concurrent.ScheduledExecutorService newScheduledExecutorService()>
<com.facebook.common.references.CloseableReference: boolean isValid()>
<com.google.android.gms.internal.measurement.zzmj: boolean zzc()>
<com.facebook.react.module.annotations.ReactModule: boolean hasConstants()>
<com.google.android.gms.common.api.internal.zacv: com.google.android.gms.common.api.internal.zacv zah(com.google.android.gms.common.api.internal.zacv)>
<com.google.android.gms.maps.GoogleMap$OnCircleClickListener: void onCircleClick(com.google.android.gms.maps.model.Circle)>
<com.google.android.gms.dynamite.zzo: int zzf(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean)>
<java.util.Stack: java.lang.Object lastElement()>
<com.google.android.material.chip.ChipDrawable: float getChipEndPadding()>
<java.util.Arrays: boolean equals(char[],char[])>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetJSResponder(int,int,boolean)>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextBlend(float)>
<android.widget.FrameLayout: void setEnabled(boolean)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>
<ch.qos.logback.core.rolling.RollingPolicyBase: void start()>
<com.facebook.yoga.YogaWrap: void <init>(java.lang.String,int,int)>
<android.widget.CheckBox: android.text.TextPaint getPaint()>
<com.facebook.react.views.view.ReactViewGroup: void removeView(android.view.View)>
<okhttp3.Headers$Builder: void <init>()>
<com.facebook.react.views.switchview.ReactSwitch: void setColor(android.graphics.drawable.Drawable,java.lang.Integer)>
<com.facebook.soloader.MinElf: void read(java.nio.channels.FileChannel,java.nio.ByteBuffer,int,long)>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$LogEventEncoder: void encode(com.google.android.datatransport.cct.internal.LogEvent,com.google.firebase.encoders.ObjectEncoderContext)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieListener access$100(com.airbnb.lottie.LottieAnimationView)>
<android.net.NetworkInfo: int getType()>
<java.io.File: java.io.File[] listFiles()>
<com.google.android.material.card.MaterialCardView: float access$001(com.google.android.material.card.MaterialCardView)>
<com.facebook.react.fabric.FabricUIManager$2: void <init>(com.facebook.react.fabric.FabricUIManager)>
<com.google.android.gms.internal.measurement.zzcg: void <init>(com.google.android.gms.internal.measurement.zzbs)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setCriticalSectionEnterTimeoutMs(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onPreDraw()>
<bolts.Task$10: java.lang.Void then(bolts.Task)>
<com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()>
<java.text.DateFormat: java.lang.String format(java.lang.Object)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showDeleteBackupResultDialog(com.microsoft.authenticator.backup.entities.BackupRestoreError)>
<ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State: void setUrl(java.net.URL)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: int getTotalTimeMS()>
<com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>
<com.google.android.gms.internal.location.zzaz: void zzu(android.app.PendingIntent,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.disk.DefaultDiskStorage$FileInfo access$000(com.facebook.cache.disk.DefaultDiskStorage,java.io.File)>
<com.airbnb.lottie.LottieDrawable: float getMaxFrame()>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int zza(android.content.Context,android.content.Intent)>
<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>
<com.google.android.material.transformation.ExpandableBehavior$1: void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget)>
<com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()>
<com.google.android.gms.common.internal.service.zao: void <init>(android.content.Context,com.google.android.gms.common.internal.TelemetryLoggingOptions)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: android.os.Bundle zzu(com.google.android.gms.common.AccountPicker$AccountChooserOptions,android.os.Bundle)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity_MembersInjector: void injectAutoBackupManager(com.azure.authenticator.ui.backup.RestoreFlowActivity,com.microsoft.authenticator.backup.abstraction.AutoBackupManager)>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>
<java.util.LinkedList: void <init>(java.util.Collection)>
<com.google.android.gms.common.api.internal.zabq: void zaa()>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int)>
<com.google.android.gms.internal.measurement.zzbi: void <init>(com.google.android.gms.measurement.internal.zzgm)>
<com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List setIsPrefetchNoCallbacks(boolean)>
<javax.crypto.Mac: void init(java.security.Key)>
<com.adjust.sdk.AdjustInstance$2: void <init>(com.adjust.sdk.AdjustInstance,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.ReactStylesDiffMap: boolean hasKey(java.lang.String)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Long readLongObject(android.os.Parcel,int)>
<com.google.android.gms.common.api.PendingResult: void cancel()>
<com.google.android.gms.measurement.internal.zzib: void zzr(android.app.Activity)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void addCallbacks(android.util.Pair,com.facebook.imagepipeline.producers.ProducerContext)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel access$getWpjViewModel$p(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1: void <init>(com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$on6glJupgcnb7qj1jPVOdY5vsQk': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.google.android.material.internal.ThemeEnforcement: void checkAppCompatTheme(android.content.Context)>
<com.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)>
<android.content.Context: java.io.File getExternalCacheDir()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void handleBackupError(com.microsoft.authenticator.backup.entities.BackupRestoreError,java.lang.Exception,java.lang.String)>
<com.facebook.common.util.HashCodeUtil: int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<ch.qos.logback.core.joran.event.SaxEvent: java.lang.String getLocalName()>
<com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener: void onViewHierarchyUpdateFinished()>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment_MembersInjector: void injectActivationFailureDialogManager(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragment,com.microsoft.authenticator.registration.mfa.abstraction.ActivationFailureDialogManager)>
<com.google.android.gms.common.sqlite.CursorWrapper: void <init>(android.database.Cursor)>
<com.adjust.sdk.InstallReferrer: void <init>(android.content.Context,com.adjust.sdk.InstallReferrerReadListener)>
<com.airbnb.lottie.LottieLogger: void warning(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.internal.GmsClient: void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)>
<java.nio.ByteBuffer: int getInt()>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showRateAppDialog$rateAppDialogBuilder$1: void <init>(com.azure.authenticator.ui.dialog.StoreRatingTask,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<ch.qos.logback.classic.turbo.TurboFilter: java.lang.String getName()>
<android.util.SparseArray: void removeAt(int)>
<ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: java.lang.String getProvider()>
<com.facebook.react.modules.debug.DevSettingsModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)>
<java.util.concurrent.atomic.AtomicLong: void <init>(long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.navigation.InterModuleNavigator access$2300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setDelta(long)>
<android.widget.ImageView: void onStartTemporaryDetach()>
<com.evernote.android.job.util.JobPreconditions: long checkArgumentInRange(long,long,long,java.lang.String)>
<android.graphics.drawable.ColorDrawable: int getColor()>
<androidx.work.impl.foreground.SystemForegroundService: void onCreate()>
<com.adjust.sdk.scheduler.TimerOnce: void startIn(long)>
<com.google.android.gms.internal.measurement.zzp: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzs,long)>
<com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManager resolveViewManager(java.lang.String)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.azure.authenticator.logging.ExternalLogger$Companion: void e(java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.databinding.AccountChooserActivityBinding: android.widget.LinearLayout getRoot()>
<com.airbnb.lottie.model.layer.BaseLayer: java.lang.String getName()>
<android.view.ViewGroup: void setTranslationX(float)>
<com.evernote.android.job.JobExecutor: com.evernote.android.job.Job getJob(int)>
<com.google.android.gms.internal.maps.zzp: void <init>(android.os.IBinder)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase access$7800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.tabs.TabLayout: void configureTab(com.google.android.material.tabs.TabLayout$Tab,int)>
<com.facebook.fbreact.specs.NativeTimingSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager: void enqueuePeriodicWorker()>
<com.microsoft.did.businesslogic.CardUseCase: void <init>(com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao)>
<com.microsoft.onlineid.UserAccount: java.lang.String getCid()>
<ch.qos.logback.classic.android.SQLiteAppender: ch.qos.logback.classic.android.SQLiteLogCleaner getLogCleaner()>
<com.azure.authenticator.databinding.PaymentListRowLayoutBinding: void <init>(android.widget.RelativeLayout,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,androidx.cardview.widget.CardView)>
<com.evernote.android.job.JobStorage: void addFailedDeleteId(int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleAspectRatio(float)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int getAnchorId()>
<java.nio.ByteBuffer: byte get(int)>
<com.google.android.gms.internal.measurement.zzdf: double zzj()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzjq zzh()>
<android.view.View: int getMeasuredHeight()>
<com.microsoft.brooklyn.ui.address.AddressViewModel: void <init>(com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.common.LocalisedCountryData)>
<com.google.android.gms.measurement.internal.zzeg: void zzb(java.lang.String,java.lang.Object)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$400(com.facebook.react.views.scroll.ReactHorizontalScrollView)>
<android.graphics.Color: int red(int)>
<com.google.android.gms.internal.measurement.zzmy: boolean zzb()>
<com.azure.authenticator.ui.dialog.StoreRatingTask: boolean checkLastShownTime(java.util.Date)>
<com.google.android.gms.internal.measurement.zzja: int zzq(java.lang.Object)>
<com.google.android.gms.common.server.response.FastParser: java.lang.String zaf(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<com.google.android.gms.internal.measurement.zzcz: void zzh(com.google.android.gms.internal.measurement.zzcz,long)>
<com.google.android.gms.measurement.internal.zzib: void zzo(android.app.Activity,android.os.Bundle)>
<com.adjust.sdk.ActivityHandler$19: void <init>(com.adjust.sdk.ActivityHandler,java.lang.String)>
<javax.net.ssl.SSLSocket: java.nio.channels.SocketChannel getChannel()>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity: java.lang.Object generatedComponent()>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zza(android.graphics.Bitmap)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.facebook.imagepipeline.memory.OOMSoftReferenceBucket: void <init>(int,int,int)>
<com.google.android.gms.measurement.internal.zzaf: char zzq(java.lang.Boolean)>
<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzkh: void zzm(java.lang.Object,long,double)>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getPlaceholder()>
<com.google.android.gms.internal.measurement.zznq: boolean zzb()>
<com.google.android.gms.common.api.internal.zacv: java.lang.Object zag(com.google.android.gms.common.api.internal.zacv)>
<com.google.android.gms.measurement.internal.zzhn: java.util.List zzC(boolean)>
<com.google.android.gms.measurement.internal.zzjy: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.InlineSuggestionUseCase inlineSuggestionUseCase()>
<com.google.android.gms.measurement.internal.zzam: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.fasterxml.jackson.core.util.TextBuffer: void expand(int)>
<com.github.amlcurran.showcaseview.TextDrawer: void <init>(android.content.res.Resources,android.content.Context)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onPause()>
<com.google.android.gms.safetynet.SafeBrowsingThreat: void <init>(int)>
<com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>
<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface: void setEnabled(android.view.View,boolean)>
<com.azure.authenticator.databinding.FragmentSharedModeBinding: void <init>(android.widget.LinearLayout,android.widget.LinearLayout,androidx.appcompat.widget.Toolbar,android.widget.Button)>
<com.fasterxml.jackson.core.JsonProcessingException: com.fasterxml.jackson.core.JsonLocation getLocation()>
<com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object tryWithCursor(android.database.Cursor,com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function)>
<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity: void _initHiltInternal()>
<com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzfg zzc(java.lang.String,double)>
<com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)>
<com.google.android.gms.measurement.internal.zzin: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzgg)>
<com.google.android.gms.measurement.internal.zzg: void <init>(com.google.android.gms.measurement.internal.zzfl,java.lang.String)>
<com.azure.authenticator.accounts.AadAccount: void setUsername(java.lang.String)>
<android.widget.ImageButton: void jumpDrawablesToCurrentState()>
<com.google.android.gms.common.data.AbstractDataBuffer: void <init>(com.google.android.gms.common.data.DataHolder)>
<com.google.crypto.tink.Registry$KeyManagerContainer: com.google.crypto.tink.KeyManager getKeyManager(java.lang.Class)>
<com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>
<com.google.android.gms.common.api.internal.zaaz: void zab(com.google.android.gms.common.ConnectionResult)>
<com.google.android.material.datepicker.MaterialDatePicker: android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)>
<com.google.android.material.textfield.TextInputLayout: void updateCounter()>
<com.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<com.google.android.gms.common.api.internal.zabl: void zay(com.google.android.gms.common.api.internal.zabl)>
<com.google.android.material.textfield.IndicatorViewController: android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)>
<android.widget.EditText: void setImportantForAutofill(int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzjw: int zzg(java.lang.Object)>
<ch.qos.logback.classic.android.SQLiteAppender: java.util.Map mergePropertyMaps(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.airbnb.lottie.LottieDrawable$16: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.KeyPath,java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)>
<java.lang.Thread: java.lang.Thread currentThread()>
<com.google.android.gms.measurement.internal.zzfl: boolean zzq()>
<java.util.Set: boolean isEmpty()>
<com.google.android.datatransport.cct.CctTransportBackend: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)>
<com.google.android.material.shape.ShapeAppearanceModel: void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.microsoft.authenticator.workaccount.businesslogic.DeviceRegistrationUseCase: void removeHiddenAadMfaNgcAccountIfExists(com.azure.authenticator.accounts.GenericAccount)>
<com.facebook.react.uimanager.ReactRootViewTagGenerator: int getNextRootViewTag()>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivityResumed(android.app.Activity)>
<com.google.android.gms.cloudmessaging.zzi: void <init>(com.google.android.gms.cloudmessaging.zzf)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager access$getAadNgcPnRegistrationManager$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: void <init>(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.internal.measurement.zzkh: void zzq(byte[],long,byte)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.generatepasswords.presentationlogic.ViewGeneratedPasswordViewModel viewGeneratedPasswordViewModel()>
<com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,java.util.concurrent.Executor)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void onDestroyView()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void changeBrokerMergeState(com.azure.authenticator.ui.fragment.accounts.BrokerMergeState)>
<android.os.IInterface: android.os.IBinder asBinder()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void onCreate(android.os.Bundle)>
<bolts.BoltsExecutors: java.util.concurrent.ExecutorService background()>
<com.facebook.react.views.image.ImageLoadEvent: java.lang.String eventNameForType(int)>
<androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_Factory: com.azure.authenticator.ui.backup.RestoreFlowViewModel get()>
<com.azure.authenticator.accounts.SecretKeyBasedAccount: java.lang.String getIdentityProvider()>
<android.widget.HorizontalScrollView: void addFocusables(java.util.ArrayList,int,int)>
<com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getAccountWithId(long)>
<com.facebook.react.fabric.mounting.MountingManager: void clearJSResponder()>
<android.widget.TextView: void setBackgroundColor(int)>
<com.adjust.sdk.PackageHandler: com.adjust.sdk.ILogger access$400(com.adjust.sdk.PackageHandler)>
<com.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: void execute(java.lang.Runnable)>
<com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.proto.Keyset parseFrom(byte[],com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite)>
<androidx.appcompat.widget.TintTypedArray: int getColor(int,int)>
<com.facebook.react.modules.camera.CameraRollManager: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider addMsaAccountViewModelProvider()>
<com.airbnb.lottie.parser.PathKeyframeParser: com.airbnb.lottie.animation.keyframe.PathKeyframe parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.location.zzbj: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.evernote.android.job.util.BatteryStatus: boolean isBatteryLow()>
<com.adjust.sdk.PackageHandler: void access$200(com.adjust.sdk.PackageHandler)>
<java.lang.Thread: int getPriority()>
<android.widget.RelativeLayout: android.content.Context getContext()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setScaleY(android.view.View,float)>
<sun.misc.Unsafe: int getInt(java.lang.Object,long)>
<javax.net.ssl.SSLContext: java.lang.String getProtocol()>
<com.google.android.gms.internal.measurement.zzdb: void <init>()>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment)>
<java.util.HashMap: void <init>(java.util.Map)>
<com.google.android.gms.common.api.internal.zacb: void <init>(com.google.android.gms.common.api.internal.zai,int,com.google.android.gms.common.api.GoogleApi)>
<com.microsoft.brooklyn.ui.signin.SignInFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.signin.SignInFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegmentASCII2(char[],int,int)>
<ch.qos.logback.core.pattern.FormattingConverter: ch.qos.logback.core.pattern.FormatInfo getFormattingInfo()>
<com.adjust.sdk.AttributionHandler: void sendAttributionRequest()>
<com.google.android.datatransport.Event: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzP()>
<com.evernote.android.job.JobRequest: android.os.Bundle getTransientExtras()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.util.VerifiableCredentialTelemetryClient access$4800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.measurement.zzdf: void zzz()>
<com.airbnb.lottie.animation.content.BaseStrokeContent: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<ch.qos.logback.core.joran.spi.Interpreter: java.lang.String getTagName(java.lang.String,java.lang.String)>
<com.facebook.react.modules.i18nmanager.I18nUtil: void <init>()>
<androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>
<com.facebook.fbreact.specs.NativeSourceCodeSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)>
<androidx.lifecycle.Transformations: androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromRawRes(android.content.Context,int)>
<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer()>
<com.google.android.gms.measurement.internal.zzd: void zzf(com.google.android.gms.measurement.internal.zzd,long)>
<com.adjust.sdk.ActivityHandler: void stopBackgroundTimerI()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: com.facebook.common.references.CloseableReference referenceToClose(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections: com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment actionSettingsFragmentToSignInFragment()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void access$refreshVisibility(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,java.util.List)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean access$2200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.airbnb.lottie.model.animatable.AnimatableValue: boolean isStatic()>
<com.google.android.material.datepicker.TimeSource: java.util.Calendar now(java.util.TimeZone)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$5: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)>
<com.google.common.base.Java8Usage: void lambda$performCheck$0()>
<com.azure.authenticator.storage.database.migration.Migration24To25: void <init>()>
<com.microsoft.authenticator.commonuilibrary.util.ActivityUtils: void setAccessibilityFocusOnHomeButton$default(androidx.appcompat.app.AppCompatActivity,android.view.ViewGroup,boolean,int,java.lang.Object)>
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
<android.widget.Spinner: void measure(int,int)>
<com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<com.facebook.react.views.art.ARTSurfaceView: void <init>(android.content.Context)>
<com.google.android.gms.internal.maps.zzb: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: com.facebook.imagepipeline.image.EncodedImage getResult()>
<com.google.android.gms.internal.measurement.zzha: void zzC(int,java.util.List,boolean)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback: void <init>(androidx.appcompat.app.AppCompatActivity,com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion,int,com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry,com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase)>
<com.google.android.material.timepicker.RadialViewGroup: android.graphics.drawable.Drawable createBackground()>
<com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer getExistingMultiplexer(java.lang.Object)>
<com.facebook.react.animated.PropsAnimatedNode: void restoreDefaultValues()>
<com.google.android.gms.common.api.Api$BaseClientBuilder: java.util.List getImpliedScopes(java.lang.Object)>
<java.io.DataOutputStream: void writeBytes(java.lang.String)>
<com.google.android.material.snackbar.SnackbarManager: void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int)>
<com.evernote.android.job.JobApi: boolean isServiceEnabled(android.content.Context,java.lang.Class)>
<com.google.android.material.bottomsheet.BottomSheetDialog$1: void <init>(com.google.android.material.bottomsheet.BottomSheetDialog)>
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$2: void <init>(kotlin.jvm.functions.Function0)>
<ch.qos.logback.core.net.SocketConnectorBase: void <init>(java.net.InetAddress,int,ch.qos.logback.core.net.SocketConnectorBase$DelayStrategy)>
<com.fasterxml.jackson.core.util.TextBuffer: void unshare(int)>
<ch.qos.logback.core.joran.spi.EventPlayer: void play(java.util.List)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.material.resources.CancelableFontCallback: void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.main.BackupDetailsFragment)>
<android.text.TextPaint: void <init>()>
<com.google.common.base.Joiner: void <init>(java.lang.String)>
<com.google.android.material.chip.ChipDrawable: void setCheckedIconTint(android.content.res.ColorStateList)>
<com.google.android.gms.internal.measurement.zzji: void zzh(java.lang.Object,byte[],int,int,com.google.android.gms.internal.measurement.zzge)>
<com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: void postNotification(int,androidx.core.app.NotificationCompat$Builder)>
<com.google.android.gms.common.api.Api$Client: boolean requiresSignIn()>
<com.google.android.gms.internal.measurement.zzdq: void zzs(com.google.android.gms.internal.measurement.zzdq,java.lang.Iterable)>
<com.google.android.gms.internal.measurement.zzjs: java.lang.Iterable zze()>
<com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener: void onInfoWindowClick(com.google.android.gms.maps.model.Marker)>
<com.google.android.gms.measurement.internal.zzhb: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String,boolean)>
<java.lang.UnsatisfiedLinkError: void printStackTrace()>
<android.graphics.RectF: void <init>(android.graphics.RectF)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showRateAppDialog$rateAppDialogBuilder$2: void <init>(com.azure.authenticator.ui.dialog.StoreRatingTask,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<android.widget.LinearLayout: void addView(android.view.View,int)>
<com.google.android.material.floatingactionbutton.BorderDrawable: void setBorderWidth(float)>
<com.google.android.material.bottomappbar.BottomAppBar: void maybeAnimateMenuView(int,boolean)>
<com.google.android.gms.internal.measurement.zzae: void <init>(com.google.android.gms.internal.measurement.zzbr,android.app.Activity,java.lang.String,java.lang.String)>
<com.google.android.gms.measurement.internal.zzej: void <init>(java.lang.String,java.lang.String,android.os.Bundle,long)>
<androidx.core.view.ViewCompat: int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>
<com.google.android.material.behavior.SwipeDismissBehavior: void setStartAlphaSwipeDistance(float)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<com.google.android.gms.measurement.internal.zzkf: boolean zzm(java.util.List,int)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void startUrlWithCookies(java.util.Set)>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>
<com.microsoft.brooklyn.module.common.dropdown.businesslogic.UsernameDropdownUseCase: void <init>(com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.internal.location.zzaz: void zzs(android.app.PendingIntent,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)>
<ch.qos.logback.core.helpers.CyclicBuffer: void <init>(int)>
<com.google.common.base.Splitter$1: com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence)>
<com.adjust.sdk.DeviceInfo: java.lang.String getOsVersion()>
<com.facebook.imagepipeline.systrace.FrescoSystrace: void beginSection(java.lang.String)>
<com.google.common.collect.MapMakerInternalMap: java.lang.Object remove(java.lang.Object)>
<com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.internal.measurement.zzjk: void zzY(int,java.util.List,com.google.android.gms.internal.measurement.zzha)>
<com.google.common.base.CharMatcher: java.lang.String access$100(char)>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void setProgress(double)>
<com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: boolean hasTransformableExifOrientation(com.facebook.imagepipeline.image.CloseableStaticBitmap)>
<java.util.Map: void putAll(java.util.Map)>
<ch.qos.logback.core.rolling.helper.FileFilterUtil: java.lang.String afterLastSlash(java.lang.String)>
<com.azure.authenticator.databinding.EmptyHistoryLayoutBinding: com.azure.authenticator.databinding.EmptyHistoryLayoutBinding bind(android.view.View)>
<com.facebook.react.ReactActivityDelegate: com.facebook.react.ReactRootView createRootView()>
<com.google.android.material.textfield.MaterialAutoCompleteTextView$1: void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView)>
<com.google.android.gms.maps.model.Polygon: void <init>(com.google.android.gms.internal.maps.zzw)>
<com.evernote.android.job.v14.JobProxy14: long getTriggerAtMillis(com.evernote.android.job.JobRequest)>
<com.google.android.gms.measurement.internal.zziz: void <init>(com.google.android.gms.measurement.internal.zzja)>
<com.google.common.base.CaseFormat: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String,com.google.common.base.CaseFormat$1)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzk(java.lang.Object,java.lang.Object)>
<com.airbnb.lottie.utils.LottieValueAnimator: void postFrameCallback()>
<com.google.android.gms.measurement.internal.zzkk: void zzI(android.os.Bundle,int,java.lang.String,java.lang.String,java.lang.Object)>
<com.google.android.gms.maps.MapFragment$zzb: void <init>(android.app.Fragment)>
<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.widget.FrameLayout: void dispatchDraw(android.graphics.Canvas)>
<com.facebook.common.file.FileTreeVisitor: void preVisitDirectory(java.io.File)>
<com.facebook.react.jstasks.HeadlessJsTaskContext$1: void <init>(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int)>
<com.google.android.gms.internal.measurement.zzig: void <init>(java.util.ArrayList)>
<com.google.android.gms.location.GeofencingRequest: void <init>(java.util.List,int,java.lang.String,java.lang.String)>
<androidx.sqlite.db.SupportSQLiteQueryBuilder: androidx.sqlite.db.SupportSQLiteQuery create()>
<com.google.android.gms.auth.api.signin.GoogleSignIn: com.google.android.gms.common.api.Scope[] zze(java.util.List)>
<com.google.android.gms.common.api.internal.zaaz: java.lang.String zag(int)>
<com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void showToastAndEnableRegisterButton(java.lang.String,boolean)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void initialize()>
<com.google.android.gms.internal.measurement.zziv: boolean zzb(java.lang.Class)>
<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String)>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference clone()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager: java.util.List getAllAccountsForUserDaRefresh()>
<java.lang.StringBuffer: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)>
<android.graphics.drawable.Drawable: void setAlpha(int)>
<com.facebook.react.views.textinput.ReactEditText: boolean isMultiline()>
<com.google.android.gms.maps.GoogleMap$OnInfoWindowCloseListener: void onInfoWindowClose(com.google.android.gms.maps.model.Marker)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int access$1100(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: int getRotationAngle(java.lang.String)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onEnterAmbient(android.os.Bundle)>
<com.facebook.react.views.text.TextAttributeProps: float getFloatProp(java.lang.String,float)>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onExitAmbient()>
<com.google.android.gms.internal.measurement.zzkb: void <init>(com.google.android.gms.internal.measurement.zzih)>
<com.microsoft.brooklyn.ui.credential.EditCredentialViewModel_Factory: com.microsoft.brooklyn.ui.credential.EditCredentialViewModel newInstance(com.microsoft.brooklyn.module.repository.CredentialsRepository)>
<com.google.android.datatransport.Encoding: void <init>(java.lang.String)>
<okio.Buffer: java.lang.String readUtf8(long)>
<com.evernote.android.job.Job$Params: int hashCode()>
<com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback: void onSnapshotReady(android.graphics.Bitmap)>
<android.app.Activity: void setResult(int)>
<com.airbnb.lottie.utils.LogcatLogger: void <init>()>
<com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: void <init>(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType,com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype)>
<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ReactChoreographer getInstance()>
<com.evernote.android.job.JobProxy$Common: long getStartMs(com.evernote.android.job.JobRequest)>
<com.facebook.drawee.controller.AbstractDraweeController: void initialize(java.lang.String,java.lang.Object)>
<com.facebook.drawee.controller.AbstractDraweeController: boolean shouldRetryOnTap()>
<com.google.android.gms.common.api.Api$Client: boolean isConnecting()>
<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcasePosition(int,int)>
<com.adjust.sdk.Util: java.lang.String getMnc(android.content.Context)>
<ch.qos.logback.classic.spi.LoggerContextVO: long getBirthTime()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String getFamilyName()>
<com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface: void setScrollEnabled(android.view.View,boolean)>
<com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence)>
<com.facebook.imagepipeline.producers.BaseConsumer: void onFailureImpl(java.lang.Throwable)>
<com.google.android.material.bottomappbar.BottomAppBar: void access$3200(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.google.android.gms.internal.maps.zzk: void zze(com.google.android.gms.dynamic.IObjectWrapper)>
<java.util.regex.Matcher: boolean lookingAt()>
<com.google.android.gms.measurement.internal.zzgi: java.lang.String zzb(java.lang.String)>
<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>
<ch.qos.logback.classic.Logger: int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.common.api.internal.zabd: boolean zai()>
<com.microsoft.authenticator.commonuilibrary.dialogqueue.IntentTask: void <init>(android.content.Context,android.content.Intent,com.microsoft.authenticator.commonuilibrary.dialogqueue.ITaskIdFromBundle)>
<ch.qos.logback.core.pattern.parser.Parser: void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String)>
<com.google.android.gms.internal.location.zzav: void zze(com.google.android.gms.internal.location.zzba,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzai)>
<android.widget.CompoundButton: void setEnabled(boolean)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$1: void <init>(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker,kotlin.coroutines.Continuation)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: void access$700(com.azure.authenticator.storage.database.AppDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)>
<com.azure.authenticator.databinding.CredentialListRowLayoutBinding: com.azure.authenticator.databinding.CredentialListRowLayoutBinding bind(android.view.View)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.decoder.ImageDecoder getCustomImageDecoder()>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate: boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate)>
<android.widget.LinearLayout: void getFocusedRect(android.graphics.Rect)>
<com.google.android.gms.maps.internal.zzbz: java.lang.Object zza(java.lang.Class)>
<com.google.android.gms.common.api.internal.BackgroundDetector: void zza(boolean)>
<com.google.android.gms.internal.measurement.zzir: void putAll(java.util.Map)>
<com.google.crypto.tink.PrivateKeyManagerImpl: void <init>(com.google.crypto.tink.PrivateKeyTypeManager,com.google.crypto.tink.KeyTypeManager,java.lang.Class)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDismissPopupMenu()>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)>
<com.facebook.common.internal.ImmutableMap: com.facebook.common.internal.ImmutableMap copyOf(java.util.Map)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void hideEntropyLayout()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment$onCreateView$4: void <init>(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment,android.widget.Button)>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getZIndex()>
<com.facebook.cache.disk.DiskCacheConfig: com.facebook.common.disk.DiskTrimmableRegistry getDiskTrimmableRegistry()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: java.lang.Object deleteBackup(java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzbr: com.google.android.gms.internal.measurement.zzp zzR(com.google.android.gms.internal.measurement.zzbr)>
<com.airbnb.lottie.parser.FloatParser: java.lang.Float parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void reportSignOut()>
<com.facebook.react.uimanager.RootView: void onChildStartedNativeGesture(android.view.MotionEvent)>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: void zza(android.content.Intent,android.content.Context,boolean,android.content.BroadcastReceiver$PendingResult)>
<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void <init>()>
<android.widget.EditText: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.server.response.FastParser: java.lang.String zaj(java.io.BufferedReader)>
<com.google.android.gms.common.server.response.FastJsonResponse: void setDecodedBytesInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,byte[])>
<android.widget.LinearLayout: int getWidth()>
<com.adjust.sdk.PackageBuilder: void addDateInSeconds(java.util.Map,java.lang.String,long)>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)>
<com.microsoft.authenticator.authentication.msa.entities.MsaOperationResult$Failure: com.microsoft.onlineid.sts.StsErrorCode getStsErrorCode()>
<com.google.android.material.internal.CollapsingTextHelper: void setExpandedBounds(android.graphics.Rect)>
<com.facebook.drawee.drawable.ScalingUtils: com.facebook.drawee.drawable.ScaleTypeDrawable getActiveScaleTypeDrawable(android.graphics.drawable.Drawable)>
<com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker: void <init>(android.content.Context)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void skipUnquotedValue()>
<androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)>
<com.microsoft.ngc.aad.NgcSession: java.util.Date getClientExpirationTime(android.content.Context,com.microsoft.authenticator.core.protocol.CloudEnvironment)>
<com.google.android.gms.internal.measurement.zzhf: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.cache.disk.DiskCacheConfig access$1400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: void setMsaCid(java.lang.String)>
<android.widget.CheckBox: int getPaddingTop()>
<java.lang.IllegalStateException: void <init>()>
<ch.qos.logback.core.pattern.FormatInfo: boolean isLeftTruncate()>
<com.evernote.android.job.v21.JobProxy21: android.app.job.JobInfo$Builder createBaseBuilder(com.evernote.android.job.JobRequest,boolean)>
<com.google.android.gms.internal.auth.zza: android.os.Parcel obtainAndWriteInterfaceToken()>
<com.airbnb.lottie.animation.content.ShapeContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapePath)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.common.BrooklynStorage getBrooklynStorage()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardflow.presentationlogic.CardFlowViewModel access$11700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.modules.datepicker.DismissableDatePickerDialog: java.lang.reflect.Field findField(java.lang.Class,java.lang.Class,java.lang.String)>
<com.google.android.gms.dynamic.RemoteCreator: void <init>(java.lang.String)>
<ch.qos.logback.core.net.SMTPAppenderBase: ch.qos.logback.core.pattern.PatternLayoutBase makeNewToPatternLayout(java.lang.String)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase: java.lang.String serializeToString(com.microsoft.authenticator.authentication.msa.entities.MsaSession)>
<com.google.android.material.bottomappbar.BottomAppBar$4: void <init>(com.google.android.material.bottomappbar.BottomAppBar)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow: com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow[] values()>
<com.google.android.material.bottomsheet.BottomSheetDialog: android.widget.FrameLayout ensureContainerAndBehavior()>
<java.util.AbstractList: java.lang.Object get(int)>
<java.io.ObjectInputStream$GetField: boolean get(java.lang.String,boolean)>
<com.google.android.gms.cloudmessaging.zzu: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$$special$$inlined$viewModels$1: androidx.lifecycle.ViewModelProvider$Factory invoke()>
<com.facebook.react.uimanager.ViewManager: void <init>()>
<androidx.appcompat.app.AppCompatActivity: void <init>()>
<com.google.android.gms.internal.measurement.zzby: void zzk(com.google.android.gms.internal.measurement.zzby,java.lang.String)>
<com.adjust.sdk.ActivityHandler: boolean pausedI(boolean)>
<com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)>
<com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context,int)>
<com.adjust.sdk.ActivityHandler: void access$3100(com.adjust.sdk.ActivityHandler,android.content.Intent,android.net.Uri)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: void <init>(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int,int)>
<ch.qos.logback.core.pattern.parser.TokenStream: void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_6_7()>
<android.widget.ImageButton: void refreshDrawableState()>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: void receiveCommand(com.facebook.react.views.checkbox.ReactCheckBox,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()>
<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>
<java.io.CharConversionException: void <init>(java.lang.String)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)>
<com.azure.authenticator.databinding.AddThirdPartyAccountBinding: android.widget.ScrollView getRoot()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: java.lang.String getProtocol()>
<com.adjust.sdk.AdjustInstance: void trackAdRevenue(java.lang.String,org.json.JSONObject)>
<com.google.android.material.shape.MaterialShapeDrawable: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.lang.String getAlgorithm()>
<com.google.android.gms.location.zzbx: void <init>(int,int,int,int)>
<com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>
<com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getNativeImageTranscoderFactory(int,boolean)>
<android.widget.LinearLayout$LayoutParams: void <init>(android.widget.LinearLayout$LayoutParams)>
<androidx.constraintlayout.widget.ConstraintSet: void clear(int,int)>
<java.util.Calendar: int getMaximum(int)>
<com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String)>
<com.facebook.react.views.image.ScaleTypeStartInside: void <init>()>
<com.adjust.sdk.ActivityHandler: void launchSessionResponseListenerI(com.adjust.sdk.SessionResponseData,android.os.Handler)>
<com.evernote.android.job.JobStorage: void <init>(android.content.Context)>
<com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)>
<com.google.android.gms.measurement.internal.zzd: void zze(com.google.android.gms.measurement.internal.zzd,java.lang.String,long)>
<ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State: void <init>(ch.qos.logback.classic.joran.action.ConditionalIncludeAction)>
<com.google.android.gms.maps.internal.zzv: void zza(com.google.android.gms.internal.maps.zzh)>
<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>
<com.google.android.gms.common.internal.GmsLogger: void w(java.lang.String,java.lang.String)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzaf zzx(java.lang.String)>
<com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener: void <init>(androidx.viewpager.widget.ViewPager)>
<com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context)>
<com.google.android.gms.measurement.internal.zzhn: void zzA(java.lang.String,java.lang.String,long,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzck: com.google.android.gms.internal.measurement.zzcj zzb()>
<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>
<com.google.android.gms.measurement.internal.zzz: boolean zza()>
<com.facebook.react.uimanager.UIImplementation: void setChildren(int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig getCredentialHintPickerConfig()>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: boolean ensureDatabase()>
<com.facebook.react.views.scroll.ReactScrollView$1: void <init>(com.facebook.react.views.scroll.ReactScrollView)>
<com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder: com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(android.net.Uri)>
<ch.qos.logback.core.util.InvocationGate: boolean isTooSoon(long)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate)>
<com.facebook.react.animated.InterpolationAnimatedNode: double[] fromDoubleArray(com.facebook.react.bridge.ReadableArray)>
<android.util.SparseArray: void put(int,java.lang.Object)>
<com.fasterxml.jackson.core.json.JsonGeneratorImpl: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec)>
<com.google.android.gms.common.server.response.FastParser: java.lang.String zak(java.io.BufferedReader)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean getUseDownsamplingRatioForResizing()>
<ch.qos.logback.core.rolling.helper.ArchiveRemover: void setTotalSizeCap(long)>
<com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object getFirstKey()>
<com.google.android.material.chip.ChipDrawable: void setChipSurfaceColor(android.content.res.ColorStateList)>
<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcasePosition(android.graphics.Point)>
<com.evernote.android.job.JobExecutor: void markJobRequestStarting(com.evernote.android.job.JobRequest)>
<com.facebook.react.bridge.JavaMethodWrapper: void processArguments()>
<com.adjust.sdk.ActivityHandler: void access$500(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.internal.measurement.zzkw: com.google.android.gms.internal.measurement.zzkx zzd()>
<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(int)>
<com.google.android.gms.measurement.internal.zzg: long zzU()>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: void getTicketSilently(android.content.Context,java.lang.String,com.microsoft.onlineid.SecurityScope,com.microsoft.authenticator.msa.MsaGetTicketCallback$ICompletion)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)>
<com.facebook.shimmer.Shimmer$AlphaHighlightBuilder: void <init>()>
<com.facebook.react.bridge.JavaOnlyArray: void <init>()>
<javax.net.ssl.HttpsURLConnection: void disconnect()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onCreate(android.os.Bundle)>
<com.facebook.datasource.DataSources$1: com.facebook.datasource.DataSource get()>
<com.airbnb.lottie.model.layer.Layer: java.lang.String toString(java.lang.String)>
<com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setDirection(int)>
<com.facebook.react.ReactActivityDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: void logCustomEvent$default(com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry,com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.util.Map,java.lang.Exception,int,java.lang.Object)>
<com.facebook.common.memory.Pool: java.lang.Object get(int)>
<javax.net.ssl.SSLSocket: void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void disconnect(java.lang.String)>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.producers.LocalFetchProducer$1: void disposeResult(com.facebook.imagepipeline.image.EncodedImage)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType$Companion: void <init>()>
<com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.imagepipeline.cache.CountingMemoryCache,boolean)>
<com.google.android.gms.internal.location.zzbc: void <init>(int,com.google.android.gms.internal.location.zzba,android.os.IBinder,android.app.PendingIntent,android.os.IBinder,android.os.IBinder)>
<com.google.android.gms.internal.maps.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)>
<android.app.Fragment: void onPause()>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment: androidx.preference.Preference$OnPreferenceClickListener getShowDeleteBackupConfirmDialogListener()>
<com.android.installreferrer.api.InstallReferrerClientImpl: boolean isPlayStoreCompatible()>
<com.facebook.cache.disk.DefaultDiskStorage: java.io.File getContentFileFor(java.lang.String)>
<java.util.TreeSet: void <init>()>
<com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.facebook.imagepipeline.producers.LocalFetchProducer$1: void <init>(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String)>
<java.lang.String: java.lang.String valueOf(char[],int,int)>
<com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>
<androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)>
<com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$200(com.facebook.react.devsupport.LogBoxModule)>
<com.google.android.material.internal.CollapsingTextHelper: float calculateFadeModeTextAlpha(float)>
<com.google.common.collect.Platform: java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[])>
<com.google.android.gms.measurement.internal.zzea: java.lang.String zzj()>
<com.google.android.gms.common.internal.GmsClientSupervisor: void <init>()>
<com.facebook.react.views.art.ARTShapeViewManager: void <init>()>
<com.google.android.gms.internal.auth.zzay: boolean zza(com.google.android.gms.internal.auth.zzay)>
<com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void write(byte[],int,int)>
<org.json.JSONArray: org.json.JSONArray put(int,int)>
<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config)>
<com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzby zzj()>
<com.google.android.gms.dynamic.IFragmentWrapper$Stub: void <init>()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getUri()>
<com.facebook.react.uimanager.OnLayoutEvent: void <init>()>
<com.google.android.gms.measurement.internal.zzei: java.lang.String zzp(boolean,java.lang.Object)>
<ch.qos.logback.core.pattern.Converter: void write(java.lang.StringBuilder,java.lang.Object)>
<com.microsoft.brooklyn.module.autofill.authentication.PaymentsAutofillAuthActivity_MembersInjector: void injectPaymentsRepository(com.microsoft.brooklyn.module.autofill.authentication.PaymentsAutofillAuthActivity,com.microsoft.brooklyn.module.repository.PaymentsRepository)>
<com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: android.view.ViewGroup inflateContentView(android.view.ViewGroup)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void startReRegistrationFlow(java.lang.String)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void stopAnimationsForNode(com.facebook.react.animated.AnimatedNode)>
<ch.qos.logback.core.util.CharSequenceState: void incrementOccurrences()>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper newLatLngZoom(com.google.android.gms.maps.model.LatLng,float)>
<com.google.android.gms.common.internal.zzb: void <init>(com.google.android.gms.common.internal.BaseGmsClient,android.os.Looper)>
<com.azure.authenticator.storage.database.DbAccount: void setAccountName(java.lang.String)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$700(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.material.navigation.NavigationBarMenuView: void setBadgeDrawables(android.util.SparseArray)>
<com.google.android.gms.common.util.UidVerifier: boolean isGooglePlayServicesUid(android.content.Context,int)>
<com.facebook.imagepipeline.image.EncodedImage: com.facebook.common.references.CloseableReference getByteBufferRef()>
<com.google.android.gms.internal.measurement.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void onActivityResult(int,int,android.content.Intent)>
<com.fasterxml.jackson.core.JsonEncoding: int bits()>
<com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory$InstanceHolder: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory access$000()>
<com.adjust.sdk.SharedPreferencesManager: void removeGdprForgetMe()>
<android.widget.Button: boolean isInEditMode()>
<android.text.Layout: int getLineBottom(int)>
<java.util.concurrent.CopyOnWriteArraySet: void <init>()>
<ch.qos.logback.core.status.StatusManager: void add(ch.qos.logback.core.status.Status)>
<android.app.Dialog: void dismiss()>
<com.facebook.react.views.text.ReactTextShadowNode: void markUpdated()>
<ch.qos.logback.core.FileAppender: void setAppend(boolean)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.lang.String getType()>
<com.adjust.sdk.ActivityHandler: void access$1900(com.adjust.sdk.ActivityHandler,com.adjust.sdk.SessionResponseData)>
<com.google.android.material.textview.MaterialTextView: int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider locationPermissionRequestViewModelProvider()>
<com.google.android.material.expandable.ExpandableWidgetHelper: int getExpandedComponentIdHint()>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: android.graphics.Bitmap cropAndResize(int,int,android.graphics.BitmapFactory$Options)>
<ch.qos.logback.core.net.SyslogAppenderBase: ch.qos.logback.core.Layout buildLayout()>
<com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.internal.measurement.zzfg: void zzb(android.content.Context)>
<sun.misc.Unsafe: void putDouble(java.lang.Object,long,double)>
<androidx.localbroadcastmanager.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.widget.LinearLayout: boolean willNotDraw()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void setIsOptionalTelemetryEnabled(boolean)>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordsViewModel: com.microsoft.utilitysdk.CommonLibraryController$ExportInfo getExportPasswordsResultFromApi()>
<com.facebook.react.views.picker.ReactPickerAdapter: java.lang.Integer getBackgroundColor()>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: void drawToCanvas(android.graphics.Canvas,android.graphics.Bitmap)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider registerAadMfaAccountViewModelProvider()>
<com.google.android.material.shape.ShapePath: float getCurrentShadowAngle()>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Token getCurentToken()>
<ch.qos.logback.classic.LoggerContext: void noAppenderDefinedWarning(ch.qos.logback.classic.Logger)>
<com.google.android.gms.internal.measurement.zzgb: int zzbq()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$5: boolean releasedLow(android.view.View)>
<com.evernote.android.job.JobRequest: com.evernote.android.job.JobApi getJobApi()>
<com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent build()>
<com.google.android.gms.tasks.zzc: void <init>(com.google.android.gms.tasks.zzd,com.google.android.gms.tasks.Task)>
<com.google.android.gms.internal.measurement.zzhk: void <init>(java.lang.String,int,int,int,com.google.android.gms.internal.measurement.zzid)>
<com.microsoft.brooklyn.ui.settings.StopSyncAccountFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.settings.StopSyncAccountFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.uimanager.events.EventDispatcher: void addEventToEventsToDispatch(com.facebook.react.uimanager.events.Event)>
<com.facebook.drawee.gestures.GestureDetector: void reset()>
<androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresDeviceIdle(boolean)>
<android.widget.EditText: android.text.method.TransformationMethod getTransformationMethod()>
<com.google.android.gms.internal.measurement.zzdj: void <init>()>
<android.util.LongSparseArray: void put(long,java.lang.Object)>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.util.Map,java.lang.Throwable)>
<com.google.android.gms.internal.maps.zzh: int getStrokeColor()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel access$10900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.internal.measurement.zzkn: boolean zza(byte[])>
<com.facebook.imagepipeline.common.Priority: void <init>(java.lang.String,int)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity$2: void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.google.android.gms.measurement.internal.zzaq: android.os.Bundle zzg(com.google.android.gms.measurement.internal.zzaq)>
<com.google.android.gms.maps.zzk: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: void <init>(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.measurement.zzbo: void <init>(com.google.android.gms.internal.measurement.zzbq,android.app.Activity,com.google.android.gms.internal.measurement.zzm)>
<com.facebook.drawee.controller.ControllerListener: void onRelease(java.lang.String)>
<java.util.Arrays: int hashCode(byte[])>
<com.facebook.cache.disk.DefaultDiskStorage: com.facebook.cache.common.CacheErrorLogger access$1000(com.facebook.cache.disk.DefaultDiskStorage)>
<com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel: androidx.lifecycle.LiveData getPrivacyConsentStatus()>
<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>
<androidx.core.util.Pools$SimplePool: void <init>(int)>
<com.airbnb.lottie.parser.moshi.JsonReader$Options: void <init>(java.lang.String[],okio.Options)>
<com.facebook.drawee.controller.AbstractDraweeController: void logMessageAndImage(java.lang.String,java.lang.Object)>
<com.azure.authenticator.databinding.FrxSigninFragmentBinding: android.widget.ScrollView getRoot()>
<android.view.ViewGroup: int indexOfChild(android.view.View)>
<com.google.android.datatransport.runtime.TransportImpl: void lambda$send$0(java.lang.Exception)>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)>
<androidx.fragment.app.DialogFragment: void dismiss()>
<com.microsoft.did.businesslogic.NotificationUseCase: void <init>(com.microsoft.did.datasource.db.dao.NotificationDao)>
<com.facebook.react.bridge.GuardedResultAsyncTask: void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler)>
<com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)>
<com.adjust.sdk.SdkClickHandler: void sendNextSdkClickI()>
<com.google.android.gms.measurement.internal.zzl: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzs,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.image.EncodedImage: int getHeight()>
<com.google.android.gms.measurement.internal.zzan: void <init>(com.google.android.gms.measurement.internal.zzfl,java.lang.String,java.lang.String,java.lang.String,long,long,com.google.android.gms.measurement.internal.zzaq)>
<com.google.android.gms.measurement.internal.zzfc: boolean zzh(java.lang.String,byte[],java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.ui.MainActivity injectMainActivity2(com.azure.authenticator.ui.MainActivity)>
<com.microsoft.did.feature.cardflow.viewlogic.SelfAttestedFragment_MembersInjector: void injectCardFlowRules(com.microsoft.did.feature.cardflow.viewlogic.SelfAttestedFragment,com.microsoft.did.feature.cardflow.presentationlogic.CardFlowRules)>
<com.airbnb.lottie.RenderMode: void <init>(java.lang.String,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.common.collect.Maps$EntryFunction$2: java.lang.Object apply(java.util.Map$Entry)>
<com.google.android.material.appbar.AppBarLayout: void resetPendingAction()>
<com.google.android.gms.measurement.internal.zzgd: com.google.android.gms.measurement.internal.zzkd zzw(com.google.android.gms.measurement.internal.zzgd)>
<com.facebook.react.TurboReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)>
<okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)>
<com.facebook.common.references.SharedReference: int decreaseRefCount()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void ensureContextsScheduled()>
<com.google.android.gms.common.stats.StatsEvent: void <init>()>
<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)>
<com.google.common.collect.Hashing: int smear(int)>
<com.google.android.gms.internal.common.zzo: void <init>(int)>
<com.microsoft.onlineid.AccountManager: void getAccountPickerIntent(java.lang.Iterable,boolean,boolean,android.os.Bundle)>
<com.facebook.react.animated.FrameBasedAnimationDriver: void <init>(com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()>
<com.google.android.gms.measurement.internal.zzkd: void <init>(com.google.android.gms.measurement.internal.zzke,com.google.android.gms.measurement.internal.zzfl)>
<com.facebook.drawee.drawable.RoundedDrawable: boolean getPaintFilterBitmap()>
<com.google.crypto.tink.Registry: com.google.crypto.tink.Registry$KeyManagerContainer createPrivateKeyContainerFor(com.google.crypto.tink.PrivateKeyTypeManager,com.google.crypto.tink.KeyTypeManager)>
<com.google.android.material.navigation.NavigationBarItemView: void updateViewPaddingBottom(android.view.View,int)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field forBase64(java.lang.String,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeShort(android.os.Parcel,int,short)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaFcmChangeDeviceTokenWorker_AssistedFactory mfaFcmChangeDeviceTokenWorker_AssistedFactory()>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectDeviceScreenLockManager(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockManager)>
<ch.qos.logback.core.LifeCycleManager: void register(ch.qos.logback.core.spi.LifeCycle)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: boolean access$1100(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)>
<com.google.android.gms.auth.api.identity.zzf$zzc: void <init>(com.google.android.gms.auth.api.identity.zze)>
<com.google.android.material.tabs.ElasticTabIndicatorInterpolator: float accInterp(float)>
<com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()>
<com.google.android.gms.common.api.internal.zaaa: boolean zac()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void onNextResult(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.io.Closeable,int)>
<com.airbnb.lottie.model.layer.BaseLayer: void removeAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.adjust.sdk.ActivityHandler: com.adjust.sdk.ILogger access$400(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.common.internal.zak: void <init>(android.os.Looper,com.google.android.gms.common.internal.zaj)>
<com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()>
<ch.qos.logback.classic.spi.EventArgUtil: java.lang.Object[] trimmedCopy(java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzjs: int zzc()>
<androidx.sqlite.db.SupportSQLiteProgram: void bindString(int,java.lang.String)>
<androidx.fragment.app.Fragment: boolean isDetached()>
<com.google.android.gms.internal.measurement.zzfm: boolean zza()>
<com.google.android.gms.internal.measurement.zzja: int zzC(int)>
<com.google.android.gms.auth.api.accounttransfer.DeviceMetaData: long getMinAgeOfLockScreen()>
<com.azure.authenticator.databinding.AccountListRowEditModeBinding: com.azure.authenticator.databinding.AccountListRowEditModeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.maps.GoogleMapOptions: java.lang.Float getMinZoomPreference()>
<android.graphics.PointF: void set(float,float)>
<ch.qos.logback.core.pattern.parser.SimpleKeywordNode: java.util.List getOptions()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.BufferedDiskCache getMainBufferedDiskCache()>
<com.google.android.material.textfield.IndicatorViewController: boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence)>
<ch.qos.logback.core.html.IThrowableRenderer: void render(java.lang.StringBuilder,java.lang.Object)>
<com.google.android.gms.internal.maps.zza: android.os.Parcel zza()>
<com.facebook.imagepipeline.memory.BasePool: void initialize()>
<com.facebook.react.views.scroll.ReactScrollViewManager: void <init>(com.facebook.react.views.scroll.FpsListener)>
<android.text.Editable: void clear()>
<com.facebook.imagepipeline.memory.BucketMap: void moveToFront(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)>
<com.fasterxml.jackson.core.io.UTF32Reader: boolean loadMore(int)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressSaveDatasetsUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.common.LocalisedCountryData)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzO()>
<com.google.android.gms.dynamite.DynamiteModule: int getLocalVersion(android.content.Context,java.lang.String)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount: java.lang.String getAuthority()>
<com.facebook.common.disk.NoOpDiskTrimmableRegistry: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void updateListOfAccounts(java.util.List)>
<com.google.android.gms.auth.api.accounttransfer.zzv: void <init>()>
<androidx.sqlite.db.SupportSQLiteOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void slideUp(android.view.View)>
<com.azure.authenticator.jwe.JweEncryptionManager: java.lang.String[] deserializeJwe(java.lang.String)>
<com.google.android.gms.common.server.response.FastParser: double zat(java.io.BufferedReader)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setTranslateY(android.view.View,float)>
<java.io.InputStream: void mark(int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$launchCheckWorkplaceJoinStatus$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)>
<com.google.android.material.snackbar.BaseTransientBottomBar: android.animation.ValueAnimator getScaleAnimator(float[])>
<com.google.android.datatransport.cct.internal.ClientInfo: com.google.android.datatransport.cct.internal.AndroidClientInfo getAndroidClientInfo()>
<androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>
<com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)>
<com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaClickListener: void onStreetViewPanoramaClick(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)>
<com.google.android.gms.internal.measurement.zzbt: int zza()>
<com.adjust.sdk.SessionParameters: com.adjust.sdk.SessionParameters deepCopy()>
<android.widget.LinearLayout: void onAttachedToWindow()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.backup.BackupFlowViewModel access$11400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: java.util.List access$100(com.adjust.sdk.scheduler.SingleThreadCachedScheduler)>
<com.facebook.react.ReactRootView: void unmountReactApplication()>
<com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1: int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry)>
<android.view.ViewGroup: void onVisibilityChanged(android.view.View,int)>
<com.microsoft.brooklyn.module.autofill.BrooklynAutofillService_MembersInjector: void injectSaveRequestProcessor(com.microsoft.brooklyn.module.autofill.BrooklynAutofillService,com.microsoft.brooklyn.module.autofill.request.SaveRequestProcessor)>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>
<com.adjust.sdk.AdjustFactory: void setSdkClickBackoffStrategy(com.adjust.sdk.BackoffStrategy)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: boolean isMsaNgcEntropiesSession()>
<com.google.android.material.transformation.FabTransformationBehavior: float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator)>
<com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpHeader(byte[],int,int)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setTilt(float)>
<okhttp3.RequestBody: void <init>()>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender$1: void visit(ch.qos.logback.core.net.server.RemoteReceiverClient)>
<com.airbnb.lottie.network.NetworkCache: java.io.File getCachedFile(java.lang.String)>
<com.airbnb.lottie.parser.FontParser: com.airbnb.lottie.model.Font parse(com.airbnb.lottie.parser.moshi.JsonReader)>
<com.google.android.gms.internal.measurement.zznm: void <init>()>
<dagger.hilt.android.internal.managers.ActivityComponentManager: java.lang.Object generatedComponent()>
<com.google.android.material.datepicker.MonthsPagerAdapter$1: void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>
<com.google.android.gms.common.api.internal.zao: void <init>(com.google.android.gms.common.api.internal.zap,com.google.android.gms.common.api.internal.zam)>
<com.azure.authenticator.databinding.FragmentEditCredentialBinding: com.azure.authenticator.databinding.FragmentEditCredentialBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>
<com.google.android.material.internal.CollapsingTextHelper: boolean calculateIsRtl(java.lang.CharSequence)>
<com.airbnb.lottie.model.layer.BaseLayer: void addAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.google.android.gms.cloudmessaging.zzp: void <init>(int,java.lang.String)>
<java.math.RoundingMode: java.math.RoundingMode[] values()>
<ch.qos.logback.core.net.ssl.SSLConfiguration: void <init>()>
<com.google.android.gms.common.internal.zal: int zab(android.content.Context,int)>
<androidx.core.app.SafeJobIntentService: void onCreate()>
<android.database.Cursor: boolean isNull(int)>
<com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerWidth(int)>
<androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.google.android.material.chip.Chip: boolean performCloseIconClick()>
<ch.qos.logback.core.pattern.parser.Token: java.lang.String getValue()>
<java.util.concurrent.CancellationException: void <init>()>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadNgcPnRegistrationUpsell: void <init>(com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager,com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationUseCase,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)>
<com.airbnb.lottie.animation.content.ContentGroup: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,java.lang.String,boolean,java.util.List,com.airbnb.lottie.model.animatable.AnimatableTransform)>
<com.microsoft.brooklyn.module.common.LocalisedCountryData: void <init>(android.content.Context)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: void erase(android.graphics.Bitmap)>
<com.google.android.material.navigation.NavigationBarMenuView: boolean isValidId(int)>
<com.facebook.react.views.textinput.ReactTextInputLocalData: void <init>(android.widget.EditText)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void refreshVisibility(java.util.List)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInfo: void <init>(java.lang.String,java.lang.Boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager autofillSuggestionManager()>
<com.airbnb.lottie.utils.GammaEvaluator: int evaluate(float,int,int)>
<com.google.android.gms.common.api.internal.zabn: void <init>(com.google.android.gms.common.api.internal.zabo,com.google.android.gms.common.ConnectionResult)>
<android.widget.ProgressBar: int getMeasuredHeight()>
<com.facebook.react.views.textinput.ReactEditText: void clearFocusFromJS()>
<ch.qos.logback.classic.spi.StackTraceElementProxy: java.lang.String getSTEAsString()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setMccMnc(java.lang.String)>
<android.view.WindowInsets: int getSystemWindowInsetRight()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.facebook.react.module.annotations.ReactModule: boolean canOverrideExistingModule()>
<com.google.crypto.tink.shaded.protobuf.AbstractMessageLite: byte[] toByteArray()>
<com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()>
<android.widget.SeekBar: android.graphics.drawable.Drawable getProgressDrawable()>
<com.google.android.gms.internal.measurement.zzbr: java.lang.String zzG()>
<com.airbnb.lottie.animation.content.GradientStrokeContent: android.graphics.LinearGradient getLinearGradient()>
<com.google.android.gms.internal.maps.zzac: boolean zza(com.google.android.gms.internal.maps.zzac)>
<java.lang.String: int offsetByCodePoints(int,int)>
<com.facebook.react.modules.core.DefaultHardwareBackBtnHandler: void invokeDefaultOnBackPressed()>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)>
<ch.qos.logback.core.AppenderBase: void append(java.lang.Object)>
<com.airbnb.lottie.LottieCompositionFactory: java.lang.String rawResCacheKey(android.content.Context,int)>
<com.google.android.gms.measurement.internal.zzd: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.Set getRequestedScopes()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onResume()>
<com.facebook.react.views.text.TextAttributes: float getEffectiveLetterSpacing()>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: void countDownAction()>
<ch.qos.logback.core.joran.spi.EventPlayer: void <init>(ch.qos.logback.core.joran.spi.Interpreter)>
<androidx.transition.Transition: void <init>()>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall build()>
<com.google.android.gms.maps.internal.zzas: void <init>()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void maybeUpdateCacheParams()>
<com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.json.DupDetector child()>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int,int)>
<android.content.Intent: java.lang.String getType()>
<bolts.Task: bolts.Task continueWith(bolts.Continuation)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase access$9900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.storage.database.AccountStorage: androidx.lifecycle.LiveData getAllAccountsObservable()>
<com.facebook.common.logging.FLog: void e(java.lang.String,java.lang.String,java.lang.Object[])>
<android.text.DynamicLayout: int getHeight()>
<com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.azure.authenticator.common.Util$Companion: java.lang.String getRandomString(int)>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void writeMapTo(java.io.ObjectOutputStream)>
<ch.qos.logback.core.spi.AbstractComponentTracker$1: void <init>(ch.qos.logback.core.spi.AbstractComponentTracker)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType$Companion: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType getByValue(int)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener)>
<com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: void postSuccessfulWrite()>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int calculateDownsampleNumerator(int)>
<com.facebook.react.bridge.ReactNoCrashSoftException: void <init>(java.lang.Throwable)>
<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>
<com.airbnb.lottie.animation.content.MergePathsContent: void addPaths()>
<ch.qos.logback.core.rolling.helper.DateTokenConverter: boolean isPrimary()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void onResume()>
<android.widget.SeekBar$OnSeekBarChangeListener: void onStartTrackingTouch(android.widget.SeekBar)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadAddAccountViewModel aadAddAccountViewModel()>
<android.text.style.UnderlineSpan: void <init>()>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.ConnectionTelemetryConfiguration getTelemetryConfiguration()>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void setSource(java.lang.String)>
<com.google.android.gms.internal.base.zah: void <init>(com.google.android.gms.internal.base.zah)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger getWebpErrorLogger()>
<android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>
<com.airbnb.lottie.parser.moshi.JsonReader: com.airbnb.lottie.parser.moshi.JsonEncodingException syntaxError(java.lang.String)>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void slideDown(android.view.View)>
<com.facebook.react.animated.InterpolationAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap)>
<com.airbnb.lottie.utils.LottieValueAnimator: void clearComposition()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
<com.google.android.material.datepicker.DateStrings: java.lang.String getYearMonthDayOfWeekDay(long)>
<java.util.Set: boolean remove(java.lang.Object)>
<com.google.android.gms.common.util.Clock: long currentTimeMillis()>
<com.google.android.gms.common.internal.zzq: android.content.Context zzf(com.google.android.gms.common.internal.zzq)>
<com.microsoft.authenticator.core.common.CoroutineTimer: void <init>(kotlinx.coroutines.CoroutineScope,long,long,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<androidx.appcompat.widget.AppCompatCheckBox: void <init>(android.content.Context)>
<com.facebook.react.views.modal.ShowEvent: void <init>(int)>
<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.authentication.msa.MsaAccountManager_Factory: com.azure.authenticator.authentication.msa.MsaAccountManager newInstance(android.content.Context,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<com.google.android.gms.internal.measurement.zziu: boolean zza()>
<com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.common.BytesRange getBytesRange()>
<android.util.SparseIntArray: int get(int,int)>
<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.security.KeyStore newKeyStore()>
<com.google.android.material.card.MaterialCardViewHelper: boolean canClipToOutline()>
<com.google.android.gms.internal.location.zzv: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationListener)>
<com.facebook.react.ReactRootView$ReactRootViewEventListener: void onAttachedToReactInstance(com.facebook.react.ReactRootView)>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: boolean access$200(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,float)>
<com.google.android.gms.internal.measurement.zzdj: void zzbb(com.google.android.gms.internal.measurement.zzdj,int)>
<androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()>
<com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)>
<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>
<com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: java.util.List access$100(com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup)>
<com.google.android.gms.common.internal.zzae: boolean zzg()>
<com.facebook.react.views.textinput.ReactTextInputFocusEvent: void <init>(int)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$cleanUpAfterUnsuccessfulRestore$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder: com.facebook.drawee.interfaces.DraweeController build()>
<androidx.preference.PreferenceFragmentCompat: void <init>()>
<com.facebook.imagepipeline.memory.LruBitmapPool: void <init>(int,int,com.facebook.imagepipeline.memory.PoolStatsTracker,com.facebook.common.memory.MemoryTrimmableRegistry)>
<com.google.common.io.ByteSource$ByteArrayByteSource: void <init>(byte[])>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getActivatedDeviceToken()>
<com.airbnb.lottie.manager.ImageAssetManager: void setDelegate(com.airbnb.lottie.ImageAssetDelegate)>
<com.google.android.gms.measurement.internal.zziw: void <init>(com.google.android.gms.measurement.internal.zzja,android.content.ComponentName)>
<com.facebook.imagepipeline.producers.ProducerContext: java.lang.Object getCallerContext()>
<com.google.android.gms.common.internal.BaseGmsClient: void zzc(com.google.android.gms.common.internal.BaseGmsClient,int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$1: void <init>(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.UnmodifiableIterator iterator()>
<com.google.android.gms.measurement.internal.zzfl: void zzD(boolean)>
<com.airbnb.lottie.LottieComposition: void init(android.graphics.Rect,float,float,float,java.util.List,androidx.collection.LongSparseArray,java.util.Map,java.util.Map,androidx.collection.SparseArrayCompat,java.util.Map,java.util.List)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hoistNativeChildren()>
<androidx.viewpager.widget.ViewPager: void setCurrentItem(int)>
<com.azure.authenticator.common.AdjustHelper: boolean initializeAdjust(android.content.Context,boolean)>
<com.google.android.gms.internal.measurement.zzcj: com.google.android.gms.internal.measurement.zzcj[] values()>
<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>
<java.io.PrintWriter: void print(boolean)>
<androidx.navigation.NavController: boolean popBackStack(int,boolean)>
<android.view.View: int getId()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: android.database.sqlite.SQLiteDatabase lambda$getDb$0(java.lang.Throwable)>
<com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails: java.lang.Double getLatitude()>
<com.facebook.react.common.JavascriptException: com.facebook.react.common.JavascriptException setExtraDataAsJson(java.lang.String)>
<ch.qos.logback.core.LayoutBase: ch.qos.logback.core.Context getContext()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: java.lang.Float get(android.view.View)>
<com.google.android.gms.internal.measurement.zzcx: com.google.android.gms.internal.measurement.zzcw zzh()>
<com.facebook.react.animated.NativeAnimatedModule$15: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$denyAadNgcSession$1: java.lang.Object invokeSuspend(java.lang.Object)>
<android.database.sqlite.SQLiteStatement: void close()>
<com.google.android.material.datepicker.CalendarStyle: void <init>(android.content.Context)>
<ch.qos.logback.core.rolling.helper.DateTokenConverter: java.lang.String convert(java.util.Date)>
<com.facebook.imagepipeline.core.ImagePipeline$7: boolean apply(com.facebook.cache.common.CacheKey)>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$05Zr9pRvATWUHCDBfZYVYXb_xKU': void <init>()>
<com.facebook.drawee.controller.ControllerListener: void onSubmit(java.lang.String,java.lang.Object)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: java.util.ArrayList deserializeIterableFromBytes(byte[],android.os.Parcelable$Creator)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState copy$default(com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState,java.lang.String,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow,int,java.lang.Object)>
<com.google.android.material.timepicker.ClockHandView: android.graphics.RectF getCurrentSelectorBox()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$finishFlowWithErrorIfNeeded(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)>
<com.facebook.imagepipeline.image.EncodedImage: android.util.Pair readWebPImageSize()>
<java.text.DecimalFormat: java.lang.String format(double)>
<com.google.android.gms.internal.measurement.zzla: long zzD()>
<android.os.Parcel: void writeStringArray(java.lang.String[])>
<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<com.google.android.gms.common.images.ImageManager$ImageReceiver: void <init>(com.google.android.gms.common.images.ImageManager,android.net.Uri)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int getExpandedOffset()>
<com.facebook.imagepipeline.core.ExecutorSupplier: java.util.concurrent.Executor forLocalStorageWrite()>
<ch.qos.logback.classic.android.SQLiteAppender: void insertThrowable(ch.qos.logback.classic.spi.IThrowableProxy,long)>
<com.adjust.sdk.AdjustInstance: void onPause()>
<com.google.android.material.timepicker.ClockHandView$1: void <init>(com.google.android.material.timepicker.ClockHandView)>
<com.google.android.gms.internal.measurement.zzds: void zzi(com.google.android.gms.internal.measurement.zzds,java.lang.Iterable)>
<com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getDisplayName()>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void disableAppLock(java.lang.String)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: void setPattern(java.lang.String)>
<com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: void <init>(float)>
<java.net.HttpURLConnection: void disconnect()>
<com.facebook.react.fabric.events.FabricEventEmitter: void <init>(com.facebook.react.fabric.FabricUIManager)>
<android.widget.CheckBox: boolean isEnabled()>
<com.google.android.gms.auth.account.zzc: void zza(com.google.android.gms.auth.account.zza,android.accounts.Account)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$6: com.microsoft.brooklyn.favicon.FaviconRefreshWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)>
<android.animation.ValueAnimator: boolean isRunning()>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<com.google.android.gms.measurement.internal.zzg: void zzG(boolean)>
<android.widget.ScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<com.google.android.material.internal.CollapsingTextHelper: float lerp(float,float,float,android.animation.TimeInterpolator)>
<com.adjust.sdk.AdjustInstance: void <init>()>
<com.google.android.gms.internal.measurement.zzia: boolean zzc(byte[])>
<com.facebook.drawee.drawable.MatrixDrawable: void configureBoundsIfUnderlyingChanged()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean)>
<com.google.android.gms.common.api.internal.zaai: boolean zaa(com.google.android.gms.common.api.internal.zaai)>
<com.facebook.soloader.FileLocker: void <init>(java.io.File)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteBuffer access$400(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey)>
<com.google.android.gms.measurement.internal.zzae: java.lang.String zzb()>
<com.google.android.material.internal.StateListAnimator: void addState(int[],android.animation.ValueAnimator)>
<com.facebook.common.memory.PooledByteBufferOutputStream: void <init>()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: long access$1402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long)>
<com.microsoft.authenticator.core.logging.BaseLogger: java.io.File getAppLogFile()>
<com.google.android.gms.measurement.internal.zzbu: void <init>()>
<com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()>
<androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_18_19$1: void <init>(int,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)>
<java.util.Locale: java.lang.String getLanguage()>
<javax.mail.internet.MimeBodyPart: void setContent(java.lang.Object,java.lang.String)>
<com.google.android.gms.internal.measurement.zzp: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onCreate(android.os.Bundle)>
<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>
<com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()>
<com.microsoft.brooklyn.ui.generatepasswords.viewlogic.ViewGeneratedPasswordFragment_MembersInjector: void injectTelemetryManager(com.microsoft.brooklyn.ui.generatepasswords.viewlogic.ViewGeneratedPasswordFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Long lambda$getTransportContextId$2(android.database.Cursor)>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onCreate(android.os.Bundle)>
<com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)>
<ch.qos.logback.classic.Logger: void localLevelReset()>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.MsaAccount getMsaAccountWithCid(java.lang.String)>
<com.facebook.react.uimanager.DisplayMetricsHolder: java.util.Map getDisplayMetricsMap(double)>
<com.facebook.cache.disk.DynamicDefaultDiskStorage$State: void <init>(java.io.File,com.facebook.cache.disk.DiskStorage)>
<com.google.common.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)>
<ch.qos.logback.core.net.SMTPAppenderBase: boolean isSSL()>
<com.facebook.react.ReactInstanceManager: void onHostDestroy(android.app.Activity)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onNegativeButtonClick()>
<ch.qos.logback.classic.android.LogcatAppender: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isDecodeCancellationEnabled()>
<com.facebook.drawee.drawable.ScalingUtils$ScaleType: android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float)>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getOpenAt()>
<com.google.android.gms.common.api.internal.zacq: void <init>(com.google.android.gms.common.util.BiConsumer)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.producers.NetworkFetcher getNetworkFetcher()>
<com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int)>
<com.facebook.cache.common.NoOpCacheEventListener: com.facebook.cache.common.NoOpCacheEventListener getInstance()>
<android.animation.AnimatorSet: void start()>
<com.google.android.gms.internal.measurement.zzig: java.lang.String zzj(java.lang.Object)>
<com.google.android.gms.common.server.FavaDiagnosticsEntity: void <init>(int,java.lang.String,int)>
<com.facebook.react.ReactRootView: void attachToReactInstanceManager()>
<com.facebook.soloader.SoLoader: void initSoSources(android.content.Context,int,com.facebook.soloader.SoFileLoader)>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>
<bolts.Task: bolts.Task forResult(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdj: void zzbi(com.google.android.gms.internal.measurement.zzdj,com.google.android.gms.internal.measurement.zzdo)>
<com.google.android.gms.common.api.internal.GoogleApiManager: android.content.Context zat(com.google.android.gms.common.api.internal.GoogleApiManager)>
<java.lang.StackTraceElement: int hashCode()>
<com.microsoft.did.feature.cardflow.viewlogic.CompleteRequestFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.cardflow.viewlogic.CompleteRequestFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<okio.Okio: okio.BufferedSource buffer(okio.Source)>
<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.auth.zzd: void invalidateToken(android.content.Context,java.lang.String)>
<com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.TransformedResult then(com.google.android.gms.common.api.ResultTransform)>
<com.azure.authenticator.databinding.AccountActionLayoutBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.Month getPageMonth(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback: com.azure.authenticator.ui.backup.BackupFlowActivity$Flow access$getFlow$p(com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback)>
<com.google.android.gms.internal.common.zzf: void <init>(com.google.android.gms.internal.common.zze)>
<ch.qos.logback.core.joran.action.ActionUtil$Scope: void <init>(java.lang.String,int)>
<com.azure.authenticator.databinding.DataPlaceholderLayoutBinding: com.azure.authenticator.databinding.DataPlaceholderLayoutBinding bind(android.view.View)>
<com.google.android.gms.measurement.internal.zzkf: android.os.Parcelable zzk(byte[],android.os.Parcelable$Creator)>
<com.google.android.gms.internal.measurement.zzgz: void zzo(long)>
<com.facebook.react.bridge.WritableArray: void pushInt(int)>
<com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)>
<androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setPriority(int)>
<com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity_MembersInjector: void injectLocalisedCountryData(com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity,com.microsoft.brooklyn.module.common.LocalisedCountryData)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: float getEndProgress()>
<com.airbnb.lottie.utils.LottieValueAnimator: void verifyFrame()>
<com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<com.facebook.react.ReactRootView: void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle,java.lang.String)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: char _handleUnrecognizedCharacterEscape(char)>
<com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$Builder: void <init>()>
<com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback: void onStreetViewPanoramaReady(com.google.android.gms.maps.StreetViewPanorama)>
<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledByDefault()>
<com.google.android.material.tabs.TabLayout: int access$1400(com.google.android.material.tabs.TabLayout)>
<android.widget.Button: void setBackgroundColor(int)>
<com.fasterxml.jackson.core.json.DupDetector: com.fasterxml.jackson.core.JsonLocation findLocation()>
<ch.qos.logback.core.pattern.parser.Parser: void advanceTokenPointer()>
<ch.qos.logback.core.net.AbstractSocketAppender: ch.qos.logback.core.spi.PreSerializationTransformer getPST()>
<com.airbnb.lottie.LottieDrawable$12: void <init>(com.airbnb.lottie.LottieDrawable,int,int)>
<com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase access$getMsaSessionUseCase$p(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker)>
<com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)>
<android.graphics.Path: void moveTo(float,float)>
<android.view.View$BaseSavedState: android.os.Parcelable getSuperState()>
<androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()>
<com.google.android.gms.internal.maps.zzw: void setZIndex(float)>
<com.airbnb.lottie.model.animatable.AnimatableFloatValue: void <init>(java.util.List)>
<com.google.android.gms.measurement.internal.zzea: com.google.android.gms.measurement.internal.zzp zzh(java.lang.String)>
<com.facebook.react.modules.camera.ImageEditingManager: android.graphics.Bitmap$CompressFormat getCompressFormatForType(java.lang.String)>
<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>
<com.facebook.react.views.scroll.OnScrollDispatchHelper: float getXFlingVelocity()>
<com.google.android.gms.measurement.internal.zzea: java.lang.String zzk()>
<com.fasterxml.jackson.core.JsonStreamContext: int getCurrentIndex()>
<com.google.android.material.chip.ChipGroup: void setCheckedStateForView(int,boolean)>
<com.fasterxml.jackson.core.json.JsonWriteContext: void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: java.lang.Class access$200()>
<com.google.android.gms.common.data.DataBufferSafeParcelable: com.google.android.gms.common.internal.safeparcel.SafeParcelable get(int)>
<com.google.android.gms.common.api.internal.zabl: boolean zal()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>
<com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ChoreographerCompat access$202(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.modules.core.ChoreographerCompat)>
<android.text.StaticLayout: int getLineEnd(int)>
<com.google.android.gms.common.api.internal.zaac: void <init>(com.google.android.gms.common.api.internal.ApiKey)>
<com.evernote.android.job.v21.TransientBundleCompat: boolean isScheduled(android.content.Context,int)>
<com.google.android.material.transformation.FabTransformationSheetBehavior: void updateImportantForAccessibility(android.view.View,boolean)>
<com.azure.authenticator.databinding.PaymentListRowLayoutBinding: com.azure.authenticator.databinding.PaymentListRowLayoutBinding bind(android.view.View)>
<java.util.Arrays: void fill(int[],int,int,int)>
<com.google.android.material.datepicker.YearGridAdapter: void <init>(com.google.android.material.datepicker.MaterialCalendar)>
<android.view.View: float getY()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void zae(int)>
<com.google.android.gms.auth.api.identity.zzd: void <init>()>
<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>
<com.azure.authenticator.ui.MainActivity$OnBackPressedCallback: void execute()>
<com.google.android.gms.measurement.internal.zzw: void <init>(java.lang.String,int)>
<com.facebook.shimmer.ShimmerDrawable: void updateShader()>
<com.google.android.material.chip.ChipDrawable: float calculateTextCenterFromBaseline()>
<java.util.BitSet: void set(int)>
<androidx.preference.Preference: void setSummary(java.lang.CharSequence)>
<com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableTextFrame getText()>
<com.adjust.sdk.AttributionHandler$5: void <init>(com.adjust.sdk.AttributionHandler,com.adjust.sdk.AttributionResponseData)>
<com.google.android.gms.internal.measurement.zziy: com.google.android.gms.internal.measurement.zzix zzbK()>
<java.lang.ArrayIndexOutOfBoundsException: java.lang.String getMessage()>
<com.fasterxml.jackson.core.JsonParser: java.lang.String getValueAsString(java.lang.String)>
<com.evernote.android.job.Job: boolean isRequirementStorageNotLowMet()>
<com.facebook.datasource.DataSource: boolean close()>
<com.airbnb.lottie.LottieDrawable: float getScale()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: com.microsoft.authenticator.workaccount.businesslogic.DeviceRegistrationUseCase access$getDeviceRegistrationUseCase$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<java.lang.Character: int toCodePoint(char,char)>
<com.google.android.gms.safetynet.SafetyNetApi: com.google.android.gms.common.api.PendingResult verifyWithRecaptcha(com.google.android.gms.common.api.GoogleApiClient,java.lang.String)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$200(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder addConfig(com.google.android.datatransport.Priority,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue)>
<com.google.android.gms.common.api.internal.zaaz: void zai(com.google.android.gms.common.api.internal.zaaz)>
<com.facebook.react.modules.network.RequestBodyUtil: java.io.InputStream getDownloadFileInputStream(android.content.Context,android.net.Uri)>
<com.google.android.gms.common.api.internal.zaar: void zaw(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>
<android.util.JsonWriter: android.util.JsonWriter beginArray()>
<com.google.android.gms.internal.measurement.zzht: com.google.android.gms.internal.measurement.zzhx zzf(int)>
<com.azure.authenticator.storage.Storage: boolean readAreScreenshotsEnabled(android.content.Context)>
<ch.qos.logback.core.rolling.helper.PathPart: java.util.List listFiles(ch.qos.logback.core.rolling.helper.FileProvider)>
<com.facebook.drawee.controller.AbstractDraweeController: int getImageHash(java.lang.Object)>
<com.google.android.gms.common.stats.ConnectionTracker: boolean zzb(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean)>
<com.google.android.gms.internal.measurement.zzdq: int zzb()>
<com.google.android.gms.maps.internal.zzf: void <init>(android.os.IBinder)>
<com.azure.authenticator.databinding.MsaSessionDialogBinding: com.azure.authenticator.databinding.MsaSessionDialogBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.evernote.android.job.Job: void onCancel()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.SyncSDKConnector access$8100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onStart()>
<com.azure.authenticator.databinding.AccountListRowEditModeBinding: android.widget.RelativeLayout getRoot()>
<java.io.IOException: java.lang.Throwable getCause()>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.JsonReadContext getParent()>
<ch.qos.logback.core.util.DatePatternToRegexUtil: java.util.List tokenize()>
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier getFirstAvailableDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object[],boolean)>
<com.azure.authenticator.databinding.FrxSigninFragmentBinding: com.azure.authenticator.databinding.FrxSigninFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<ch.qos.logback.core.subst.NodeToStringTransformer: void handleLiteral(ch.qos.logback.core.subst.Node,java.lang.StringBuilder)>
<android.os.Bundle: int getInt(java.lang.String,int)>
<com.facebook.react.modules.storage.AsyncLocalStorageUtil: java.lang.String[] buildKeySelectionArgs(com.facebook.react.bridge.ReadableArray,int,int)>
<com.google.android.material.textfield.TextInputLayout: boolean isStartIconVisible()>
<com.google.android.gms.internal.measurement.zzef: com.google.android.gms.internal.measurement.zzhw zzb()>
<com.airbnb.lottie.LottieComposition: java.util.List getLayers()>
<com.facebook.react.TurboReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()>
<com.google.crypto.tink.KeysetHandle: void assertEnoughKeyMaterial(com.google.crypto.tink.proto.Keyset)>
<com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)>
<com.facebook.react.viewmanagers.SliderManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.google.android.datatransport.runtime.util.PriorityMapping: int toInt(com.google.android.datatransport.Priority)>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<com.google.android.gms.common.internal.BinderWrapper: void <init>(android.os.Parcel,com.google.android.gms.common.internal.zzh)>
<android.animation.Animator: void end()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.google.android.material.navigation.NavigationBarView$SavedState$1: com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<com.azure.authenticator.accounts.AadAccount: boolean isOathEnabled()>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()>
<java.lang.Long: long parseLong(java.lang.String,int)>
<com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getOffset()>
<com.facebook.imagepipeline.listener.ForwardingRequestListener: void addRequestListener(com.facebook.imagepipeline.listener.RequestListener)>
<com.google.android.gms.common.api.internal.zacu: void <init>(com.google.android.gms.common.api.internal.zacv,android.os.Looper)>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<java.util.Arrays: void fill(float[],float)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater access$9600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.views.text.ReactVirtualTextShadowNode: void <init>()>
<com.adjust.sdk.AttributionHandler: java.lang.ref.WeakReference access$300(com.adjust.sdk.AttributionHandler)>
<com.google.common.base.CharMatcher: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void setAddAccountSdkCallbacks(boolean)>
<android.os.PersistableBundle: void <init>()>
<android.view.ViewParent: android.view.ViewParent getParent()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.graphics.Path: void addPath(android.graphics.Path)>
<com.google.android.gms.measurement.internal.zzbp: void <init>()>
<com.google.android.gms.auth.api.phone.SmsRetrieverClient: void <init>(android.content.Context)>
<com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder: com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController)>
<com.google.android.gms.internal.measurement.zzck: void <init>()>
<com.facebook.imagepipeline.common.BytesRange: com.facebook.imagepipeline.common.BytesRange toMax(int)>
<com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])>
<com.azure.authenticator.MainNavDirections$ToAccountListFragment: void <init>(com.azure.authenticator.MainNavDirections$1)>
<com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity_MembersInjector: void injectAddressRepository(com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity,com.microsoft.brooklyn.module.repository.AddressesRepository)>
<com.google.android.material.animation.ImageMatrixProperty: android.graphics.Matrix get(android.widget.ImageView)>
<ch.qos.logback.classic.pattern.LocalSequenceNumberConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.material.card.MaterialCardViewHelper: float getParentCardViewCalculatedCornerPadding()>
<com.airbnb.lottie.model.layer.TextLayer: void drawFontTextLine(java.lang.String,com.airbnb.lottie.model.DocumentData,android.graphics.Canvas,float)>
<com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)>
<com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)>
<javax.net.ssl.SSLServerSocket: void setNeedClientAuth(boolean)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void disconnectAnimatedNodes(int,int)>
<com.google.crypto.tink.proto.EncryptedKeyset$Builder: com.google.crypto.tink.proto.EncryptedKeyset$Builder setEncryptedKeyset(com.google.crypto.tink.shaded.protobuf.ByteString)>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
<com.facebook.imagepipeline.cache.CountingLruMap: int getSizeInBytes()>
<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>
<com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setAutoStart(boolean)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient: void zza(com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.Status)>
<com.adjust.sdk.ActivityHandler: void checkAttributionStateI()>
<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: java.lang.String getPattern()>
<android.widget.FrameLayout: android.view.View findViewById(int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.google.android.gms.common.api.internal.zaar: boolean zav(com.google.android.gms.common.api.internal.zaar,int)>
<com.facebook.imageutils.WebpUtil: byte getByte(java.io.InputStream)>
<java.lang.OutOfMemoryError: void <init>(java.lang.String)>
<android.view.View: int getPaddingTop()>
<android.widget.EditText: int getMeasuredWidth()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void dispatchDismiss(int)>
<com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient createClient(android.content.Context)>
<com.google.android.material.shape.ShapePath: void reset(float,float,float,float)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: boolean isEmpty()>
<com.facebook.react.views.text.TextAttributeProps: void setLineHeight(float)>
<com.facebook.imageutils.JfifUtil: boolean isSOFn(int)>
<com.google.android.gms.ads.identifier.zzb: boolean getBoolean(java.lang.String,boolean)>
<com.azure.authenticator.ui.fragment.accounts.Hilt_AccountListFragment: void initializeComponentContext()>
<com.airbnb.lottie.LottieDrawable: void setPerformanceTrackingEnabled(boolean)>
<com.fasterxml.jackson.core.base.ParserBase: boolean loadMore()>
<com.adjust.sdk.SdkClickHandler$3: void <init>(com.adjust.sdk.SdkClickHandler)>
<androidx.cardview.widget.CardView: int getContentPaddingBottom()>
<com.google.android.gms.internal.measurement.zzjc: void <init>()>
<com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.databinding.AddAccountInfoDialogBinding: com.azure.authenticator.databinding.AddAccountInfoDialogBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: com.facebook.imagepipeline.image.ImageInfo getImageInfo(com.facebook.common.references.CloseableReference)>
<com.evernote.android.job.util.Device: boolean isStorageLow()>
<com.facebook.react.views.scroll.ReactScrollView: void smoothScrollAndSnap(int)>
<androidx.appcompat.app.AppCompatActivity: void onDestroy()>
<com.facebook.react.views.text.TextAttributeProps: void setFontWeight(java.lang.String)>
<android.graphics.Paint: void setFontFeatureSettings(java.lang.String)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void setupListeners()>
<ch.qos.logback.core.pattern.util.RestrictedEscapeUtil: void escape(java.lang.String,java.lang.StringBuffer,char,int)>
<com.google.android.gms.internal.measurement.zzjs: java.lang.Object remove(java.lang.Object)>
<com.google.android.gms.maps.GoogleMap$OnMarkerClickListener: boolean onMarkerClick(com.google.android.gms.maps.model.Marker)>
<com.google.android.gms.common.api.Batch: java.lang.Object zaa(com.google.android.gms.common.api.Batch)>
<com.google.android.gms.internal.measurement.zzgx: void zzl(int)>
<com.google.common.net.InternetDomainName: boolean matchesType(com.google.common.base.Optional,com.google.common.base.Optional)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$19: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.facebook.react.animated.NativeAnimatedModule$10: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,double)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$LINKS: void <init>(java.lang.String,int,java.lang.String)>
<com.azure.authenticator.accounts.AadAccount: boolean containsBrokerAccountInfo()>
<ch.qos.logback.classic.turbo.MatchingFilter: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountItemTouchHelper$AccountItemTouchAdapter: void onAccountMove(int,int)>
<com.azure.authenticator.databinding.AddMsaActivityLayoutBinding: com.azure.authenticator.databinding.AddMsaActivityLayoutBinding bind(android.view.View)>
<com.google.android.gms.internal.auth.zzau: void <init>(com.google.android.gms.internal.auth.zzar,com.google.android.gms.common.api.GoogleApiClient)>
<com.evernote.android.job.work.JobProxyWorkManager: androidx.work.WorkManager getWorkManager()>
<com.google.android.gms.common.internal.zav: boolean zac()>
<com.evernote.android.job.v14.PlatformAlarmService: android.content.Intent getIntent()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.location.abstraction.LocationPermissionRequestViewModel locationPermissionRequestViewModel()>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
<com.facebook.react.views.text.ReactTextShadowNode: android.text.Spannable access$000(com.facebook.react.views.text.ReactTextShadowNode)>
<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.text.Layout: int getParagraphDirection(int)>
<com.google.android.gms.maps.internal.IProjectionDelegate: com.google.android.gms.dynamic.IObjectWrapper toScreenLocation(com.google.android.gms.maps.model.LatLng)>
<com.airbnb.lottie.model.content.ShapeStroke: boolean isHidden()>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setBorderRadius(android.view.View,float)>
<java.io.ByteArrayOutputStream: void write(int)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum getStoreRatingFlow(com.microsoft.authenticator.authentication.entities.AuthFlowType)>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener: void onIntermediateImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setElevation(float)>
<bolts.BoltsExecutors$ImmediateExecutor: int incrementDepth()>
<com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map getDefaultExportableEventTypes()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: com.microsoft.authenticator.backup.entities.CloudBackup getCloudBackup$app_productionRelease()>
<androidx.navigation.NavController: void navigate(androidx.navigation.NavDirections)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$21: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.facebook.cache.common.CacheKey: boolean containsUri(android.net.Uri)>
<android.view.ViewGroup$LayoutParams: void <init>(int,int)>
<com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite build()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getMfaPinEncryptionKeyAlias()>
<com.facebook.cache.disk.DefaultDiskStorage$FileInfo: void <init>(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.memory.BitmapCounter$1: void <init>(com.facebook.imagepipeline.memory.BitmapCounter)>
<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
<com.google.android.gms.common.data.EntityBuffer: java.lang.String getPrimaryDataMarkerColumn()>
<com.google.android.gms.maps.internal.ILocationSourceDelegate: void deactivate()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void unregisterActivityLaunchers()>
<com.adjust.sdk.DeviceInfo: java.lang.String getABI()>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueLayoutUpdateFinished(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zac(com.google.android.gms.dynamic.DeferredLifecycleHelper)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: com.facebook.common.memory.PooledByteStreams access$700(com.facebook.imagepipeline.cache.BufferedDiskCache)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: void <init>()>
<dummyMainClass: com.azure.authenticator.logging.LoggingReceiver dummyMainMethod_com_azure_authenticator_logging_LoggingReceiver(android.content.Intent)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void readList(android.os.Parcel,int,java.util.List,java.lang.ClassLoader)>
<com.facebook.react.fabric.mounting.MountingManager: void removeViewAt(int,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void access$handleDenyNgcResult(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.authentication.aad.entities.AadNgcDenySessionResult)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignContent(com.facebook.yoga.YogaAlign)>
<com.adjust.sdk.InstallReferrer$1: void <init>(com.adjust.sdk.InstallReferrer)>
<com.google.android.gms.internal.measurement.zzdj: void zzbd(com.google.android.gms.internal.measurement.zzdj,long)>
<com.airbnb.lottie.model.layer.TextLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzU()>
<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStoreOwner)>
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>
<com.azure.authenticator.storage.database.DbAccount: int getAccountType()>
<android.widget.SeekBar: int getMax()>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerWidth(android.view.View,java.lang.Float)>
<com.facebook.imagepipeline.memory.MemoryChunk: boolean isClosed()>
<com.microsoft.brooklyn.ui.credential.CredentialViewModel: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredentialSaveDatasetsUseCase,com.microsoft.vienna.sdk.AutomationSpecClient)>
<com.fasterxml.jackson.core.util.BufferRecycler: void releaseCharBuffer(int,char[])>
<com.facebook.drawee.generic.GenericDraweeHierarchy: com.facebook.drawee.drawable.DrawableParent getParentDrawableAtIndex(int)>
<com.google.android.material.datepicker.SmoothCalendarLayoutManager$1: void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context)>
<com.google.android.gms.measurement.internal.zzp: void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,long,long,java.lang.String,boolean,boolean,java.lang.String,long,long,int,boolean,boolean,java.lang.String,java.lang.Boolean,long,java.util.List,java.lang.String,java.lang.String)>
<com.adjust.sdk.AttributionHandler: void access$200(com.adjust.sdk.AttributionHandler,long)>
<com.facebook.imagepipeline.memory.BasePool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.facebook.react.uimanager.events.EventDispatcher: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.uimanager.events.EventDispatcher)>
<com.azure.authenticator.ui.RootActivityBase$onResume$1: void <init>(com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase)>
<com.google.android.gms.common.internal.zzo: void zzc(android.content.ServiceConnection,android.content.ServiceConnection,java.lang.String)>
<com.azure.authenticator.logging.LoggingHelper: void setDndSettingLogged(boolean)>
<com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()>
<com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder zac(java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.listener.RequestListener getRequestListener()>
<com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)>
<com.google.android.gms.location.LocationAvailability: boolean hasLocationAvailability(android.content.Intent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInSetupViewModel access$10500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.imagepipeline.producers.MultiplexProducer: void access$700(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.google.android.material.timepicker.ClockFaceView$2: void <init>(com.google.android.material.timepicker.ClockFaceView)>
<com.facebook.imagepipeline.request.ImageRequest: java.io.File getSourceFile()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,androidx.lifecycle.SavedStateHandle,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)>
<com.google.android.material.color.MaterialColors: int getColor(android.content.Context,int,int)>
<com.google.android.material.animation.ChildrenAlphaProperty: java.lang.Float get(android.view.ViewGroup)>
<com.google.android.gms.measurement.internal.zzjb: void zzy()>
<com.facebook.imagepipeline.memory.BasePool: void legacyInitBuckets(android.util.SparseIntArray)>
<java.security.KeyStore: java.lang.String getType()>
<android.widget.ImageButton: boolean isEnabled()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.databinding.FragmentViewGeneratedPasswordBinding: com.azure.authenticator.databinding.FragmentViewGeneratedPasswordBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void <init>(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList)>
<com.azure.authenticator.storage.database.DbAccount: void setHasPassword(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<dummyMainClass: androidx.work.impl.foreground.SystemForegroundService dummyMainMethod_androidx_work_impl_foreground_SystemForegroundService(android.content.Intent)>
<com.google.android.gms.internal.maps.zzab: void <init>(android.os.IBinder)>
<com.google.android.gms.internal.safetynet.zzi: void zzb()>
<com.google.android.material.datepicker.DaysOfWeekAdapter: int positionToDayOfWeek(int)>
<com.google.android.gms.maps.model.MarkerOptions: float getAnchorV()>
<com.google.android.gms.internal.auth-api.zzh: void <init>()>
<ch.qos.logback.classic.spi.ILoggingEvent: ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.AutofillNudgeHelper autofillNudgeHelper()>
<com.google.android.gms.tasks.TaskCompletionSource: void setException(java.lang.Exception)>
<androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int calculateBottomMarginForAnchorView()>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder: com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder zzf(java.lang.String)>
<androidx.work.WorkManager: void initialize(android.content.Context,androidx.work.Configuration)>
<bolts.Task: boolean trySetResult(java.lang.Object)>
<com.facebook.react.modules.network.CountingOutputStream: void write(int)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setInterval(long)>
<com.google.android.material.navigation.NavigationBarView$SavedState$1: com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel)>
<com.google.android.gms.measurement.internal.zzaq: int zze()>
<com.adjust.sdk.DeviceInfo: java.lang.String getCountry(java.util.Locale)>
<com.google.android.gms.internal.measurement.zzdb: long zzh()>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllAadMfaAccountsGeneratingOtps()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context,int)>
<com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue getGradientColor()>
<com.microsoft.authenticator.mfasdk.account.entities.AccountCapability: boolean isMfa()>
<com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: void <init>()>
<com.google.android.material.expandable.ExpandableWidgetHelper: void onRestoreInstanceState(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzck: com.google.android.gms.internal.measurement.zzck zzi()>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel getDeviceRegistrationViewModel()>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedBounds(android.graphics.Rect)>
<android.os.Parcel: void writeCharArray(char[])>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setCacheChoice(com.facebook.imagepipeline.request.ImageRequest$CacheChoice)>
<com.google.android.material.button.MaterialButtonHelper: android.content.res.ColorStateList getRippleColor()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>
<java.util.List: java.lang.Object get(int)>
<com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: void <init>(android.app.ActivityManager)>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)>
<ch.qos.logback.core.joran.util.PropertyDescriptor: java.lang.String getName()>
<com.google.android.gms.common.api.internal.zabl: boolean zaD(com.google.android.gms.common.ConnectionResult)>
<com.google.android.gms.measurement.internal.zzfi: java.util.concurrent.Future zzf(java.util.concurrent.Callable)>
<android.content.res.Resources: boolean getBoolean(int)>
<android.widget.OverScroller: int getFinalX()>
<android.content.Intent: java.lang.String toUri(int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.FileCacheFactory access$700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.gms.internal.measurement.zzla: long zzk()>
<com.google.android.gms.measurement.internal.zzjh: void zzj(int,com.google.android.gms.measurement.internal.zzei,android.content.Intent)>
<com.google.android.gms.measurement.internal.zzas: java.lang.String toString()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: java.lang.Object getValue()>
<com.google.android.material.snackbar.Snackbar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>
<android.widget.GridView: android.content.Context getContext()>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zzf(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.ConnectionResult)>
<com.google.common.collect.ImmutableSet: int chooseTableSize(int)>
<java.lang.reflect.Modifier: boolean isStatic(int)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _handleOddName(int)>
<com.google.android.gms.common.server.response.zam: void <init>(java.lang.String,com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<com.adjust.sdk.IActivityHandler: void sendFirstPackages()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.FirstAvailableDataSourceSupplier$1)>
<com.google.android.gms.auth.api.identity.zzf$zzc: com.google.android.gms.auth.api.identity.zzf$zzc zzc(com.google.android.gms.auth.api.identity.zzf)>
<org.json.JSONObject: void <init>(java.util.Map)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification[] values()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList)>
<java.util.TreeSet: boolean add(java.lang.Object)>
<com.google.android.material.chip.ChipDrawable: void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)>
<com.google.common.base.CharMatcher$Or: void <init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView)>
<com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation: float getFloatValue()>
<android.widget.ProgressBar: void announceForAccessibility(java.lang.CharSequence)>
<com.google.android.gms.common.internal.zar: void <init>()>
<com.facebook.react.fabric.mounting.mountitems.UpdateLocalDataMountItem: void <init>(int,com.facebook.react.bridge.ReadableMap)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener: void onShown()>
<ch.qos.logback.core.net.AbstractSocketAppender: void postProcessEvent(java.lang.Object)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: int getImageHash(com.facebook.common.references.CloseableReference)>
<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)>
<com.facebook.imagepipeline.core.DefaultExecutorSupplier: void <init>(int)>
<com.google.android.gms.internal.measurement.zzgg: void zzd(boolean)>
<ch.qos.logback.core.pattern.FormatInfo: int getMin()>
<java.io.InvalidObjectException: void <init>(java.lang.String)>
<com.facebook.react.modules.network.ResponseUtil: void onRequestError(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String,java.lang.Throwable)>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
<com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding bind(android.view.View)>
<com.google.android.gms.internal.measurement.zzkz: java.lang.String zze()>
<com.facebook.jni.DestructorThread$Terminus: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment injectSharedDeviceModeFragment2(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.CloseableReferenceFactory getCloseableReferenceFactory()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: android.os.Bundle toBundle()>
<com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>
<androidx.work.WorkManager: androidx.work.Operation enqueueUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest)>
<ch.qos.logback.core.pattern.DynamicConverter: void addError(java.lang.String,java.lang.Throwable)>
<com.facebook.react.ReactInstanceManager: void moveToBeforeCreateLifecycleState()>
<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>
<com.azure.authenticator.jobs.DeferrableWorkerTag$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.LatLngBounds getLatLngBoundsForCameraTarget()>
<com.google.android.gms.internal.measurement.zzcx: boolean zza()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<ch.qos.logback.core.encoder.EncoderBase: void <init>()>
<android.widget.CheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>
<ch.qos.logback.core.status.OnPrintStreamStatusListenerBase: void print(ch.qos.logback.core.status.Status)>
<com.evernote.android.job.JobRequest$BackoffPolicy: void <init>(java.lang.String,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager aadNgcPnRegistrationManager()>
<com.facebook.drawee.controller.AbstractDraweeController: com.facebook.drawee.controller.ControllerListener getControllerListener()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _verifyRootSpace(int)>
<androidx.interpolator.view.animation.FastOutLinearInInterpolator: void <init>()>
<com.google.android.gms.internal.measurement.zzkj: void <init>()>
<com.airbnb.lottie.model.layer.BaseLayer: void applyInvertedAddMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<java.util.Set: boolean contains(java.lang.Object)>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: android.os.Bundle toBundle()>
<androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>
<com.google.android.gms.auth.zzd: java.lang.String getToken(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.fragment.main.SettingsViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<ch.qos.logback.core.recovery.RecoveryCoordinator: void <init>()>
<com.facebook.cache.common.CacheEventListener: void onEviction(com.facebook.cache.common.CacheEvent)>
<com.facebook.common.internal.Objects$ToStringHelper: void <init>(java.lang.String,com.facebook.common.internal.Objects$1)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<com.microsoft.authenticator.commonuilibrary.network.CustomNoNetworkSnackbar: void <init>(android.app.Activity,android.view.ViewGroup,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectAuthenticatorState(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<com.fasterxml.jackson.core.io.IOContext: char[] allocConcatBuffer()>
<com.facebook.react.ReactPackageHelper$1$1: void <init>(com.facebook.react.ReactPackageHelper$1)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair walkUpUntilNativeKindIsParent(com.facebook.react.uimanager.ReactShadowNode,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountManager registerThirdPartyAccountManager()>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$1802(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<android.text.Layout: int getHeight()>
<com.google.android.gms.measurement.internal.zzjb: void zzv(java.util.concurrent.atomic.AtomicReference)>
<com.adjust.sdk.AdjustFactory: javax.net.ssl.HttpsURLConnection getHttpsURLConnection(java.net.URL)>
<com.airbnb.lottie.utils.LottieValueAnimator: float getAnimatedValueAbsolute()>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)>
<android.graphics.Matrix: boolean equals(java.lang.Object)>
<com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: void <init>()>
<ch.qos.logback.core.pattern.DynamicConverter: void start()>
<com.google.android.gms.measurement.internal.zzkd: void zzW(com.google.android.gms.measurement.internal.zzaa,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.util.Map loadMetadata(android.database.sqlite.SQLiteDatabase,java.util.List)>
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<java.io.EOFException: void <init>(java.lang.String)>
<android.view.ViewGroup: int getScrollX()>
<com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)>
<com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)>
<com.facebook.drawee.controller.AbstractDraweeController: java.lang.String getId()>
<com.google.android.gms.common.images.WebImage: android.net.Uri getUrl()>
<com.google.android.gms.internal.measurement.zzna: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.vienna_utils_lib.telemetry.ITelemetryLogger iTelemetryLogger()>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<com.facebook.react.fabric.events.EventEmitterWrapper: void invoke(java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshWorker_AssistedFactory access$14700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<android.widget.CheckBox: void invalidate()>
<com.google.android.material.snackbar.SnackbarManager: void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>
<com.microsoft.authenticator.authentication.aad.businessLogic.AadPhoneSignInSessionUseCase: void <init>(com.microsoft.authenticator.mfasdk.authentication.businessLogic.RichContextSessionUseCase)>
<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>
<com.google.android.gms.common.api.internal.zaad: void <init>(java.lang.String)>
<com.fasterxml.jackson.core.io.UTF8Writer: void write(char[],int,int)>
<com.google.android.material.bottomappbar.BottomAppBar: int access$2700(com.google.android.material.bottomappbar.BottomAppBar)>
<java.io.BufferedInputStream: int read(byte[])>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.Rect getUserContentPadding()>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showStoreRatingDialog$storeRatingDialogBuilder$3: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$1800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void handleFlow()>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ThemedReactContext getThemedContext()>
<com.facebook.react.uimanager.events.Event: int getViewTag()>
<com.google.android.gms.common.server.response.zam: void <init>(int,java.lang.String,com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.IMapViewDelegate zza(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.GoogleMapOptions)>
<com.airbnb.lottie.animation.keyframe.KeyframeAnimation: void <init>(java.util.List)>
<java.util.ListIterator: void remove()>
<com.google.android.gms.measurement.internal.zzja: void <init>(com.google.android.gms.measurement.internal.zzjb)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker: com.microsoft.onlineid.sdk.extension.storage.StorageMigrationManager getStorageMigrationManager()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: kotlinx.coroutines.Job silentlyRegisterForAadPhoneSignInPushNotifications(java.util.List)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.graphics.Bitmap access$300(android.content.ContentResolver,android.net.Uri)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int)>
<com.evernote.android.job.v21.PlatformJobService: void <init>()>
<com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()>
<ch.qos.logback.core.html.HTMLLayoutBase: void startNewTableIfLimitReached(java.lang.StringBuilder)>
<com.google.android.material.shape.ShapeAppearancePathProvider: void setEdgePathAndTransform(int)>
<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: java.lang.String getGenericStsErrorMessage(com.microsoft.onlineid.sts.StsErrorCode)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: void <init>()>
<com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>
<ch.qos.logback.classic.pattern.RelativeTimeConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<ch.qos.logback.core.spi.FilterAttachableImpl: void clearAllFilters()>
<com.microsoft.authenticator.backup.businessLogic.cloudStorage.AfsCommunicationManager$Companion: com.microsoft.onlineid.SecurityScope getMsaSecurityScope()>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemOnTouchListener(int,android.view.View$OnTouchListener)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setImageMatrixScale(float)>
<com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>
<android.view.Window: void setFlags(int,int)>
<com.google.android.gms.internal.measurement.zzaq: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm)>
<com.google.android.material.chip.ChipDrawable: float getIconStartPadding()>
<com.facebook.binaryresource.FileBinaryResource: void <init>(java.io.File)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void <init>(com.facebook.common.time.MonotonicClock)>
<com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMinSize(int)>
<ch.qos.logback.core.net.QueueFactory: java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler$$Lambda$2: void <init>(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int zzb(android.os.Parcel,int)>
<android.database.CursorWindow: long getLong(int,int)>
<com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)>
<android.widget.HorizontalScrollView: int getWidth()>
<com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)>
<com.google.firebase.encoders.FieldDescriptor: com.google.firebase.encoders.FieldDescriptor of(java.lang.String)>
<com.azure.authenticator.databinding.FragmentEditAddAddressBinding: com.azure.authenticator.databinding.FragmentEditAddAddressBinding bind(android.view.View)>
<com.facebook.imagepipeline.platform.OreoDecoder: boolean hasColorGamutMismatch(android.graphics.BitmapFactory$Options)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void submit(java.lang.Runnable)>
<com.google.android.gms.common.server.response.FastParser: void zay(java.io.BufferedReader,char[])>
<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)>
<com.google.android.gms.measurement.internal.zzbe: void <init>()>
<com.google.android.gms.common.util.JsonUtils: java.lang.String escapeString(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String toString()>
<com.microsoft.did.feature.backuprestore.presentationlogic.RestoreViewModel: void <init>(com.microsoft.did.businesslogic.RestoreUseCase)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String escapeRightParantesis(java.lang.String)>
<com.airbnb.lottie.LottieComposition: float getFrameRate()>
<com.azure.authenticator.logging.CollectLogsUtils: void <init>()>
<androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
<com.google.android.material.shape.ShapePath: float getEndShadowAngle()>
<com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadManager: boolean scheduleSendDiagnosticRequest(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.memory.Bucket: void addToFreeList(java.lang.Object)>
<android.app.Dialog: boolean requestWindowFeature(int)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isUserResolvableError(int)>
<ch.qos.logback.core.Layout: java.lang.String getContentType()>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isLayoutOnly()>
<java.util.HashMap: java.util.Set entrySet()>
<com.facebook.common.internal.ImmutableMap: void <init>(java.util.Map)>
<com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,boolean,boolean)>
<androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.microsoft.authenticator.di.ActivityModule,android.app.Activity)>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>
<com.facebook.react.uimanager.MatrixMathHelper: void applyRotateY(double[],double)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setPrefetch(boolean)>
<com.google.android.gms.location.FusedLocationProviderClient: void <init>(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.generatepasswords.viewlogic.GeneratorHistoryFragment injectGeneratorHistoryFragment2(com.microsoft.brooklyn.ui.generatepasswords.viewlogic.GeneratorHistoryFragment)>
<com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.DiskCacheWriteProducer$1)>
<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void showRestoreFailedDialog(com.microsoft.authenticator.backup.entities.BackupRestoreError,java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.facebook.react.uimanager.MatrixMathHelper: void applyPerspective(double[],double)>
<com.google.android.datatransport.runtime.dagger.internal.Preconditions: void checkBuilderRequirement(java.lang.Object,java.lang.Class)>
<com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)>
<com.google.android.gms.common.internal.Preconditions: void checkHandlerThread(android.os.Handler)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7: java.lang.Float get(android.view.View)>
<com.google.android.gms.internal.measurement.zzlo: boolean zze()>
<com.facebook.react.views.slider.ReactSlider: double toRealProgress(int)>
<com.google.android.material.tabs.TabLayout: void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>
<android.view.View: boolean isShown()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)>
<com.microsoft.authenticator.graphclient.entities.GetCachedPolicyResult$Failure: com.microsoft.authenticator.graphclient.entities.FailureReason getFailureReason()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$1000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.adjust.sdk.SdkClickHandler: void logErrorMessageI(com.adjust.sdk.ActivityPackage,java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment: androidx.preference.Preference$OnPreferenceClickListener getOnTelemetryPreferenceListener()>
<com.airbnb.lottie.PerformanceTracker: void setEnabled(boolean)>
<java.lang.UnsatisfiedLinkError: java.lang.Throwable initCause(java.lang.Throwable)>
<android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
<android.view.MotionEvent: void setLocation(float,float)>
<com.facebook.react.uimanager.ShadowNodeRegistry: int getRootTag(int)>
<com.facebook.react.uimanager.ReactShadowNode: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode)>
<com.facebook.imagepipeline.producers.SettableProducerContext: void <init>(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority)>
<com.adjust.sdk.IActivityHandler: com.adjust.sdk.DeviceInfo getDeviceInfo()>
<com.google.android.gms.measurement.internal.zzeu: void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,long)>
<com.google.android.gms.internal.measurement.zzbd: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzbi)>
<com.airbnb.lottie.utils.MiscUtils: int floorDiv(int,int)>
<com.google.android.gms.internal.measurement.zzdf: void zzr(com.google.android.gms.internal.measurement.zzdf)>
<ch.qos.logback.core.util.FileUtil: void copy(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getBottomLeftCorner()>
<ch.qos.logback.core.helpers.NOPAppender: void <init>()>
<androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.material.textfield.IndicatorViewController: void addIndicator(android.widget.TextView,int)>
<com.google.android.gms.common.internal.TelemetryData: int zaa()>
<androidx.work.Worker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.fabric.mounting.mountitems.RemoveMountItem: void <init>(int,int,int)>
<com.google.android.gms.measurement.internal.zzgd: void zzy(java.lang.String,boolean)>
<ch.qos.logback.core.spi.CyclicBufferTracker: void <init>()>
<ch.qos.logback.core.joran.action.IncludeAction: java.lang.String getEventName(ch.qos.logback.core.joran.event.SaxEvent)>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalResourceFetchSequence()>
<com.google.android.gms.internal.measurement.zzlc: long zzf()>
<com.azure.authenticator.databinding.AccountListRowBinding: void <init>(android.widget.RelativeLayout)>
<com.fasterxml.jackson.core.JsonGenerator: void <init>()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: void fireDoneReconfiguring()>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>
<com.google.android.material.chip.ChipDrawable: void setChipStartPaddingResource(int)>
<com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdg zzc()>
<com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: int getMaxCacheSize()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback: com.microsoft.authenticator.backup.entities.CloudBackup access$getCloudBackup$p(com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback)>
<com.google.android.gms.internal.measurement.zzld: boolean zzd()>
<ch.qos.logback.core.Appender: void setName(java.lang.String)>
<com.facebook.yoga.YogaNode: float getLayoutWidth()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexWrap(com.facebook.yoga.YogaWrap)>
<com.google.android.gms.measurement.internal.zzai: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void gainFocus(int,android.graphics.Rect)>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean shouldUpdateGestureInset()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void applyLayoutUpdate(android.view.View,int,int,int,int)>
<com.google.android.gms.internal.measurement.zzjk: int zzs(int,java.util.List,boolean)>
<com.google.crypto.tink.KeyTypeManager: java.util.Set supportedPrimitives()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void finishObjectHeader(android.os.Parcel,int)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$QngqNXkKtao2HZat5po0VQphz68': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.google.android.material.transformation.FabTransformationBehavior: int getBackgroundTint(android.view.View)>
<com.airbnb.lottie.manager.FontAssetManager: android.graphics.Typeface getFontFamily(java.lang.String)>
<com.google.android.gms.common.api.internal.zabo: com.google.android.gms.common.api.Api$Client zae(com.google.android.gms.common.api.internal.zabo)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void showViewImpl()>
<com.adjust.sdk.ActivityHandler: void access$1300(com.adjust.sdk.ActivityHandler,android.net.Uri,long)>
<com.facebook.react.modules.network.NetworkInterceptorCreator: okhttp3.Interceptor create()>
<com.google.android.gms.auth.api.signin.internal.SignInHubActivity: int zzc(com.google.android.gms.auth.api.signin.internal.SignInHubActivity)>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackException(java.lang.Throwable,java.lang.String)>
<com.facebook.common.internal.ImmutableMap: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.azure.authenticator.storage.database.AccountStorage: boolean hasAccounts()>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<com.adjust.sdk.BackoffStrategy: void <init>(java.lang.String,int,int,long,long,double,double)>
<com.google.android.gms.maps.zzac: void <init>(com.google.android.gms.maps.MapView$zza,com.google.android.gms.maps.OnMapReadyCallback)>
<com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zaa()>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.google.android.gms.maps.model.zzs: void <init>(com.google.android.gms.maps.model.TileOverlayOptions)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)>
<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>
<com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void access$200(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)>
<com.google.android.material.button.MaterialButtonToggleGroup$1: void <init>(com.google.android.material.button.MaterialButtonToggleGroup)>
<com.facebook.common.references.SharedReference: boolean isValid()>
<com.facebook.react.bridge.JavaScriptContextHolder: void <init>(long)>
<com.adjust.sdk.AdjustInstance$1: void <init>(com.adjust.sdk.AdjustInstance,java.lang.String,java.lang.String)>
<com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()>
<com.google.android.material.timepicker.TimePickerView$OnPeriodChangeListener: void onPeriodChange(int)>
<android.os.PowerManager: boolean isDeviceIdleMode()>
<com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode: int getValue()>
<com.google.android.material.timepicker.RadialViewGroup: void setBackgroundColor(int)>
<com.google.android.datatransport.cct.internal.BatchedLogRequest: com.google.firebase.encoders.DataEncoder createDataEncoder()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: android.content.Context getContext()>
<com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)>
<com.github.amlcurran.showcaseview.TextDrawer: void setContentText(java.lang.CharSequence)>
<com.google.android.material.datepicker.CalendarItemStyle: com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int)>
<com.google.android.material.textfield.IndicatorViewController: void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)>
<com.azure.authenticator.databinding.AccountOtpViewLayoutBinding: com.azure.authenticator.databinding.AccountOtpViewLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean getTrustManagerFactory()>
<androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean,boolean)>
<com.facebook.infer.'annotation'.Assertions: void assertCondition(boolean)>
<ch.qos.logback.core.rolling.RollingFileAppender: void attemptRollover()>
<com.google.android.gms.measurement.internal.zzae: boolean zzh()>
<java.net.Socket: void setSoTimeout(int)>
<com.google.android.gms.measurement.internal.zzao: com.google.android.gms.measurement.internal.zzao zza(long)>
<com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)>
<ch.qos.logback.classic.spi.ThrowableProxyVO: void <init>()>
<com.facebook.react.views.view.ReactViewGroup: void <init>(android.content.Context)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
<dummyMainClass: androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver dummyMainMethod_androidx_work_impl_utils_ForceStopRunnable$BroadcastReceiver(android.content.Intent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.google.android.gms.location.SettingsClient settingsClient()>
<com.facebook.cache.disk.DiskCacheConfig$Builder: android.content.Context access$1000(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.google.android.gms.maps.MapFragment$zza: void onEnterAmbient(android.os.Bundle)>
<android.database.sqlite.SQLiteOpenHelper: void close()>
<com.google.android.material.resources.CancelableFontCallback: void updateIfNotCancelled(android.graphics.Typeface)>
<com.facebook.react.modules.datepicker.DatePickerDialogFragment: android.app.Dialog createDialog(android.os.Bundle,android.content.Context,android.app.DatePickerDialog$OnDateSetListener)>
<com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState: void <init>(com.google.android.material.shape.MaterialShapeDrawable)>
<androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)>
<com.adjust.sdk.ActivityHandler: void launchAttributionResponseTasksI(com.adjust.sdk.AttributionResponseData)>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: boolean checkAttributes(org.xml.sax.Attributes)>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean)>
<com.google.android.datatransport.runtime.logging.Logging: void i(java.lang.String,java.lang.String)>
<java.util.LinkedList: java.lang.Object poll()>
<com.facebook.react.animated.NativeAnimatedModule$4: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.internal.auth.zzr: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.microsoft.authenticator.reactnative.modules.VerifiableCredentialsPackage: void <init>()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)>
<com.airbnb.lottie.model.layer.Layer: int getPreCompHeight()>
<java.lang.String: boolean contentEquals(java.lang.CharSequence)>
<com.google.android.gms.maps.model.zzl: void <init>()>
<android.view.autofill.AutofillManager: void disableAutofillServices()>
<com.google.android.gms.common.internal.zal: void zac()>
<com.google.android.gms.internal.measurement.zzjs: boolean equals(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$12: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.cloudmessaging.zzh: void <init>(com.google.android.gms.cloudmessaging.zzf)>
<ch.qos.logback.core.joran.spi.InterpretationContext: ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry getDefaultNestedComponentRegistry()>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhs zzbx(java.lang.Class)>
<dummyMainClass: androidx.work.impl.background.systemjob.SystemJobService dummyMainMethod_androidx_work_impl_background_systemjob_SystemJobService(android.content.Intent)>
<com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener: void onTabReselected(com.google.android.material.tabs.TabLayout$Tab)>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: java.lang.String[] zzd(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.google.android.material.shape.MaterialShapeDrawable: void drawCompatShadow(android.graphics.Canvas)>
<com.google.android.material.card.MaterialCardViewHelper: boolean isCheckable()>
<com.airbnb.lottie.LottieAnimationView$5: void <init>(com.airbnb.lottie.LottieAnimationView,java.lang.String)>
<com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void <init>()>
<com.facebook.drawee.components.DraweeEventTracker: void <init>()>
<com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumEndEvent(android.view.ViewGroup)>
<com.microsoft.did.businesslogic.PresentationUseCase: void <init>(com.microsoft.did.sdk.PresentationService,com.microsoft.did.businesslogic.ReceiptUseCase,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.material.textfield.TextInputLayout: void dispatchOnEditTextAttached()>
<com.google.android.gms.internal.measurement.zzcd: boolean zzi()>
<com.google.android.gms.safetynet.zzj: void <init>()>
<com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>
<com.azure.authenticator.databinding.PasswordAutoChangeSuccessLayoutBinding: void <init>(android.widget.LinearLayout,android.widget.Button,android.widget.TextView,android.widget.TextView,com.airbnb.lottie.LottieAnimationView,android.widget.LinearLayout)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>
<com.google.android.gms.dynamite.DynamiteModule: void <init>(android.content.Context)>
<ch.qos.logback.core.net.SMTPAppenderBase: void setSmtpPort(int)>
<com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel build()>
<android.animation.ValueAnimator: void setStartDelay(long)>
<com.facebook.drawee.drawable.FadeDrawable: void fadeInAllLayers()>
<com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode resolveShadowNode(int)>
<com.facebook.common.memory.PooledByteBufferOutputStream: int size()>
<com.facebook.drawee.drawable.Rounded: void setBorder(int,float)>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String getStackTraceString(java.lang.Throwable)>
<com.google.android.material.internal.TextDrawableHelper: void updateTextPaintDrawState(android.content.Context)>
<com.google.android.material.transformation.ExpandableTransformationBehavior: boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean)>
<com.google.crypto.tink.KeysetManager: int randPositiveInt()>
<ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzkf: java.lang.Object zzA(com.google.android.gms.internal.measurement.zzdb,java.lang.String)>
<com.google.android.material.snackbar.SnackbarManager: void onShown(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.payment.PaymentSaveDatasetsUseCase: void <init>(com.microsoft.brooklyn.module.repository.PaymentsRepository)>
<com.airbnb.lottie.utils.LottieValueAnimator: void pauseAnimation()>
<com.google.android.gms.internal.measurement.zzo: com.google.android.gms.internal.measurement.zzp asInterface(android.os.IBinder)>
<ch.qos.logback.core.net.SMTPAppenderBase: boolean checkEntryConditions()>
<com.microsoft.authenticator.core.system.InputUtils: void hideSoftKeyboard(android.content.Context,android.os.IBinder)>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildClickPackage(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjh: int zzc()>
<com.google.android.gms.common.api.Status: void <init>(int,int,java.lang.String,android.app.PendingIntent,com.google.android.gms.common.ConnectionResult)>
<com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.measurement.zzcx: int zzb()>
<com.google.android.gms.cloudmessaging.zzn: void <init>(int,int,android.os.Bundle)>
<com.google.android.datatransport.cct.internal.LogRequest: com.google.android.datatransport.cct.internal.LogRequest$Builder builder()>
<com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)>
<com.android.installreferrer.api.InstallReferrerClient$Builder: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzjs: java.util.Map zzi(com.google.android.gms.internal.measurement.zzjs)>
<android.widget.TextView: void setMaxLines(int)>
<com.facebook.common.internal.Sets: java.util.Set newSetFromMap(java.util.Map)>
<com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>
<com.google.android.material.badge.BadgeUtils: com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray)>
<com.facebook.common.executors.StatefulRunnable: void disposeResult(java.lang.Object)>
<com.facebook.react.ReactInstanceManager: void <init>(android.content.Context,android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader,java.lang.String,java.util.List,boolean,com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener,com.facebook.react.common.LifecycleState,com.facebook.react.uimanager.UIImplementationProvider,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.devsupport.RedBoxHandler,boolean,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,int,com.facebook.react.bridge.JSIModulePackage,java.util.Map)>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$BatchedLogRequestEncoder: void encode(com.google.android.datatransport.cct.internal.BatchedLogRequest,com.google.firebase.encoders.ObjectEncoderContext)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: java.util.Set getRequestListeners()>
<com.facebook.react.modules.core.ChoreographerCompat: void postFrameCallback(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)>
<com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()>
<android.widget.Button: int getCurrentTextColor()>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean handleBOM(int)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showResult(java.lang.String)>
<com.facebook.react.modules.network.NetworkingModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)>
<com.google.android.gms.measurement.internal.zzjt: int zzi()>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)>
<com.google.android.gms.measurement.internal.zzey: void <init>(com.google.android.gms.measurement.internal.zzez,com.google.android.gms.internal.measurement.zzf,android.content.ServiceConnection)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: java.util.HashMap access$000(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs)>
<ch.qos.logback.core.helpers.CyclicBuffer: java.lang.Object get(int)>
<com.google.android.gms.internal.measurement.zzni: boolean zza()>
<com.microsoft.authenticator.commonuilibrary.ui.AppLockActivity_MembersInjector: void injectDeviceScreenLockManager(com.microsoft.authenticator.commonuilibrary.ui.AppLockActivity,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockManager)>
<android.widget.RelativeLayout: int getMeasuredHeight()>
<com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayDeque access$2800(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()>
<com.microsoft.onlineid.sdk.extension.SessionManager: com.microsoft.onlineid.sdk.extension.Session parseSessionFromNotification(android.content.Context,android.os.Bundle)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.mfasdk.authentication.ui.MfaRichContextFragment injectMfaRichContextFragment2(com.microsoft.authenticator.mfasdk.authentication.ui.MfaRichContextFragment)>
<com.facebook.react.bridge.Dynamic: double asDouble()>
<com.google.android.gms.auth.api.signin.internal.zzc: void <init>()>
<com.google.android.gms.measurement.internal.zzho: java.lang.String zzh()>
<com.facebook.react.views.view.ReactViewManager$1: void <init>(com.facebook.react.views.view.ReactViewManager,com.facebook.react.views.view.ReactViewGroup)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)>
<com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase: boolean uploadLogs$default(com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase,java.lang.String,java.util.UUID,java.lang.Iterable,boolean,com.microsoft.powerlift.platform.IncidentAndFileListener,java.util.Map,int,java.lang.Object)>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setProgress(android.view.View,double)>
<com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1: com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.measurement.internal.zzee: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener)>
<com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback: void <init>(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$1)>
<com.evernote.android.job.JobStorage$JobCacheId: void <init>(com.evernote.android.job.JobStorage)>
<com.airbnb.lottie.utils.Utils$3: void <init>()>
<com.google.android.gms.internal.location.zzav: void zzo()>
<com.google.android.gms.common.zzh: void <init>(byte[])>
<com.facebook.react.bridge.CatalystInstanceImpl$1: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()>
<androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)>
<android.graphics.RectF: void setEmpty()>
<java.util.concurrent.FutureTask: java.lang.Object get()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.google.android.gms.location.FusedLocationProviderClient fusedLocationProviderClient()>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void <init>(com.facebook.react.uimanager.ViewManagerRegistry)>
<com.google.android.material.chip.Chip: void setGravity(int)>
<com.google.common.collect.Maps$EntryFunction: void <init>(java.lang.String,int,com.google.common.collect.Maps$1)>
<com.google.android.gms.measurement.internal.zzib: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.google.android.gms.tasks.zzw: void zzh()>
<com.google.android.gms.maps.model.CameraPosition$Builder: void <init>()>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>
<ch.qos.logback.core.status.WarnStatus: void <init>(java.lang.String,java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$1: void <init>()>
<com.google.android.gms.measurement.internal.zzkd: void zzv(java.lang.String,com.google.android.gms.measurement.internal.zzaf)>
<androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int)>
<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper getInstance()>
<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>
<com.google.android.gms.measurement.internal.zzec: boolean zzn()>
<com.facebook.shimmer.ShimmerDrawable: void draw(android.graphics.Canvas)>
<java.util.ListIterator: boolean hasPrevious()>
<com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setTransportName(java.lang.String)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setTrafficEnabled(boolean)>
<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig: int getGoodEnoughScanNumber()>
<com.google.android.gms.measurement.internal.zzej: com.google.android.gms.measurement.internal.zzas zzb()>
<com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase: java.lang.Object installCertificate(android.app.Activity,kotlin.coroutines.Continuation)>
<com.azure.authenticator.databinding.FragmentEditAddAddressBinding: void <init>(android.widget.ScrollView,android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView,android.widget.LinearLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<com.facebook.react.modules.core.JavaTimerManager: void clearChoreographerIdleCallback()>
<com.google.android.material.appbar.MaterialToolbar: void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean requiresAccount()>
<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>
<com.google.android.gms.internal.measurement.zzja: com.google.android.gms.internal.measurement.zzja zzl(com.google.android.gms.internal.measurement.zzjh,com.google.android.gms.internal.measurement.zzjc,com.google.android.gms.internal.measurement.zzil,com.google.android.gms.internal.measurement.zzjw,com.google.android.gms.internal.measurement.zzhf,com.google.android.gms.internal.measurement.zzis)>
<com.google.android.gms.measurement.internal.zzeo: boolean zzb()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: java.lang.Integer get()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()>
<com.facebook.soloader.SysUtil: int copyBytes(java.io.RandomAccessFile,java.io.InputStream,int,byte[])>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: void <init>()>
<com.microsoft.authenticator.backup.entities.RetrieveBackupResult$Error: com.microsoft.authenticator.backup.entities.BackupRestoreError getError()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setInvisibilityEventTimeMs(long)>
<com.google.android.gms.safetynet.zzj: void zza(com.google.android.gms.safetynet.SafeBrowsingData,android.os.Parcel,int)>
<androidx.activity.ComponentActivity: void setContentView(android.view.View)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollToChild(android.view.View)>
<com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor: void getRadii(android.graphics.Bitmap,float[],float[])>
<com.google.android.gms.internal.measurement.zzgz: int zzz(com.google.android.gms.internal.measurement.zzif)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>
<okhttp3.RequestBody: long contentLength()>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<android.view.ViewGroup: int getTop()>
<com.google.android.gms.common.api.internal.zabv: void <init>(com.google.android.gms.common.api.internal.ListenerHolder,android.os.Looper)>
<com.google.android.material.animation.MotionTiming: int getRepeatMode()>
<com.adjust.sdk.SharedPreferencesManager: void setGdprForgetMe()>
<com.facebook.react.ReactNativeHost: java.lang.String getJSBundleFile()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)>
<com.facebook.imagepipeline.producers.ThreadHandoffProducer: com.facebook.imagepipeline.producers.Producer access$000(com.facebook.imagepipeline.producers.ThreadHandoffProducer)>
<com.facebook.react.ReactPackageLogger: void endProcessPackage()>
<com.google.android.gms.measurement.internal.zzkd: void zzaj()>
<com.google.android.gms.common.data.DataBufferIterator: void <init>(com.google.android.gms.common.data.DataBuffer)>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>
<com.google.android.gms.common.api.internal.zzb: void <init>()>
<com.google.android.material.shape.MaterialShapeDrawable: void setStrokeWidth(float)>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,char)>
<com.microsoft.authenticator.experimentation.ExperimentationManager: androidx.work.Operation enqueueGetFlightData()>
<androidx.navigation.Navigation: androidx.navigation.NavController findNavController(android.app.Activity,int)>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<android.widget.LinearLayout: void setTouchscreenBlocksFocus(boolean)>
<com.google.android.gms.common.internal.zzm: android.content.ComponentName zzb()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance()>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void access$showSendFeedbackDialog(com.azure.authenticator.ui.dialog.StoreRatingTask,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvidePasswordChangeLoggerFactory: com.microsoft.vienna.vienna_utils_lib.logging.ILogger providePasswordChangeLogger(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<android.widget.EditText: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<com.google.android.material.elevation.ElevationOverlayProvider: boolean isThemeSurfaceColor(int)>
<com.google.android.gms.common.internal.zzo: boolean zze()>
<com.azure.authenticator.accounts.AadAccount: void setReplicationScope(java.lang.String)>
<javax.net.ssl.SSLSocket: void <init>()>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableList createAsList()>
<com.google.common.collect.MapMakerInternalMap$Segment: void drainValueReferenceQueue(java.lang.ref.ReferenceQueue)>
<com.google.android.gms.common.ConnectionResult: int getErrorCode()>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setOnStreetViewPanoramaLongClickListener(com.google.android.gms.maps.internal.zzbn)>
<com.facebook.cache.disk.DiskStorage$Entry: long getSize()>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: com.facebook.common.memory.PooledByteBufferFactory access$000(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer)>
<ch.qos.logback.classic.util.LevelToSyslogSeverity: int convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<androidx.recyclerview.widget.LinearLayoutManager: int findFirstVisibleItemPosition()>
<com.google.android.material.appbar.HeaderBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>
<com.google.android.gms.common.server.response.FastParser: boolean zae(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader,boolean)>
<com.google.android.gms.internal.auth-api.zzae: void zzc(com.google.android.gms.common.api.Status,android.app.PendingIntent)>
<com.microsoft.brooklyn.ui.common.FragmentUtils: java.lang.Boolean isAuthenticatorDefaultAutofillProvider(androidx.fragment.app.FragmentActivity)>
<android.widget.Button: android.content.res.ColorStateList getTextColors()>
<com.google.android.gms.common.server.response.FastParser: boolean zar(java.io.BufferedReader,boolean)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.adjust.sdk.InstallReferrer: java.lang.Object getInstallReferrer()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel_Factory: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel newInstance(com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager,com.azure.authenticator.ui.action.ActionStateManager,com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager,com.microsoft.authenticator.selfhost.SelfhostConfigManager)>
<com.google.common.base.Equivalence$Equals: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$3: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<android.widget.ImageButton: android.content.res.Resources getResources()>
<com.google.android.gms.internal.maps.zzt: void hideInfoWindow()>
<com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void <init>(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.textinput.ReactEditText$1)>
<com.google.android.gms.measurement.internal.zzfa: void zza(java.lang.String)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int primaryCount()>
<com.google.android.gms.common.internal.Objects$ToStringHelper: void <init>(java.lang.Object,com.google.android.gms.common.internal.zzag)>
<ch.qos.logback.core.pattern.FormatInfo: boolean isLeftPad()>
<android.widget.FrameLayout: void setLongClickable(boolean)>
<com.google.common.base.Ascii: java.lang.String truncate(java.lang.CharSequence,int,java.lang.String)>
<okio.ForwardingSource: long read(okio.Buffer,long)>
<com.microsoft.did.feature.cardflow.presentationlogic.CardFlowRules: void <init>(android.content.Context,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)>
<java.util.ArrayList: boolean containsAll(java.util.Collection)>
<com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)>
<com.google.android.gms.internal.measurement.zzmo: void <init>()>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: void startAndRecordFpsAtEachFrame()>
<java.io.BufferedReader: int read(char[],int,int)>
<android.widget.TextView: void setBreakStrategy(int)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: com.google.android.gms.maps.internal.IProjectionDelegate getProjection()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.adjust.sdk.ActivityHandler$28: void <init>(com.adjust.sdk.ActivityHandler)>
<com.evernote.android.job.JobCreatorHolder: void <init>()>
<com.facebook.react.views.textinput.ReactTextChangedEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.microsoft.did.feature.backuprestore.presentationlogic.BackupViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<java.util.concurrent.Future: boolean cancel(boolean)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void onAfterUpdateTransaction()>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getAadAccount(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzja: java.lang.reflect.Field zzn(java.lang.Class,java.lang.String)>
<com.adjust.sdk.DeviceInfo: java.lang.String getScreenDensity(android.util.DisplayMetrics)>
<com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingHandler: void <init>(com.microsoft.brooklyn.module.enterpriseDenyList.persistence.EnterpriseDenyListStorage,com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingSvcInterface)>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
<com.google.android.gms.internal.auth-api.zzaq: void <init>(com.google.android.gms.internal.auth-api.zzao)>
<com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaFcmChangeDeviceTokenWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase,com.microsoft.authenticator.mfasdk.storage.MfaSdkLocalStorage)>
<com.google.android.gms.internal.safetynet.zzk: com.google.android.gms.common.api.PendingResult zza(com.google.android.gms.common.api.GoogleApiClient,java.lang.String,int,java.lang.String,int[])>
<com.google.android.material.floatingactionbutton.FloatingActionButton: int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.airbnb.lottie.model.animatable.AnimatableValue: java.util.List getKeyframes()>
<com.evernote.android.job.JobApi: void <init>(java.lang.String,int,boolean,boolean,boolean)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment: void <init>()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zah(java.lang.Iterable)>
<com.google.android.gms.measurement.internal.zzig: void <init>(com.google.android.gms.measurement.internal.zzjb,java.util.concurrent.atomic.AtomicReference,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.internal.measurement.zzbt: com.google.android.gms.internal.measurement.zzbw zze(int)>
<com.google.android.material.shape.MaterialShapeDrawable: void setInterpolation(float)>
<com.google.android.gms.common.internal.BaseGmsClient: void onConnectedLocked(android.os.IInterface)>
<java.util.concurrent.atomic.AtomicLong: void <init>()>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()>
<com.microsoft.authenticator.core.logging.BaseLogger: void d(java.lang.String)>
<com.facebook.cache.disk.DynamicDefaultDiskStorage: void createRootDirectoryIfNecessary(java.io.File)>
<java.util.concurrent.CopyOnWriteArrayList: void clear()>
<android.app.Activity: void setIntent(android.content.Intent)>
<com.google.android.gms.measurement.internal.zzjb: void zzR()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyDatabase appPolicyDatabase()>
<com.google.android.gms.common.internal.zat: void <init>(android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount)>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.repository.CredentialsRepository getCredentialsRepository()>
<com.google.android.gms.internal.measurement.zzdn: com.google.android.gms.internal.measurement.zzdn zza(int)>
<com.facebook.react.views.drawer.ReactDrawerLayout: void closeDrawer()>
<com.facebook.yoga.YogaNode: void addChildAt(com.facebook.yoga.YogaNode,int)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int calcHash(char[],int,int)>
<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()>
<com.google.android.gms.internal.measurement.zzen: java.util.Map zzf()>
<com.adjust.sdk.AttributionHandler: void init(com.adjust.sdk.IActivityHandler,boolean)>
<com.google.android.gms.common.internal.zae: void <init>(android.content.Intent,androidx.fragment.app.Fragment,int)>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void addListener(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener)>
<com.microsoft.authenticator.core.telemetry.TelemetryManager$Companion: com.microsoft.authenticator.core.telemetry.TelemetryManager getInstance()>
<com.google.android.gms.internal.measurement.zzjs: void zzm()>
<com.airbnb.lottie.animation.keyframe.PointKeyframeAnimation: android.graphics.PointF getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.gms.common.server.response.zag: void <init>()>
<com.facebook.react.views.viewpager.ReactViewPager: android.view.ViewGroup$LayoutParams access$000(com.facebook.react.views.viewpager.ReactViewPager)>
<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()>
<com.google.common.collect.MapMakerInternalMap$Segment: void tryDrainReferenceQueues()>
<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: boolean getCheckForInvalidMfaAccount()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Boolean lambda$hasPendingEventsFor$5(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext,android.database.sqlite.SQLiteDatabase)>
<com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.KeyStatusType getStatus()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.microsoft.authenticator.registration.thirdparty.businessLogic.ActivationParametersParserThirdParty: void <init>()>
<com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)>
<com.adjust.sdk.ActivityHandler: void resumeSendingI()>
<com.google.android.gms.common.api.internal.zabu: void zae()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.wstrust.WSTrustTicketProvider wSTrustTicketProvider()>
<com.facebook.react.modules.network.NetworkingModule$1$1: void <init>(com.facebook.react.modules.network.NetworkingModule$1)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>
<com.facebook.imagepipeline.producers.NetworkFetcher: boolean shouldPropagate(com.facebook.imagepipeline.producers.FetchState)>
<com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: int getMemoryChunkType(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments)>
<com.google.android.gms.internal.measurement.zzem: void <init>(com.google.android.gms.internal.measurement.zzen,android.os.Handler)>
<com.facebook.react.common.futures.SimpleSettableFuture: void <init>()>
<com.google.android.gms.common.internal.zac: java.lang.String zag(android.content.Context)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: java.io.FilenameFilter createExpiredFileFilter(java.util.Date)>
<com.google.android.material.shape.ShapePath$1: void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix)>
<com.facebook.react.uimanager.UIViewOperationQueue: void addRootView(int,android.view.View)>
<com.google.android.material.transformation.ExpandableBehavior: boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean)>
<com.microsoft.onlineid.ExtensionAccountManager: void getAccountFromTransferToken(java.lang.String,android.os.Bundle)>
<com.adjust.sdk.ActivityHandler: void removeSessionPartnerParameterI(java.lang.String)>
<java.io.PrintStream: void println()>
<android.app.Service: void onCreate()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider scanQrCodeViewModelProvider()>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>
<com.facebook.imagepipeline.request.BasePostprocessor: void <init>()>
<com.microsoft.onlineid.sdk.extension.Session: java.util.Date calculateClientRequestTime(android.content.Context)>
<android.widget.LinearLayout: boolean performClick()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_8_9$cp()>
<com.google.crypto.tink.KeyTypeManager: com.google.crypto.tink.shaded.protobuf.MessageLite parseKey(com.google.crypto.tink.shaded.protobuf.ByteString)>
<android.view.View: int getHeight()>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher isNot(char)>
<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInitialDelay(long,java.util.concurrent.TimeUnit)>
<com.facebook.react.views.viewpager.ReactViewPager$1: void <init>(com.facebook.react.views.viewpager.ReactViewPager)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: java.lang.String querySharedDeviceRegistrationPrefillUpnAppRestriction()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
<com.google.android.gms.internal.ads_identifier.zze: boolean zzb(boolean)>
<ch.qos.logback.core.joran.spi.InterpretationContext: java.util.Map getCopyOfPropertyMap()>
<com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF)>
<com.google.android.gms.internal.measurement.zzkh: java.lang.reflect.Field zzG(java.lang.Class,java.lang.String)>
<com.facebook.react.modules.i18nmanager.I18nUtil: void swapLeftAndRightInRTL(android.content.Context,boolean)>
<com.facebook.react.uimanager.ReactRoot: android.os.Bundle getAppProperties()>
<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>
<com.google.common.io.BaseEncoding: int maxEncodedSize(int)>
<com.google.android.gms.auth.api.proxy.zza: void <init>()>
<com.google.android.gms.common.api.internal.zax: com.google.android.gms.common.ConnectionResult zat(com.google.android.gms.common.api.internal.zax)>
<android.widget.EditText: android.text.Layout getLayout()>
<com.google.android.gms.internal.measurement.zzdb: int zzj()>
<okhttp3.Dispatcher: java.util.List queuedCalls()>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.lang.String getLocation()>
<com.google.android.gms.internal.measurement.zzir: java.util.Set entrySet()>
<com.google.common.base.CaseFormat: java.lang.String firstCharOnlyToUpper(java.lang.String)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>
<android.content.DialogInterface$OnDismissListener: void onDismiss(android.content.DialogInterface)>
<com.airbnb.lottie.utils.LottieValueAnimator: float getFrameDurationNs()>
<android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace$Named)>
<com.airbnb.lottie.LottieDrawable: void <init>()>
<com.google.android.material.button.MaterialButtonHelper: int getInsetTop()>
<com.adjust.sdk.RequestHandler$1: void <init>(com.adjust.sdk.RequestHandler,com.adjust.sdk.ActivityPackage,int)>
<com.google.android.gms.common.server.response.zai: java.lang.Object zaa(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.cache.common.CacheKey,boolean)>
<androidx.startup.InitializationProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.azure.authenticator.ui.dialog.AppDialogFragments: void <init>(androidx.fragment.app.FragmentActivity)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.MutableLiveData getAdditionalAuthDetails()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory()>
<com.facebook.cache.disk.DiskStorageCache: boolean access$100(com.facebook.cache.disk.DiskStorageCache)>
<com.google.android.gms.internal.measurement.zzeb: com.google.android.gms.internal.measurement.zzeb zza()>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient build()>
<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: boolean hasAadNgcAccounts()>
<com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: void <init>(com.facebook.react.uimanager.LayoutShadowNode$1)>
<com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)>
<dummyMainClass: com.azure.authenticator.OnAppUpgradeReceiver dummyMainMethod_com_azure_authenticator_OnAppUpgradeReceiver(android.content.Intent)>
<com.google.android.material.shadow.ShadowViewDelegate: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.api.internal.zaaq: void zaa()>
<com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings build()>
<com.facebook.react.views.modal.ReactModalHostView$1: void <init>(com.facebook.react.views.modal.ReactModalHostView)>
<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinFirstLineRootCauseFirst(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.azure.authenticator.storage.Storage_Factory: com.azure.authenticator.storage.Storage get()>
<com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1: int getSizeInBytes(com.facebook.common.memory.PooledByteBuffer)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$1: void onChanged(java.util.List)>
<com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: java.lang.Integer getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)>
<com.evernote.android.job.JobRequest: boolean requirementsEnforced()>
<com.adjust.sdk.ActivityPackage: com.adjust.sdk.ActivityKind getActivityKind()>
<com.facebook.imagepipeline.transcoder.DownsampleUtil: float determineDownsampleRatio(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage)>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()>
<com.airbnb.lottie.LottieAnimationView$SavedState$1: void <init>()>
<android.widget.FrameLayout: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<com.facebook.yoga.YogaConfigJNIFinalizer: void freeNatives()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize)>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimation(android.view.View,int,int,int,int)>
<com.google.android.gms.common.zzq: java.lang.String zzb()>
<androidx.preference.PreferenceFragmentCompat: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_GeneratedInjector: void injectAccountListFragment(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<android.text.TextPaint: void setTextSkewX(float)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _skipColon2(boolean)>
<com.google.android.material.bottomnavigation.BottomNavigationView: void setItemHorizontalTranslationEnabled(boolean)>
<com.facebook.react.uimanager.events.Event: void <init>()>
<com.google.android.gms.common.api.internal.zabl: void zaj()>
<com.google.android.gms.auth.api.signin.internal.zzp: void zzq()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeSegmentedRaw(char[],int,int)>
<com.azure.authenticator.databinding.FrxSyncToggleScreenBinding: android.widget.ScrollView getRoot()>
<com.azure.authenticator.ui.fragment.accounts.FluentDesignItemListDivider: void drawHeader(android.graphics.drawable.Drawable,androidx.recyclerview.widget.RecyclerView,android.graphics.Canvas)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnPolylineClickListener(com.google.android.gms.maps.internal.zzbf)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: byte[] serializeToBytes(com.google.android.gms.common.internal.safeparcel.SafeParcelable)>
<com.facebook.react.uimanager.MatrixMathHelper: void applySkewX(double[],double)>
<android.app.Fragment: void onResume()>
<com.facebook.cache.disk.DiskStorage: long remove(java.lang.String)>
<android.widget.ScrollView: void setVisibility(int)>
<com.facebook.datasource.AbstractDataSource: boolean setProgressInternal(float)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_8_9()>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: void setActivityState(com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getChildCount()>
<com.google.android.gms.measurement.internal.zzae: boolean zzs()>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.PooledByteStreams getPooledByteStreams()>
<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>
<com.airbnb.lottie.utils.MiscUtils: int floorMod(float,float)>
<com.azure.authenticator.storage.Storage: void writeSerializedSessionRecordList(java.lang.String)>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<com.facebook.react.uimanager.ThemedReactContext: boolean isBridgeless()>
<android.widget.ImageButton: void setLayerType(int,android.graphics.Paint)>
<com.google.android.gms.internal.safetynet.zzm: void <init>(com.google.android.gms.internal.safetynet.zzk,com.google.android.gms.common.api.GoogleApiClient,java.util.List,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: void zzat(com.google.android.gms.internal.measurement.zzdj,java.lang.Iterable)>
<com.facebook.datasource.DataSubscriber: void onNewResult(com.facebook.datasource.DataSource)>
<java.lang.StringBuffer: char charAt(int)>
<com.facebook.drawee.interfaces.SettableDraweeHierarchy: void setFailure(java.lang.Throwable)>
<android.app.Fragment: int getId()>
<com.azure.authenticator.storage.Storage: void setShowTurnOffBatteryOptimizationAction(boolean)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: void <init>(java.lang.String,com.microsoft.onlineid.Ticket,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo getFpsInfo(long)>
<ch.qos.logback.classic.net.SyslogAppender: void handleThrowableFirstLine(java.io.OutputStream,ch.qos.logback.classic.spi.IThrowableProxy,java.lang.String,boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void startSlideInAnimation()>
<android.os.Parcel: void writeFloat(float)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void decreaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<androidx.startup.InitializationProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<androidx.sqlite.db.SupportSQLiteDatabase: void endTransaction()>
<com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int)>
<com.google.android.gms.common.api.internal.zabl: void zaC(int)>
<com.google.android.gms.common.ConnectionResult: void <init>(int,android.app.PendingIntent)>
<javax.net.ssl.SSLServerSocket: void setWantClientAuth(boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar$3: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)>
<com.google.android.gms.common.api.Api$Client: java.util.Set getScopesForConnectionlessNonSignIn()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean uidHasPackageName(android.content.Context,int,java.lang.String)>
<com.facebook.react.uimanager.common.ViewUtil: boolean isRootTag(int)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getSecondaryButtonText()>
<com.google.android.material.transformation.FabTransformationBehavior: com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)>
<com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: void <init>(int,java.lang.String)>
<com.google.android.material.shape.MaterialShapeDrawable: float getZ()>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<com.adjust.sdk.AdjustFactory$1$2: void <init>(com.adjust.sdk.AdjustFactory$1)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void disableAppLock()>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zza(int)>
<com.google.android.datatransport.cct.internal.ClientInfo$Builder: com.google.android.datatransport.cct.internal.ClientInfo$Builder setClientType(com.google.android.datatransport.cct.internal.ClientInfo$ClientType)>
<com.adjust.sdk.ActivityKind: java.lang.String toString()>
<com.facebook.jni.HybridData$Destructor: void <init>(java.lang.Object)>
<com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context,int)>
<com.google.android.gms.auth.zzd: void ensurePlayServicesAvailable(android.content.Context,int)>
<com.google.android.gms.internal.measurement.zzdf: com.google.android.gms.internal.measurement.zzde zzn()>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemBackgroundRes(int)>
<com.google.android.gms.internal.auth-api.zzr: android.app.PendingIntent zzc(android.content.Context,com.google.android.gms.auth.api.Auth$AuthCredentialsOptions,com.google.android.gms.auth.api.credentials.HintRequest,java.lang.String)>
<com.github.amlcurran.showcaseview.AnimationFactory: void fadeOutView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$initialize$2: void <init>(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfigManager getInstance()>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>
<com.google.android.gms.location.LocationCallback: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate: void <init>(com.facebook.react.uimanager.BaseViewManagerInterface)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>
<com.azure.authenticator.databinding.FragmentViewPaymentBinding: com.azure.authenticator.databinding.FragmentViewPaymentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.fasterxml.jackson.core.JsonToken: boolean isScalarValue()>
<com.airbnb.lottie.parser.AnimatableTransformParser: com.airbnb.lottie.model.animatable.AnimatableTransform parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity_MembersInjector: void injectStorage(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity,com.azure.authenticator.storage.Storage)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: ch.qos.logback.core.net.server.ServerRunner createServerRunner(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor)>
<com.google.android.gms.internal.measurement.zzld: boolean zzc()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onLowMemory()>
<ch.qos.logback.classic.util.LogbackMDCAdapter: java.util.Map getPropertyMap()>
<com.facebook.react.modules.timepicker.DismissableTimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)>
<com.google.android.gms.dynamic.zaf: void <init>(com.google.android.gms.dynamic.DeferredLifecycleHelper)>
<com.google.android.gms.location.SettingsClient: void <init>(android.app.Activity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.navigation.InterModuleActivityLauncher access$2600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<com.airbnb.lottie.LottieLogger: void error(java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$getNearestAddress$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void transitionLayoutOnlyViewToNativeView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: boolean access$1100(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.adjust.sdk.AdjustInstance: void setEnabled(boolean)>
<android.app.Application$ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>
<com.google.android.gms.measurement.internal.zzg: void zzM(long)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions camera(com.google.android.gms.maps.model.CameraPosition)>
<com.facebook.react.bridge.CallbackImpl: void <init>(com.facebook.react.bridge.JSInstance,int)>
<ch.qos.logback.core.net.SocketConnector: void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler)>
<com.google.android.gms.common.images.WebImage: int getWidth()>
<android.graphics.Path: void reset()>
<com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager getReactInstanceManager()>
<com.google.android.gms.common.data.EntityBuffer: java.lang.Object getEntry(int,int)>
<com.airbnb.lottie.animation.content.ContentGroup: java.util.List getPathList()>
<com.google.android.gms.internal.measurement.zzjw: void zze(java.lang.Object)>
<android.os.Binder: void restoreCallingIdentity(long)>
<com.google.android.gms.internal.measurement.zzbr: void zzL(com.google.android.gms.internal.measurement.zzbr,java.lang.Exception,boolean,boolean)>
<com.google.android.material.datepicker.MaterialCalendarGridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showAddMsaAccountDialog()>
<android.widget.FrameLayout: int getId()>
<com.facebook.react.views.image.ReactImageView$TilePostprocessor: void <init>(com.facebook.react.views.image.ReactImageView,com.facebook.react.views.image.ReactImageView$1)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>
<com.facebook.react.common.SystemClock: long nanoTime()>
<com.facebook.react.bridge.ModuleSpec: java.lang.Class getType()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$onCreatePreferences$2: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>
<com.google.android.material.chip.ChipGroup: boolean isSingleLine()>
<com.google.android.gms.common.internal.GmsLogger: java.lang.String zzb(java.lang.String,java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzkg: void zzd(java.lang.Object,long,boolean)>
<com.facebook.cache.disk.DefaultDiskStorage: void mkdirs(java.io.File,java.lang.String)>
<com.google.android.material.tabs.TabLayout$Tab: void setPosition(int)>
<kotlin.Pair: java.lang.Object getFirst()>
<android.app.Fragment: void onDestroyView()>
<com.facebook.react.uimanager.UIImplementation: void assertNodeDoesNotNeedCustomLayoutForChildren(com.facebook.react.uimanager.ReactShadowNode)>
<com.google.android.gms.common.api.zae: void <init>(com.google.android.gms.common.api.Result)>
<com.google.android.material.datepicker.MonthsPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<com.azure.authenticator.storage.database.DbAccount: boolean getAadSecurityDefaultsPolicyEnabled()>
<com.facebook.react.ReactPackageHelper$1$1: com.facebook.react.bridge.ModuleHolder next()>
<com.google.android.gms.common.api.internal.zacv: boolean zam()>
<com.google.common.base.Splitter: java.util.Iterator splittingIterator(java.lang.CharSequence)>
<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>
<com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdg: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.common.BrooklynBGTaskScheduler brooklynBGTaskScheduler()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: java.util.List zzd(java.util.List)>
<androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.adjust.sdk.ActivityHandler$1: void <init>(com.adjust.sdk.ActivityHandler)>
<com.facebook.react.fabric.FabricUIManager: void tryDispatchMountItems()>
<com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.telemetry.TelemetryManager getTelemetryManager()>
<android.widget.LinearLayout: void setChildrenDrawingOrderEnabled(boolean)>
<com.google.android.gms.safetynet.zzn: void <init>(com.google.android.gms.safetynet.SafetyNetClient)>
<com.google.android.material.resources.MaterialResources: boolean isFontScaleAtLeast2_0(android.content.Context)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: com.facebook.datasource.DataSource get()>
<com.google.android.material.stateful.ExtendableSavedState$1: com.google.android.material.stateful.ExtendableSavedState[] newArray(int)>
<com.google.android.gms.internal.measurement.zzli: boolean zzb()>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetricsIfNotInitialized(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardinfo.presentationlogic.CardInfoViewModel cardInfoViewModel()>
<dummyMainClass: com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity dummyMainMethod_com_azure_authenticator_authentication_msa_ui_SignOutMsaAccountActivity(android.content.Intent)>
<java.net.URLConnection: void setUseCaches(boolean)>
<com.google.android.material.textfield.IndicatorViewController: void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_5_7()>
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zza(java.lang.String)>
<com.facebook.yoga.YogaNode: void markLayoutSeen()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$startWorkplaceJoin$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,java.lang.String,java.util.Map,kotlin.coroutines.Continuation)>
<com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum: com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum[] values()>
<com.google.android.gms.auth.api.signin.internal.Storage: void zad(java.lang.String)>
<androidx.transition.TransitionSet: androidx.transition.TransitionSet setDuration(long)>
<com.google.android.gms.maps.MapFragment$zzb: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)>
<com.airbnb.lottie.value.Keyframe: void <init>(java.lang.Object)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.content.ShapeStroke$LineCapType getCapType()>
<com.airbnb.lottie.model.Font: java.lang.String getFamily()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Parcel createParcel(android.os.Parcel,int)>
<com.google.android.gms.internal.measurement.zzky: void <init>()>
<java.lang.Character: java.lang.Character valueOf(char)>
<android.widget.TextView: android.view.ViewPropertyAnimator animate()>
<com.google.android.gms.common.api.ResultTransform: com.google.android.gms.common.api.Status onFailure(com.google.android.gms.common.api.Status)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_27_28$cp()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: androidx.lifecycle.LiveData getMergeBrokerAccountStatus()>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void <init>()>
<com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize)>
<com.google.android.material.button.MaterialButton: boolean isCheckable()>
<com.azure.authenticator.databinding.DataPlaceholderLayoutBinding: com.azure.authenticator.databinding.DataPlaceholderLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.measurement.internal.zzfg: void <init>(com.google.android.gms.measurement.internal.zzfi,java.util.concurrent.Callable,boolean,java.lang.String)>
<android.graphics.Paint: void setColor(int)>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void flashScrollIndicators(java.lang.Object)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.LiveData getApproveSessionResult()>
<com.azure.authenticator.notifications.msa.MsaProtectionNotification_Factory: com.azure.authenticator.notifications.msa.MsaProtectionNotification get()>
<androidx.work.ForegroundInfo: int getNotificationId()>
<com.google.android.gms.internal.measurement.zznf: boolean zza()>
<com.google.android.gms.common.images.zad: void <init>(android.net.Uri)>
<com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator: void <init>(com.facebook.imagepipeline.memory.PoolFactory)>
<android.widget.ImageButton: void setId(int)>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams$RoundingMethod getRoundingMethod()>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzag()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void prePopulateAccountInformation()>
<android.os.Parcel: int readInt()>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>
<com.adjust.sdk.ActivityHandler: void backgroundTimerFiredI()>
<com.evernote.android.job.JobManager: boolean cancelInner(com.evernote.android.job.JobRequest)>
<com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding: com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding bind(android.view.View)>
<java.util.AbstractList: boolean retainAll(java.util.Collection)>
<com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()>
<com.facebook.soloader.UnpackingSoSource$Unpacker: void close()>
<com.microsoft.brooklyn.module.common.BrooklynStorage$Companion: boolean readIsAutofillEnabled(android.content.Context)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.FillResponseUnsignedUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations,com.microsoft.brooklyn.module.autofill.response.businesslogic.AutofillNudgeHelper,com.microsoft.brooklyn.module.autofill.FormInfoHelper)>
<com.adjust.sdk.Util: java.lang.Object readObject(android.content.Context,java.lang.String,java.lang.String,java.lang.Class)>
<com.google.android.material.shape.MaterialShapeDrawable: float getBottomRightCornerResolvedSize()>
<com.google.android.gms.common.GoogleSignatureVerifier: void <init>(android.content.Context)>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: void maybeSetIndexOfDataSourceWithResult(int,com.facebook.datasource.DataSource,boolean)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String toRegex(ch.qos.logback.core.util.CharSequenceState)>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: android.graphics.Bitmap get(int)>
<com.google.android.gms.internal.measurement.zzds: com.google.android.gms.internal.measurement.zzdr zzf()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.'unknown'.abstraction.ScanUnknownQrCodeManager access$5800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<android.widget.TextView: int getPaddingBottom()>
<com.google.android.gms.internal.auth-api.zzar: void <init>(com.google.android.gms.internal.auth-api.zzao,com.google.android.gms.auth.api.identity.BeginSignInRequest)>
<ch.qos.logback.core.AppenderBase: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.presentationlogic.ChangePasswordAutofillViewModel changePasswordAutofillViewModel()>
<com.google.android.gms.internal.measurement.zzkp: void <init>(java.lang.String,int,java.lang.Object)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<com.google.android.gms.location.zze: void <init>(android.app.PendingIntent)>
<com.fasterxml.jackson.core.SerializableString: byte[] asUnquotedUTF8()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.azure.authenticator.databinding.PaymentsDataPlaceholderLayoutBinding: com.azure.authenticator.databinding.PaymentsDataPlaceholderLayoutBinding bind(android.view.View)>
<android.animation.Animator$AnimatorListener: void onAnimationRepeat(android.animation.Animator)>
<com.google.android.gms.common.internal.Preconditions: void checkMainThread(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjw: int zzh(java.lang.Object)>
<java.io.BufferedInputStream: void close()>
<android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>
<com.facebook.react.views.unimplementedview.ReactUnimplementedView: void <init>(android.content.Context)>
<com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ThrottlingProducer$1)>
<com.adjust.sdk.ActivityPackage: int increaseRetries()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding getBinding()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.viewlogic.SelfAttestedFragment injectSelfAttestedFragment2(com.microsoft.did.feature.cardflow.viewlogic.SelfAttestedFragment)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean access$200(android.widget.EditText)>
<com.google.android.gms.internal.measurement.zzjs: int size()>
<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>
<com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessageSuffix()>
<com.azure.authenticator.databinding.AddMsaActivityLayoutBinding: void <init>(android.widget.LinearLayout,android.widget.FrameLayout,android.widget.LinearLayout,androidx.appcompat.widget.Toolbar)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: boolean isPasswordLoginSupported()>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.common.memory.MemoryTrimmableRegistry access$300(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<ch.qos.logback.core.joran.spi.ElementPath: ch.qos.logback.core.joran.spi.ElementPath duplicate()>
<android.view.ViewGroup: int getPaddingTop()>
<com.google.android.material.bottomappbar.BottomAppBar: int access$2000(com.google.android.material.bottomappbar.BottomAppBar)>
<com.facebook.react.devsupport.LogBoxModule: android.app.Activity access$300(com.facebook.react.devsupport.LogBoxModule)>
<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String writeLoopOnConverters(java.lang.Object)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaC(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.google.android.gms.internal.measurement.zzkg: void zzo(java.lang.Object,long,int)>
<bolts.TaskCompletionSource: void <init>()>
<ch.qos.logback.core.rolling.helper.FileFilterUtil$1: void <init>(java.lang.String)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void showMsaErrorDialog$default(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,java.lang.Exception,int,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzik: void <init>(com.google.android.gms.internal.measurement.zzii)>
<com.facebook.common.util.TriState: void <init>(java.lang.String,int)>
<com.facebook.react.views.text.ReactRawTextShadowNode: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getAadObjectId()>
<com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: void offsetChildAsNeeded(android.view.View,android.view.View)>
<javax.net.ssl.SSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<com.microsoft.ngc.aad.NgcSession: java.lang.String getVerificationSign1()>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.BlockingServiceConnection zza(android.content.Context,boolean)>
<com.adjust.sdk.PackageBuilder: java.util.Map getAttributionParameters(java.lang.String)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: void <init>(int,java.util.ArrayList,android.accounts.Account,boolean,boolean,boolean,java.lang.String,java.lang.String,java.util.ArrayList,java.lang.String)>
<com.google.android.gms.internal.measurement.zzgf: int zzg(byte[],int,com.google.android.gms.internal.measurement.zzge)>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: com.facebook.common.references.CloseableReference pinBitmap(android.graphics.Bitmap)>
<com.facebook.react.views.text.TextAttributeProps: void setIncludeFontPadding(boolean)>
<com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()>
<com.facebook.cache.disk.DiskStorageCache: java.util.Collection getSortedEntries(java.util.Collection)>
<com.google.android.gms.internal.measurement.zzlf: void <init>()>
<com.adjust.sdk.AdjustConfig: boolean isValid()>
<com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.measurement.zzdn: com.google.android.gms.internal.measurement.zzhw zzb()>
<com.google.android.gms.internal.maps.zzz: void setGeodesic(boolean)>
<com.facebook.react.bridge.CatalystInstance: void runJSBundle()>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path,android.graphics.Path$Op)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity: android.widget.Button getToolbarButton()>
<com.microsoft.authenticator.authentication.msa.entities.MsaSession: void <init>(android.os.Bundle)>
<com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: com.facebook.imagepipeline.memory.NoOpPoolStatsTracker getInstance()>
<com.azure.authenticator.ui.MainActivity$Companion: void <init>()>
<android.view.View: void setEnabled(boolean)>
<com.google.android.gms.signin.internal.zai: void <init>(int,com.google.android.gms.common.internal.zat)>
<com.google.android.gms.internal.measurement.zzcv: void <init>(java.lang.String,int,int)>
<android.widget.EditText: void setVisibility(int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.Class)>
<com.google.android.gms.common.api.internal.zaw: void <init>(com.google.android.gms.common.api.internal.zax,com.google.android.gms.common.api.internal.zau)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: int peekNumber()>
<com.facebook.cache.disk.DiskStorageCache: boolean maybeUpdateFileCacheSize()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNodeImpl)>
<com.google.android.gms.internal.measurement.zzdr: com.google.android.gms.internal.measurement.zzdr zza(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider experimentationWorker_AssistedFactoryProvider()>
<ch.qos.logback.core.joran.action.ActionUtil: void setProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.util.Properties,ch.qos.logback.core.joran.action.ActionUtil$Scope)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<com.facebook.imagepipeline.memory.BucketMap: void release(int,java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaFcmChangeDeviceTokenWorker mfaFcmChangeDeviceTokenWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.ReactInstanceManager: void onHostDestroy()>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableStaticBitmap decodeStaticImage(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions)>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void flush()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider credentialViewModelProvider()>
<com.google.android.material.card.MaterialCardViewHelper: void forceRippleRedraw()>
<com.google.android.material.button.MaterialButtonHelper: void setInsetTop(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void onBackPressed()>
<com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: void <init>(java.util.List)>
<java.util.TreeMap: void <init>(java.util.Comparator)>
<com.google.android.gms.common.images.zaa: void <init>(com.google.android.gms.common.images.ImageManager,android.net.Uri,android.os.ParcelFileDescriptor)>
<com.google.common.collect.MapMakerInternalMap$InternalEntryHelper: com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<android.widget.TextView: void onStartTemporaryDetach()>
<ch.qos.logback.core.ContextBase: void putObject(java.lang.String,java.lang.Object)>
<com.microsoft.authenticator.workaccount.businesslogic.DeviceRegistrationUseCase: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter)>
<androidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)>
<com.google.android.gms.common.api.internal.zacm: void <init>(com.google.android.gms.common.api.internal.zaco,com.google.android.gms.signin.internal.zak)>
<com.evernote.android.job.JobConfig$1: void <init>()>
<android.content.Context: android.content.res.AssetManager getAssets()>
<com.facebook.react.views.image.MultiPostprocessor: void <init>(java.util.List)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Iterator)>
<com.google.common.base.CharMatcher$Any: void <init>()>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.measurement.zzim: long zzc(int)>
<com.google.android.gms.measurement.internal.zzkd: boolean zzae(java.lang.String,long)>
<ch.qos.logback.core.joran.spi.InterpretationContext: boolean removeInPlayListener(ch.qos.logback.core.joran.event.InPlayListener)>
<com.facebook.react.bridge.PromiseImpl: void <init>(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.ConnectionResult zai()>
<com.google.android.gms.measurement.internal.zzdz: void zzg(com.google.android.gms.measurement.internal.zzas,java.lang.String,java.lang.String)>
<com.google.android.datatransport.runtime.retries.Retries: java.lang.Object retry(int,java.lang.Object,com.google.android.datatransport.runtime.retries.Function,com.google.android.datatransport.runtime.retries.RetryStrategy)>
<com.google.android.gms.internal.measurement.zzja: com.google.android.gms.internal.measurement.zzhw zzx(int)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: void stopSelfIfNecessary(int)>
<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String getPattern()>
<com.airbnb.lottie.value.LottieFrameInfo: void <init>()>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabCornerRadius()>
<com.azure.authenticator.databinding.AccountOtpViewLayoutBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context,android.util.AttributeSet)>
<ch.qos.logback.classic.util.ContextSelectorStaticBinder: void <init>()>
<com.evernote.android.job.gcm.JobProxyGcm: int convertNetworkType(com.evernote.android.job.JobRequest$NetworkType)>
<com.facebook.react.uimanager.ReactZIndexedViewGroup: void updateDrawingOrder()>
<com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.material.datepicker.CalendarItemStyle: void styleItem(android.widget.TextView)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void approveSession()>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOuterRadius()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.main.BackupDetailsFragment injectBackupDetailsFragment2(com.azure.authenticator.ui.fragment.main.BackupDetailsFragment)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper zoomBy(float)>
<androidx.room.RoomSQLiteQuery: void bindNull(int)>
<androidx.core.graphics.ColorUtils: int compositeColors(int,int)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)>
<com.google.android.gms.common.internal.zaj: boolean isConnected()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showDeleteBackupResultDialog$default(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.backup.entities.BackupRestoreError,int,java.lang.Object)>
<com.facebook.drawee.drawable.ScaleTypeDrawable: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<java.util.Random: void nextBytes(byte[])>
<com.google.android.gms.internal.measurement.zzp: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)>
<com.facebook.debug.holder.PrinterHolder: com.facebook.debug.holder.Printer getPrinter()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider authIntentSenderProvider()>
<okio.BufferedSource: int select(okio.Options)>
<com.google.android.gms.internal.measurement.zzef: void <init>(java.lang.String,int,int)>
<android.app.Activity: android.content.ContentResolver getContentResolver()>
<com.google.android.material.card.MaterialCardViewHelper: int getStrokeWidth()>
<com.google.android.gms.maps.model.StreetViewPanoramaCamera$Builder: void <init>()>
<com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean)>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int getChildDrawingOrder(int,int)>
<com.microsoft.authenticator.authentication.aad.abstraction.MsalTokenRefreshManager: void <init>(android.content.Context,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase,com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager)>
<com.google.android.datatransport.cct.internal.LogRequest: void <init>()>
<com.google.android.material.navigation.NavigationBarView: void setItemTextAppearanceInactive(int)>
<com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List)>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setUpdateCurrent(boolean)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List updateIsIntermediateResultExpected()>
<com.google.android.gms.common.internal.BaseGmsClient: boolean requiresSignIn()>
<ch.qos.logback.core.joran.action.StatusListenerAction: boolean isEffectivelyAdded()>
<ch.qos.logback.classic.db.names.DefaultDBNameResolver: void <init>()>
<com.adjust.sdk.SdkClickHandler: void access$200(com.adjust.sdk.SdkClickHandler)>
<com.google.android.gms.common.data.DataHolder: float zab(java.lang.String,int,int)>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<com.google.android.material.resources.MaterialResources: com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)>
<com.facebook.drawee.drawable.ForwardingDrawable: void onBoundsChange(android.graphics.Rect)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: boolean zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)>
<com.facebook.react.views.image.ReactImageView: com.facebook.drawee.generic.GenericDraweeHierarchy buildHierarchy(android.content.Context)>
<com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)>
<com.microsoft.onlineid.sdk.extension.NgcManager: void setAccountServerKeyIdentifier(java.lang.String,java.lang.String)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerTreatment getTopLeftCorner()>
<ch.qos.logback.core.joran.util.ConfigurationWatchListUtil: ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context)>
<com.azure.authenticator.databinding.AccountListBinding: android.widget.FrameLayout getRoot()>
<com.google.android.gms.tasks.Tasks: java.lang.Object zza(com.google.android.gms.tasks.Task)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onStop()>
<com.google.android.gms.internal.measurement.zzji: boolean zzb(java.lang.Object,java.lang.Object)>
<android.os.Parcel: void readException()>
<android.database.CursorWrapper: void close()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhz zzbF(com.google.android.gms.internal.measurement.zzhz)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$12: void <init>()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zat(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.math.BigInteger)>
<ch.qos.logback.core.subst.Parser: void expectNotNull(ch.qos.logback.core.subst.Token,java.lang.String)>
<com.google.android.material.chip.Chip: boolean isCloseIconVisible()>
<ch.qos.logback.classic.spi.PackagingDataCalculator: ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader)>
<com.google.android.gms.location.zzbi: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaB(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.google.android.gms.internal.auth.zzz: void zza(com.google.android.gms.internal.auth.zzx,com.google.android.gms.internal.auth.zzab)>
<com.google.android.gms.internal.common.zzu: void <init>()>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void emitOrientationChanged(int)>
<com.evernote.android.job.Job$Params: void <init>(com.evernote.android.job.JobRequest,android.os.Bundle)>
<androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)>
<com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()>
<com.google.android.gms.internal.measurement.zzgz: void zzh(int,java.lang.String)>
<com.facebook.react.modules.network.ForwardingCookieHandler: void clearCookies(com.facebook.react.bridge.Callback)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showMsaAccountChooserDialog(java.util.List)>
<com.airbnb.lottie.LottieComposition: float getEndFrame()>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void access$000(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,java.lang.Throwable)>
<com.airbnb.lottie.model.KeyPath: void <init>(java.lang.String[])>
<com.facebook.react.modules.network.ForwardingCookieHandler: void access$400(com.facebook.react.modules.network.ForwardingCookieHandler,java.lang.Runnable)>
<com.google.android.gms.common.api.internal.zaaz: boolean isConnected()>
<com.google.android.gms.internal.auth-api-phone.zza: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)>
<android.widget.ImageView: int getLayerType()>
<com.google.android.gms.tasks.SuccessContinuation: com.google.android.gms.tasks.Task then(java.lang.Object)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzf(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: com.microsoft.onlineid.Ticket getMsaTicket$app_productionRelease()>
<com.google.android.gms.internal.location.zzbv: void <init>()>
<com.google.android.gms.internal.measurement.zzjk: int zzz(int,java.util.List,com.google.android.gms.internal.measurement.zzji)>
<com.google.common.collect.UnmodifiableListIterator: void <init>()>
<android.widget.FrameLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.measurement.internal.zzkk: void zzaj(com.google.android.gms.internal.measurement.zzs,java.util.ArrayList)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInfo: java.lang.String getGpsAdid()>
<org.slf4j.event.Level: int toInt()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ImageDecoderConfig access$2400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.facebook.react.uimanager.events.NativeGestureUtil: void notifyNativeGestureStarted(android.view.View,android.view.MotionEvent)>
<androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$deleteBackupForCachedMsa$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.material.tabs.TabLayout$TabView: void updateBackgroundDrawable(android.content.Context)>
<javax.net.ssl.SSLSocket: void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)>
<com.azure.authenticator.databinding.AadPhoneSignInOnPremQrBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.Guideline,android.widget.TextView,android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.widget.TextView,android.widget.TextView,android.widget.ScrollView)>
<java.lang.Math: double log(double)>
<com.google.android.gms.measurement.internal.zzai: java.util.List zzm(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.measurement.internal.zzam: java.lang.String zzc()>
<com.facebook.infer.'annotation'.Assertions: void assertCondition(boolean,java.lang.String)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void approveNgcSession()>
<com.google.android.gms.common.api.internal.ListenerHolder: void clear()>
<com.facebook.drawee.drawable.RoundedDrawable: void draw(android.graphics.Canvas)>
<com.facebook.react.modules.core.ReactChoreographer: void postFrameCallbackOnChoreographer()>
<ch.qos.logback.classic.net.SimpleSocketServer: void socketNodeClosing(ch.qos.logback.classic.net.SocketNode)>
<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void addCoalescingKey(long)>
<com.google.android.gms.common.internal.service.zan: void <init>()>
<com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<com.facebook.cache.common.CacheKeyUtil: java.lang.String secureHashKey(com.facebook.cache.common.CacheKey)>
<com.facebook.cache.disk.DefaultDiskStorage: java.io.File access$200(com.facebook.cache.disk.DefaultDiskStorage)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_3_7$1: void <init>(int,int)>
<com.google.android.material.datepicker.MaterialCalendar: void setCurrentMonth(com.google.android.material.datepicker.Month)>
<com.facebook.imagepipeline.producers.BaseConsumer: int simpleStatusForIsLast(boolean)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$Companion: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderText(int)>
<javax.net.ssl.SSLSocket: int getSendBufferSize()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$observeAppLockEnforcement$0$SettingsFragment(java.util.List)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzY(java.lang.Iterable)>
<java.lang.Long: int hashCode()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>
<com.azure.authenticator.storage.database.AccountDao_Impl: void <init>(androidx.room.RoomDatabase)>
<android.widget.ImageButton: void setScaleType(android.widget.ImageView$ScaleType)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: com.azure.authenticator.ui.backup.BackupFlowViewModel getBackupFlowViewModel()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: int findNumberOfCommonFrames(java.lang.StackTraceElement[],java.lang.StackTraceElement[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase discoveryUseCase()>
<com.facebook.react.views.text.ReactTextShadowNode: void <init>(com.facebook.react.views.text.ReactTextViewManagerCallback)>
<android.graphics.PathMeasure: boolean nextContour()>
<android.widget.LinearLayout: void dispatchDraw(android.graphics.Canvas)>
<com.facebook.react.uimanager.UIImplementation: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<com.facebook.drawee.drawable.RoundedDrawable: void updateTransform()>
<com.facebook.imagepipeline.core.DiskStorageFactory: com.facebook.cache.disk.DiskStorage get(com.facebook.cache.disk.DiskCacheConfig)>
<com.microsoft.authenticator.workaccount.businesslogic.Broker$Companion: com.microsoft.authenticator.core.protocol.CloudEnvironment getCloudEnvironment()>
<java.math.BigDecimal: void <init>(java.lang.String)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder addMetadata(java.lang.String,int)>
<com.facebook.imagepipeline.request.ImageRequest: int getPreferredWidth()>
<java.util.Arrays: int[] copyOf(int[],int)>
<okio.BufferedSource: okio.BufferedSource peek()>
<android.widget.AutoCompleteTextView: void setOnDismissListener(android.widget.AutoCompleteTextView$OnDismissListener)>
<com.airbnb.lottie.utils.BaseLottieAnimator: void notifyStart(boolean)>
<com.github.amlcurran.showcaseview.ShowcaseView: void setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer)>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()>
<com.google.android.gms.measurement.internal.zzfl: void zza(com.google.android.gms.internal.measurement.zzy)>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage: com.azure.authenticator.accounts.AadAccount getMfaAadAccountFromAccountStorage(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence)>
<com.facebook.drawee.interfaces.DraweeController: void onAttach()>
<com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment$ICompletion: void onEnableNgcButtonClicked(java.lang.String)>
<ch.qos.logback.core.joran.action.IncludeAction: void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.backuprestore.presentationlogic.BackupViewModel backupViewModel()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ImageDecoderConfig getImageDecoderConfig()>
<com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage$DefaultImpls: java.lang.Object saveRegistrationPromptInfo(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.storage.database.prompt.MfaSdkRegistrationPromptInfo,kotlin.coroutines.Continuation)>
<com.google.android.gms.signin.internal.zaf: void <init>(android.os.IBinder)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeString(java.lang.String)>
<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>
<com.facebook.react.fabric.mounting.MountingManager: void setJSResponder(int,int,boolean)>
<android.text.style.AbsoluteSizeSpan: void <init>(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager authMethodsPolicyManager()>
<com.facebook.react.views.text.ReactTextShadowNode$1: void <init>(com.facebook.react.views.text.ReactTextShadowNode)>
<androidx.fragment.app.FragmentActivity: void onStateNotSaved()>
<com.adjust.sdk.scheduler.SingleThreadFutureScheduler$1: void <init>(com.adjust.sdk.scheduler.SingleThreadFutureScheduler,java.lang.String)>
<org.json.JSONObject: double optDouble(java.lang.String,double)>
<com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.Reader constructReader()>
<com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator access$1902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)>
<android.widget.ScrollView: void getDrawingRect(android.graphics.Rect)>
<com.google.android.material.datepicker.MaterialCalendar$1: void <init>(com.google.android.material.datepicker.MaterialCalendar)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isGestureInsetBottomIgnored()>
<com.google.android.gms.internal.measurement.zzbz: void <init>(com.google.android.gms.internal.measurement.zzbs)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel: androidx.lifecycle.LiveData getAllAccountsObservable()>
<android.widget.LinearLayout: void setMinimumWidth(int)>
<com.google.android.material.bottomappbar.BottomAppBar: void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean)>
<com.azure.authenticator.storage.Storage: boolean readInvalidDosPreventer()>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: androidx.core.app.NotificationCompat$Builder buildNotification(java.lang.String,java.lang.String,android.app.PendingIntent,boolean,boolean,int)>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<com.facebook.react.modules.network.RequestBodyUtil: boolean isGzipEncoding(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel access$getWpjViewModel$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<androidx.appcompat.widget.ListPopupWindow: android.view.View getSelectedView()>
<com.facebook.react.bridge.UnexpectedNativeTypeException: void <init>(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzJ()>
<com.google.android.gms.auth.AccountChangeEventsRequest: com.google.android.gms.auth.AccountChangeEventsRequest setAccountName(java.lang.String)>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task clearAll()>
<com.google.android.material.math.MathUtils: float lerp(float,float,float)>
<java.lang.Math: float abs(float)>
<com.microsoft.authenticator.core.algorithms.OtpGenerator: java.lang.String generateTotp(java.lang.String,com.microsoft.authenticator.core.telemetry.ITelemetryManager)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: boolean isAppLaunchedFromLaunchActivity()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: void addWarn(java.lang.String,java.lang.Throwable)>
<com.facebook.react.devsupport.DevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map)>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showNotificationDisabledDialog$notificationDisabledDialogBuilder$2: void <init>(android.content.DialogInterface$OnClickListener)>
<com.facebook.react.modules.network.CountingOutputStream: void <init>(java.io.OutputStream)>
<com.google.android.gms.common.data.DataBuffer: int getCount()>
<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>
<android.widget.CheckBox: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.azure.authenticator.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.LinearLayout: boolean hasFocus()>
<com.google.android.material.snackbar.BaseTransientBottomBar: void dismiss()>
<android.graphics.RectF: void offsetTo(float,float)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.animation.ValueAnimator access$1600(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.google.android.gms.measurement.internal.zzkd: void zzP()>
<com.google.android.gms.internal.measurement.zzja: float zzE(java.lang.Object,long)>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int)>
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>
<com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum: void <init>(java.lang.String,int,int)>
<com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<ch.qos.logback.core.net.server.RemoteReceiverStreamClient: void <init>(java.lang.String,java.net.Socket)>
<com.google.android.gms.internal.maps.zze: com.google.android.gms.dynamic.IObjectWrapper zzb(java.lang.String)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$5: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.android.gms.internal.auth.zzh: com.google.android.gms.common.api.PendingResult setWorkAuthenticatorEnabledWithResult(com.google.android.gms.common.api.GoogleApiClient,boolean)>
<com.facebook.yoga.YogaNode: float getLayoutY()>
<com.facebook.react.views.textinput.ReactEditText: void addTextChangedListener(android.text.TextWatcher)>
<java.lang.Double: java.lang.Double valueOf(double)>
<java.security.KeyStore: java.security.Provider getProvider()>
<com.airbnb.lottie.parser.MergePathsParser: com.airbnb.lottie.model.content.MergePaths parse(com.airbnb.lottie.parser.moshi.JsonReader)>
<com.facebook.imagepipeline.memory.DummyBitmapPool: android.graphics.Bitmap get(int)>
<java.lang.String: java.lang.String copyValueOf(char[])>
<com.google.crypto.tink.proto.Keyset$Key$Builder: com.google.crypto.tink.proto.Keyset$Key$Builder setStatus(com.google.crypto.tink.proto.KeyStatusType)>
<com.google.android.gms.internal.measurement.zzjs: java.util.Map$Entry zzd(int)>
<com.facebook.react.modules.i18nmanager.I18nManagerModule: void <init>(android.content.Context)>
<com.facebook.drawee.drawable.ArrayDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<com.facebook.imagepipeline.producers.FetchState: android.net.Uri getUri()>
<com.adjust.sdk.SharedPreferencesManager: void remove(java.lang.String)>
<com.airbnb.lottie.model.layer.TextLayer: void drawCharacter(java.lang.String,android.graphics.Paint,android.graphics.Canvas)>
<com.google.android.gms.common.server.response.FastJsonResponse: void setLongInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,long)>
<androidx.fragment.app.Fragment: boolean isVisible()>
<com.google.android.gms.common.api.internal.zaaf: void <init>(com.google.android.gms.common.api.internal.zaag,com.google.android.gms.common.api.internal.zaba)>
<com.facebook.react.views.switchview.ReactSwitch: void setThumbColor(java.lang.Integer)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int _decodeUtf8_3(int)>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface: void setBackgroundColor(android.view.View,java.lang.Integer)>
<ch.qos.logback.core.util.FixedDelay: void <init>(long,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker msaRefreshUserDaWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback: boolean canDrag(com.google.android.material.appbar.AppBarLayout)>
<com.google.android.gms.common.util.DeviceProperties: boolean isUserBuild()>
<com.google.android.gms.common.api.internal.LifecycleActivity: boolean zza()>
<android.widget.EditText: int length()>
<com.google.android.gms.measurement.internal.zzhq: void zza(int,java.lang.Exception,byte[],java.util.Map)>
<com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager access$000(com.facebook.react.ReactRootView)>
<com.microsoft.authenticator.commonuilibrary.network.NetworkingUtils: boolean isNetworkConnected(android.content.Context)>
<android.os.Parcel: void writeLong(long)>
<com.facebook.imagepipeline.memory.MemoryChunk: byte read(int)>
<com.facebook.react.views.switchview.ReactSwitchManager$1: void <init>()>
<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>
<com.google.android.material.internal.CollapsingTextHelper: void setExpandedBounds(int,int,int,int)>
<com.facebook.react.fabric.mounting.mountitems.DeleteMountItem: void <init>(int)>
<com.google.android.material.tabs.TabLayout$TabView$1: void <init>(com.google.android.material.tabs.TabLayout$TabView,android.view.View)>
<com.google.android.gms.internal.measurement.zzgz: int zzu(int)>
<com.azure.authenticator.databinding.ThirdPartyNoticeBinding: void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.TextView)>
<com.adjust.sdk.PackageBuilder: boolean containsPlayIds(java.util.Map)>
<com.facebook.react.modules.network.ProgressResponseBody: long totalBytesRead()>
<com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerFromResolver(java.lang.String)>
<com.microsoft.authenticator.di.BrokerModule_ProvideDiscoveryMetadataManagerFactory: com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager provideDiscoveryMetadataManager(com.microsoft.authenticator.di.BrokerModule,android.content.Context)>
<com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)>
<androidx.navigation.NavController: void navigate(int,android.os.Bundle)>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildInsertPropertiesSQL(ch.qos.logback.classic.db.names.DBNameResolver)>
<com.microsoft.authenticator.mfasdk.configuration.SnoozeConfiguration: void <init>()>
<com.facebook.react.views.image.ReactImageView$TilePostprocessor: void <init>(com.facebook.react.views.image.ReactImageView)>
<com.google.android.gms.auth.zze: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.onlineid.sdk.extension.SessionManager access$14600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.storage.database.AccountDao: com.azure.authenticator.storage.database.DbAccount getSecretKeyBasedAccountByAccountName(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.producers.JobScheduler: void onJobFinished()>
<com.google.android.gms.location.DetectedActivity: int getType()>
<com.google.android.gms.internal.measurement.zzgz: void zzb(int,int)>
<com.google.android.gms.internal.auth.zza: void <init>(android.os.IBinder,java.lang.String)>
<java.util.List: int hashCode()>
<com.google.android.gms.internal.measurement.zzjp: int hashCode()>
<com.google.android.gms.measurement.internal.zzd: void zzb(java.lang.String,long)>
<ch.qos.logback.core.rolling.helper.FileSorter: void sort(java.lang.String[])>
<android.app.NotificationManager: void cancel(int)>
<java.io.BufferedReader: java.lang.String readLine()>
<com.google.android.gms.internal.common.zzs: void <init>(com.google.android.gms.internal.common.zzu,int)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.common.Priority computePriority()>
<com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.gms.internal.measurement.zzkg: void zzh(java.lang.Object,long,double)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder zzc(java.lang.String)>
<ch.qos.logback.classic.spi.ILoggingEvent: long getTimeStamp()>
<com.google.android.gms.internal.measurement.zzmd: void <init>()>
<ch.qos.logback.core.joran.action.PropertyAction: boolean checkFileAttributeSanity(org.xml.sax.Attributes)>
<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: void <init>(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void maybeEvictEntries()>
<com.google.android.gms.common.data.DataHolder: void <init>(java.lang.String[],android.database.CursorWindow[],int,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzij: void <init>(com.google.android.gms.internal.measurement.zzii)>
<com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.facebook.react.views.imagehelper.ImageSource: java.lang.String getSource()>
<com.google.android.gms.common.internal.BaseGmsClient: boolean getUseDynamicLookup()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier: java.util.List access$100(com.facebook.datasource.IncreasingQualityDataSourceSupplier)>
<java.lang.ClassLoader: void <init>()>
<com.facebook.soloader.UnpackingSoSource$Dso: void <init>(java.lang.String,java.lang.String)>
<com.facebook.react.modules.storage.AsyncStorageModule$2: void doInBackgroundGuarded(java.lang.Void[])>
<com.google.android.gms.maps.zzab: void <init>(com.google.android.gms.maps.MapFragment$zza,com.google.android.gms.maps.OnMapReadyCallback)>
<com.microsoft.authenticator.commonuilibrary.dialogs.ProgressDialogFragment$Companion: com.microsoft.authenticator.commonuilibrary.dialogs.ProgressDialogFragment newInstance(java.lang.String)>
<com.google.android.gms.common.api.internal.zace: void <init>()>
<com.google.android.datatransport.Event: com.google.android.datatransport.Priority getPriority()>
<com.google.android.gms.auth.zzd: android.os.Bundle removeAccount(android.content.Context,android.accounts.Account)>
<java.util.Queue: int size()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: java.lang.String getEntropySign(com.microsoft.authenticator.authentication.entities.EntropySignEnum)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzt()>
<com.google.android.material.chip.ChipDrawable: boolean onStateChange(int[])>
<com.facebook.react.uimanager.events.EventDispatcher$DispatchEventsRunnable: void <init>(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.events.EventDispatcher$1)>
<com.google.android.gms.maps.StreetViewPanoramaOptions: com.google.android.gms.maps.model.StreetViewSource getSource()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: double readDouble(android.os.Parcel,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void <init>()>
<com.google.android.gms.internal.measurement.zzcn: com.google.android.gms.internal.measurement.zzcn zzf()>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)>
<android.view.ViewGroup: void sendAccessibilityEvent(int)>
<java.util.Calendar: int compareTo(java.util.Calendar)>
<com.google.android.gms.internal.measurement.zzcu: void <init>()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isZoomGesturesEnabled()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setEnsureMinTouchTargetSize(boolean)>
<com.microsoft.authenticator.core.common.Timer: java.lang.String getTimeElapsedInSeconds(long,long)>
<com.google.android.gms.measurement.internal.zzib: com.google.android.gms.measurement.internal.zzhu zzl()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker msaNotificationActionWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: char _decodeEscaped()>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPeriodic(long)>
<com.google.android.material.timepicker.ClockHandView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.measurement.zzfv: java.util.List zza(java.lang.Throwable,boolean)>
<android.os.Parcel: void writeNoException()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider autoBackupWorker_AssistedFactoryProvider()>
<androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)>
<java.util.HashSet: void <init>(int)>
<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>
<com.fasterxml.jackson.core.json.JsonWriteContext: void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector)>
<com.microsoft.onlineid.sdk.extension.totp.PasscodeCalculator: void <init>(android.content.Context,byte[])>
<androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)>
<com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap)>
<com.airbnb.lottie.parser.ColorParser: java.lang.Integer parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<ch.qos.logback.core.pattern.parser.FormattingNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(char[],char[])>
<ch.qos.logback.core.net.SMTPAppenderBase: void subAppend(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object)>
<com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler: void populateFromSavedInstanceState(android.os.Bundle)>
<androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)>
<com.facebook.systrace.SystraceMessage$Builder: void <init>()>
<com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.material.appbar.HeaderBehavior: void ensureVelocityTracker()>
<com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter: void <init>(com.facebook.react.views.picker.ReactPicker,com.facebook.react.uimanager.events.EventDispatcher)>
<android.widget.OverScroller: int getCurrY()>
<com.google.android.material.appbar.AppBarLayout: int getTopInset()>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment: void <init>()>
<okhttp3.ResponseBody: java.io.InputStream byteStream()>
<ch.qos.logback.core.LifeCycleManager: void reset()>
<com.google.android.gms.internal.measurement.zzjp: boolean zzb(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.storage.MfaSdkAccountTranslator_Factory: void <init>()>
<com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)>
<com.facebook.react.uimanager.ReactShadowNode: java.lang.String getViewClass()>
<com.facebook.react.modules.datepicker.DatePickerDialogFragment: void <init>()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnGroundOverlayClickListener(com.google.android.gms.maps.internal.zzx)>
<com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager: java.lang.Object registerSilently(com.azure.authenticator.accounts.AadAccount,kotlin.coroutines.Continuation)>
<com.microsoft.onlineid.sdk.extension.totp.PasscodeCalculator: java.lang.String calculateTotp()>
<com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)>
<com.facebook.react.ReactInstanceManager$2: void <init>(com.facebook.react.ReactInstanceManager)>
<com.google.android.gms.internal.measurement.zzkn: int zzj(int)>
<com.google.android.gms.common.data.DataHolder: void <init>(int,java.lang.String[],android.database.CursorWindow[],int,android.os.Bundle)>
<com.azure.authenticator.authentication.msa.MsaAccountManager: com.azure.authenticator.authentication.msa.ui.AccountPickerCallback setAccountPickerCallback(androidx.appcompat.app.AppCompatActivity,java.util.List,int,com.azure.authenticator.authentication.msa.ui.AccountPickerCallback$ICompletion)>
<android.widget.SeekBar: void measure(int,int)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemMoved(int,int)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String toRegex()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder()>
<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.util.List)>
<android.text.TextPaint: void setShadowLayer(float,float,float,int)>
<com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker: boolean isDeviceLockConfigured()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zao(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int)>
<com.google.android.gms.common.server.response.FastParser: java.math.BigDecimal zah(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent getMotionEvent()>
<com.facebook.react.LazyReactPackage: java.util.List getNativeModules(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel: void access$setAllAccounts$p(com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel,java.util.List)>
<com.google.android.gms.measurement.internal.zzag: void <init>()>
<kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)>
<com.facebook.react.views.text.ReactTextView: void <init>(android.content.Context)>
<android.widget.EditText: void setSelection(int,int)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>
<com.google.android.gms.measurement.internal.zzbc: void <init>()>
<ch.qos.logback.core.pattern.DynamicConverter: java.util.List getOptionList()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DataFetchProducer newDataFetchProducer()>
<android.graphics.Rect: int height()>
<com.facebook.drawee.drawable.TransformAwareDrawable: void setTransformCallback(com.facebook.drawee.drawable.TransformCallback)>
<com.facebook.react.modules.camera.ImageStoreManager: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$Companion: void <init>()>
<com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.azure.authenticator.notifications.AbstractNotification: java.lang.Object handleRequestWithResult(android.os.Bundle,kotlin.coroutines.Continuation)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeEndObject()>
<com.facebook.imagepipeline.memory.LruBucketsPoolBackend: java.lang.Object maybeRemoveFromCurrentItems(java.lang.Object)>
<com.google.android.material.chip.ChipDrawable: void setMaxWidth(int)>
<com.google.android.material.theme.overlay.MaterialThemeOverlay: int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.internal.measurement.zzco: void <init>(com.google.android.gms.internal.measurement.zzcl)>
<com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)>
<com.azure.authenticator.ui.LaunchActivity$Companion: void <init>()>
<okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: androidx.lifecycle.MutableLiveData access$get_checkWpjStatus$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.google.android.gms.common.api.internal.GoogleApiManager: int zac()>
<com.facebook.common.internal.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>
<com.azure.authenticator.databinding.PaymentsDataPlaceholderLayoutBinding: void <init>(android.widget.RelativeLayout,androidx.cardview.widget.CardView)>
<com.google.android.material.datepicker.MonthAdapter: void initializeStyles(android.content.Context)>
<java.lang.IllegalArgumentException: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$Companion: android.content.Intent getCreateBackupIntent(android.content.Context)>
<com.facebook.drawee.backends.pipeline.Fresco: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()>
<com.google.android.gms.internal.auth.zzaf: void <init>(java.lang.String,byte[])>
<com.google.android.gms.common.api.internal.zabx: com.google.android.gms.common.api.internal.zabx zaa(com.google.android.gms.common.api.internal.GoogleApiManager,int,com.google.android.gms.common.api.internal.ApiKey)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient: com.google.android.gms.tasks.Task signOut()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
<android.widget.ImageButton: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<com.facebook.cache.disk.FileCache: boolean hasKey(com.facebook.cache.common.CacheKey)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthCheckUseCase msaAuthCheckUseCase()>
<android.util.Size: void <init>(int,int)>
<com.google.common.collect.MapMakerInternalMap$KeySet: void <init>(com.google.common.collect.MapMakerInternalMap)>
<java.lang.CharSequence: int length()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: void <init>()>
<com.google.android.gms.internal.maps.zzt: void setRotation(float)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2: void <init>(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable)>
<com.airbnb.lottie.LottieTask: void access$100(com.airbnb.lottie.LottieTask,java.lang.Object)>
<com.google.android.gms.common.api.GoogleApi: void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)>
<okio.Buffer: void clear()>
<java.lang.Integer: java.lang.String toHexString(int)>
<okhttp3.Cookie: java.lang.String name()>
<java.util.Map$Entry: java.lang.Object getKey()>
<com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType: com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType[] values()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void setCustomDrawableFactories(com.facebook.common.internal.ImmutableList)>
<com.google.android.gms.internal.measurement.zzmw: long zzc()>
<com.facebook.soloader.SysUtil: void fallocateIfSupported(java.io.FileDescriptor,long)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$syncBrokerAccounts$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,kotlin.coroutines.Continuation)>
<com.google.android.material.navigation.NavigationBarItemView: int getSuggestedIconHeight()>
<com.google.android.gms.auth.api.signin.zac: void <init>()>
<java.util.logging.LogManager: java.util.Enumeration getLoggerNames()>
<com.microsoft.did.feature.cardflow.viewlogic.DeepLinkFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.cardflow.viewlogic.DeepLinkFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<com.google.common.base.Strings: java.lang.String lenientToString(java.lang.Object)>
<com.google.android.gms.maps.internal.zzd: void <init>()>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month getStart()>
<androidx.room.util.TableInfo: void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set)>
<com.facebook.react.ReactActivityDelegate$1: void <init>(com.facebook.react.ReactActivityDelegate,android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle)>
<com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.content.Mask$MaskMode getMaskMode()>
<com.airbnb.lottie.parser.moshi.JsonReader: void skipValue()>
<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.storage.database.AccountTranslator access$getAccountTranslator$p(com.azure.authenticator.storage.database.AccountStorage)>
<com.google.android.gms.measurement.internal.zzih: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp,com.google.android.gms.internal.measurement.zzs)>
<com.google.android.gms.internal.safetynet.zzi: void zza(com.google.android.gms.internal.safetynet.zzg,byte[],java.lang.String)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.'annotation'.Annotation getAnnotation(java.lang.String,java.lang.Class,java.lang.reflect.Method)>
<com.google.android.gms.common.data.DataHolder$Builder: com.google.android.gms.common.data.DataHolder$Builder withRow(android.content.ContentValues)>
<androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean access$502(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,boolean)>
<com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAddPadding()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$Builder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$Builder applicationContextModule(dagger.hilt.android.internal.modules.ApplicationContextModule)>
<dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.facebook.react.ReactRootView: void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle)>
<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>
<com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)>
<com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>
<com.google.android.gms.internal.auth.zzaq: void zza(android.content.Context,com.google.android.gms.internal.auth.zzan)>
<okhttp3.Headers$Builder: okhttp3.Headers build()>
<com.adjust.sdk.ActivityHandler: boolean hasChangedStateI(boolean,boolean,java.lang.String,java.lang.String)>
<com.google.android.gms.auth.account.zzb: void <init>()>
<androidx.navigation.NavInflater: androidx.navigation.NavGraph inflate(int)>
<com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>
<com.google.android.gms.auth.api.credentials.CredentialsOptions: void <init>(com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: void getNearestAddress(com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult)>
<ch.qos.logback.classic.net.SMTPAppender: void subAppend(ch.qos.logback.core.helpers.CyclicBuffer,ch.qos.logback.classic.spi.ILoggingEvent)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: void <init>(android.os.Bundle)>
<com.facebook.react.modules.permissions.PermissionsModule$1: void <init>(com.facebook.react.modules.permissions.PermissionsModule,com.facebook.react.bridge.Promise,java.lang.String)>
<com.google.android.gms.maps.model.LatLngBounds: void <init>(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng)>
<androidx.appcompat.widget.AppCompatCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.measurement.internal.zzev: void zza(java.lang.String,long)>
<android.widget.EditText: int getHeight()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity_MembersInjector: void injectMsaAccountManager(com.azure.authenticator.ui.authentication.MsaSessionActivity,com.azure.authenticator.authentication.msa.MsaAccountManager)>
<com.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafe(byte[])>
<com.facebook.react.uimanager.events.ReactEventEmitter: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.core.joran.JoranConfiguratorBase: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>
<com.azure.authenticator.databinding.PasswordAutoChangeExplainLayoutBinding: android.widget.LinearLayout getRoot()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalResourceFetchProducer newLocalResourceFetchProducer()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<com.google.android.material.internal.CollapsingTextHelper: float calculateFadeModeThresholdFraction()>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String convertInt(int)>
<com.google.android.gms.common.api.internal.zacv: void zae(com.google.android.gms.common.api.internal.zacv,com.google.android.gms.common.api.Result)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectBrooklynStorage(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<com.facebook.common.references.SharedReference: java.lang.Object get()>
<com.google.android.gms.internal.auth.zzaf: void <init>(int,java.lang.String,byte[])>
<com.facebook.drawee.controller.AbstractDraweeController: void removeControllerListener(com.facebook.drawee.controller.ControllerListener)>
<com.azure.authenticator.OnAppUpgradeReceiver: void onReceive(android.content.Context,android.content.Intent)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>
<java.io.InputStream: int read(byte[],int,int)>
<com.google.android.gms.internal.measurement.zzgq: void <init>(byte[])>
<com.azure.authenticator.storage.database.AccountDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.azure.authenticator.storage.database.DbAccount)>
<ch.qos.logback.core.boolex.EventEvaluator: boolean evaluate(java.lang.Object)>
<com.google.android.gms.internal.maps.zzw: void setFillColor(int)>
<com.facebook.imagepipeline.core.DiskStorageCacheFactory: void <init>(com.facebook.imagepipeline.core.DiskStorageFactory)>
<com.google.android.gms.common.config.zzc: void <init>(java.lang.String,java.lang.Integer)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: java.net.InetAddress getInetAddress()>
<com.adjust.sdk.IAttributionHandler: void pauseSending()>
<com.google.android.gms.dynamite.zzm: int zzb(android.content.Context,java.lang.String)>
<com.google.android.material.internal.TextDrawableHelper: float calculateTextWidth(java.lang.CharSequence)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onStop()>
<com.facebook.react.views.text.ReactTextUpdate: int getSelectionStart()>
<com.airbnb.lottie.utils.LottieValueAnimator: float getMaxFrame()>
<android.widget.EditText: int getPaddingBottom()>
<android.view.View: android.view.ViewPropertyAnimator animate()>
<com.google.android.material.chip.ChipDrawable: void drawChipSurface(android.graphics.Canvas,android.graphics.Rect)>
<com.google.android.gms.common.api.internal.zaau: void <init>(com.google.android.gms.common.api.internal.zaaz,java.util.concurrent.atomic.AtomicReference,com.google.android.gms.common.api.internal.StatusPendingResult)>
<com.google.android.gms.common.api.internal.zaaz: boolean zad()>
<com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.bridge.ReactApplicationContext access$1200(com.facebook.react.modules.core.JavaTimerManager)>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzP()>
<com.facebook.react.bridge.ReactContext: void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)>
<com.facebook.react.devsupport.DoubleTapReloadRecognizer: void <init>()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<com.google.android.gms.measurement.internal.zzaq: java.lang.Long zzb(java.lang.String)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.azure.authenticator.profile.GetSecretKeyBasedAccountProfileImageTask: void <init>(android.content.Context,com.azure.authenticator.accounts.GenericAccount,com.azure.authenticator.profile.ProfileImageTaskCallback)>
<com.facebook.react.uimanager.UIImplementation: void removeRootShadowNode(int)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void maybeNotifyOnCancellation()>
<com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder: com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder setOutputPrefixType(com.google.crypto.tink.proto.OutputPrefixType)>
<com.azure.authenticator.storage.database.AppDatabase: void <init>()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectAppPolicyRepository(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void lambda$upload$1(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>
<com.google.android.gms.internal.location.zzak: void zzd(int,android.app.PendingIntent)>
<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object getKey()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$8: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showConfirmCredentialsScreen(int,java.lang.String,java.lang.String)>
<com.google.android.gms.maps.GoogleMapOptions: void <init>()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.adjust.sdk.Util: int hashLong(java.lang.Long)>
<com.google.android.gms.internal.measurement.zzbu: void zzk(com.google.android.gms.internal.measurement.zzbu,int,com.google.android.gms.internal.measurement.zzbw)>
<com.microsoft.authenticator.workaccount.entities.GetDeviceIdStatus$Success: java.lang.String getDeviceId()>
<com.microsoft.did.feature.notifications.viewlogic.CredentialNotificationsFragment_MembersInjector: void injectScanQrCodeAdapter(com.microsoft.did.feature.notifications.viewlogic.CredentialNotificationsFragment,com.microsoft.authenticator.qrcode.abstraction.IScanQrCodeAdapter)>
<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIconSize(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaAccountManager access$2200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.uimanager.ReactShadowNode: int indexOf(com.facebook.react.uimanager.ReactShadowNode)>
<com.google.android.gms.internal.measurement.zzkn: boolean zzb(byte[],int,int)>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInUnregistrationViewModel: void <init>(com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.ngc.provider.cryptography.NgcCredentialManager,com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager,com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase)>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getRotation()>
<android.widget.CheckBox: void setElevation(float)>
<ch.qos.logback.classic.log4j.XMLLayout: boolean getProperties()>
<com.google.android.gms.internal.maps.zzn: int zzj()>
<com.google.android.gms.maps.model.Gap: void <init>(float)>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<android.animation.ArgbEvaluator: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$getOnTelemetryPreferenceListener$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment)>
<com.facebook.imagepipeline.memory.BasePool: void release(java.lang.Object)>
<ch.qos.logback.core.ContextBase: void removeObject(java.lang.String)>
<com.google.android.gms.common.internal.zav: com.google.android.gms.common.ConnectionResult zab()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Long lambda$getNextCallTime$4(android.database.Cursor)>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue getGradientColor()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalVideoFileFetchSequence()>
<com.google.android.datatransport.runtime.TransportRuntime: void <init>(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.google.android.datatransport.runtime.TransportImpl: void <init>(com.google.android.datatransport.runtime.TransportContext,java.lang.String,com.google.android.datatransport.Encoding,com.google.android.datatransport.Transformer,com.google.android.datatransport.runtime.TransportInternal)>
<com.facebook.drawee.view.DraweeHolder: void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback)>
<com.google.android.gms.internal.location.zzaz: void zzJ(android.location.Location)>
<com.facebook.react.modules.storage.AsyncStorageModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzeq zzj()>
<com.airbnb.lottie.model.LottieCompositionCache: com.airbnb.lottie.LottieComposition get(java.lang.String)>
<androidx.appcompat.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _matchToken(java.lang.String,int)>
<com.facebook.datasource.DataSources$1: void <init>(java.lang.Throwable)>
<com.facebook.yoga.YogaOverflow: void <init>(java.lang.String,int,int)>
<dagger.hilt.internal.UnsafeCasts: java.lang.Object unsafeCast(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider editCredentialViewModelProvider()>
<com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: void <init>(okhttp3.OkHttpClient)>
<com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: boolean getDecodeAllFrames()>
<com.azure.authenticator.authentication.msa.MsaAccountManager_Factory: com.azure.authenticator.authentication.msa.MsaAccountManager get()>
<com.airbnb.lottie.model.content.ShapeTrimPath: void <init>(java.lang.String,com.airbnb.lottie.model.content.ShapeTrimPath$Type,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,boolean)>
<com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker: void <init>(com.google.android.material.button.MaterialButtonToggleGroup)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment injectRequirementsFragment2(com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: void <init>(int,boolean,int,boolean,java.lang.String,int,java.lang.Class,com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_21_22()>
<ch.qos.logback.core.net.HardenedObjectInputStream: void <init>(java.io.InputStream,java.util.List)>
<com.microsoft.did.di.VcWalletModule_DefaultJsonSerializerFactory: kotlinx.serialization.json.Json defaultJsonSerializer(com.microsoft.did.di.VcWalletModule)>
<com.google.android.gms.common.SupportErrorDialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>
<com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig: void <init>(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.backup.RestoreFlowViewModel restoreFlowViewModel()>
<com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>
<com.google.android.gms.maps.GoogleMap$OnCameraIdleListener: void onCameraIdle()>
<com.fasterxml.jackson.core.json.JsonReadContext: boolean expectComma()>
<com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager autofillSuggestionManager()>
<com.google.android.gms.internal.measurement.zzcx: boolean zzd()>
<android.text.StaticLayout: java.lang.CharSequence getText()>
<com.evernote.android.job.JobRequest: com.evernote.android.job.JobRequest reschedule(boolean,boolean)>
<com.google.android.material.tabs.TabIndicatorInterpolator: void setIndicatorBoundsForTab(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: void lambda$onReceive$0()>
<ch.qos.logback.core.joran.spi.Interpreter: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvideDomainFaviconSvcRetrofitInterfaceFactory: com.microsoft.brooklyn.module.favicon.service.DomainFaviconMappingSvcInterface provideDomainFaviconSvcRetrofitInterface(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.airbnb.lottie.network.NetworkCache: java.io.File parentDir()>
<com.google.common.collect.MapMakerInternalMap$Segment: boolean remove(java.lang.Object,int,java.lang.Object)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onSaveInstanceState(android.os.Bundle)>
<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>
<com.google.android.finsky.externalreferrer.IGetInstallReferrerService$Stub: com.google.android.finsky.externalreferrer.IGetInstallReferrerService b(android.os.IBinder)>
<android.widget.LinearLayout: void setBackgroundColor(int)>
<com.google.android.gms.measurement.internal.zzcj: void <init>()>
<ch.qos.logback.core.util.StringCollectionUtil: void removeMatching(java.util.Collection,java.lang.String[])>
<ch.qos.logback.classic.db.names.ColumnName: void <init>(java.lang.String,int)>
<android.widget.OverScroller: boolean isFinished()>
<android.widget.EditText: void setHintTextColor(android.content.res.ColorStateList)>
<okhttp3.Response: okhttp3.ResponseBody body()>
<com.microsoft.did.feature.cardflow.viewlogic.PinFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.cardflow.viewlogic.PinFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence)>
<com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks: void onConnectionSuspended(int)>
<com.google.android.gms.internal.location.zzh: void <init>(com.google.android.gms.internal.location.zzi)>
<android.content.Context: int checkPermission(java.lang.String,int,int)>
<com.airbnb.lottie.model.animatable.AnimatablePathValue: boolean isStatic()>
<com.azure.authenticator.ui.fragment.accounts.OldDesignItemListDivider: void <init>(android.content.Context)>
<com.google.android.gms.maps.model.StreetViewPanoramaLink: void <init>(java.lang.String,float)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[])>
<com.google.android.gms.location.zzbp: void <init>()>
<java.util.logging.Logger: void warning(java.lang.String)>
<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void retrieveBackupAndMsaKey(java.lang.String,com.microsoft.onlineid.Ticket)>
<com.google.android.gms.maps.StreetViewPanoramaView$zzb: void getStreetViewPanoramaAsync(com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.google.android.gms.common.api.GoogleApiClient: void connect()>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: dagger.hilt.android.internal.managers.FragmentComponentManager createComponentManager()>
<com.facebook.react.fabric.mounting.MountingManager: void updateLocalData(int,com.facebook.react.bridge.ReadableMap)>
<androidx.fragment.app.Fragment: android.os.Bundle requireArguments()>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: boolean changeDetected()>
<com.microsoft.brooklyn.ui.generatepasswords.viewlogic.ViewGeneratedPasswordFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.generatepasswords.viewlogic.ViewGeneratedPasswordFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.gms.auth.api.identity.SavePasswordRequest: com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder zzc(com.google.android.gms.auth.api.identity.SavePasswordRequest)>
<java.lang.Double: long doubleToRawLongBits(double)>
<com.airbnb.lottie.model.layer.Layer$LayerType: void <init>(java.lang.String,int)>
<com.google.android.gms.maps.internal.zzbv: void <init>(android.os.IBinder)>
<com.google.android.gms.internal.maps.zzt: boolean isFlat()>
<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest$BackoffPolicy access$400(com.evernote.android.job.JobRequest$Builder)>
<com.facebook.imageformat.ImageFormat: java.lang.String getName()>
<com.facebook.react.uimanager.UIViewOperationQueue: void profileNextBatch()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabled(boolean)>
<com.google.android.gms.measurement.internal.zzjq: void zzi(com.google.android.gms.measurement.internal.zzjq,long)>
<android.animation.ValueAnimator: long getStartDelay()>
<com.google.android.material.shape.ShapePath$ShadowCompatOperation: void <init>()>
<ch.qos.logback.core.joran.util.PropertySetter: ch.qos.logback.core.joran.util.PropertyDescriptor getPropertyDescriptor(java.lang.String)>
<com.google.android.material.card.MaterialCardViewHelper: void setBackgroundOverwritten(boolean)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onExitAmbient()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getCachedPin()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showBackupConfirmedDialog$backupConfirmedDialogBuilder$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.google.android.gms.location.zzao: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.common.base.CaseFormat: java.lang.String normalizeWord(java.lang.String)>
<com.azure.authenticator.ui.MainActivity: com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel access$getMainActivityViewModel$p(com.azure.authenticator.ui.MainActivity)>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: void <init>()>
<com.facebook.common.memory.PooledByteBuffer: int size()>
<com.airbnb.lottie.model.content.PolystarShape: boolean isHidden()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate)>
<java.lang.Long: java.lang.String toHexString(long)>
<com.fasterxml.jackson.core.base.ParserBase: void _releaseBuffers()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectMfaUpdater(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: androidx.lifecycle.MutableLiveData access$get_msaNgcGenerationStatus$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel)>
<com.google.common.util.concurrent.CycleDetectingLockFactory$1: java.util.ArrayList initialValue()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)>
<com.facebook.react.ReactActivityDelegate: void <init>(com.facebook.react.ReactActivity,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration lambdaFactory$()>
<android.text.TextPaint: int getAlpha()>
<com.facebook.react.modules.camera.CameraRollManager: void putPageInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int)>
<ch.qos.logback.classic.LoggerContext: void setPackagingDataEnabled(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase aadPhoneSignInUseCase()>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.String getCodeLocation(java.lang.Class)>
<com.microsoft.did.businesslogic.BackupUseCase: void <init>(com.microsoft.did.sdk.BackupService,com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao,com.microsoft.did.businesslogic.ReceiptUseCase)>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$200(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)>
<com.microsoft.brooklyn.ui.credential.EditCredentialFragment_MembersInjector: void injectGeneratePassInfoHelper(com.microsoft.brooklyn.ui.credential.EditCredentialFragment,com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource submitPrefetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.common.Priority)>
<com.google.android.gms.common.server.response.zac: void <init>()>
<android.content.res.TypedArray: java.lang.String getString(int)>
<com.google.android.gms.tasks.zzj: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)>
<com.google.android.material.textfield.TextInputLayout: void updateSuffixTextVisibility()>
<com.facebook.common.logging.FLog: java.lang.String getTag(java.lang.Class)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSMainModulePath(java.lang.String)>
<com.google.android.gms.internal.measurement.zzhb: int indexOf(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzaf: java.lang.Boolean zze()>
<com.google.android.material.chip.ChipDrawable: boolean shouldDrawText()>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: void <init>(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)>
<com.google.android.gms.maps.MapView$zza: void onEnterAmbient(android.os.Bundle)>
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<android.widget.FrameLayout: void onViewAdded(android.view.View)>
<com.google.android.gms.maps.StreetViewPanoramaOptions: com.google.android.gms.maps.model.LatLng getPosition()>
<com.adjust.sdk.AdjustFactory: long getSessionInterval()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: int colorFromAlphaAndRGBComponents(float,float)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: long[] createLongArray(android.os.Parcel,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void deleteBackupForCachedMsa()>
<com.facebook.react.uimanager.events.EventDispatcher: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)>
<com.microsoft.authenticator.registration.mfa.viewLogic.RegisterAadMfaAccountFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.authenticator.registration.mfa.viewLogic.RegisterAadMfaAccountFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.views.textinput.ReactEditText: void requestFocusFromJS()>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)>
<com.facebook.react.bridge.JavaMethodWrapper$9: void <init>()>
<ch.qos.logback.core.spi.AbstractComponentTracker: ch.qos.logback.core.spi.AbstractComponentTracker$Entry getFromEitherMap(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener: void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.facebook.react.ReactInstanceManager: void invokeDefaultOnBackPressed()>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: int getScrollRange(android.view.View)>
<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<android.app.Fragment: boolean isRemoving()>
<com.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$$special$$inlined$viewModels$1: androidx.lifecycle.ViewModelProvider$Factory invoke()>
<com.airbnb.lottie.parser.moshi.JsonReader: void beginObject()>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment: void onDestroyView()>
<com.google.android.material.behavior.SwipeDismissBehavior: void setSwipeDirection(int)>
<com.facebook.react.views.scroll.ReactScrollView: int predictFinalScrollPosition(int)>
<com.azure.authenticator.storage.database.AccountWriter: void saveAadMfaAccount(com.azure.authenticator.storage.database.DbAccount)>
<com.airbnb.lottie.parser.KeyframeParser: void putInterpolator(int,java.lang.ref.WeakReference)>
<androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)>
<com.facebook.imagepipeline.cache.BufferedDiskCache$3: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.drawee.drawable.FadeDrawable: void resetInternal()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: void performXMLConfiguration(ch.qos.logback.classic.LoggerContext,java.net.URL)>
<com.google.android.material.navigation.NavigationBarView: com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener access$000(com.google.android.material.navigation.NavigationBarView)>
<com.evernote.android.job.util.JobCat: void i(java.lang.String,java.lang.Object[])>
<android.graphics.RectF: boolean equals(java.lang.Object)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$100(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)>
<com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence getText()>
<com.adjust.sdk.Util: boolean equalBoolean(java.lang.Boolean,java.lang.Boolean)>
<com.airbnb.lottie.manager.ImageAssetManager: android.graphics.Bitmap putBitmap(java.lang.String,android.graphics.Bitmap)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)>
<com.google.android.gms.measurement.internal.zzai: int zzp(java.lang.String,java.lang.String)>
<com.azure.authenticator.logging.LoggingReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.adjust.sdk.Adjust: void setEnabled(boolean)>
<com.google.android.gms.internal.auth-api.zzak: void <init>(android.app.Activity,com.google.android.gms.auth.api.identity.zzf)>
<com.facebook.react.LazyReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.measurement.zzly: boolean zza()>
<ch.qos.logback.core.spi.AppenderAttachableImpl: boolean detachAppender(ch.qos.logback.core.Appender)>
<com.google.android.gms.safetynet.zzf: java.lang.String getTokenResult()>
<com.google.android.material.snackbar.BaseTransientBottomBar: void show()>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildSessionPackage(boolean)>
<com.google.android.gms.internal.safetynet.zzi: void zzb(com.google.android.gms.internal.safetynet.zzg)>
<com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromState(com.facebook.react.views.text.ReactTextUpdate)>
<com.facebook.soloader.UnpackingSoSource$InputDsoIterator: com.facebook.soloader.UnpackingSoSource$InputDso next()>
<com.google.android.gms.common.images.ImageManager: java.lang.Object zag()>
<android.os.Binder: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInClient: com.google.android.gms.tasks.Task revokeAccess()>
<ch.qos.logback.core.util.Loader$1: java.lang.Boolean run()>
<android.text.Editable: int getSpanFlags(java.lang.Object)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.common.file.FileUtils: void mkdirs(java.io.File)>
<android.widget.CompoundButton$OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.material.datepicker.CalendarItemStyle: int getTopInset()>
<ch.qos.logback.core.joran.util.PropertyDescriptor: void setReadMethod(java.lang.reflect.Method)>
<com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatablePointValue getStartPoint()>
<com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)>
<com.facebook.react.ReactRootView: boolean access$100(com.facebook.react.ReactRootView)>
<com.adjust.sdk.AdjustInstance: void saveDisableThirdPartySharing(android.content.Context)>
<android.widget.LinearLayout: int getBaseline()>
<com.microsoft.brooklyn.ui.credential.EditCredentialViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.safetynet.zzb: void <init>()>
<android.widget.ImageView: boolean isShown()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlex(float)>
<java.net.Socket: java.io.InputStream getInputStream()>
<ch.qos.logback.core.joran.event.SaxEventRecorder: void setContext(ch.qos.logback.core.Context)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean isBorderColorDefined(int)>
<androidx.room.MultiInstanceInvalidationService: android.os.IBinder onBind(android.content.Intent)>
<com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding: com.google.android.material.card.MaterialCardView getRoot()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void addTransformationCallback(com.google.android.material.animation.TransformationCallback)>
<com.facebook.soloader.SoLoader: boolean loadLibraryBySoName(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<java.lang.Math: double pow(double,double)>
<com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_13_14$1: void <init>(int,int)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: java.lang.Object zah(java.lang.Object)>
<com.microsoft.authenticator.core.logging.BaseLogger: void initialize(android.content.Context,boolean)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment$ICompletion: void onSkipNgcLinkClicked()>
<java.lang.ref.WeakReference: java.lang.Object get()>
<com.fasterxml.jackson.core.JsonFactory: java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.businessLogic.TreatmentAssignmentService treatmentAssignmentService()>
<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewHide(com.github.amlcurran.showcaseview.ShowcaseView)>
<ch.qos.logback.classic.pattern.MDCConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.airbnb.lottie.parser.PathParser: void <init>()>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzg()>
<com.google.android.gms.common.api.internal.ListenerHolder: void notifyListener(com.google.android.gms.common.api.internal.ListenerHolder$Notifier)>
<android.widget.RelativeLayout: void addView(android.view.View)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationWorker access$400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.views.text.TextAttributeProps: void setFontSize(float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.signin.SignInFragment injectSignInFragment2(com.microsoft.brooklyn.ui.signin.SignInFragment)>
<com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,boolean)>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>
<com.google.android.gms.common.internal.TelemetryLoggingOptions: android.os.Bundle zaa()>
<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>
<com.google.android.material.bottomappbar.BottomAppBar: void setCutoutState()>
<com.google.android.gms.dynamite.zzm: int zza(android.content.Context,java.lang.String,boolean)>
<android.view.ViewGroup: void setAlpha(float)>
<kotlin.jvm.internal.Intrinsics: int compare(int,int)>
<com.google.android.material.appbar.HeaderBehavior: int getScrollRangeForDragFling(android.view.View)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity: void <init>()>
<com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory: com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy)>
<androidx.appcompat.widget.AppCompatImageHelper: void <init>(android.widget.ImageView)>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.evernote.android.job.JobStorage$JobOpenHelper: void upgradeFrom2To3(android.database.sqlite.SQLiteDatabase)>
<com.google.common.collect.ForwardingObject: void <init>()>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
<com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga zzar(byte[],int,int)>
<com.airbnb.lottie.LottieComposition: boolean hasDashPattern()>
<com.google.android.gms.internal.location.zzav: com.google.android.gms.location.LocationAvailability zzc()>
<com.azure.authenticator.ui.RootActivityBase: void setTitle(java.lang.CharSequence)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode: void <init>(java.lang.String,int,int)>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzd()>
<com.google.android.gms.measurement.internal.zzaz: void <init>()>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getRoutingHint()>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<com.google.android.material.internal.ForegroundLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.material.shape.ShapePath$PathOperation: void applyToPath(android.graphics.Matrix,android.graphics.Path)>
<com.google.android.gms.measurement.internal.zzfj: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>
<android.view.View: void setActivated(boolean)>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zzb: void setActivity(android.app.Activity)>
<androidx.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.lang.RuntimeException: void <init>()>
<com.adjust.sdk.ActivityPackage: java.util.Map getPartnerParameters()>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: long getSize()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: long getDelta()>
<com.google.android.gms.measurement.internal.zzai: boolean zzE()>
<com.google.android.material.navigation.NavigationBarItemView$1: void <init>(com.google.android.material.navigation.NavigationBarItemView)>
<com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams: int getMaxSizeSoftCap()>
<com.google.android.gms.internal.maps.zzw: int getStrokeColor()>
<android.os.MemoryFile: boolean allowPurging(boolean)>
<android.view.ViewGroup$OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<com.facebook.react.bridge.JavaMethodWrapper$6: void <init>()>
<com.google.android.gms.common.server.response.SafeParcelResponse: void zaI(java.lang.StringBuilder,int,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzq: void <init>(android.os.IBinder)>
<com.microsoft.authenticator.di.BrokerModule: void <init>()>
<com.google.android.material.timepicker.TimePickerView: void setUpDisplay()>
<com.google.android.gms.common.zzy: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)>
<com.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task,long,java.util.concurrent.TimeUnit)>
<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>
<com.facebook.yoga.YogaNode: com.facebook.yoga.YogaValue getHeight()>
<com.google.android.gms.security.ProviderInstaller: void zzb(android.content.Context,android.content.Context,java.lang.String)>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<com.google.android.gms.measurement.internal.zzg: void zzi(java.lang.String)>
<com.google.android.material.datepicker.MonthsPagerAdapter: void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections: com.azure.authenticator.ui.fragment.accounts.AccountListFragmentDirections$ActionAccountListFragmentToFullscreenAccountPage actionAccountListFragmentToFullscreenAccountPage(long)>
<com.facebook.react.modules.permissions.PermissionsModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobManager instance()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float)>
<com.microsoft.did.util.VerifiableCredentialUtil: kotlinx.serialization.modules.SerializersModule getPolymorphicSerializer()>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType$Companion: com.azure.authenticator.notifications.AbstractNotification$NotificationType fromString(java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: int getBitmapPrepareToDrawMaxSizeBytes()>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatablePointValue parsePoint(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<android.widget.Spinner: int getId()>
<com.google.android.material.shape.ShapePath: void setEndX(float)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment$getShowDeleteBackupConfirmDialogListener$1$$special$$inlined$let$lambda$1: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.fragment.main.BackupDetailsFragment$getShowDeleteBackupConfirmDialogListener$1)>
<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>
<com.facebook.common.executors.ScheduledFutureImpl: void <init>(android.os.Handler,java.lang.Runnable,java.lang.Object)>
<java.util.ArrayList: boolean isEmpty()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier: void <init>(java.util.List)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaFcmChangeDeviceTokenWorker access$1000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.measurement.internal.zzjx: void <init>(com.google.android.gms.measurement.internal.zzkd,java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int)>
<com.google.common.io.BaseEncoding: int maxDecodedSize(int)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState copy(java.lang.String,com.microsoft.onlineid.Ticket,com.microsoft.authenticator.backup.entities.CloudBackup)>
<com.azure.authenticator.ui.MainActivity$requestContactsPermission$1: void <init>(com.azure.authenticator.ui.MainActivity,int)>
<com.fasterxml.jackson.core.util.TextBuffer: char[] carr(int)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: int pad(int,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void startWorkplaceJoin(boolean)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.azure.authenticator.storage.database.AccountStorage access$getAccountStorage$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.microsoft.authenticator.di.MsaSdkModule: void <init>()>
<com.facebook.react.uimanager.MatrixMathHelper: void applySkewY(double[],double)>
<android.graphics.drawable.shapes.OvalShape: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,long,java.lang.String,java.util.List,java.lang.String,java.lang.String)>
<com.google.android.gms.dynamite.DynamiteModule$LoadingException: void <init>(java.lang.String,com.google.android.gms.dynamite.zzb)>
<com.facebook.react.views.slider.ReactSliderEvent: double getValue()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onViewUpdatesCompleted(com.facebook.react.uimanager.ReactShadowNode)>
<com.facebook.react.views.picker.ReactPickerItem: java.util.List createFromJsArrayMap(com.facebook.react.bridge.ReadableArray)>
<com.google.android.material.navigation.NavigationBarItemView: void setIconSize(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$4: void onChanged(java.util.ArrayList)>
<com.google.android.material.animation.TransformationCallback: void onScaleChanged(android.view.View)>
<com.google.android.gms.common.zzm: void zza(android.content.Context)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo build()>
<com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate2D(double[],double,double)>
<com.facebook.drawee.view.SimpleDraweeView: void initialize(com.facebook.common.internal.Supplier)>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction: void access$goToBackgroundDataRestrictionsSettings(com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction,android.content.Context)>
<com.evernote.android.job.Job: boolean isRequirementBatteryNotLowMet()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyComplete$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback,com.microsoft.onlineid.UserKey)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: boolean shouldPostprocess(com.facebook.imagepipeline.image.CloseableImage)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion$DefaultImpls: void onSignOutError$default(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion,com.microsoft.onlineid.exception.AuthenticationException,int,java.lang.Object)>
<androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.internal.measurement.zzds: void zzh(com.google.android.gms.internal.measurement.zzds,int)>
<com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode[] values()>
<com.google.android.gms.maps.MapView$zza: void <init>(android.view.ViewGroup,com.google.android.gms.maps.internal.IMapViewDelegate)>
<com.google.android.material.chip.ChipDrawable: void setEllipsize(android.text.TextUtils$TruncateAt)>
<com.google.android.material.shape.RelativeCornerSize: void <init>(float)>
<com.facebook.react.views.text.ReactTextUpdate: com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,boolean,int,int,int,com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter findNodeSetter(java.lang.Class)>
<com.facebook.react.modules.core.ReactChoreographer: void removeFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)>
<androidx.customview.widget.ViewDragHelper: int getTouchSlop()>
<com.azure.authenticator.utils.Hilt_TestActivity: java.lang.Object generatedComponent()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeList(android.os.Parcel,int,java.util.List,boolean)>
<com.google.android.gms.common.api.internal.zzb: com.google.android.gms.common.api.internal.zzb zza(android.app.Activity)>
<ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran: void <init>(java.util.List,java.lang.String,java.util.Map)>
<com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzcn zzg(int)>
<com.google.android.material.internal.CheckableImageButton: void toggle()>
<com.google.android.material.badge.BadgeDrawable$SavedState: void <init>(android.content.Context)>
<com.github.amlcurran.showcaseview.TextDrawer: void setTitlePaint(android.text.TextPaint)>
<com.google.android.gms.internal.measurement.zzbu: int zzb()>
<com.google.android.gms.internal.measurement.zznn: com.google.android.gms.internal.measurement.zzno zzc()>
<com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.facebook.common.references.CloseableReference: boolean isValid(com.facebook.common.references.CloseableReference)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.internal.safetynet.zze: void <init>()>
<java.lang.Math: double cos(double)>
<com.facebook.react.uimanager.events.EventDispatcher: java.util.concurrent.atomic.AtomicInteger access$500(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.datatransport.cct.internal.LogRequest: java.util.List getLogEvents()>
<com.google.android.material.button.MaterialButtonHelper: void setCheckable(boolean)>
<com.fasterxml.jackson.core.util.TextBuffer: void resetWithShared(char[],int,int)>
<com.google.android.gms.internal.measurement.zzeu: void zzc()>
<com.adjust.sdk.AttributionHandler: void access$500(com.adjust.sdk.AttributionHandler,com.adjust.sdk.IActivityHandler,com.adjust.sdk.SdkClickResponseData)>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>
<com.airbnb.lottie.LottieDrawable: void setMaxProgress(float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.businessLogic.AadRemoteNgcAuthCheckUseCase aadRemoteNgcAuthCheckUseCase()>
<com.fasterxml.jackson.core.util.BufferRecycler: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<java.lang.System: void exit(int)>
<android.widget.CheckBox: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
<java.util.zip.ZipInputStream: void closeEntry()>
<com.airbnb.lottie.model.content.GradientStroke: com.airbnb.lottie.model.animatable.AnimatablePointValue getEndPoint()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager_Factory: com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager get()>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback: com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion access$getCallback$p(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.azure.authenticator.notifications.msa.MsaNotification msaNotification()>
<java.lang.Short: java.lang.Short valueOf(short)>
<com.google.android.gms.measurement.internal.zzae: int zze(java.lang.String)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void updateCutout()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _releaseBuffers()>
<com.facebook.react.ReactAndroidHWInputDeviceHelper: void onFocusChanged(android.view.View)>
<com.facebook.react.ReactInstancePackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager)>
<com.facebook.react.ReactPackageHelper$1: void <init>(java.util.List)>
<androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)>
<com.adjust.sdk.Util: java.lang.String createUuid()>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod access$1100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: boolean zzc(com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder)>
<com.google.android.gms.measurement.internal.zzai: android.database.sqlite.SQLiteDatabase zze()>
<com.google.android.gms.internal.measurement.zzdj: void zzaG(com.google.android.gms.internal.measurement.zzdj,int)>
<com.facebook.react.views.text.ReactTextUpdate: boolean containsImages()>
<com.microsoft.authenticator.mfasdk.telemetry.MfaSdkTelemetryManager: void setPackageName(java.lang.String)>
<com.facebook.react.modules.network.HeaderUtil: java.lang.String stripHeaderName(java.lang.String)>
<com.google.android.gms.internal.measurement.zzmw: long zzd()>
<com.google.android.gms.measurement.internal.zzdh: void <init>()>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node E()>
<com.facebook.react.ReactApplication: com.facebook.react.ReactNativeHost getReactNativeHost()>
<ch.qos.logback.classic.pattern.LevelConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.views.text.TextInlineImageSpan: void onDetachedFromWindow()>
<ch.qos.logback.core.joran.util.MethodDescriptor: void <init>(java.lang.String,java.lang.reflect.Method)>
<com.google.android.datatransport.Encoding: java.lang.String getName()>
<com.google.android.material.datepicker.Month: long getStableId()>
<com.google.android.material.timepicker.TimeModel: void <init>(int,int,int,int)>
<androidx.work.impl.foreground.SystemForegroundService: void <init>()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity: void <init>()>
<com.google.android.gms.internal.location.zzau: void <init>(com.google.android.gms.common.api.internal.ListenerHolder)>
<com.google.android.gms.maps.model.zze: void <init>()>
<com.azure.authenticator.databinding.AccountListMenuItemBinding: com.azure.authenticator.databinding.AccountListMenuItemBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.app.Fragment: android.app.Fragment getTargetFragment()>
<androidx.transition.TransitionSet: androidx.transition.TransitionSet addTransition(androidx.transition.Transition)>
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
<com.azure.authenticator.common.Util$Companion: boolean isPreProductionEnvironment()>
<ch.qos.logback.core.status.StatusManager: java.util.List getCopyOfStatusList()>
<com.facebook.imagepipeline.producers.ProducerContextCallbacks: void onIsPrefetchChanged()>
<com.adjust.sdk.IAttributionHandler: void teardown()>
<com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: int getIntValue()>
<com.google.android.material.internal.TextDrawableHelper: void setTextWidthDirty(boolean)>
<com.microsoft.brooklyn.common.BrooklynBGTaskScheduler: void <init>(com.microsoft.brooklyn.favicon.FaviconRefreshManager,com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshManager,com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshManager,com.microsoft.brooklyn.notifications.BrooklynIntroNotificationManager,com.microsoft.brooklyn.module.autofill.heuristics.HeuristicsConnector)>
<com.airbnb.lottie.value.LottieValueCallback: java.lang.Object getValueInternal(float,float,java.lang.Object,java.lang.Object,float,float,float)>
<com.azure.authenticator.storage.database.AccountTranslator_Factory$InstanceHolder: com.azure.authenticator.storage.database.AccountTranslator_Factory access$000()>
<com.facebook.drawee.backends.pipeline.Fresco: void initializeDrawee(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig)>
<com.facebook.react.modules.core.ChoreographerCompat: android.view.Choreographer getChoreographer()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: androidx.hilt.work.HiltWorkerFactory hiltWorkerFactory()>
<androidx.preference.Preference: void setEnabled(boolean)>
<com.google.android.material.behavior.SwipeDismissBehavior: void updateAccessibilityActions(android.view.View)>
<android.widget.LinearLayout: android.os.Parcelable onSaveInstanceState()>
<ch.qos.logback.core.LayoutBase: void <init>()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: androidx.lifecycle.MutableLiveData access$get_msaSessionResponseStatus$p(com.azure.authenticator.ui.authentication.MsaAuthViewModel)>
<com.google.android.gms.auth.api.signin.internal.zzq: com.google.android.gms.auth.api.signin.GoogleSignInOptions zzs()>
<com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.ngc.provider.cryptography.NgcCredentialManager access$7000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.databinding.GpListRowLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)>
<com.google.crypto.tink.KeysetReader: com.google.crypto.tink.proto.Keyset read()>
<com.google.android.datatransport.runtime.EventInternal: com.google.android.datatransport.runtime.EncodedPayload getEncodedPayload()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$checkForIsSharedDeviceStatusAsync$$inlined$let$lambda$1$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$checkForIsSharedDeviceStatusAsync$$inlined$let$lambda$1)>
<com.google.android.material.button.MaterialButtonToggleGroup: void access$700(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean)>
<com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)>
<android.widget.RelativeLayout: void setVisibility(int)>
<com.azure.authenticator.databinding.SharedDeviceModeBinding: void <init>(android.widget.LinearLayout,android.widget.Button,android.widget.TextView,android.widget.EditText)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker access$500(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setPersisted(boolean)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: void <init>()>
<com.google.android.gms.common.api.zac: void <init>()>
<com.google.android.gms.maps.internal.zzat: void zzc(com.google.android.gms.internal.maps.zzt)>
<com.google.android.gms.internal.measurement.zzkg: int zzm(java.lang.Class)>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<com.azure.authenticator.databinding.AccountFullscreenInfoFragmentBinding: void <init>(android.widget.LinearLayout,androidx.recyclerview.widget.RecyclerView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView,com.microsoft.authenticator.common.viewLogic.AppBarLayout,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,androidx.appcompat.widget.Toolbar,android.widget.TextView)>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setRoundingMethod(com.facebook.drawee.generic.RoundingParams$RoundingMethod)>
<com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean,com.facebook.imagepipeline.cache.MemoryCache,boolean)>
<com.google.android.material.bottomsheet.BottomSheetDialog: com.google.android.material.bottomsheet.BottomSheetBehavior access$100(com.google.android.material.bottomsheet.BottomSheetDialog)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1: void <init>(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,android.os.Handler)>
<com.google.android.gms.internal.measurement.zzlc: boolean zzc()>
<com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyStorage: void <init>(com.microsoft.authenticator.graphclient.data.dataSource.AuthMethodsPolicyDatabase)>
<com.facebook.react.modules.timepicker.TimePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.timepicker.TimePickerDialogModule)>
<com.google.android.material.navigation.NavigationBarView$SavedState$1: com.google.android.material.navigation.NavigationBarView$SavedState[] newArray(int)>
<ch.qos.logback.core.net.ssl.SSLConfigurable: java.lang.String[] getDefaultCipherSuites()>
<android.graphics.Path: void close()>
<com.facebook.react.views.modal.ReactModalHostView: android.view.View getChildAt(int)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onDestroy()>
<com.google.android.gms.measurement.internal.zzaf: java.lang.String zza(android.os.Bundle)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getVersionCode()>
<java.lang.Character: boolean isISOControl(char)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.widget.AutoCompleteTextView access$000(android.widget.EditText)>
<com.google.android.gms.common.api.internal.zabd: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zab(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.gms.internal.measurement.zzlr: void <init>()>
<com.google.android.gms.common.images.Size: void <init>(int,int)>
<com.airbnb.lottie.LottieCompositionFactory$10: void onResult(com.airbnb.lottie.LottieComposition)>
<com.google.common.collect.RegularImmutableMap$KeySet: void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.github.amlcurran.showcaseview.ShowcaseView: com.github.amlcurran.showcaseview.ShotStateStore access$000(com.github.amlcurran.showcaseview.ShowcaseView)>
<android.graphics.Bitmap: int getAllocationByteCount()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffect(android.widget.AutoCompleteTextView)>
<com.adjust.sdk.PackageHandler: void readPackageQueueI()>
<com.evernote.android.job.Job: boolean isFinished()>
<com.google.android.gms.common.internal.ClientSettings: java.lang.String getAccountName()>
<com.azure.authenticator.databinding.FragmentImportFromChromeBinding: com.azure.authenticator.databinding.FragmentImportFromChromeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.adjust.sdk.AdjustInstance: boolean checkActivityHandler(boolean,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext getThemedContext()>
<com.facebook.react.ReactInstanceManagerBuilder: void <init>()>
<java.util.regex.Matcher: int groupCount()>
<com.google.android.material.textfield.TextInputLayout: boolean isHintExpanded()>
<ch.qos.logback.classic.spi.ILoggingEvent: java.lang.Object[] getArgumentArray()>
<com.google.android.material.button.MaterialButtonToggleGroup: android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View)>
<com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate: void onTextSizeChange()>
<com.google.common.collect.MapMakerInternalMap$InternalEntryHelper: com.google.common.collect.MapMakerInternalMap$Strength keyStrength()>
<androidx.preference.PreferenceGroup: int getPreferenceCount()>
<com.microsoft.brooklyn.config.BrooklynConfig: void <init>(android.content.Context,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshManager)>
<com.google.android.gms.auth.api.identity.SavePasswordRequest: com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder builder()>
<com.github.amlcurran.showcaseview.TextDrawer: void setContentTitle(java.lang.CharSequence)>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: com.facebook.react.views.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.microsoft.onlineid.AccountManager: void getSignInIntent(com.microsoft.onlineid.SignInOptions,android.os.Bundle)>
<com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)>
<ch.qos.logback.core.spi.ContextAwareImpl: void addWarn(java.lang.String,java.lang.Throwable)>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>
<com.google.android.gms.internal.auth-api.zzw: void <init>(android.os.IBinder)>
<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: void <init>(int,boolean,int,boolean)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>
<com.google.android.material.resources.MaterialAttributes: android.util.TypedValue resolve(android.content.Context,int)>
<com.facebook.react.views.viewpager.ReactViewPager$PageChangeListener: void <init>(com.facebook.react.views.viewpager.ReactViewPager,com.facebook.react.views.viewpager.ReactViewPager$1)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onDestroyView()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisAuto()>
<com.facebook.react.modules.core.ReactChoreographer$CallbackType: int getOrder()>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void clearSkewValues()>
<com.google.android.datatransport.cct.internal.ClientInfo$ClientType: void <init>(java.lang.String,int,int)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions$Builder: void <init>()>
<java.lang.String: int indexOf(int,int)>
<com.google.android.material.appbar.HeaderBehavior: void <init>()>
<androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getCachedFont(android.content.Context,int)>
<com.google.android.gms.auth.api.signin.internal.SignInHubActivity: android.content.Intent zzd(com.google.android.gms.auth.api.signin.internal.SignInHubActivity)>
<com.airbnb.lottie.animation.content.GradientStrokeContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.GradientStroke)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadWorker_AssistedFactory access$16000(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.imagepipeline.decoder.ProgressiveJpegConfig: int getNextScanNumberToDecode(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInSetupViewModel aadPhoneSignInSetupViewModel()>
<java.util.concurrent.Semaphore: boolean tryAcquire(int,long,java.util.concurrent.TimeUnit)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int,int,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void access$showDeleteBackupResultDialog(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.backup.entities.BackupRestoreError)>
<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: void <init>()>
<com.adjust.sdk.ActivityHandler: void readActivityStateI(android.content.Context)>
<com.google.android.gms.internal.measurement.zzha: void zzH(int,java.util.List,boolean)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzkk zzl()>
<com.facebook.react.views.textinput.ReactContentSizeChangedEvent: void <init>(int,float,float)>
<com.facebook.imagepipeline.producers.ThumbnailProducer: boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager getBrooklynEnterpriseConfigManager()>
<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.auth-api.zzn: void <init>(com.google.android.gms.internal.auth-api.zzj,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.Credential)>
<java.lang.Math: float max(float,float)>
<com.google.crypto.tink.Registry$4: void <init>(com.google.crypto.tink.KeyTypeManager)>
<android.app.Fragment: void setHasOptionsMenu(boolean)>
<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<com.azure.authenticator.notifications.msa.MsaProtectionNotification: void logTelemetryForResult(com.azure.authenticator.notifications.msa.MsaProtectionNotificationProcessingResult)>
<com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue)>
<android.widget.HorizontalScrollView: boolean arrowScroll(int)>
<com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>
<ch.qos.logback.classic.net.server.ServerSocketAppender: boolean isIncludeCallerData()>
<com.google.android.gms.internal.measurement.zzdb: com.google.android.gms.internal.measurement.zzdf zzc(int)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)>
<com.facebook.react.views.drawer.events.DrawerOpenedEvent: void <init>(int)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: java.lang.String zab()>
<com.google.android.material.button.MaterialButton: boolean isIconStart()>
<com.google.android.material.badge.BadgeDrawable: boolean hasNumber()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)>
<com.google.android.gms.internal.measurement.zzcz: boolean zza()>
<com.azure.authenticator.jwe.SecureRandomGenerator: byte[] getRandom(int)>
<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity_MembersInjector: void injectMembers(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.KeyManager[] createKeyManagers(ch.qos.logback.core.spi.ContextAware)>
<com.facebook.imagepipeline.producers.ThumbnailBranchProducer: void <init>(com.facebook.imagepipeline.producers.ThumbnailProducer[])>
<com.google.android.material.badge.BadgeDrawable: void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker: android.content.Context getContext()>
<com.microsoft.brooklyn.module.model.credentials.CredAutofillSaveMetadata: boolean equals(java.lang.Object)>
<com.facebook.drawee.components.DeferredReleaser: void ensureOnUiThread()>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: void incrementRetries()>
<com.google.android.gms.maps.MapFragment$zzb: void zzd()>
<com.facebook.react.views.art.ARTShapeShadowNode: void <init>()>
<com.google.android.gms.maps.internal.zzah: void zza(android.location.Location)>
<com.google.android.material.bottomsheet.BottomSheetDialog: boolean shouldWindowCloseOnTouchOutside()>
<com.google.android.gms.measurement.internal.zzfl: void zzQ(com.google.android.gms.measurement.internal.zzge)>
<com.google.android.gms.maps.zzn: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnGroundOverlayClickListener)>
<com.facebook.soloader.MergedSoMapping: void invokeJniOnload(java.lang.String)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>
<com.facebook.react.animated.DiffClampAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<android.app.Fragment: void setRetainInstance(boolean)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void createAnimatedNode(int,com.facebook.react.bridge.ReadableMap)>
<com.evernote.android.job.Job: void cancel()>
<com.google.android.gms.internal.measurement.zzls: boolean zza()>
<com.airbnb.lottie.model.content.Mask$MaskMode: void <init>(java.lang.String,int)>
<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer,long)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy access$400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<ch.qos.logback.core.spi.ContextAwareBase: void addError(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zza: void getStreetViewPanoramaAsync(com.google.android.gms.maps.OnStreetViewPanoramaReadyCallback)>
<com.google.android.gms.auth.api.zzd: void <init>()>
<com.facebook.react.views.text.ReactTextInlineImageShadowNode: com.facebook.react.views.text.TextInlineImageSpan buildInlineImageSpan()>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<java.io.FilterInputStream: void mark(int)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzae zzc()>
<com.google.android.gms.maps.model.PointOfInterest: void <init>(com.google.android.gms.maps.model.LatLng,java.lang.String,java.lang.String)>
<android.util.JsonReader: void close()>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getLayoutParent()>
<com.adjust.sdk.IActivityHandler: com.adjust.sdk.SessionParameters getSessionParameters()>
<com.google.android.gms.internal.measurement.zzu: void <init>()>
<java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)>
<ch.qos.logback.core.status.StatusUtil: int getHighestLevel(long)>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTask: void fireChangeDetected()>
<ch.qos.logback.core.net.SyslogOutputStream: void close()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase getPowerLiftUseCase()>
<com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordChallengeFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordChallengeFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.gms.internal.auth-api.zzc: boolean zzc(int,android.os.Parcel,android.os.Parcel,int)>
<com.microsoft.authenticator.di.MsaSdkModule_ProvideMsaNgcManagerFactory: com.microsoft.onlineid.sdk.extension.NgcManager provideMsaNgcManager(com.microsoft.authenticator.di.MsaSdkModule,android.content.Context)>
<com.google.android.gms.internal.measurement.zzjs: void zza()>
<com.adjust.sdk.AdjustFactory: long getSubsessionInterval()>
<java.io.File: java.lang.String toString()>
<com.google.android.gms.common.api.Scope: void <init>(java.lang.String)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool,int)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonInputStreamSync(java.io.InputStream,java.lang.String)>
<com.google.android.gms.measurement.internal.zzbl: void <init>()>
<com.facebook.react.uimanager.ReactClippingViewGroup: void updateClippingRect()>
<android.text.TextPaint: void setAntiAlias(boolean)>
<com.facebook.react.jstasks.HeadlessJsTaskContext$2: void <init>(com.facebook.react.jstasks.HeadlessJsTaskContext,int)>
<com.google.android.material.tabs.TabLayout: int getTabScrollRange()>
<java.io.DataOutputStream: void flush()>
<com.google.android.gms.internal.measurement.zzia: java.lang.Object zzb(java.lang.Object,java.lang.String)>
<ch.qos.logback.classic.net.SocketReceiver: ch.qos.logback.core.net.SocketConnector createConnector(java.net.InetAddress,int,int,int)>
<com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isYogaLeafNode()>
<com.google.android.datatransport.runtime.TransportContext: java.lang.String getBackendName()>
<android.widget.AutoCompleteTextView: int getPaddingTop()>
<java.util.Iterator: boolean hasNext()>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setEnabled(android.view.View,boolean)>
<com.google.android.gms.tasks.zzq: void zzb()>
<com.google.android.gms.common.api.Status: void startResolutionForResult(android.app.Activity,int)>
<com.facebook.react.modules.storage.AsyncLocalStorageUtil: java.lang.String getItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<java.util.Set: boolean removeAll(java.util.Collection)>
<android.widget.FrameLayout: android.view.ViewParent getParent()>
<java.net.URL: java.lang.String getAuthority()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String zzg(com.google.android.gms.auth.api.credentials.Credential)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void updateSourceImageRef(com.facebook.common.references.CloseableReference,int)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment$onCreateView$2: void <init>(com.azure.authenticator.ui.fragment.main.ViewLogsFragment,android.widget.Button)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.datasource.DataSource getDataSourceWithResult()>
<com.google.android.gms.common.api.internal.zaab: androidx.collection.ArraySet zab()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: boolean _skipYAMLComment()>
<com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener: void onAnimationEnd()>
<com.facebook.react.views.slider.ReactSlider: void setMinValue(double)>
<java.util.ListIterator: int nextIndex()>
<android.content.ComponentName: java.lang.String getPackageName()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountViewModel access$13600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)>
<com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder newBuilder()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: java.lang.Boolean shouldDecodePrefetches()>
<com.google.common.base.Ascii: java.lang.String toUpperCase(java.lang.String)>
<com.airbnb.lottie.value.Keyframe: boolean isStatic()>
<com.facebook.react.views.viewpager.PageSelectedEvent: java.lang.String getEventName()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToDecodeSequence(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zoomGesturesEnabled(boolean)>
<com.google.android.gms.common.api.GoogleApiClient: void zao(com.google.android.gms.common.api.internal.zacv)>
<com.facebook.react.views.slider.ReactSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.material.appbar.ViewOffsetBehavior: boolean isHorizontalOffsetEnabled()>
<com.airbnb.lottie.FontAssetDelegate: android.graphics.Typeface fetchFont(java.lang.String)>
<com.facebook.react.module.model.ReactModuleInfo: java.lang.String name()>
<ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>
<com.facebook.react.common.MapBuilder$Builder: java.util.Map build()>
<com.facebook.react.modules.network.ProgressResponseBody: void <init>(okhttp3.ResponseBody,com.facebook.react.modules.network.ProgressListener)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getGivenName()>
<com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler: void putProcessedToSavedInstanceState(android.os.Bundle)>
<com.facebook.imagepipeline.memory.BasePool: com.facebook.imagepipeline.memory.Bucket getBucketIfPresent(int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.google.android.material.textfield.TextInputLayout: void expandHint(boolean)>
<com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)>
<com.microsoft.authenticator.core.logging.BaseLogger: void v(java.lang.String)>
<com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.app.Activity,com.google.android.gms.common.api.internal.LifecycleFragment,int,int,android.content.DialogInterface$OnCancelListener)>
<com.airbnb.lottie.animation.content.DrawingContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)>
<com.google.android.material.expandable.ExpandableWidgetHelper: void dispatchExpandedStateChanged()>
<ch.qos.logback.core.rolling.helper.IntParser: java.lang.String findToken(java.lang.String)>
<android.view.MenuItem: int getItemId()>
<com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)>
<java.util.Stack: boolean add(java.lang.Object)>
<com.google.android.gms.common.util.HttpUtils: java.lang.String zza(java.lang.String,java.lang.String)>
<com.google.android.gms.location.zzs: void <init>()>
<com.google.android.material.chip.ChipDrawable: float getChipIconSize()>
<com.evernote.android.job.JobRequest: void setFlexSupport(boolean)>
<com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(int)>
<com.google.android.material.chip.ChipDrawable: boolean isCloseIconVisible()>
<com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode fromInt(int)>
<androidx.recyclerview.widget.ItemTouchHelper: void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.qrcode.abstraction.IScanQrCodeAdapter iScanQrCodeAdapter()>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes)>
<com.google.android.gms.measurement.internal.zzd: void zzj(long)>
<com.adjust.sdk.scheduler.TimerOnce: com.adjust.sdk.ILogger access$100(com.adjust.sdk.scheduler.TimerOnce)>
<com.facebook.react.views.modal.ShowEvent: java.lang.String getEventName()>
<com.google.android.gms.measurement.internal.zzao: void <init>(java.lang.String,java.lang.String,long,long,long,long,long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Boolean)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity: java.lang.Object generatedComponent()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingHandler enterpriseDenyListMappingHandler()>
<com.google.android.datatransport.runtime.AutoValue_TransportContext$Builder: com.google.android.datatransport.runtime.TransportContext$Builder setPriority(com.google.android.datatransport.Priority)>
<com.google.android.gms.measurement.internal.zzai: java.lang.String zzw()>
<ch.qos.logback.core.pattern.Converter: void setNext(ch.qos.logback.core.pattern.Converter)>
<com.facebook.react.uimanager.UIImplementation: void updateRootView(int,int,int)>
<com.google.android.gms.measurement.internal.zzkf: java.lang.String zzh(com.google.android.gms.internal.measurement.zzdh)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobExecutor getJobExecutor()>
<android.content.res.Resources: int getInteger(int)>
<com.google.android.gms.measurement.internal.zzai: void zzy()>
<javax.net.ssl.SSLSocket: boolean isOutputShutdown()>
<com.airbnb.lottie.model.layer.BaseLayer: void draw(android.graphics.Canvas,android.graphics.Matrix,int)>
<com.adjust.sdk.IRunActivityHandler: void run(com.adjust.sdk.ActivityHandler)>
<com.google.common.collect.RegularImmutableMap$EntrySet$1: void <init>(com.google.common.collect.RegularImmutableMap$EntrySet)>
<okhttp3.Cache: void <init>(java.io.File,long)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.internal.base.zai: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)>
<com.evernote.android.job.util.JobCat: void e(java.lang.String)>
<java.security.NoSuchProviderException: void <init>(java.lang.String)>
<android.os.PowerManager: boolean isScreenOn()>
<com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions disableRotation()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$4: void <init>(kotlin.jvm.functions.Function0)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionPercent(int,float)>
<android.system.Os: void posix_fallocate(java.io.FileDescriptor,long,long)>
<com.azure.authenticator.storage.Storage: void writeCipherIv(java.lang.String,java.lang.String)>
<java.io.DataOutputStream: void writeInt(int)>
<com.microsoft.authenticator.backup.entities.RestoreBackupResult$Error: java.lang.Exception getException()>
<com.azure.authenticator.utils.Hilt_TestActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzcm: java.lang.String zza()>
<com.google.android.gms.internal.auth.zzc: void writeBoolean(android.os.Parcel,boolean)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()>
<com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String getEventName()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zabl zaH(com.google.android.gms.common.api.GoogleApi)>
<com.google.android.gms.maps.model.TileOverlayOptions: float getZIndex()>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods build()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onAccountSignedOut$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult: com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum getStoreRatingFlowEnum()>
<com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType[] values()>
<com.google.android.gms.internal.measurement.zzkz: long zzs()>
<androidx.work.impl.background.systemjob.SystemJobService: android.content.Intent getIntent()>
<com.google.android.gms.cloudmessaging.CloudMessagingReceiver: int zzb(android.content.Context,android.content.Intent)>
<com.azure.authenticator.databinding.FragmentImportFromChromeBinding: android.widget.ScrollView getRoot()>
<com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: int getOrientation(java.io.InputStream)>
<com.google.android.gms.location.zzby: void <init>()>
<com.adjust.sdk.LogLevel: com.adjust.sdk.LogLevel valueOf(java.lang.String)>
<com.azure.authenticator.common.AdjustHelper: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: android.content.Context access$300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.facebook.react.uimanager.events.TouchEventType: java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType)>
<android.widget.FrameLayout: float getTranslationY()>
<com.facebook.common.internal.Throwables: void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class)>
<com.fasterxml.jackson.core.JsonGenerator: void _reportError(java.lang.String)>
<android.widget.EditText: void setMinimumHeight(int)>
<com.google.android.gms.dynamite.DynamiteModule: boolean zzc(android.database.Cursor)>
<androidx.sqlite.db.SupportSQLiteDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])>
<com.google.android.gms.tasks.zzw: com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)>
<com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: void <init>(com.facebook.react.modules.core.JavaTimerManager,long)>
<com.facebook.imagepipeline.cache.BufferedDiskCache$6: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.image.EncodedImage)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$4: androidx.lifecycle.ViewModelStore invoke()>
<com.facebook.imageformat.ImageFormatChecker: void updateMaxHeaderLength()>
<com.microsoft.did.di.VcWalletModule_PresentationReceiptDaoFactory: com.microsoft.did.datasource.db.dao.PresentationReceiptDao presentationReceiptDao(com.microsoft.did.di.VcWalletModule,com.microsoft.did.datasource.db.VcDatabase)>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: boolean isConnected()>
<android.widget.ImageButton: boolean performClick()>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>
<com.azure.authenticator.databinding.FragmentMsaProtectionBinding: com.azure.authenticator.databinding.FragmentMsaProtectionBinding bind(android.view.View)>
<com.facebook.react.views.text.TextInlineImageSpan: android.graphics.drawable.Drawable getDrawable()>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean isShown()>
<com.google.android.gms.maps.zzad: void <init>(com.google.android.gms.maps.StreetViewPanorama,com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaChangeListener)>
<com.google.android.datatransport.runtime.backends.BackendResponse: com.google.android.datatransport.runtime.backends.BackendResponse transientError()>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzb()>
<com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity$1: void <init>(com.azure.authenticator.authentication.msa.ui.Hilt_AddMsaAccountActivity)>
<android.app.Application$ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>
<com.google.android.gms.signin.internal.zac: void <init>()>
<com.google.android.gms.common.server.response.FastParser: boolean zai(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)>
<com.google.common.collect.ImmutableList$Builder: void <init>(int)>
<android.widget.EditText: void setImeActionLabel(java.lang.CharSequence,int)>
<com.facebook.react.animated.DivisionAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.azure.authenticator.databinding.FrxRestorePromptBinding: com.azure.authenticator.databinding.FrxRestorePromptBinding bind(android.view.View)>
<android.os.Bundle: long getLong(java.lang.String,long)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_11_12$1: void <init>(int,int)>
<com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager: void <init>(android.content.Context,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.notifications.controller.FirebaseNotificationsWrapper,com.microsoft.authenticator.authentication.msa.businessLogic.MsaChangeFcmTokenUseCase,com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase,com.microsoft.authenticator.core.telemetry.TelemetryManager,com.azure.authenticator.jobs.DeferrableWorkerUtils)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo build()>
<com.evernote.android.job.work.JobProxyWorkManager: java.util.List getWorkStatusBlocking(java.lang.String)>
<com.google.android.gms.internal.measurement.zzp: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzs)>
<com.google.common.collect.MapMakerInternalMap$Segment: void clearReferenceQueue(java.lang.ref.ReferenceQueue)>
<com.google.android.gms.measurement.internal.zzbn: void <init>()>
<com.google.android.gms.internal.safetynet.zzb: void <init>(java.lang.String)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.math.BigInteger createBigInteger(android.os.Parcel,int)>
<androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel)>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getAvailableFeatures()>
<com.facebook.yoga.YogaNode: void setMinHeightPercent(float)>
<java.lang.Double: boolean isNaN(double)>
<com.facebook.react.uimanager.ReactShadowNode: java.lang.Integer getHeightMeasureSpec()>
<androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>
<com.google.android.material.shape.ShapePath$PathArcOperation: float getBottom()>
<com.airbnb.lottie.network.LottieFetchResult: java.io.InputStream bodyByteStream()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeQuotedInt(int)>
<com.evernote.android.job.JobRequest: long getFlexMs()>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectAuthMethodsPolicyManager(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.google.android.gms.common.api.internal.zacg: void <init>(com.google.android.gms.common.api.internal.RegistrationMethods$Builder)>
<com.google.android.gms.measurement.internal.zzcn: void <init>()>
<com.facebook.react.uimanager.events.EventDispatcher: com.facebook.react.uimanager.events.ReactEventEmitter access$900(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory get()>
<java.lang.String: java.lang.String substring(int)>
<com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()>
<com.facebook.react.modules.network.OkHttpClientProvider: okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.commonuilibrary.util.NotificationHelper access$5900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.badge.BadgeDrawable: int getAlpha()>
<com.google.android.material.textfield.TextInputLayout$SavedState$1: void <init>()>
<com.google.android.material.button.MaterialButton: boolean isChecked()>
<com.google.android.gms.measurement.internal.zzcm: void <init>()>
<com.google.android.gms.common.util.JsonUtils: java.lang.String unescapeString(java.lang.String)>
<android.app.Dialog: void setCancelable(boolean)>
<com.microsoft.did.feature.cardlist.viewlogic.CardListFragment_MembersInjector: void injectScanQrCodeAdapter(com.microsoft.did.feature.cardlist.viewlogic.CardListFragment,com.microsoft.authenticator.qrcode.abstraction.IScanQrCodeAdapter)>
<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)>
<com.google.android.gms.internal.auth.zzc: boolean zza(android.os.Parcel)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void init()>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<java.util.LinkedHashMap: int size()>
<bolts.Continuation: java.lang.Object then(bolts.Task)>
<androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>
<java.text.BreakIterator: java.text.BreakIterator getWordInstance()>
<com.microsoft.onlineid.sts.DeviceIdentityManager: com.microsoft.onlineid.sts.DeviceIdentity getDeviceIdentity(boolean)>
<com.facebook.datasource.AbstractDataSource: boolean wasCancelled()>
<com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()>
<com.facebook.cache.disk.DiskStorageCache: boolean hasKeySync(com.facebook.cache.common.CacheKey)>
<ch.qos.logback.core.net.server.RemoteReceiverServerRunner: void <init>(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor,int)>
<com.microsoft.authenticator.backup.businessLogic.cloudStorage.BackupStorageManager: void <init>()>
<android.graphics.BitmapFactory$Options: void <init>()>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setRequestUptimeMs(long)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void dropAnimatedNode(int)>
<com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader get()>
<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.api.internal.zaal: void <init>(com.google.android.gms.common.api.internal.zaar,java.util.Map)>
<com.facebook.react.uimanager.ReactRoot: java.lang.String getInitialUITemplate()>
<com.google.android.gms.internal.measurement.zzjs: void zzg(com.google.android.gms.internal.measurement.zzjs)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.ImagePipelineExperiments getExperiments()>
<com.google.android.material.appbar.ViewOffsetHelper: boolean setLeftAndRightOffset(int)>
<android.database.CursorWindow: void setStartPosition(int)>
<com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()>
<com.azure.authenticator.databinding.FragmentPaymentListBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,android.widget.ImageView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.ScrollView,com.google.android.material.floatingactionbutton.FloatingActionButton,android.widget.FrameLayout,androidx.coordinatorlayout.widget.CoordinatorLayout,androidx.constraintlayout.widget.ConstraintLayout,androidx.recyclerview.widget.RecyclerView,com.facebook.shimmer.ShimmerFrameLayout,android.widget.TextView,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.widget.TextView)>
<com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence)>
<com.google.android.gms.tasks.zzq: void zza(com.google.android.gms.tasks.Task)>
<com.google.android.material.animation.MotionTiming: android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)>
<android.widget.FrameLayout: void setContentDescription(java.lang.CharSequence)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider restoreFlowViewModelProvider()>
<com.google.android.gms.auth.api.signin.internal.zzq: void clear()>
<com.evernote.android.job.JobRescheduleService: android.content.Intent getIntent()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void toggleEditMode$app_productionRelease(boolean)>
<com.google.android.material.internal.CollapsingTextHelper: float getExpandedTextHeight()>
<com.facebook.react.devsupport.JSDevSupport$DevSupportCallback: void onFailure(int,java.lang.Exception)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)>
<com.facebook.react.modules.network.ForwardingCookieHandler: boolean access$200()>
<com.google.android.material.navigation.NavigationBarView: com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener access$100(com.google.android.material.navigation.NavigationBarView)>
<com.facebook.react.bridge.JavaMethodWrapper$4: void <init>()>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatablePathValue getAnchorPoint()>
<com.google.android.material.textfield.TextInputLayout: void refreshErrorIconDrawableState()>
<com.microsoft.authenticator.selfhost.SelfhostConfigManager: java.lang.Object configureSelfhostControls(kotlin.coroutines.Continuation)>
<com.facebook.react.bridge.JSBundleLoader$3: void <init>(java.lang.String,java.lang.String)>
<java.io.Writer: void flush()>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: boolean shouldPropagateIntermediateResults(com.facebook.imagepipeline.producers.FetchState)>
<com.facebook.react.ReactRootView: void updateRootLayoutSpecs(int,int)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: void access$300(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream)>
<com.google.android.gms.internal.measurement.zzdx: void <init>()>
<com.airbnb.lottie.L: com.airbnb.lottie.network.NetworkCache networkCache(android.content.Context)>
<com.google.android.material.textfield.IndicatorViewController: java.lang.CharSequence getErrorText()>
<com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$onCreateView$$inlined$apply$lambda$3: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1)>
<android.widget.ImageButton: void sendAccessibilityEvent(int)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void startFadeOutAnimation(int)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void showStoreRatingDialog(androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.airbnb.lottie.manager.ImageAssetManager: boolean hasSameContext(android.content.Context)>
<com.facebook.drawee.components.DeferredReleaser: void scheduleDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable)>
<com.google.android.gms.internal.maps.zzae: void <init>(android.os.IBinder)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver_MembersInjector: void <init>(javax.inject.Provider)>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(android.widget.LinearLayout$LayoutParams)>
<com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>
<com.google.android.gms.internal.measurement.zzil: void <init>(com.google.android.gms.internal.measurement.zzii)>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildInfoPackage(java.lang.String)>
<com.facebook.react.uimanager.JSTouchDispatcher: void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)>
<com.azure.authenticator.ui.fragment.main.Hilt_SendFeedbackFragment: java.lang.Object generatedComponent()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager_Factory: com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager newInstance(com.azure.authenticator.ui.action.UserInteractionRequiredActionManager,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: int getVerticalLayoutGap()>
<com.azure.authenticator.profile.AbstractGetProfileImageTask$ImageResult: android.graphics.Bitmap getImage()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getId()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isDiskCacheEnabled()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void maybeBuildAndSetGestureDetector(com.facebook.drawee.controller.AbstractDraweeController)>
<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>
<ch.qos.logback.classic.LoggerContext: void reset()>
<com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.color.MaterialColors: int layer(int,int)>
<com.google.android.gms.common.api.internal.zabm: com.google.android.gms.common.Feature zab(com.google.android.gms.common.api.internal.zabm)>
<com.google.common.collect.Sets: boolean equalsImpl(java.util.Set,java.lang.Object)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: android.graphics.RectF getDirectionAwareBorderInsets()>
<ch.qos.logback.core.joran.action.NestedBasicPropertyIA: void <init>()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: boolean access$1000(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions createFromAttributes(android.content.Context,android.util.AttributeSet)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$20: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<ch.qos.logback.classic.util.DefaultNestedComponentRules: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>
<kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeout(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>
<com.azure.authenticator.PhoneFactorApplication$onCreate$1: void <init>()>
<com.google.android.gms.common.internal.zzf: void <init>(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IBinder,android.os.Bundle)>
<ch.qos.logback.classic.net.ReceiverBase: java.lang.Runnable getRunnableTask()>
<com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel: void <init>(com.azure.authenticator.authentication.msa.MsaAccountManager,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.azure.authenticator.storage.Storage,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.features.frx.businessLogic.InstallReferrerManager,com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager,com.microsoft.brooklyn.telemetry.BrooklynLaunchTelemetryManager,com.microsoft.did.feature.notifications.NotificationService)>
<com.google.android.gms.common.zzg: void <init>(byte[])>
<com.google.android.gms.internal.measurement.zzck: boolean zzc()>
<com.google.android.gms.common.api.internal.zas: com.google.android.gms.common.api.internal.zat zab()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$generateNgcKey$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.microsoft.authenticator.msa.entities.ValidateMsaAccountResult$Failure: void <init>(com.microsoft.onlineid.exception.AuthenticationException,android.os.Bundle)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: boolean shouldAccountHaveAadNgcPushNotifications(com.azure.authenticator.accounts.GenericAccount)>
<com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zae(java.lang.String,java.lang.String)>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)>
<com.google.android.gms.internal.measurement.zzha: void zzk(int,int)>
<com.google.android.gms.cloudmessaging.zzb: void <init>()>
<com.google.android.material.behavior.SwipeDismissBehavior$1: void <init>(com.google.android.material.behavior.SwipeDismissBehavior)>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder builder()>
<android.graphics.drawable.GradientDrawable: void setColor(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase access$getApproveAadNgcSessionUseCase$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.google.android.gms.auth.api.identity.zzf: void <init>(java.lang.String)>
<com.facebook.imagepipeline.producers.JobScheduler: void clearJob()>
<com.google.android.material.textfield.TextInputLayout: boolean isSingleLineFilledTextField()>
<com.google.android.gms.internal.measurement.zzdq: void zzo(com.google.android.gms.internal.measurement.zzdq,java.lang.Iterable)>
<com.google.common.collect.MapMakerInternalMap: void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference)>
<com.google.android.gms.stats.zzb: void <init>(com.google.android.gms.stats.WakeLock)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1: void <init>()>
<android.view.Window: void setDimAmount(float)>
<java.util.TreeSet: boolean contains(java.lang.Object)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: void <init>(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder,com.google.android.gms.auth.api.credentials.zzf)>
<com.azure.authenticator.ui.fragment.accounts.FluentDesignItemListDivider: void drawItemBottomDivider(android.graphics.drawable.Drawable,androidx.recyclerview.widget.RecyclerView,int,android.graphics.Canvas,boolean)>
<com.azure.authenticator.storage.database.migration.Migration12To13: void migrateToVersion13(androidx.sqlite.db.SupportSQLiteDatabase)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: java.lang.Iterable loadActiveContexts()>
<com.facebook.soloader.UnpackingSoSource: void access$000(java.io.File,byte)>
<com.facebook.react.views.text.ReactBaseTextShadowNode: android.text.Spannable spannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,java.lang.String,boolean,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)>
<com.facebook.drawee.controller.AbstractDraweeController: void <init>(com.facebook.drawee.components.DeferredReleaser,java.util.concurrent.Executor,java.lang.String,java.lang.Object)>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void <init>()>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>
<com.google.crypto.tink.proto.Keyset$Key: int getKeyId()>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface: void setPrompt(android.view.View,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$1: androidx.fragment.app.Fragment invoke()>
<com.google.android.gms.maps.GoogleMap$OnPolylineClickListener: void onPolylineClick(com.google.android.gms.maps.model.Polyline)>
<com.microsoft.authenticator.workaccount.businesslogic.Broker: void <init>(android.content.Context,com.microsoft.identity.client.api.BrokerHostingAppPublicApi)>
<com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseAssets(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.Map,java.util.Map)>
<com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)>
<com.google.android.material.textfield.TextInputLayout: void updatePrefixTextViewPadding()>
<com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.notifications.aad.AadNgcNotification$Companion: void <init>()>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: boolean isPresumedInError()>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zze()>
<com.adjust.sdk.ISdkClickHandler: void sendSdkClick(com.adjust.sdk.ActivityPackage)>
<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzgm: void <init>(byte[],int,int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeByteArray(android.os.Parcel,int,byte[],boolean)>
<com.adjust.sdk.PackageBuilder$ActivityStateCopy: void <init>(com.adjust.sdk.PackageBuilder,com.adjust.sdk.ActivityState)>
<java.util.concurrent.locks.ReentrantLock: void <init>()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRawLong(java.lang.String)>
<com.azure.authenticator.databinding.ManageDeviceRegistrationBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.TextView,android.widget.TextView,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,android.widget.Button,android.view.View,android.widget.Button,android.widget.Button,com.google.android.material.textfield.TextInputEditText,android.widget.LinearLayout,com.google.android.material.textfield.TextInputLayout,android.widget.Button,android.widget.ProgressBar)>
<com.google.android.gms.internal.measurement.zzgz: int zzE(int,com.google.android.gms.internal.measurement.zzix,com.google.android.gms.internal.measurement.zzji)>
<com.google.android.gms.internal.measurement.zzhj: void <init>(boolean)>
<com.google.android.gms.internal.measurement.zzaa: void <init>(com.google.android.gms.internal.measurement.zzbr,android.os.Bundle)>
<java.nio.ByteBuffer: short getShort()>
<com.google.android.gms.measurement.internal.zzeq: void zza()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void addRequestListener(com.facebook.imagepipeline.listener.RequestListener)>
<com.facebook.react.ReactRootView: int getRootViewTag()>
<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.snackbar.BaseTransientBottomBar: java.lang.String access$800()>
<com.google.android.gms.common.util.ScopeUtil: java.util.Set fromScopeString(java.lang.String[])>
<com.google.android.gms.internal.common.zzh: void <init>(android.os.Looper)>
<java.lang.ClassNotFoundException: java.lang.String getMessage()>
<android.text.SpannableStringBuilder: void <init>()>
<com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase: java.lang.Object mergeBrokerAccounts(java.util.List,kotlin.coroutines.Continuation)>
<com.google.android.datatransport.cct.CCTDestination: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.tasks.zzl: java.lang.Object zzc(com.google.android.gms.tasks.zzl)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: int zze(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.google.android.gms.common.api.internal.zaab: void zac()>
<com.google.android.gms.common.server.response.zak: void <init>()>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$11: void <init>(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext)>
<com.google.android.gms.internal.measurement.zzo: void <init>()>
<com.google.android.material.transformation.FabTransformationBehavior: float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureSelfhostControls$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.airbnb.lottie.parser.RectangleShapeParser: com.airbnb.lottie.model.content.RectangleShape parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.azure.authenticator.storage.Storage: java.lang.String readLegacyNotificationRegistrationId()>
<android.widget.EditText: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: void setHorizontalOffset(float)>
<java.lang.Thread: boolean interrupted()>
<androidx.navigation.fragment.NavHostFragment: androidx.navigation.NavController getNavController()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC access$100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.measurement.internal.zzfl: boolean zzI()>
<com.google.android.material.shape.MaterialShapeDrawable: int modulateAlpha(int,int)>
<com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)>
<com.google.android.material.badge.BadgeDrawable: void setBackgroundColor(int)>
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>
<androidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)>
<com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder: void setResult(java.lang.Object)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onCreateView$$inlined$apply$lambda$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.facebook.react.views.scroll.ReactScrollView: boolean access$000(com.facebook.react.views.scroll.ReactScrollView)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.view.accessibility.AccessibilityManager access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<ch.qos.logback.classic.net.SMTPAppender: boolean eventMarksEndOfLife(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.dynamic.RemoteCreator: java.lang.Object getRemoteCreatorInstance(android.content.Context)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void <init>(com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager,com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase,com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager,com.azure.authenticator.ui.action.ActionStateManager,com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager,com.microsoft.authenticator.selfhost.SelfhostConfigManager)>
<android.util.JsonReader: java.lang.String nextName()>
<androidx.customview.view.AbsSavedState: void <init>(android.os.Parcelable)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.material.shape.ShapePath$PathArcOperation: void setLeft(float)>
<com.google.android.gms.common.server.response.zah: void <init>()>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zzj(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzcd,double)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAddAccountCancel$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zznc: boolean zza()>
<com.google.android.gms.common.api.internal.zax: com.google.android.gms.common.ConnectionResult zar(com.google.android.gms.common.api.internal.zax,com.google.android.gms.common.ConnectionResult)>
<java.io.File: java.io.File getCanonicalFile()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureSelfhostControls$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,kotlin.coroutines.Continuation)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMapClickListener(com.google.android.gms.maps.internal.zzaj)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onUserCancel$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.systrace.Systrace: void startAsyncFlow(long,java.lang.String,int)>
<com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType getJoinType()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: int getColor()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.exportCred.ExportPasswordsViewModel access$12600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.adjust.sdk.IActivityHandler: java.lang.String getGdprPath()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: int cleanUp()>
<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.google.android.gms.internal.measurement.zzbu: com.google.android.gms.internal.measurement.zzcf zze(int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: com.azure.authenticator.storage.Storage getStorage$app_productionRelease()>
<com.google.android.gms.maps.model.PatternItem: java.util.List zza(java.util.List)>
<com.adjust.sdk.AttributionHandler: void access$400(com.adjust.sdk.AttributionHandler,com.adjust.sdk.IActivityHandler,com.adjust.sdk.SessionResponseData)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.android.gms.internal.maps.zzz: com.google.android.gms.maps.model.Cap getEndCap()>
<java.util.concurrent.atomic.AtomicInteger: void set(int)>
<com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: void zaa(com.google.android.gms.common.api.ResultCallback,com.google.android.gms.common.api.Result)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$syncBrokerAccounts$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionBroadcastReceiver_MembersInjector: void injectMfaNotificationActionManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionBroadcastReceiver,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionManager)>
<com.azure.authenticator.databinding.AddressDataPlaceholderLayoutBinding: void <init>(android.widget.RelativeLayout,androidx.cardview.widget.CardView)>
<com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)>
<androidx.core.app.NotificationCompat$BigTextStyle: void <init>()>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getTransparency()>
<ch.qos.logback.core.Context: void addScheduledFuture(java.util.concurrent.ScheduledFuture)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.android.material.bottomappbar.BottomAppBar: void createFabDefaultXAnimation(int,java.util.List)>
<java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>
<com.facebook.react.modules.systeminfo.AndroidInfoHelpers: java.lang.String getMetroHostPropValue()>
<com.google.android.gms.measurement.internal.zzaf: void <init>(java.lang.Boolean,java.lang.Boolean)>
<com.adjust.sdk.IActivityHandler: void removeSessionPartnerParameter(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2100(com.facebook.react.uimanager.UIViewOperationQueue)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager access$3700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.databinding.FragmentViewGeneratedPasswordBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,android.widget.ImageButton,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,android.widget.TextView,android.widget.ImageButton,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputLayout,androidx.coordinatorlayout.widget.CoordinatorLayout)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String addName(int[],int,int)>
<com.adjust.sdk.PackageHandler: void access$300(com.adjust.sdk.PackageHandler)>
<com.evernote.android.job.JobProxy$Common: long getEndMs(com.evernote.android.job.JobRequest,boolean)>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>
<com.facebook.soloader.ApplicationSoSource: void <init>(android.content.Context,int)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<com.google.android.material.transformation.FabTransformationBehavior: void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void access$handleMsaNgcLoginResult(com.azure.authenticator.ui.authentication.MsaSessionActivity,com.microsoft.authenticator.authentication.msa.entities.MsaOperationResult)>
<com.facebook.react.views.textinput.ReactEditText: void maybeUpdateTypeface()>
<com.google.android.gms.common.api.internal.zaab: void <init>(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.GoogleApiAvailability)>
<com.google.android.gms.measurement.internal.zzct: void <init>()>
<com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction: com.microsoft.authenticator.common.businessLogic.AuthenticatorState access$getAuthenticatorState$p(com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction)>
<com.google.android.gms.common.api.Api$Client: java.lang.String getLastDisconnectMessage()>
<com.google.android.gms.internal.maps.zzh: void setStrokeColor(int)>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setItemSize(long)>
<com.google.android.gms.auth.api.signin.internal.zzw: void <init>(android.os.IBinder)>
<androidx.viewpager.widget.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketComplete$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback,com.microsoft.onlineid.Ticket)>
<com.google.android.gms.maps.internal.zzbz: android.content.Context zzc(android.content.Context)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$902(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<ch.qos.logback.classic.pattern.NamedConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry: void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void reset()>
<com.google.android.gms.measurement.internal.zzjb: com.google.android.gms.measurement.internal.zzp zzS(boolean)>
<com.facebook.react.ReactActivityDelegate: boolean onNewIntent(android.content.Intent)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.google.android.material.datepicker.CalendarConstraints$1: com.google.android.material.datepicker.CalendarConstraints[] newArray(int)>
<com.adjust.sdk.AdjustInstance: void saveGdprForgetMe(android.content.Context)>
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<com.google.android.gms.common.server.response.FastJsonResponse: void setStringMapInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.Map)>
<com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder: void <init>(com.google.android.gms.common.internal.zaac)>
<ch.qos.logback.core.joran.action.ImplicitAction: boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext)>
<com.google.android.material.tabs.TabLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.google.android.gms.measurement.internal.zzkc: boolean zza(long,com.google.android.gms.internal.measurement.zzdb)>
<com.google.android.material.snackbar.SnackbarManager: void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzfl zzR()>
<com.fasterxml.jackson.core.JsonGenerator$Feature: boolean enabledIn(int)>
<com.google.android.gms.tasks.Task: boolean isComplete()>
<com.google.android.gms.measurement.internal.zzai: boolean zzj(com.google.android.gms.measurement.internal.zzki)>
<com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccount()>
<com.google.android.gms.common.internal.zzai: void <init>(int)>
<com.google.common.primitives.Ints: int saturatedCast(long)>
<com.evernote.android.job.v21.JobProxy21: android.app.job.JobInfo$Builder createBuilderOneOff(android.app.job.JobInfo$Builder,long,long)>
<com.adjust.sdk.SharedPreferencesManager: void removeDeeplink()>
<java.util.LinkedHashMap: void putAll(java.util.Map)>
<com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: com.facebook.common.references.CloseableReference getResult()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: android.location.Geocoder geocoder()>
<java.io.RandomAccessFile: void seek(long)>
<com.google.android.gms.internal.maps.zzw: java.util.List getStrokePattern()>
<com.google.android.gms.internal.measurement.zzjk: int zzw(int,java.lang.Object,com.google.android.gms.internal.measurement.zzji)>
<ch.qos.logback.core.pattern.LiteralConverter: void <init>(java.lang.String)>
<com.azure.authenticator.storage.Storage: void setMsaSdkNgcServerKeyIdMigration()>
<com.google.android.gms.ads.identifier.zzb: java.lang.String getString(java.lang.String,java.lang.String)>
<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object get(int)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: com.google.android.datatransport.runtime.backends.BackendFactory get(java.lang.String)>
<com.google.android.gms.internal.auth-api.zzg: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.credentials.Credential)>
<com.facebook.react.ReactInstanceManager: void initializeSoLoaderIfNecessary(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity injectAadRemoteNgcSessionActivity2(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.facebook.react.ReactRootView: void dispatchJSTouchEvent(android.view.MotionEvent)>
<com.google.common.base.Splitter$SplittingIterator: int separatorStart(int)>
<com.github.amlcurran.showcaseview.OnShowcaseEventListener: void onShowcaseViewShow(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.azure.authenticator.accounts.GenericAccount: boolean isTotp()>
<com.facebook.common.internal.Throwables: void propagateIfPossible(java.lang.Throwable)>
<ch.qos.logback.core.FileAppender: java.lang.String getFile()>
<com.google.android.datatransport.cct.internal.ClientInfo: com.google.android.datatransport.cct.internal.ClientInfo$ClientType getClientType()>
<java.util.ArrayList: void clear()>
<com.google.android.gms.internal.auth-api-phone.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.adjust.sdk.InstallReferrer: java.lang.Object createInstallReferrerClient(android.content.Context)>
<java.util.Queue: boolean add(java.lang.Object)>
<com.google.android.gms.location.zzi: void <init>(com.google.android.gms.location.ActivityRecognitionClient,com.google.android.gms.tasks.TaskCompletionSource)>
<javax.net.ssl.SSLSocket: void setTcpNoDelay(boolean)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: android.view.View createRootView(java.lang.String)>
<java.util.List: java.util.ListIterator listIterator()>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status,boolean)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJavaScriptExecutorFactory(com.facebook.react.bridge.JavaScriptExecutorFactory)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getMountedExternalStorageDirectoryPath()>
<ch.qos.logback.core.net.ObjectWriterFactory: ch.qos.logback.core.net.AutoFlushingObjectWriter newAutoFlushingObjectWriter(java.io.OutputStream)>
<com.google.android.gms.measurement.internal.zzkf: void zzc(com.google.android.gms.internal.measurement.zzdt,java.lang.Object)>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: boolean isClosed()>
<com.microsoft.brooklyn.module.autofill.request.AutofillReqParsingUseCase: void <init>(android.content.Context,com.microsoft.brooklyn.module.autofill.heuristics.HeuristicsConnector)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void performSessionRequest(com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType)>
<com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation: java.util.List getMasks()>
<com.microsoft.authenticator.accountFullscreen.abstraction.AccountActionsAdapter: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.accountFullscreen.abstraction.ActionViewHolderFactory,com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries)>
<com.google.android.material.transformation.FabTransformationBehavior: void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF)>
<com.google.android.gms.internal.common.zzq: int zzc()>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForDeviceOrientationChanges()>
<com.azure.authenticator.notifications.AbstractNotification$Action$Companion: void <init>()>
<com.facebook.react.views.text.ReactTextUpdate: int getTextBreakStrategy()>
<android.widget.FrameLayout: void setFitsSystemWindows(boolean)>
<android.widget.ImageView: void setLayerType(int,android.graphics.Paint)>
<com.google.android.material.shape.ShapePath$PathLineOperation: void <init>()>
<com.facebook.common.memory.PooledByteBufferOutputStream: com.facebook.common.memory.PooledByteBuffer toByteBuffer()>
<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>
<com.google.android.gms.maps.internal.zzan: void onMapLongClick(com.google.android.gms.maps.model.LatLng)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketError$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.adjust.sdk.AttributionHandler: java.lang.String access$102(com.adjust.sdk.AttributionHandler,java.lang.String)>
<com.google.android.gms.internal.measurement.zzkh: byte zzu(java.lang.Object,long)>
<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_2_7$cp()>
<ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: javax.net.ssl.KeyManagerFactory createKeyManagerFactory()>
<com.facebook.common.references.ResourceReleaser: void release(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzK()>
<com.google.android.gms.common.SupportErrorDialogFragment: void <init>()>
<ch.qos.logback.core.joran.spi.ElementPath: void pop()>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void <init>(com.facebook.react.common.futures.SimpleSettableFuture)>
<com.google.android.gms.measurement.internal.zzfc: com.google.android.gms.internal.measurement.zzcp zzb(java.lang.String)>
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)>
<com.google.android.gms.internal.measurement.zzkl: void <init>(int,int)>
<android.content.Context: java.io.File getDir(java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzdh: void zze(com.google.android.gms.internal.measurement.zzdh,com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.gms.common.server.response.FastSafeParcelableJsonResponse: void <init>()>
<android.animation.AnimatorSet: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: java.lang.Object generatedComponent()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$retrieveBackupAndMsaKey$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<java.net.HttpURLConnection: void setDoInput(boolean)>
<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<android.view.ViewGroup: int getChildCount()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: void <init>(java.util.HashMap,com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs$1)>
<sun.misc.Unsafe: void putBoolean(java.lang.Object,long,boolean)>
<android.view.View: boolean isEnabled()>
<com.google.android.material.chip.ChipGroup: boolean access$300(com.google.android.material.chip.ChipGroup)>
<ch.qos.logback.core.OutputStreamAppender: void closeOutputStream()>
<kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient$Builder enableAutoManage(androidx.fragment.app.FragmentActivity,int,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>
<com.google.android.gms.internal.measurement.zzbr: java.util.Map zzB(java.lang.String,java.lang.String,boolean)>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setExtras(android.os.Bundle)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zza: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb)>
<com.google.android.material.datepicker.DateStrings: java.lang.String getMonthDayOfWeekDay(long,java.util.Locale)>
<com.google.android.material.textfield.TextInputLayout: void applyEndIconTint()>
<com.google.common.io.BaseEncoding$StandardBaseEncoding: java.lang.CharSequence trimTrailingPadding(java.lang.CharSequence)>
<ch.qos.logback.core.BasicStatusManager: void add(ch.qos.logback.core.status.Status)>
<com.facebook.imagepipeline.animated.factory.AnimatedFactory: com.facebook.imagepipeline.drawable.DrawableFactory getAnimatedDrawableFactory(android.content.Context)>
<com.fasterxml.jackson.core.util.TextBuffer: int getTextOffset()>
<ch.qos.logback.core.status.Status: void add(ch.qos.logback.core.status.Status)>
<androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>
<com.facebook.react.views.checkbox.ReactCheckBoxEvent: boolean getIsChecked()>
<com.google.android.gms.measurement.internal.zzev: android.util.Pair zzb()>
<com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()>
<com.google.android.datatransport.cct.internal.LogEvent: java.lang.Integer getEventCode()>
<com.google.android.material.textfield.TextInputLayout: void applyCutoutPadding(android.graphics.RectF)>
<com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails: java.lang.Double getLongitude()>
<ch.qos.logback.classic.LoggerContext: int getMaxCallerDataDepth()>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectRegisterMsaAccountManager(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.microsoft.authenticator.registration.msa.abstraction.RegisterMsaAccountManager)>
<com.google.android.gms.common.util.DeviceProperties: boolean zzb(android.content.Context)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newLocalTransformationsSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[])>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeStringList(android.os.Parcel,int,java.util.List,boolean)>
<com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.zzw zzc(java.lang.String,boolean,boolean)>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener: void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState)>
<android.view.ViewGroup: void setTag(java.lang.Object)>
<com.airbnb.lottie.animation.content.ContentGroup: void draw(android.graphics.Canvas,android.graphics.Matrix,int)>
<com.azure.authenticator.databinding.TestActivityLayoutBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout,androidx.fragment.app.FragmentContainerView)>
<com.facebook.imagepipeline.memory.FlexByteArrayPool$1: void release(byte[])>
<com.facebook.soloader.UnpackingSoSource: void prepare(java.lang.String)>
<com.google.android.gms.measurement.internal.zzf: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.google.android.gms.safetynet.SafeBrowsingData: java.io.FileOutputStream zza()>
<com.facebook.imagepipeline.memory.BasePool: int getSizeInBytes(int)>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: void ensureNotClosed()>
<com.facebook.cache.disk.DiskCacheConfig: long getMinimumSizeLimit()>
<android.widget.LinearLayout: void onViewRemoved(android.view.View)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.facebook.react.views.scroll.ReactScrollView: void disableFpsListener()>
<com.google.android.gms.measurement.internal.zzgd: void zzc(java.lang.Runnable)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaz(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<ch.qos.logback.core.rolling.helper.FileStoreUtil: boolean areOnSameFileStore(java.io.File,java.io.File)>
<com.fasterxml.jackson.core.io.MergedStream: void _free()>
<com.google.android.material.textfield.IndicatorViewController: void showError(java.lang.CharSequence)>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>
<com.google.android.gms.internal.measurement.zzgv: int zzb(int)>
<android.graphics.drawable.Drawable: int getLevel()>
<com.google.android.gms.internal.measurement.zzcp: java.lang.String zzd()>
<com.google.android.gms.common.internal.BaseGmsClient: boolean zzl(com.google.android.gms.common.internal.BaseGmsClient,int,int,android.os.IInterface)>
<com.google.android.gms.internal.measurement.zzhb: void <init>(double[],int)>
<java.util.concurrent.AbstractExecutorService: void <init>()>
<com.facebook.imagepipeline.producers.DecodeProducer: boolean access$100(com.facebook.imagepipeline.producers.DecodeProducer)>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>
<com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>
<ch.qos.logback.core.joran.spi.ConsoleTarget: ch.qos.logback.core.joran.spi.ConsoleTarget[] values()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String zzc(com.google.android.gms.auth.api.credentials.Credential)>
<ch.qos.logback.core.net.AbstractSocketAppender: boolean socketConnectionCouldBeEstablished()>
<com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars()>
<ch.qos.logback.core.util.StatusListenerConfigHelper: ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String)>
<com.microsoft.authenticator.rootdetection.RootDetectionManager: void <init>(android.content.Context,com.microsoft.authenticator.rootdetection.businesslogic.SafetyNetUseCase,com.google.android.gms.common.GoogleApiAvailability)>
<com.google.android.gms.internal.auth.zzo: void <init>(com.google.android.gms.common.api.Status,android.accounts.Account)>
<com.google.android.gms.common.internal.zzd: void onPostInitComplete(int,android.os.IBinder,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzR()>
<com.facebook.react.common.LifecycleState: void <init>(java.lang.String,int)>
<java.util.Date: int compareTo(java.util.Date)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void showWPJSectionWithRegisterMode()>
<com.azure.authenticator.databinding.AadPhoneSignInSetupBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: boolean canCacheNewValue(java.lang.Object)>
<com.google.android.material.datepicker.MonthAdapter: boolean withinMonth(int)>
<com.google.android.gms.internal.maps.zzt: void showInfoWindow()>
<ch.qos.logback.core.joran.spi.Interpreter: void pushEmptyActionList()>
<com.google.common.collect.MapMakerInternalMap$1: void <init>()>
<com.microsoft.authenticator.location.di.LocationModule_ProvideSettingsClientFactory: com.google.android.gms.location.SettingsClient provideSettingsClient(com.microsoft.authenticator.location.di.LocationModule,android.content.Context)>
<okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>
<com.adjust.sdk.PackageHandler: java.util.concurrent.atomic.AtomicBoolean access$500(com.adjust.sdk.PackageHandler)>
<com.microsoft.authenticator.authentication.aad.businessLogic.AadRemoteNgcAuthCheckUseCase: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.common.api.internal.zaag: void zah(int)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromUrl(android.content.Context,java.lang.String)>
<com.google.android.gms.measurement.internal.zzfi: com.google.android.gms.measurement.internal.zzfh zzo(com.google.android.gms.measurement.internal.zzfi)>
<android.widget.ImageButton: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.gms.common.api.internal.zabl: java.util.Map zag()>
<com.google.android.gms.internal.measurement.zzaw: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String,com.google.android.gms.internal.measurement.zzm)>
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
<com.facebook.react.modules.core.ChoreographerCompat: void <init>()>
<com.google.android.gms.internal.measurement.zzkh: void zzw(java.lang.Object,long,byte)>
<com.facebook.react.modules.statusbar.StatusBarModule$2$1: void <init>(com.facebook.react.modules.statusbar.StatusBarModule$2)>
<com.evernote.android.job.WakeLockUtil: boolean completeWakefulIntent(android.content.Intent)>
<com.google.android.material.timepicker.ClockHandView: int getDegreesFromXY(float,float)>
<com.google.android.material.textfield.IndicatorViewController: void showHelper(java.lang.CharSequence)>
<com.google.android.gms.common.internal.zzq: android.os.Handler zze(com.google.android.gms.common.internal.zzq)>
<com.google.android.material.textfield.TextInputLayout: boolean isErrorIconVisible()>
<com.adjust.sdk.AdjustInstance$9: void <init>(com.adjust.sdk.AdjustInstance,android.content.Context)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize)>
<com.evernote.android.job.JobManager: void sendAddJobCreatorIntent(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdj: int zzd()>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: void initializeComponentContext()>
<com.microsoft.brooklyn.common.BrooklynMSASignInUseCase: void <init>(com.azure.authenticator.authentication.msa.MsaAccountManager,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.common.BrooklynBGTaskScheduler)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void <init>(java.util.List)>
<com.azure.authenticator.databinding.PaymentsDataPlaceholderLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.google.android.gms.common.api.Api$ApiOptions$HasAccountOptions: android.accounts.Account getAccount()>
<com.facebook.yoga.YogaLogLevel: void <init>(java.lang.String,int,int)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void removeAnimatedEventFromView(int,java.lang.String,int)>
<com.evernote.android.job.JobProxy$Common: void markStarting(com.evernote.android.job.JobRequest)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.measurement.internal.zzgs: void <init>(com.google.android.gms.measurement.internal.zzhn,long)>
<com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl)>
<com.google.android.gms.common.internal.zzy: com.google.android.gms.dynamic.IObjectWrapper zzd()>
<com.facebook.react.uimanager.ReactShadowNode: void setRootTag(int)>
<com.google.android.gms.maps.CameraUpdate: void <init>(com.google.android.gms.dynamic.IObjectWrapper)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig getMainDiskCacheConfig()>
<com.google.android.gms.maps.internal.zza: java.lang.Boolean zza(byte)>
<com.azure.authenticator.storage.MfaSdkAccountTranslator_Factory$InstanceHolder: com.azure.authenticator.storage.MfaSdkAccountTranslator_Factory access$000()>
<com.google.android.gms.internal.location.zzal: void <init>(android.os.IBinder)>
<ch.qos.logback.classic.sift.SiftingAppender: boolean eventMarksEndOfLife(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void _throwInvalidSpace(int)>
<com.google.android.gms.measurement.internal.zzkf: java.lang.String zzj(com.google.android.gms.internal.measurement.zzcf)>
<com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody createGzip(okhttp3.MediaType,java.lang.String)>
<com.facebook.imagepipeline.cache.CacheKeyFactory: com.facebook.cache.common.CacheKey getPostprocessedBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)>
<com.google.android.gms.internal.maps.zza: android.os.Parcel zza(int,android.os.Parcel)>
<com.google.android.datatransport.TransportScheduleCallback: void onSchedule(java.lang.Exception)>
<com.google.android.gms.common.api.zag: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)>
<android.view.MotionEvent: void recycle()>
<com.google.android.gms.common.api.Response: void <init>()>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onStop()>
<com.google.android.gms.measurement.internal.zzfb: void zzb(android.content.Context,android.content.Intent)>
<com.azure.authenticator.OnAppUpgradeReceiver$configureSelfhostControls$1: void <init>(com.azure.authenticator.OnAppUpgradeReceiver,kotlin.coroutines.Continuation)>
<androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.google.android.gms.internal.measurement.zzha: void zzr(int,java.lang.Object,com.google.android.gms.internal.measurement.zzji)>
<android.os.Parcel: long readLong()>
<com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding: com.azure.authenticator.databinding.MsaAccountPageWebViewFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<org.json.JSONObject: int optInt(java.lang.String,int)>
<java.lang.Character: boolean isLetterOrDigit(char)>
<com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY: void <init>()>
<com.google.android.gms.internal.auth.zzai: void <init>()>
<com.facebook.react.uimanager.events.EventDispatcher: com.facebook.react.uimanager.events.EventDispatcher$DispatchEventsRunnable access$600(com.facebook.react.uimanager.events.EventDispatcher)>
<com.evernote.android.job.util.JobUtil: boolean hasWakeLockPermission(android.content.Context)>
<com.airbnb.lottie.model.layer.BaseLayer: void setupInOutAnimations()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.Set getGrantedScopes()>
<com.airbnb.lottie.animation.content.BaseStrokeContent: void draw(android.graphics.Canvas,android.graphics.Matrix,int)>
<com.google.android.gms.measurement.internal.zzbk: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToCredentialListFragment: int getActionId()>
<com.google.android.gms.internal.measurement.zzcy: com.google.android.gms.internal.measurement.zzcy zza(int)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)>
<com.google.android.gms.measurement.internal.zzai: long zzaa(java.lang.String,java.lang.String[],long)>
<com.facebook.react.uimanager.events.EventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)>
<com.facebook.common.time.RealtimeSinceBootClock: long now()>
<com.google.common.base.CaseFormat: com.google.common.base.CaseFormat[] $values()>
<com.airbnb.lottie.animation.content.CompoundTrimPathContent: void addTrimPath(com.airbnb.lottie.animation.content.TrimPathContent)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$displayAutofillDisableBannerIfRequired$1$$special$$inlined$let$lambda$1$2: java.lang.Object invokeSuspend(java.lang.Object)>
<javax.mail.Session: javax.mail.Session getInstance(java.util.Properties,javax.mail.Authenticator)>
<com.adjust.sdk.ActivityHandler: void checkAfterNewStartI()>
<com.facebook.react.ReactActivityDelegate: android.content.Context getContext()>
<java.io.PrintWriter: void println(java.lang.String)>
<com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)>
<ch.qos.logback.core.pattern.util.RegularEscapeUtil: java.lang.String formatEscapeCharsForListing(java.lang.String)>
<com.google.android.gms.common.data.SingleRefDataBufferIterator: void <init>(com.google.android.gms.common.data.DataBuffer)>
<java.util.NoSuchElementException: void <init>()>
<ch.qos.logback.classic.layout.TTLLLayout: void start()>
<com.adjust.sdk.AdjustInstance: void appWillOpenUrl(android.net.Uri)>
<com.google.android.material.badge.BadgeDrawable$SavedState: boolean access$000(com.google.android.material.badge.BadgeDrawable$SavedState)>
<dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideApplicationFactory: android.app.Application provideApplication(dagger.hilt.android.internal.modules.ApplicationContextModule)>
<com.google.android.gms.maps.internal.zzbc: void <init>()>
<com.facebook.react.ReactInstanceManager: void onHostPause()>
<com.airbnb.lottie.model.animatable.AnimatableScaleValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.facebook.react.bridge.JavaOnlyMap: void <init>(java.lang.Object[])>
<com.google.android.material.appbar.ViewOffsetHelper: int getLeftAndRightOffset()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistrationError$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.adjust.sdk.scheduler.TimerCycle: void cancel(boolean)>
<com.facebook.imagepipeline.core.ImagePipeline: void <init>(com.facebook.imagepipeline.core.ProducerSequenceFactory,java.util.Set,com.facebook.common.internal.Supplier,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,com.facebook.common.internal.Supplier,com.facebook.common.internal.Supplier,com.facebook.callercontext.CallerContextVerifier)>
<com.google.android.gms.internal.measurement.zzki: boolean zzb(byte)>
<com.facebook.imageformat.DefaultImageFormats: boolean isWebpFormat(com.facebook.imageformat.ImageFormat)>
<com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface createTypeface(java.lang.String,int,android.content.res.AssetManager)>
<com.evernote.android.job.Job: boolean isRequirementChargingMet()>
<com.adjust.sdk.ActivityHandler: void launchSessionResponseTasksI(com.adjust.sdk.SessionResponseData)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.google.android.material.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.facebook.drawee.controller.AbstractDraweeController: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)>
<com.airbnb.lottie.model.content.Mask: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()>
<com.facebook.drawee.backends.pipeline.Fresco: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder newDraweeControllerBuilder()>
<com.azure.authenticator.common.CustomTextWatcher: void <init>(android.widget.Button)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getShowMotionSpec()>
<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderMeasurementsBasedOnEditText()>
<java.util.zip.ZipOutputStream: void write(byte[],int,int)>
<java.util.ListIterator: java.lang.Object previous()>
<java.lang.Appendable: java.lang.Appendable append(char)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: android.util.LongSparseArray access$getProfileImageMap$p(com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter)>
<com.google.android.material.internal.CheckableImageButton$SavedState$1: com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<com.fasterxml.jackson.core.util.TextBuffer: void releaseBuffers()>
<com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager: java.lang.Object savePlaceholderPolicy(java.lang.String,java.lang.String,com.microsoft.authenticator.graphclient.AuthenticationMethod,com.microsoft.authenticator.core.protocol.CloudEnvironment,com.microsoft.authenticator.graphclient.GraphApiEndPoint,com.microsoft.authenticator.graphclient.PolicyExpirationDuration,kotlin.coroutines.Continuation)>
<androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void animateTo(com.google.android.gms.maps.model.StreetViewPanoramaCamera,long)>
<com.google.android.gms.common.internal.zag: com.google.android.gms.common.internal.zag zac(androidx.fragment.app.Fragment,android.content.Intent,int)>
<com.facebook.common.references.OOMSoftReference: void clear()>
<org.json.JSONArray: java.lang.String toString()>
<com.fasterxml.jackson.core.util.TextBuffer: char[] finishCurrentSegment()>
<com.facebook.drawee.view.DraweeHolder: void detachController()>
<ch.qos.logback.classic.LoggerContext: ch.qos.logback.classic.Logger getLogger(java.lang.String)>
<com.microsoft.onlineid.internal.log.LogInstance: void <init>()>
<com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage$DefaultImpls: java.lang.Object getRegistrationPromptInfo(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.account.entities.MfaSdkHostingAppAccount,kotlin.coroutines.Continuation)>
<com.google.android.gms.location.zzd: void <init>(com.google.android.gms.location.ActivityRecognitionClient,android.app.PendingIntent,com.google.android.gms.location.SleepSegmentRequest)>
<com.evernote.android.job.JobProxy$Common: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>
<com.google.android.gms.internal.measurement.zzp: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)>
<com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()>
<com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetViewWithPointerEvents(float[],android.view.View)>
<android.graphics.Matrix: boolean postScale(float,float)>
<java.lang.Class: java.lang.Object cast(java.lang.Object)>
<com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getSimpleImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)>
<com.facebook.react.views.textinput.ReactEditText: void updateImeOptions()>
<com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshManager: void <init>(android.content.Context,com.azure.authenticator.jobs.DeferrableWorkerUtils)>
<com.google.android.gms.maps.internal.ILocationSourceDelegate$zza: void <init>()>
<com.azure.authenticator.storage.MfaSdkAccountTranslator_Factory: com.azure.authenticator.storage.MfaSdkAccountTranslator newInstance()>
<java.io.BufferedOutputStream: void write(byte[],int,int)>
<com.google.android.gms.maps.internal.IProjectionDelegate: com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.gms.common.api.internal.BasePendingResult: boolean isReady()>
<com.facebook.imagepipeline.producers.BaseProducerContext: java.util.List setPriorityNoCallbacks(com.facebook.imagepipeline.common.Priority)>
<com.google.android.gms.common.api.internal.zay: void <init>(com.google.android.gms.common.api.internal.zaaa,com.google.android.gms.common.api.internal.BasePendingResult)>
<com.google.android.gms.measurement.internal.zzal: void zza()>
<ch.qos.logback.core.Context: java.util.concurrent.ScheduledExecutorService getScheduledExecutorService()>
<com.airbnb.lottie.LottieDrawable: void setImagesAssetsFolder(java.lang.String)>
<com.azure.authenticator.databinding.FrxSigninFragmentBinding: com.azure.authenticator.databinding.FrxSigninFragmentBinding bind(android.view.View)>
<com.google.android.gms.maps.SupportMapFragment$zzb: void zzd()>
<com.google.android.gms.common.api.GoogleApiClient: android.os.Looper getLooper()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void setResultAndFinish(int)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBitmapPrepareSequence(com.facebook.imagepipeline.producers.Producer)>
<com.azure.authenticator.storage.database.DbAccount: void setReplicationScope(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzS(int)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresStorageNotLow(boolean)>
<com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry: void setTenantId(java.lang.String)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void reset()>
<java.io.StringWriter: void <init>()>
<com.facebook.react.bridge.JavaScriptExecutor: void <init>(com.facebook.jni.HybridData)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI$ViewWithFragmentCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$ViewWithFragmentC build()>
<com.facebook.imagepipeline.memory.BitmapPoolBackend: android.graphics.Bitmap get(int)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void initTables(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.vienna_utils_lib.logging.ILogger iLogger()>
<com.google.android.material.internal.VisibilityAwareImageButton: void internalSetVisibility(int,boolean)>
<com.airbnb.lottie.network.LottieFetchResult: boolean isSuccessful()>
<com.facebook.systrace.Systrace: void beginAsyncSection(long,java.lang.String,int,long)>
<com.facebook.react.ReactActivityDelegate: java.lang.String getMainComponentName()>
<com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: android.graphics.PointF getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$200(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.common.api.internal.zaaa: void zae(int,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdi: int zzc()>
<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>
<com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.internal.maps.zze zzg()>
<com.google.android.gms.maps.model.MarkerOptions: float getAlpha()>
<ch.qos.logback.core.boolex.EventEvaluator: java.lang.String getName()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_1_7()>
<java.util.AbstractCollection: boolean isEmpty()>
<com.fasterxml.jackson.core.json.JsonReadContext: com.fasterxml.jackson.core.json.DupDetector getDupDetector()>
<com.facebook.common.media.MediaUtils: java.lang.String extractMime(java.lang.String)>
<com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()>
<android.os.Bundle: int getInt(java.lang.String)>
<com.facebook.react.uimanager.UIImplementation: int resolveRootTagFromReactTag(int)>
<com.google.android.material.tabs.TabLayout$TabView: void access$100(com.google.android.material.tabs.TabLayout$TabView,android.content.Context)>
<ch.qos.logback.core.LayoutBase: boolean isStarted()>
<com.azure.authenticator.OnAppUpgradeReceiver: void configureSelfhostControls()>
<java.util.ArrayDeque: void <init>(int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout)>
<ch.qos.logback.core.BasicStatusManager: void fireStatusAddEvent(ch.qos.logback.core.status.Status)>
<com.facebook.cache.disk.DiskStorageCache: boolean access$202(com.facebook.cache.disk.DiskStorageCache,boolean)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder addPackage(com.facebook.react.ReactPackage)>
<com.microsoft.brooklyn.ui.credential.AddCredentialFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.credential.AddCredentialFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.material.datepicker.MaterialDatePicker: boolean readMaterialCalendarStyleBoolean(android.content.Context,int)>
<com.facebook.imagepipeline.memory.BitmapCounter: void decrease(android.graphics.Bitmap)>
<com.google.android.gms.common.GooglePlayServicesRepairableException: void <init>(int,java.lang.String,android.content.Intent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider wpjStatusViewModelProvider()>
<java.util.zip.GZIPInputStream: void close()>
<com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)>
<com.facebook.imagepipeline.producers.ThumbnailBranchProducer: boolean access$000(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.drawee.view.AspectRatioMeasure: boolean shouldAdjust(int)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: com.azure.authenticator.ui.authentication.MsaAuthViewModel access$getMsaAuthViewModel$p(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<org.json.JSONArray: void <init>()>
<com.azure.authenticator.databinding.AccountAddMethodListBinding: android.widget.LinearLayout getRoot()>
<com.airbnb.lottie.parser.ValueParser: java.lang.Object parse(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<ch.qos.logback.core.joran.spi.Interpreter: java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes)>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: void onAttach(android.app.Activity)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcTertiaryShift(int)>
<com.google.android.material.datepicker.MonthAdapter: boolean isSelected(long)>
<com.azure.authenticator.ui.MainActivity$onResume$1: void <init>(com.azure.authenticator.ui.MainActivity,kotlin.coroutines.Continuation)>
<android.content.pm.PackageManager$NameNotFoundException: void <init>()>
<androidx.sqlite.db.SupportSQLiteDatabase: void beginTransaction()>
<com.google.android.gms.internal.measurement.zzdj: void zzbJ()>
<java.io.File: void deleteOnExit()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object)>
<com.facebook.imagepipeline.memory.BucketMap: void prune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)>
<android.graphics.Rect: void set(int,int,int,int)>
<com.google.android.material.shape.MaterialShapeDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: void <init>(com.facebook.react.jstasks.HeadlessJsTaskConfig)>
<com.facebook.imagepipeline.transformation.BitmapTransformation: boolean modifiesTransparency()>
<android.widget.EditText: boolean canScrollVertically(int)>
<com.azure.authenticator.accounts.AadAccount: void updateCapabilities()>
<com.facebook.imagepipeline.transcoder.ImageTranscoder: boolean canTranscode(com.facebook.imageformat.ImageFormat)>
<com.google.android.gms.common.api.internal.zabu: void zah()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$3: void <init>(androidx.fragment.app.Fragment)>
<com.facebook.react.views.text.TextInlineImageSpan: void setTextView(android.widget.TextView)>
<com.google.android.material.shape.MaterialShapeDrawable: void drawFillShape(android.graphics.Canvas)>
<com.google.android.gms.location.zzy: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.location.LocationCallback)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void setPopupBackground(android.widget.AutoCompleteTextView)>
<com.google.android.material.chip.ChipDrawable: void setChipMinHeight(float)>
<com.google.android.gms.common.api.GoogleApi$Settings: void <init>(com.google.android.gms.common.api.internal.StatusExceptionMapper,android.accounts.Account,android.os.Looper,com.google.android.gms.common.api.zad)>
<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>
<com.facebook.imagepipeline.memory.LruBitmapPool: android.graphics.Bitmap get(int)>
<com.facebook.react.views.slider.ReactSlidingCompleteEvent: java.lang.String getEventName()>
<java.lang.Math: long abs(long)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7: void set(android.view.View,java.lang.Float)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: int predictFinalScrollPosition(int)>
<com.google.android.gms.dynamic.zza: void <init>(android.os.IBinder)>
<com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)>
<com.google.android.gms.gcm.GcmNetworkManager: void schedule(com.google.android.gms.gcm.Task)>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void disableUserInteractions(android.view.View)>
<android.content.Context: boolean isDeviceProtectedStorage()>
<com.facebook.react.uimanager.ViewManagerRegistry: void <init>(java.util.List)>
<com.facebook.react.uimanager.RootView: void handleException(java.lang.Throwable)>
<com.google.android.gms.location.zzap: boolean zza()>
<com.microsoft.authenticator.core.configuration.UtilChecks: java.lang.String getProcessName(android.content.Context)>
<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>
<com.google.android.gms.maps.model.zzk: void <init>()>
<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView getCaptionViewFromDisplayState(int)>
<com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)>
<com.facebook.react.animated.TransformAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.adjust.sdk.OnSessionTrackingSucceededListener: void onFinishedSessionTrackingSucceeded(com.adjust.sdk.AdjustSessionSuccess)>
<com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)>
<com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()>
<com.google.android.material.resources.MaterialAttributes: int resolveOrThrow(android.content.Context,int,java.lang.String)>
<com.facebook.drawee.generic.RoundingParams: float getBorderWidth()>
<ch.qos.logback.core.sift.AppenderFactory: ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String)>
<com.facebook.react.views.viewpager.ReactViewPager: boolean access$200(com.facebook.react.views.viewpager.ReactViewPager)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setPerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener)>
<ch.qos.logback.core.BasicStatusManager: boolean add(ch.qos.logback.core.status.StatusListener)>
<com.google.android.material.bottomappbar.BottomAppBar$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>
<androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>
<android.text.TextPaint: void setAlpha(int)>
<com.google.android.gms.common.api.internal.BasePendingResult: boolean zaj()>
<com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)>
<com.google.android.gms.measurement.internal.zzg: void zzH(long)>
<com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String getEventName()>
<com.github.amlcurran.showcaseview.TextDrawer$NoOpSpan: void <init>()>
<androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: void start()>
<com.google.android.gms.maps.internal.zzbu: void <init>(android.os.IBinder)>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>
<com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)>
<com.facebook.yoga.YogaNodeJNIFinalizer: void <init>(com.facebook.yoga.YogaConfig)>
<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void start()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_4_7$cp()>
<androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<com.google.android.gms.common.stats.StatsEvent: long zza()>
<ch.qos.logback.core.recovery.RecoveryCoordinator: boolean isTooSoon()>
<com.microsoft.authenticator.graphclient.entities.GetCachedPolicyResult$SuccessCacheExpiredInGracePeriod: com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult getPolicy()>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<com.facebook.react.uimanager.events.EventDispatcher: void access$300(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.material.shape.MaterialShapeDrawable: void setShadowBitmapDrawingEnable(boolean)>
<com.google.android.gms.auth.api.accounttransfer.zzu: void <init>()>
<com.facebook.react.bridge.ReadableArray: double getDouble(int)>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<com.google.common.base.Splitter$1$1: void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence)>
<com.google.android.gms.internal.measurement.zzmx: void <init>()>
<com.google.android.gms.internal.measurement.zzab: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String,java.lang.String,android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzib: void zzs(android.app.Activity,android.os.Bundle)>
<com.google.android.gms.internal.auth.zzc: void zza(android.os.Parcel,android.os.IInterface)>
<android.app.NotificationManager: void notify(int,android.app.Notification)>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
<com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.NativeKind getNativeKind()>
<java.lang.AssertionError: void <init>(java.lang.Object)>
<com.facebook.react.bridge.ContextBaseJavaModule: void <init>(android.content.Context)>
<com.google.android.gms.common.internal.service.zal: void zae(com.google.android.gms.common.internal.service.zak)>
<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig build()>
<com.airbnb.lottie.LottieComposition: com.airbnb.lottie.model.layer.Layer layerModelForId(long)>
<java.lang.String: java.lang.String intern()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.logging.LoggingReceiver injectLoggingReceiver2(com.azure.authenticator.logging.LoggingReceiver)>
<ch.qos.logback.classic.spi.TurboFilterList: void <init>()>
<com.evernote.android.job.v14.JobProxy14: void <init>(android.content.Context)>
<com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)>
<java.util.zip.ZipOutputStream: void close()>
<com.facebook.imagepipeline.cache.MemoryCacheTracker: void onCachePut()>
<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer: android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: boolean isAllowedInForeground()>
<com.facebook.drawee.drawable.DrawableParent: android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable)>
<com.azure.authenticator.notifications.AbstractNotification$handleRequest$1: void <init>(com.azure.authenticator.notifications.AbstractNotification,kotlin.coroutines.Continuation)>
<android.graphics.Paint: void <init>()>
<dagger.hilt.android.internal.modules.ApplicationContextModule: void <init>(android.content.Context)>
<com.facebook.react.uimanager.LayoutShadowNode: int maybeTransformLeftRightToStartEnd(int)>
<android.view.ViewGroup: int getMeasuredHeight()>
<com.evernote.android.job.v14.JobProxy14: android.app.PendingIntent getPendingIntent(com.evernote.android.job.JobRequest,boolean)>
<com.google.android.gms.measurement.internal.zzdj: void <init>()>
<com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()>
<android.widget.Button: int getPaddingBottom()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)>
<com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()>
<com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<com.google.android.gms.internal.maps.zzt: float getRotation()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.internal.measurement.zzs: void zzb(android.os.Bundle)>
<com.google.android.material.textfield.TextInputLayout: int getLabelLeftBoundAlightWithPrefix(int,boolean)>
<com.google.android.gms.internal.measurement.zzbe: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.Long,java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean)>
<com.airbnb.lottie.parser.ShapePathParser: com.airbnb.lottie.model.content.ShapePath parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.common.api.internal.zaaz: void connect()>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: int getValue()>
<com.google.android.gms.measurement.internal.zzba: void <init>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<com.google.common.collect.MapMakerInternalMap$Strength$1: void <init>(java.lang.String,int)>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment: java.lang.String getFragmentName()>
<com.google.android.gms.measurement.internal.zzja: void zzc()>
<android.text.Spanned: int getSpanStart(java.lang.Object)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.databinding.AccountListBinding access$getBinding$p(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager: void showErrorDialogFragment(androidx.fragment.app.FragmentActivity,java.lang.String,android.content.DialogInterface$OnClickListener,boolean)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView$1: void <init>(com.facebook.react.views.scroll.ReactHorizontalScrollView)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzfa zzi()>
<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig: void <init>(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$1)>
<com.azure.authenticator.accounts.AccountCapability: int getValue()>
<android.view.View: int getLeft()>
<java.lang.Integer: int rotateLeft(int,int)>
<com.google.android.gms.measurement.internal.zzaf: com.google.android.gms.measurement.internal.zzaf zzl(com.google.android.gms.measurement.internal.zzaf)>
<android.widget.FrameLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.ViewOutlineProvider: void <init>()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void <init>(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)>
<ch.qos.logback.core.ContextBase: void start()>
<com.google.android.gms.common.internal.zzo: void zzd(android.content.ServiceConnection,java.lang.String)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onStop()>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void startMsaAccountWebView()>
<com.google.android.material.chip.ChipDrawable: void unapplyChildDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.measurement.internal.zzr: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.BytesRange getBytesRange()>
<android.widget.ImageButton: void setEnabled(boolean)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: boolean setIndoorEnabled(boolean)>
<android.content.BroadcastReceiver$PendingResult: void finish()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: boolean isNetworkAvailable()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: void <init>(com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase,com.microsoft.authenticator.workaccount.businesslogic.DeviceRegistrationUseCase,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.database.AccountWriter,com.microsoft.brooklyn.config.enterprise.BrooklynEnterpriseConfigManager,com.microsoft.authenticator.selfhost.SelfhostConfigManager)>
<com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.badge.BadgeDrawable getBadge(int)>
<androidx.preference.PreferenceFragmentCompat: void onCreate(android.os.Bundle)>
<com.google.android.gms.internal.maps.zzt: void setInfoWindowAnchor(float,float)>
<com.azure.authenticator.databinding.SettingsPreferenceButtonRedBinding: com.azure.authenticator.databinding.SettingsPreferenceButtonRedBinding bind(android.view.View)>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager_Factory: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager newInstance()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void enablePanning(boolean)>
<com.google.android.gms.internal.measurement.zzdj: void zzbn(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.google.android.gms.measurement.internal.zzax: void <init>()>
<org.slf4j.MDC: java.lang.String get(java.lang.String)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaF(java.lang.StringBuilder,com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadAddAccountViewModel: void <init>(com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInSetupUseCase,com.microsoft.authenticator.mfasdk.MfaSdkManager,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<java.util.Calendar: void setTimeInMillis(long)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler: void processQueue(java.lang.Runnable)>
<com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider addressViewModelProvider()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)>
<com.google.android.datatransport.runtime.logging.Logging: java.lang.String getTag(java.lang.String)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)>
<com.airbnb.lottie.model.content.ShapeGroup: boolean isHidden()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getBackgroundNetworkFetchToEncodedMemorySequence()>
<ch.qos.logback.core.net.SMTPAppenderBase: boolean eventMarksEndOfLife(java.lang.Object)>
<ch.qos.logback.classic.Logger: boolean isEnabledFor(ch.qos.logback.classic.Level)>
<com.azure.authenticator.ui.RootActivityBase: void attachBaseContext(android.content.Context)>
<com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)>
<com.facebook.react.fabric.mounting.mountitems.UpdateEventEmitterMountItem: void <init>(int,com.facebook.react.fabric.events.EventEmitterWrapper)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableStaticBitmap decodeJpeg(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)>
<com.google.android.gms.maps.model.TileOverlayOptions: boolean isVisible()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$silentlyRegisterForAadPhoneSignInPushNotifications$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<java.util.HashMap: void <init>(int)>
<com.facebook.imagepipeline.producers.FetchState: int getOnNewResultStatusFlags()>
<com.adjust.sdk.ActivityHandler: void access$1700(com.adjust.sdk.ActivityHandler,com.adjust.sdk.EventResponseData)>
<com.azure.authenticator.storage.MfaSdkAccountTranslator: java.util.List aadAccountListToMfaSdkAccountList$app_productionRelease(java.util.List)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllAadAccounts()>
<com.facebook.systrace.Systrace: void beginAsyncSection(long,java.lang.String,int)>
<com.facebook.react.bridge.CatalystInstanceImpl: boolean access$1202(com.facebook.react.bridge.CatalystInstanceImpl,boolean)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void <init>()>
<com.google.android.material.button.MaterialButton: int getTextWidth()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<android.animation.ObjectAnimator: void setEvaluator(android.animation.TypeEvaluator)>
<com.facebook.react.modules.network.TLSSocketFactory: void <init>()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.google.android.gms.internal.measurement.zzbw: boolean zzg()>
<com.google.android.gms.dynamic.zah: int zaa()>
<com.adjust.sdk.RequestHandler: void access$000(com.adjust.sdk.RequestHandler,com.adjust.sdk.ActivityPackage,int)>
<com.google.common.collect.ImmutableSet: int hashCode()>
<com.evernote.android.job.JobStorage$JobOpenHelper: void upgradeFrom5To6(android.database.sqlite.SQLiteDatabase)>
<ch.qos.logback.core.util.COWArrayList: boolean remove(java.lang.Object)>
<com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable applyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)>
<com.google.android.gms.measurement.internal.zzjk: void <init>(com.google.android.gms.measurement.internal.zzjl)>
<com.facebook.react.modules.core.ReactChoreographer: void <init>()>
<com.google.android.gms.dynamite.zzp: void <init>(android.os.IBinder)>
<com.evernote.android.job.JobManager: int cancelAllInner(java.lang.String)>
<android.view.ViewGroup: void layout(int,int,int,int)>
<com.google.common.io.BaseEncoding$StandardBaseEncoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)>
<com.facebook.shimmer.Shimmer$AlphaHighlightBuilder: com.facebook.shimmer.Shimmer$AlphaHighlightBuilder getThis()>
<com.google.android.gms.common.internal.zzq: java.util.HashMap zzd(com.google.android.gms.common.internal.zzq)>
<androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void retrievePrimaryMsaAccountAndCreateBackup()>
<ch.qos.logback.core.rolling.FixedWindowRollingPolicy: java.lang.String getActiveFileName()>
<com.google.android.gms.auth.api.signin.GoogleSignIn: void requestPermissions(android.app.Activity,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.common.api.Scope[])>
<android.widget.Button: void setElevation(float)>
<com.microsoft.brooklyn.notifications.BrooklynIntroNotificationManager: void <init>(android.content.Context,com.azure.authenticator.jobs.DeferrableWorkerUtils,com.microsoft.brooklyn.module.common.BrooklynStorage,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.brooklyn.module.service.BrooklynConfigsHandler)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(char[],int,int)>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void resetActualImages()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.facebook.react.views.picker.ReactPicker: void setStagedBackgroundColor(java.lang.Integer)>
<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>
<dagger.internal.DoubleCheck: java.lang.Object reentrantCheck(java.lang.Object,java.lang.Object)>
<com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker: void <init>(com.google.android.material.button.MaterialButtonToggleGroup)>
<com.adjust.sdk.RequestHandler: void <init>(com.adjust.sdk.IActivityHandler,com.adjust.sdk.IPackageHandler)>
<androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.internal.measurement.zziw: com.google.android.gms.internal.measurement.zziw zzau(com.google.android.gms.internal.measurement.zzix)>
<android.view.Window: void addFlags(int)>
<android.view.ViewGroup: boolean requestFocus()>
<android.widget.ScrollView: void setScrollBarStyle(int)>
<com.google.android.gms.internal.maps.zzv: void <init>(android.os.IBinder)>
<com.google.common.collect.MapMakerInternalMap$SafeToArraySet: void <init>()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ImagePipelineFactory getInstance()>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage fromBundle(android.os.Bundle)>
<com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)>
<com.google.android.gms.measurement.internal.zzhz: void <init>(com.google.android.gms.measurement.internal.zzib,com.google.android.gms.measurement.internal.zzhu,long)>
<com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>
<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>
<com.google.android.gms.internal.measurement.zzhj: void zzb()>
<com.google.android.gms.measurement.internal.zzcd: void <init>()>
<com.google.android.gms.internal.safetynet.zzk$zzi: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.SafeBrowsingData)>
<ch.qos.logback.core.joran.spi.Interpreter: void startElement(ch.qos.logback.core.joran.event.StartEvent)>
<com.facebook.react.views.textinput.ReactEditText: boolean showSoftKeyboard()>
<android.widget.Button: android.text.method.TransformationMethod getTransformationMethod()>
<com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidth(float)>
<java.util.LinkedList: void <init>()>
<com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository: java.lang.Object getAppLockEnforcedPolicies(kotlin.coroutines.Continuation)>
<ch.qos.logback.core.joran.spi.ElementSelector: void <init>(java.lang.String)>
<androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()>
<com.google.android.gms.measurement.internal.zzhn: void zzF(long)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
<com.facebook.react.bridge.GuardedRunnable: void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler)>
<com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.animatable.AnimatableFloatValue getInnerRadius()>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable$Creator)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: void <init>(com.microsoft.authenticator.di.AppModule,dagger.hilt.android.internal.modules.ApplicationContextModule,com.microsoft.authenticator.di.BrokerModule,com.microsoft.brooklyn.module.di.BrooklynHiltModule,com.microsoft.authenticator.di.DidAppModule,com.microsoft.authenticator.experimentation.di.ExperimentationHiltModule,com.microsoft.authenticator.graphclient.di.GraphModule,com.microsoft.authenticator.location.di.LocationModule,com.microsoft.authenticator.mfasdk.di.hilt.MfaModule,com.microsoft.authenticator.di.MsaSdkModule,com.microsoft.authenticator.rootdetection.di.RootDetectionModule,com.microsoft.did.di.VcWalletModule)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider msaAuthViewModelProvider()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAccountAdded$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.maps.zza: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity_MembersInjector: void injectMembers(com.azure.authenticator.ui.authentication.MsaSessionActivity)>
<android.widget.ScrollView: void setFocusable(boolean)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,com.facebook.drawee.backends.pipeline.DraweeConfig)>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<com.google.android.gms.auth.api.signin.GoogleSignIn: android.content.Intent zzc(android.app.Activity,com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.common.api.Scope[])>
<androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()>
<com.google.common.base.Splitter: com.google.common.base.Splitter limit(int)>
<android.app.job.JobScheduler: android.app.job.JobInfo getPendingJob(int)>
<com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: void <init>(int,int)>
<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>
<com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: void <init>()>
<android.content.pm.Signature: boolean equals(java.lang.Object)>
<com.facebook.react.devsupport.LogBoxModule: android.view.View access$000(com.facebook.react.devsupport.LogBoxModule)>
<com.google.android.material.datepicker.CalendarConstraints: int getYearSpan()>
<com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<com.facebook.imageutils.TiffUtil: int readOrientationFromTIFF(java.io.InputStream,int)>
<com.github.amlcurran.showcaseview.ShowcaseView: void setStyle(int)>
<ch.qos.logback.core.subst.Node: void dump()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.google.android.gms.measurement.internal.zzhn: void zzG(long,boolean)>
<ch.qos.logback.core.joran.util.PropertyDescriptor: void <init>(java.lang.String)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: com.google.android.gms.dynamic.IObjectWrapper onCreateView(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle)>
<com.google.android.gms.auth.api.signin.internal.zzq: void zzc(com.google.android.gms.auth.api.signin.GoogleSignInOptions,com.google.android.gms.auth.api.signin.GoogleSignInAccount)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: void <init>(java.lang.String,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void updateDeviceIdText(java.lang.String)>
<com.airbnb.lottie.model.LottieCompositionCache: void <init>()>
<com.facebook.react.util.RNLog: void e(java.lang.String)>
<android.os.Parcel: double[] createDoubleArray()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: java.util.List zzc(java.util.List)>
<com.airbnb.lottie.LottieCompositionFactory$11: void <init>(java.lang.String)>
<com.facebook.systrace.SystraceMessage$Builder: void flush()>
<com.google.android.material.shape.CutCornerTreatment: void <init>()>
<android.widget.EditText: void <init>(android.content.Context)>
<com.facebook.react.modules.storage.AsyncStorageModule$2: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] resetAndGetFirstSegment()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onStart$notificationDisabledDialogListener$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.facebook.react.animated.NativeAnimatedModule$14: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void taskCompleted()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: boolean isPanningGesturesEnabled()>
<android.widget.CheckBox: void getFocusedRect(android.graphics.Rect)>
<androidx.fragment.app.Fragment: java.lang.String getString(int)>
<com.google.android.material.card.MaterialCardViewHelper: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: void setLocation(java.lang.String)>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isOffline()>
<com.github.amlcurran.showcaseview.ShowcaseView: void setSingleShot(long)>
<com.airbnb.lottie.LottieAnimationView: void init(android.util.AttributeSet,int)>
<com.evernote.android.job.JobRequest$Builder: long access$300(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.gms.common.zzi: byte[] zzc()>
<androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>
<com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.WritableNativeArray)>
<java.util.concurrent.Future: java.lang.Object get()>
<com.microsoft.brooklyn.ui.credential.passwordautochange.PasswordAutoChangeViewModel: void <init>(com.microsoft.brooklyn.module.repository.UtilitySDKRepository,com.microsoft.vienna.sdk.AutomationSpecClient,com.microsoft.vienna.rpa.model.AutomationModelLoader,com.microsoft.vienna.sdk.AutomationRunner)>
<com.google.android.gms.internal.cloudmessaging.zze: void <init>(android.os.Looper,android.os.Handler$Callback)>
<com.airbnb.lottie.parser.AnimatableTransformParser: boolean isRotationIdentity(com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setFastestInterval(long)>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: boolean shouldShowTotp(com.azure.authenticator.accounts.GenericAccount)>
<com.microsoft.onlineid.UserAccount: void getProofOfPossessionTokens(android.os.Bundle)>
<java.lang.RuntimeException: java.lang.Throwable getCause()>
<android.widget.LinearLayout: void setFocusable(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.WorkplaceJoinUseCase getWorkplaceJoinUseCase()>
<com.google.android.gms.common.server.response.SafeParcelResponse: void <init>(com.google.android.gms.common.server.response.zan,java.lang.String)>
<com.google.android.gms.common.internal.Asserts: void checkMainThread(java.lang.String)>
<ch.qos.logback.classic.Level: java.lang.String toString()>
<com.google.android.gms.internal.measurement.zzhl: java.lang.String zzg(int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>
<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()>
<android.os.LocaleList: java.util.Locale get(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent create(long,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<com.google.android.gms.maps.model.LatLng: boolean equals(java.lang.Object)>
<ch.qos.logback.classic.joran.action.LoggerContextListenerAction: void <init>()>
<com.google.android.gms.measurement.internal.zzev: void zzc()>
<com.google.android.gms.measurement.internal.zzjr: void <init>(com.google.android.gms.common.util.Clock)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectAccountStorage(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.azure.authenticator.storage.database.AccountStorage)>
<com.facebook.react.views.text.TextAttributes: void setTextTransform(com.facebook.react.views.text.TextTransform)>
<android.graphics.Paint: int getColor()>
<android.view.ViewGroup: float getRotationY()>
<android.widget.ScrollView: int getPaddingBottom()>
<com.facebook.react.views.modal.ReactModalHostManager$1: void <init>(com.facebook.react.views.modal.ReactModalHostManager,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.views.modal.ReactModalHostView)>
<com.google.android.gms.common.server.response.FastParser: java.util.ArrayList zam(java.io.BufferedReader,com.google.android.gms.common.server.response.zai)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task get(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean)>
<com.fasterxml.jackson.core.base.ParserBase: void _reportMismatchedEndMarker(int,char)>
<com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier: com.facebook.imagepipeline.cache.MemoryCacheParams get()>
<java.io.FileNotFoundException: void <init>(java.lang.String)>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: javax.net.ServerSocketFactory getServerSocketFactory()>
<com.google.android.material.animation.ChildrenAlphaProperty: void set(android.view.ViewGroup,java.lang.Float)>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void startInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeFailureLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.content.Context: android.content.res.Resources$Theme getTheme()>
<com.adjust.sdk.ILogger: void verbose(java.lang.String,java.lang.Object[])>
<com.google.android.gms.maps.model.zzf: void <init>()>
<android.database.CursorWindow: boolean putLong(long,int,int)>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$NoAccountFound: com.microsoft.ngc.aad.NgcSession getNgcSession()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.favicon.FaviconRefreshWorker faviconRefreshWorker(android.content.Context,androidx.work.WorkerParameters)>
<androidx.work.WorkManager: com.google.common.util.concurrent.ListenableFuture getWorkInfosByTag(java.lang.String)>
<com.facebook.react.modules.network.ForwardingCookieHandler$2: void onReceiveValue(java.lang.Boolean)>
<android.content.Context: java.lang.CharSequence getText(int)>
<com.adjust.sdk.SharedPreferencesManager: java.lang.String getPushToken()>
<com.evernote.android.job.JobProxyIllegalStateException: void <init>(java.lang.Throwable)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1: void <init>(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<com.google.android.gms.measurement.internal.zzha: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String)>
<dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories: androidx.lifecycle.ViewModelProvider$Factory getFragmentFactory(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelProvider$Factory)>
<com.google.android.gms.internal.base.zaa: void zad(int,android.os.Parcel)>
<android.os.Parcel: boolean[] createBooleanArray()>
<com.facebook.soloader.DirectorySoSource: java.io.File unpackLibrary(java.lang.String)>
<com.facebook.imagepipeline.systrace.DefaultFrescoSystrace: void <init>()>
<androidx.collection.SimpleArrayMap: void <init>(int)>
<com.airbnb.lottie.parser.CircleShapeParser: com.airbnb.lottie.model.content.CircleShape parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,int)>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)>
<com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter: void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardlist.viewlogic.CardListFragment injectCardListFragment2(com.microsoft.did.feature.cardlist.viewlogic.CardListFragment)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalFileFetchToEncodedMemoryPrefetchSequence()>
<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<com.azure.authenticator.storage.database.AccountWriter_Factory: com.azure.authenticator.storage.database.AccountWriter newInstance(android.content.Context)>
<com.google.android.material.appbar.HeaderBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<ch.qos.logback.classic.net.SyslogAppender: void setupStackTraceLayout()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyComplete$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>
<com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)>
<com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.imagepipeline.image.EncodedImage: void closeSafely(com.facebook.imagepipeline.image.EncodedImage)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulLegal()>
<java.util.Scanner: void <init>(java.lang.String)>
<com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)>
<com.google.android.gms.tasks.zzh: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory()>
<com.google.android.gms.common.api.internal.zabl: void zav(com.google.android.gms.common.api.internal.zabl,com.google.android.gms.common.api.internal.zabm)>
<com.google.android.gms.measurement.internal.zzgd: com.google.android.gms.measurement.internal.zzas zzb(com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment$zza: void <init>(androidx.fragment.app.Fragment,com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getCloudAadMfaAccountsWithGroupKey(java.lang.String)>
<com.google.android.gms.common.api.internal.zaq: void <init>()>
<com.google.android.gms.common.api.internal.LifecycleCallback: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.crypto.tink.proto.Keyset$Key: boolean hasKeyData()>
<com.android.installreferrer.api.InstallReferrerClientImpl: int access$202(com.android.installreferrer.api.InstallReferrerClientImpl,int)>
<com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener: java.lang.String getImageOrigin()>
<androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$16: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.google.android.material.resources.TextAppearanceFontCallback: void <init>()>
<com.google.android.material.badge.BadgeDrawable: void setBadgeTextColor(int)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void setSecondaryButton(android.app.AlertDialog$Builder)>
<ch.qos.logback.classic.spi.ILoggingEvent: java.lang.String getFormattedMessage()>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment$onCreateView$1: void <init>(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.google.android.gms.internal.location.zzq: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>
<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>
<androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.adjust.sdk.ActivityHandler: void sendInstallReferrerI(java.lang.String,long,long)>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: void <init>(int,int)>
<com.google.android.gms.dynamic.IFragmentWrapper: com.google.android.gms.dynamic.IObjectWrapper zzf()>
<com.google.android.material.textfield.CutoutDrawable: void removeCutout()>
<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>
<com.facebook.imagepipeline.memory.DummyBitmapPool: void <init>()>
<com.google.android.material.tabs.TabLayout$TabView: int getContentHeight()>
<com.airbnb.lottie.model.content.GradientFill: com.airbnb.lottie.model.animatable.AnimatablePointValue getEndPoint()>
<com.google.android.gms.common.zzq: boolean zza()>
<com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)>
<ch.qos.logback.core.rolling.helper.RenameUtil: void createMissingTargetDirsIfNecessary(java.io.File)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$startWorkplaceJoin$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void access$000(ch.qos.logback.core.net.server.ConcurrentServerRunner,ch.qos.logback.core.net.server.Client)>
<androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
<com.azure.authenticator.common.HttpCacheHelper: void <init>()>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$NetworkConnectionInfoEncoder: void <init>()>
<com.google.android.gms.internal.location.zzx: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.measurement.internal.zzkd: boolean zzag(com.google.android.gms.internal.measurement.zzda,com.google.android.gms.internal.measurement.zzda)>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzhj: com.google.android.gms.internal.measurement.zzhj zza()>
<com.google.android.gms.measurement.internal.zzf: void zzc()>
<com.google.android.gms.internal.measurement.zzkm: int zze(byte[],int,long,int)>
<android.widget.CheckBox: void setMaxWidth(int)>
<com.airbnb.lottie.animation.content.RectangleContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.RectangleShape)>
<android.database.Cursor: int getCount()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_Factory: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker get(android.content.Context,androidx.work.WorkerParameters)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void <init>()>
<com.google.android.gms.auth.GoogleAuthException: void <init>(java.lang.String)>
<com.airbnb.lottie.parser.ShapeGroupParser: com.airbnb.lottie.model.content.ShapeGroup parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>
<com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory create()>
<com.adjust.sdk.SdkClickHandler: void access$400(com.adjust.sdk.SdkClickHandler)>
<ch.qos.logback.core.pattern.parser.Node: void <init>(int)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void removeNodeFromParent(com.facebook.react.uimanager.ReactShadowNode,boolean)>
<com.facebook.react.modules.camera.CameraRollManager$GetMediaTask: void doInBackgroundGuarded(java.lang.Void[])>
<com.google.android.gms.internal.maps.zzt: void setAlpha(float)>
<com.azure.authenticator.OnAppUpgradeReceiver: com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication getMfaPinAuthentication$app_productionRelease()>
<com.google.android.gms.internal.auth-api.zzag: void zzc(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.identity.SavePasswordResult)>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>
<androidx.room.RoomSQLiteQuery: void bindLong(int,long)>
<com.adjust.sdk.Util: boolean equalEnum(java.lang.Enum,java.lang.Enum)>
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.presentationlogic.CardFlowRules cardFlowRules()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.content.Context: int checkSelfPermission(java.lang.String)>
<com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.ByteString getValue()>
<com.google.android.material.timepicker.ClockHandView: int getSelectorRadius()>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectBrooklynAppUpgradeManager(com.azure.authenticator.OnAppUpgradeReceiver,com.microsoft.brooklyn.config.BrooklynAppUpgradeManager)>
<com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: java.util.Set access$2100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.google.android.datatransport.runtime.dagger.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: void <init>()>
<com.google.android.gms.common.internal.GetServiceRequest: java.lang.String zza()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity_MembersInjector: void injectDeviceScreenLockConfigChecker(com.azure.authenticator.ui.authentication.MsaSessionActivity,com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockConfigChecker)>
<com.facebook.imagepipeline.producers.DecodeProducer: com.facebook.imagepipeline.core.CloseableReferenceFactory access$800(com.facebook.imagepipeline.producers.DecodeProducer)>
<com.facebook.react.bridge.CatalystInstanceImpl$5: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<java.text.BreakIterator: int first()>
<com.azure.authenticator.ui.MainActivity_GeneratedInjector: void injectMainActivity(com.azure.authenticator.ui.MainActivity)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: boolean checkIfAppLockNotificationEnabled()>
<android.widget.ArrayAdapter: int getCount()>
<com.facebook.react.LazyReactPackage$2$1: com.facebook.react.bridge.ModuleHolder next()>
<ch.qos.logback.core.spi.ContextAware: void addInfo(java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeCustomStringSegment2(char[],int,int)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: void <init>(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int)>
<com.facebook.datasource.AbstractDataSource: boolean setFailureInternal(java.lang.Throwable)>
<com.google.android.material.button.MaterialButton: void onAttachedToWindow()>
<com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>
<com.google.android.gms.maps.zzd: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener)>
<android.widget.OverScroller: int getCurrX()>
<okio.BufferedSink: java.io.OutputStream outputStream()>
<com.airbnb.lottie.animation.content.PolystarContent: void invalidate()>
<com.google.common.collect.MapMakerInternalMap$WeakValueEntry: com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference()>
<com.microsoft.onlineid.sdk.extension.NgcManager: boolean isSupported()>
<com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)>
<com.azure.authenticator.storage.database.AccountWriter: void saveAadMfaAccountMergingWithBrokerAccounts(com.azure.authenticator.storage.database.DbAccount)>
<java.io.ObjectInputStream: int readInt()>
<com.adjust.sdk.ActivityHandler$33: void <init>(com.adjust.sdk.ActivityHandler)>
<com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: android.graphics.Bitmap decodeFileDescriptorAsPurgeable(com.facebook.common.references.CloseableReference,int,byte[],android.graphics.BitmapFactory$Options)>
<androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.maps.GoogleMap$OnMyLocationButtonClickListener: boolean onMyLocationButtonClick()>
<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)>
<com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState)>
<com.facebook.react.uimanager.TransformHelper$1: void <init>()>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent$Builder setTimezoneOffsetSeconds(long)>
<android.widget.TextView: int getLineCount()>
<com.google.android.gms.measurement.internal.zzg: void zzR(long)>
<com.facebook.react.bridge.JavaScriptContextHolder: void clear()>
<dagger.internal.MemoizedSentinel: void <init>()>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$C_BMurMceqwxkQ5HnuEuHqQiuSo': void <init>(java.util.HashMap)>
<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getCardForegroundColor()>
<com.google.android.gms.dynamic.IFragmentWrapper: com.google.android.gms.dynamic.IObjectWrapper zzb()>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setOverlayColor(int)>
<com.google.android.gms.measurement.internal.zzet: void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,android.os.Bundle)>
<com.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)>
<com.google.android.gms.tasks.zzw: void zzf()>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)>
<com.azure.authenticator.ui.action.ActionStateManager: boolean isAuthenticatorIgnoringBatteryOptimizations()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$denyAadNgcSessionSuspend$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.measurement.internal.zzhn: void zzE(java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: void setUxPosition(int)>
<com.google.android.gms.internal.measurement.zzlj: boolean zza()>
<androidx.collection.ArraySet: boolean addAll(java.util.Collection)>
<com.google.android.gms.internal.measurement.zzm: void <init>()>
<com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig()>
<android.util.AttributeSet: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<com.facebook.imagepipeline.image.EncodedImage: int getExifOrientation()>
<com.facebook.react.uimanager.MatrixMathHelper: void multiplyInto(double[],double[],double[])>
<android.view.View: void setTranslationZ(float)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.SignInFormDatasetsUseCase signInFormDatasetsUseCase()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getQualifiedResourceFetchSequence()>
<com.google.android.gms.tasks.zzt: void <init>()>
<com.facebook.imageformat.ImageFormatCheckerUtils: boolean startsWithPattern(byte[],byte[])>
<ch.qos.logback.core.rolling.helper.FileProvider: long length(java.io.File)>
<androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldExpandBoundsForA11y()>
<com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)>
<android.view.ViewGroup: void setContentDescription(java.lang.CharSequence)>
<com.facebook.react.uimanager.MatrixMathHelper: double degreesToRadians(double)>
<com.google.android.material.animation.TransformationCallback: void onTranslationChanged(android.view.View)>
<com.google.android.material.textfield.TextInputLayout: void adjustFilledEditTextPaddingForLargeFont()>
<com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: java.lang.Object getCallerContext()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: android.content.Intent getIntent()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegmentASCII2(java.lang.String,int,int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel_Factory: com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel get()>
<com.facebook.imagepipeline.producers.ThrottlingProducer: int access$210(com.facebook.imagepipeline.producers.ThrottlingProducer)>
<com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.NetworkConnectionInfo getNetworkConnectionInfo()>
<com.facebook.common.logging.FLog: void w(java.lang.String,java.lang.String,java.lang.Object[])>
<com.google.android.gms.common.internal.BaseGmsClient: android.os.IInterface createServiceInterface(android.os.IBinder)>
<com.google.android.gms.common.api.internal.ListenerHolders: void zab()>
<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity_MembersInjector: void injectMsaAccountUseCase(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<okio.BufferedSource: long indexOfElement(okio.ByteString)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: double getFPS()>
<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>
<com.google.android.material.appbar.ViewOffsetHelper: boolean isVerticalOffsetEnabled()>
<com.google.android.gms.internal.safetynet.zzx: void zza(com.google.android.gms.internal.safetynet.zzg,java.util.List,int,java.lang.String,java.lang.String)>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider credentialNotificationsViewModelProvider()>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1: void <init>(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken)>
<ch.qos.logback.classic.net.server.RemoteAppenderServerListener: void <init>(java.net.ServerSocket)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzz()>
<com.google.android.material.transformation.FabTransformationBehavior$4: void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder access$100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)>
<com.facebook.react.uimanager.UIViewOperationQueue: long access$2302(com.facebook.react.uimanager.UIViewOperationQueue,long)>
<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)>
<com.facebook.drawee.components.RetryManager: void init()>
<com.airbnb.lottie.model.layer.BaseLayer: void intersectBoundsWithMatte(android.graphics.RectF,android.graphics.Matrix)>
<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)>
<com.google.android.gms.measurement.internal.zzg: long zzJ()>
<com.facebook.react.bridge.ReactMarkerConstants: void <init>(java.lang.String,int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$4: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void <init>()>
<com.facebook.react.modules.core.JavaTimerManager: void access$1800(com.facebook.react.modules.core.JavaTimerManager)>
<com.google.android.gms.measurement.internal.zzai: void zzd()>
<com.google.android.gms.safetynet.SafetyNetApi$SafeBrowsingResponse: void <init>()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.TrustManager[] createTrustManagers(ch.qos.logback.core.spi.ContextAware)>
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onActivityResult(int,int,android.content.Intent)>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity: void inject()>
<android.graphics.drawable.GradientDrawable: void <init>()>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment: android.widget.EditText access$getUserFeedbackTextContent$p(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<ch.qos.logback.core.subst.NodeToStringTransformer: void handleVariable(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack)>
<android.database.CursorWindow: int getNumRows()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setScrollGesturesEnabledDuringRotateOrZoom(boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.Broker broker()>
<com.evernote.android.job.v21.JobProxy21: android.app.job.JobInfo$Builder setTransientBundle(com.evernote.android.job.JobRequest,android.app.job.JobInfo$Builder)>
<com.google.android.gms.measurement.internal.zzt: java.util.BitSet zzc(com.google.android.gms.measurement.internal.zzt)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.google.firebase.encoders.config.EncoderConfig: com.google.firebase.encoders.config.EncoderConfig registerEncoder(java.lang.Class,com.google.firebase.encoders.ObjectEncoder)>
<com.google.android.gms.internal.measurement.zzkh: boolean zzz(java.lang.Object,long)>
<java.lang.String: java.lang.String replace(char,char)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzeo zzh()>
<sun.misc.Unsafe: void putFloat(java.lang.Object,long,float)>
<com.google.android.gms.measurement.internal.zzkk: java.security.SecureRandom zzf()>
<com.google.android.gms.location.zzay: void <init>(android.os.IBinder)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getTopBottomOffsetForScrollingSibling()>
<com.google.android.gms.common.images.WebImage: int getHeight()>
<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)>
<org.xml.sax.helpers.LocatorImpl: void <init>(org.xml.sax.Locator)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: com.azure.authenticator.ui.backup.RestoreFlowViewModel getRestoreFlowViewModel()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onAccountSignedOut$1: void <init>(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback,java.lang.String,boolean,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzdj: void zzas(com.google.android.gms.internal.measurement.zzdj,com.google.android.gms.internal.measurement.zzdu)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void setDevSupportEnabled(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_DbNameFactory: void <init>()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$buildDialog$6(android.content.DialogInterface,int)>
<com.google.android.gms.internal.location.zzbp: com.google.android.gms.internal.location.zzbs zze()>
<com.google.android.gms.maps.internal.zzo: void <init>()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: boolean isAutoSelectEnabled()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureBackupPreference()>
<ch.qos.logback.core.util.ContentTypeUtil: boolean isTextual(java.lang.String)>
<com.google.android.gms.internal.measurement.zzis: java.lang.Object zzb(java.lang.Object,java.lang.Object)>
<com.facebook.react.fabric.mounting.MountingManager: void createView(com.facebook.react.uimanager.ThemedReactContext,java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.EdgeTreatment getBottomEdge()>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: java.util.List getCopyOfFileWatchList()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropName()>
<com.microsoft.did.feature.backuprestore.viewlogic.BackupPromptFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.backuprestore.viewlogic.BackupPromptFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.material.shape.ShapePath: void setStartY(float)>
<androidx.recyclerview.widget.GridLayoutManager: void <init>(android.content.Context,int,int,boolean)>
<com.adjust.sdk.scheduler.TimerCycle: com.adjust.sdk.ILogger access$100(com.adjust.sdk.scheduler.TimerCycle)>
<com.google.android.material.shape.ShapePath: boolean containsIncompatibleShadowOp()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.authenticator.notifications.abstraction.AppNotificationsManager appNotificationsManager()>
<com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,int[])>
<com.google.android.gms.measurement.internal.zzae: java.lang.String zzv()>
<com.airbnb.lottie.LottieCompositionFactory$1: com.airbnb.lottie.LottieResult call()>
<com.facebook.jni.HybridData$Destructor: void destruct()>
<java.util.LinkedHashMap: java.util.Collection values()>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: boolean isHttpSuccess(int)>
<com.facebook.react.bridge.Systrace: void setEnabled(boolean)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAadMfaAccounts(java.lang.String,java.lang.String)>
<com.evernote.android.job.v14.JobProxy14: android.app.PendingIntent getPendingIntent(com.evernote.android.job.JobRequest,int)>
<android.content.ContentProvider: void <init>()>
<com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List,double)>
<com.azure.authenticator.storage.database.DbAccount: void setRoutingHint(java.lang.String)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onUserCancel$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)>
<com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.common.server.response.SafeParcelResponse: android.os.Parcel zaE()>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzr()>
<com.facebook.react.bridge.WritableNativeArray: void pushNull()>
<com.facebook.fbreact.specs.NativeShareModuleSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.microsoft.authenticator.backup.entities.CloudBackup: java.lang.String getDeviceIdentifier()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener: void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable)>
<java.util.UUID: java.lang.String toString()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean isServerAuthCodeRequested()>
<com.google.android.gms.internal.measurement.zzkz: long zzn()>
<com.evernote.android.job.JobBootReceiver: void <init>()>
<com.google.android.gms.measurement.internal.zzfl: void zzH(boolean)>
<ch.qos.logback.core.spi.AbstractComponentTracker$3: void <init>(ch.qos.logback.core.spi.AbstractComponentTracker)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void maybeUpdateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage)>
<com.azure.authenticator.databinding.AccountActionLayoutBinding: com.azure.authenticator.databinding.AccountActionLayoutBinding bind(android.view.View)>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onEnterAmbient(android.os.Bundle)>
<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.ui.credential.EditCredentialFragment injectEditCredentialFragment2(com.microsoft.brooklyn.ui.credential.EditCredentialFragment)>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: char _decodeEscaped()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureBrooklynEnterpriseControls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void startInputProducerIfHasAttachedConsumers()>
<com.facebook.imageformat.ImageFormatChecker: int readHeaderFromStream(int,java.io.InputStream,byte[])>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.core.ProducerFactory getProducerFactory()>
<com.google.android.gms.common.logging.Logger: void d(java.lang.String,java.lang.Object[])>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferException: void <init>(com.google.android.gms.common.api.Status)>
<com.google.android.gms.safetynet.SafetyNetApi$SafeBrowsingResult: byte[] getState()>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.android.gms.internal.cloudmessaging.zzc: void <init>(com.google.android.gms.internal.cloudmessaging.zzd)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<com.azure.authenticator.storage.database.AppDatabase$Companion: com.azure.authenticator.storage.database.AppDatabase buildDatabase(android.content.Context)>
<ch.qos.logback.classic.spi.ILoggingEvent: java.lang.String getLoggerName()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzam zzz()>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildEventPackage(com.adjust.sdk.AdjustEvent,boolean)>
<com.facebook.react.bridge.CatalystInstanceImpl$2: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: boolean isUserInAllowList(java.lang.String)>
<com.google.android.material.shape.ShapePath: void addArc(float,float,float,float,float,float)>
<bolts.Task$4: void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable)>
<com.google.android.gms.maps.internal.zzg: void <init>(android.os.IBinder)>
<java.net.MalformedURLException: java.lang.String getMessage()>
<com.airbnb.lottie.utils.Utils: boolean isNetworkException(java.lang.Throwable)>
<com.google.android.datatransport.runtime.EventInternal: java.lang.Integer getCode()>
<com.google.android.gms.internal.measurement.zzha: void zzh(int,long)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.EntropyUseCase: int getEntropyMaxLength(java.util.List)>
<android.util.SparseBooleanArray: void delete(int)>
<com.google.android.material.datepicker.MaterialTextInputPicker$1: void <init>(com.google.android.material.datepicker.MaterialTextInputPicker)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver$$Lambda$1: void <init>()>
<com.azure.authenticator.jwe.JweEncryptionException: com.azure.authenticator.jwe.JweEncryptionException$JweEncryptionError getJweEncryptionError()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.CardUseCase access$8500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<ch.qos.logback.core.pattern.PostCompileProcessor: void process(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter)>
<com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<com.facebook.imagepipeline.listener.RequestListener: void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean)>
<com.microsoft.brooklyn.module.repository.AddressesRepository: void <init>(com.microsoft.brooklyn.module.sync.AddressesSDKConnector)>
<com.google.android.gms.internal.measurement.zzcc: com.google.android.gms.internal.measurement.zzhw zzb()>
<com.google.android.gms.common.zzb: void <init>()>
<com.facebook.react.uimanager.UIImplementation: void applyUpdatesRecursive(com.facebook.react.uimanager.ReactShadowNode,float,float)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketComplete$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<ch.qos.logback.core.net.SMTPAppenderBase: void setSmtpHost(java.lang.String)>
<androidx.appcompat.app.AppCompatActivity: void setContentView(int)>
<com.microsoft.ngc.aad.AadNgcSessionUseCase: com.microsoft.ngc.aad.NgcSession parseFromNotification(android.os.Bundle,com.microsoft.authenticator.core.telemetry.ITelemetryManager)>
<com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)>
<com.facebook.react.views.textinput.ReactTextInputShadowNode: void <init>(com.facebook.react.views.text.ReactTextViewManagerCallback)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: long access$500(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.google.android.gms.location.zzbg: void <init>()>
<com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)>
<java.util.logging.Logger: void setLevel(java.util.logging.Level)>
<com.facebook.imageutils.WebpUtil: android.util.Pair getVP8LDimension(java.io.InputStream)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zaa(android.content.Context)>
<com.google.android.gms.measurement.internal.zzfi: java.lang.Object zzn(com.google.android.gms.measurement.internal.zzfi)>
<com.facebook.imageutils.WebpUtil: android.util.Pair getVP8XDimension(java.io.InputStream)>
<com.google.android.gms.measurement.internal.zzjb: void zzo(com.google.android.gms.internal.measurement.zzs,java.lang.String,java.lang.String)>
<com.microsoft.ngc.aad.telemetry.entities.AadRemoteNgcTelemetryEvent: java.lang.String getEventName()>
<com.google.android.material.chip.ChipDrawable: void setTextAppearanceResource(int)>
<android.widget.ScrollView: void setFadingEdgeLength(int)>
<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options)>
<com.facebook.react.ReactDelegate: void loadApp()>
<com.google.android.gms.common.util.CrashUtils: boolean addDynamiteErrorToDropBox(android.content.Context,java.lang.Throwable)>
<com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void onDismiss(android.content.DialogInterface)>
<com.google.android.gms.measurement.internal.zzae: int zzd(java.lang.String)>
<com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getFragment(android.app.Activity)>
<com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_17_18$cp()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: boolean loadMore()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void zaf(android.os.Bundle,com.google.android.gms.dynamic.zah)>
<com.google.android.gms.common.api.internal.zacv: com.google.android.gms.common.api.ResultTransform zac(com.google.android.gms.common.api.internal.zacv)>
<com.google.android.gms.tasks.zzaa: boolean zzb(long,java.util.concurrent.TimeUnit)>
<com.google.android.gms.measurement.internal.zzib: void zzv(com.google.android.gms.measurement.internal.zzib,com.google.android.gms.measurement.internal.zzhu,com.google.android.gms.measurement.internal.zzhu,long,boolean,android.os.Bundle)>
<com.facebook.react.bridge.RetryableMountingLayerException: void <init>(java.lang.String)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder setAccountName(java.lang.String)>
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$ExpiredSession: com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$ExpiredSession copy(com.microsoft.ngc.aad.NgcSession)>
<com.google.android.gms.maps.SupportMapFragment$zza: void onExitAmbient()>
<com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()>
<com.google.android.gms.measurement.internal.zzdr: void <init>()>
<com.facebook.drawee.drawable.RoundedColorDrawable: void setRadii(float[])>
<android.os.MemoryFile: void close()>
<com.azure.authenticator.databinding.AddThirdPartyAccountBinding: com.azure.authenticator.databinding.AddThirdPartyAccountBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.crypto.tink.proto.Keyset: java.util.List getKeyList()>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1$1: void <init>(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance()>
<com.google.android.gms.common.server.response.SafeParcelResponse: void zaG(com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<com.facebook.drawee.drawable.AutoRotateDrawable: void scheduleNextFrame()>
<android.text.Layout: int getLineForOffset(int)>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.checkbox.ReactCheckBox)>
<com.google.android.material.internal.ParcelableSparseArray$1: com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<java.lang.String: byte[] getBytes()>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: void onDestroy()>
<com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzdi zzaj()>
<ch.qos.logback.core.rolling.helper.ArchiveRemover: void setMaxHistory(int)>
<ch.qos.logback.classic.sift.SiftAction: void <init>()>
<java.lang.Boolean: boolean parseBoolean(java.lang.String)>
<ch.qos.logback.core.util.AggregationType: void <init>(java.lang.String,int)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_20_21$1: void <init>(int,int)>
<com.facebook.systrace.SystraceMessage$Builder: com.facebook.systrace.SystraceMessage$Builder arg(java.lang.String,int)>
<com.facebook.react.uimanager.StateWrapper: void updateState(com.facebook.react.bridge.WritableMap)>
<com.google.android.gms.measurement.internal.zzhw: void <init>(com.google.android.gms.measurement.internal.zzib,com.google.android.gms.measurement.internal.zzhu,com.google.android.gms.measurement.internal.zzhu,long,boolean)>
<com.azure.authenticator.databinding.AddNewAadMfaAccountBinding: com.azure.authenticator.databinding.AddNewAadMfaAccountBinding bind(android.view.View)>
<androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)>
<com.google.android.gms.internal.location.zzb: void <init>(java.lang.String)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: void access$500(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.internal.measurement.zzhy: long zzc(int)>
<com.microsoft.authenticator.experimentation.businessLogic.FlightManager: void <init>(com.microsoft.authenticator.experimentation.businessLogic.TreatmentAssignmentService)>
<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String get(int)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String[] includedStrings(java.lang.String[],java.lang.String,java.lang.String)>
<com.google.android.gms.internal.auth.zzay: void <init>(java.lang.String,int,java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$600(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.measurement.internal.zzcb: void <init>()>
<com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory: com.google.android.datatransport.runtime.backends.CreationContextFactory_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.internal.measurement.zzck: com.google.android.gms.internal.measurement.zzck zzj()>
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$NoAccountFound: void <init>(com.microsoft.ngc.aad.NgcSession)>
<com.facebook.react.fabric.FabricUIManager: boolean dispatchMountItems()>
<com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: void <init>(java.lang.String,java.io.File)>
<com.google.android.material.snackbar.BaseTransientBottomBar$15: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler: void <init>(androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.registration.thirdparty.businessLogic.ActivationParametersParserThirdParty,com.microsoft.authenticator.registration.mfa.businessLogic.ActivationParametersParserAadMfa,com.microsoft.authenticator.registration.thirdparty.abstraction.QrCodeResultHandlerThirdPartyAccount,com.microsoft.authenticator.registration.mfa.abstraction.QrCodeResultHandlerAadMfaAccount)>
<android.os.RemoteException: java.lang.String getMessage()>
<com.google.android.gms.measurement.internal.zzhr: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.azure.authenticator.storage.database.DbAccount: com.azure.authenticator.storage.database.DbAccount copy(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity injectSharedDeviceModeActivity2(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity)>
<kotlin.math.MathKt: int roundToInt(float)>
<javax.net.ssl.SSLSocket: boolean isBound()>
<com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder: com.google.android.gms.maps.model.StreetViewPanoramaOrientation build()>
<ch.qos.logback.core.joran.event.BodyEvent: void append(java.lang.String)>
<com.evernote.android.job.JobRequest: int getJobId()>
<com.google.android.gms.measurement.internal.zzg: void zzq(long)>
<com.google.android.gms.common.api.internal.zaz: void <init>(com.google.android.gms.common.api.internal.zaaa,com.google.android.gms.tasks.TaskCompletionSource)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase access$getMsaAccountUseCase$p(com.azure.authenticator.ui.authentication.MsaAuthViewModel)>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zzh()>
<com.facebook.react.bridge.ReadableArray: int getInt(int)>
<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setControllerCancelTimeMs(long)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void computeNextCheck()>
<java.util.regex.Matcher: java.util.regex.Matcher reset()>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: java.util.List findFiles()>
<java.util.AbstractList: void add(int,java.lang.Object)>
<androidx.navigation.NavController: void addOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener)>
<com.google.android.gms.internal.location.zza: android.os.Parcel zzw(int,android.os.Parcel)>
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>
<com.google.android.gms.location.zzbm: void <init>()>
<com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)>
<com.facebook.react.views.text.ReactTextUpdate: float getPaddingLeft()>
<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<javax.net.ssl.SSLSocket: java.net.InetAddress getLocalAddress()>
<com.google.android.gms.internal.measurement.zzja: double zzD(java.lang.Object,long)>
<ch.qos.logback.classic.android.SQLiteAppender: ch.qos.logback.classic.db.names.DBNameResolver access$000(ch.qos.logback.classic.android.SQLiteAppender)>
<com.microsoft.authenticator.mfasdk.encryption.businessLogic.MfaPinEncryptionManager: void <init>(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeBytes(byte[])>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void <init>(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$getCachedPolicyForRichContext$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.maps.zzb: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMarkerClickListener)>
<com.azure.authenticator.databinding.BottomNavigationLayoutBinding: com.azure.authenticator.databinding.BottomNavigationLayoutBinding bind(android.view.View)>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void <init>()>
<com.google.android.datatransport.runtime.backends.BackendRequest: byte[] getExtras()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.Runnable access$502(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.Runnable)>
<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int)>
<androidx.fragment.app.Fragment: int getTargetRequestCode()>
<org.xml.sax.Locator: int getColumnNumber()>
<java.io.File: java.lang.String getPath()>
<com.google.android.gms.auth.api.signin.internal.zzn: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<java.math.BigDecimal: java.math.BigInteger unscaledValue()>
<com.adjust.sdk.PackageFactory: boolean readQueryString(java.lang.String,java.lang.String,java.util.Map,com.adjust.sdk.AdjustAttribution)>
<com.google.android.gms.common.internal.Preconditions: void checkNotMainThread(java.lang.String)>
<com.google.android.gms.maps.internal.zzbi: void <init>()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setMinTouchTargetSize(int)>
<java.lang.Thread: boolean isDaemon()>
<com.adjust.sdk.ActivityHandler$32: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.measurement.internal.zzjo: void <init>(com.google.android.gms.measurement.internal.zzjq)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean isBottomSheet(android.view.View)>
<okhttp3.WebSocketListener: void <init>()>
<com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyComplete$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback,com.microsoft.onlineid.UserKey)>
<com.azure.authenticator.storage.database.AccountTranslator_Factory: com.azure.authenticator.storage.database.AccountTranslator newInstance()>
<com.google.android.gms.common.internal.service.zai: void zae(com.google.android.gms.common.internal.TelemetryData)>
<com.google.android.gms.common.api.internal.zax: void zaq(com.google.android.gms.common.api.internal.zax,android.os.Bundle)>
<com.google.android.material.textfield.TextInputLayout: void addPlaceholderTextView()>
<com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder ignoreNullValues(boolean)>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzT()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<com.google.android.gms.measurement.internal.zzex: java.lang.Boolean zzf()>
<javax.net.ssl.SSLServerSocket: void setEnabledCipherSuites(java.lang.String[])>
<com.azure.authenticator.OnAppUpgradeReceiver: void setUpgradeInfoKeysInStorage(android.content.Context,android.content.Intent)>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>
<com.google.android.gms.measurement.internal.zzfj: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.google.android.gms.internal.location.zzbr: com.google.android.gms.internal.location.zzbs zzh(int,int)>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment: void <init>()>
<androidx.cardview.widget.CardView: void setRadius(float)>
<com.google.android.material.animation.DrawableAlphaProperty: void <init>()>
<android.graphics.drawable.InsetDrawable: void setDrawable(android.graphics.drawable.Drawable)>
<com.adjust.sdk.PackageFactory: com.adjust.sdk.ActivityPackage buildDeeplinkSdkClickPackage(android.net.Uri,long,com.adjust.sdk.ActivityState,com.adjust.sdk.AdjustConfig,com.adjust.sdk.DeviceInfo,com.adjust.sdk.SessionParameters)>
<com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzo(com.google.android.gms.internal.measurement.zzdt)>
<com.facebook.imagepipeline.memory.LruBucketsPoolBackend: void put(java.lang.Object)>
<android.view.KeyEvent: int getAction()>
<java.lang.Integer: int parseInt(java.lang.String)>
<com.google.android.gms.internal.measurement.zzcn: void <init>()>
<ch.qos.logback.classic.android.BasicLogcatConfigurator: void configure(ch.qos.logback.classic.LoggerContext)>
<com.facebook.react.bridge.ReactContextBaseJavaModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.classic.boolex.OnMarkerEvaluator: boolean evaluate(ch.qos.logback.classic.spi.ILoggingEvent)>
<android.widget.TextView: void setTextAlignment(int)>
<com.google.android.gms.internal.measurement.zzjp: java.lang.Comparable zza()>
<com.google.android.gms.internal.measurement.zzbu: java.util.List zzf()>
<java.util.TreeMap: void <init>()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setCompassEnabled(boolean)>
<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>
<com.google.android.material.datepicker.MaterialCalendar: int getDayHeight(android.content.Context)>
<com.google.android.gms.common.stats.WakeLockTracker: com.google.android.gms.common.stats.WakeLockTracker getInstance()>
<com.google.android.material.datepicker.TimeSource: java.util.Calendar now()>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.gms.maps.model.GroundOverlayOptions: com.google.android.gms.maps.model.LatLngBounds getBounds()>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: int getRotationAngle(android.media.ExifInterface)>
<com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void zzc(com.google.android.gms.internal.measurement.zzs,java.lang.String)>
<com.google.android.material.datepicker.CalendarConstraints: void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.facebook.react.ReactFragment: void <init>()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: android.graphics.drawable.Drawable getContentBackground()>
<com.azure.authenticator.storage.Storage: java.lang.String readAadFcmToken()>
<androidx.core.graphics.ColorUtils: double calculateLuminance(int)>
<com.google.android.material.animation.AnimationUtils: float lerp(float,float,float,float,float)>
<com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>
<java.lang.reflect.Modifier: boolean isPublic(int)>
<android.widget.Button: int[] onCreateDrawableState(int)>
<com.google.android.gms.internal.measurement.zzlr: com.google.android.gms.internal.measurement.zzls zzd()>
<com.google.android.gms.common.internal.zan: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.rpa.model.AutomationModelLoader automationModelLoader()>
<com.google.android.gms.internal.location.zzam: android.location.Location zzn(java.lang.String)>
<ch.qos.logback.core.status.WarnStatus: void <init>(java.lang.String,java.lang.Object,java.lang.Throwable)>
<ch.qos.logback.core.status.OnPrintStreamStatusListenerBase: void <init>()>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setInitialLifecycleState(com.facebook.react.common.LifecycleState)>
<android.os.HandlerThread: void <init>(java.lang.String,int)>
<com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void incrementRetries()>
<com.facebook.common.references.SharedReference: void <init>(java.lang.Object,com.facebook.common.references.ResourceReleaser)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: java.lang.String getShortenedUriString(android.net.Uri)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void generateBackupSilentlyAsync(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket)>
<com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()>
<com.google.android.gms.internal.measurement.zzhj: void <init>()>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setCode(java.lang.Integer)>
<com.google.android.gms.internal.auth-api.zzt: void <init>(com.google.android.gms.auth.api.credentials.Credential)>
<com.adjust.sdk.Util: java.lang.String sha256(java.lang.String)>
<com.azure.authenticator.storage.database.DbAccount: boolean isOtpEnabled()>
<java.security.Security: int insertProviderAt(java.security.Provider,int)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder setLogSessionId(java.lang.String)>
<com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory$InstanceHolder: com.google.android.datatransport.runtime.time.TimeModule_EventClockFactory access$000()>
<com.google.android.gms.common.api.internal.TaskApiCall: void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.internal.ClientSettings$Builder createClientSettingsBuilder()>
<java.io.FileOutputStream: void <init>(java.lang.String)>
<com.google.android.datatransport.runtime.backends.BackendRequest$Builder: com.google.android.datatransport.runtime.backends.BackendRequest$Builder setEvents(java.lang.Iterable)>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1: void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()>
<com.airbnb.lottie.LottieDrawable: java.util.List resolveKeyPath(com.airbnb.lottie.model.KeyPath)>
<com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: boolean hasTransformableRotationAngle(com.facebook.imagepipeline.image.CloseableStaticBitmap)>
<com.google.android.material.chip.Chip: android.graphics.Rect access$600()>
<com.google.common.collect.MapMakerInternalMap$InternalEntryHelper: com.google.common.collect.MapMakerInternalMap$Strength valueStrength()>
<com.google.android.gms.internal.measurement.zzkg: long zzk(java.lang.reflect.Field)>
<com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setRequestListeners(java.util.Set)>
<com.facebook.common.util.UriUtil: boolean isLocalContentUri(android.net.Uri)>
<com.google.android.gms.measurement.internal.zzgf: void zzx()>
<com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.gms.maps.internal.zzz: void onIndoorBuildingFocused()>
<android.view.ViewGroup: void announceForAccessibility(java.lang.CharSequence)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig build()>
<com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()>
<com.google.android.gms.internal.measurement.zzlo: com.google.android.gms.internal.measurement.zzlp zzf()>
<com.adjust.sdk.IPackageHandler: void updatePackages(com.adjust.sdk.SessionParameters)>
<com.google.android.material.navigation.NavigationBarView: void setItemIconSize(int)>
<android.view.View: boolean post(java.lang.Runnable)>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>
<android.graphics.Point: void <init>(int,int)>
<com.google.android.gms.internal.measurement.zzjk: int zzc(int,java.util.List,boolean)>
<java.lang.NumberFormatException: void printStackTrace()>
<android.view.ViewGroup: void setFocusable(boolean)>
<com.google.android.gms.common.internal.zav: com.google.android.gms.common.internal.IAccountAccessor zaa()>
<java.lang.String: int indexOf(int)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setHeightRatio(float)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnCircleClickListener(com.google.android.gms.maps.internal.zzv)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider faviconRefreshWorker_AssistedFactoryProvider()>
<com.google.android.material.chip.Chip: boolean hasCloseIcon()>
<com.google.android.gms.internal.location.zzaz: void zzB(com.google.android.gms.internal.location.zzba,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzai)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$showMfaFingerprintOptInDialog$1(android.content.DialogInterface,int)>
<com.google.android.gms.auth.api.signin.internal.zzi: com.google.android.gms.common.api.OptionalPendingResult zzc(com.google.android.gms.common.api.GoogleApiClient,android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions,boolean)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: java.util.List recordEvents(org.xml.sax.InputSource)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void ensureBeginTransaction(android.database.sqlite.SQLiteDatabase)>
<com.google.android.gms.internal.measurement.zzmp: boolean zzb()>
<com.google.android.gms.internal.measurement.zzcd: boolean zza()>
<android.view.View: boolean isAccessibilityFocused()>
<com.google.android.material.badge.BadgeDrawable: void updateCenterAndBounds()>
<com.github.amlcurran.showcaseview.ShowcaseView$2: void <init>(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.facebook.react.bridge.JavaOnlyArray: void <init>(java.util.List)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void validateWpjNgcAccount()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)>
<com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String getSavedRefreshToken()>
<com.facebook.yoga.YogaMeasureFunction: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)>
<com.azure.authenticator.authentication.msa.MsaAccountManager: android.content.Intent getUpsellNgcIntent(java.lang.String)>
<com.google.android.gms.internal.measurement.zzmv: void <init>()>
<android.app.Fragment: void onCreate(android.os.Bundle)>
<com.google.android.material.transformation.ExpandableBehavior: void <init>()>
<com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeCardviewLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.evernote.android.job.JobStorage$1: void <init>(com.evernote.android.job.JobStorage,java.lang.String)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void validate()>
<com.google.android.gms.gcm.Task$Builder: com.google.android.gms.gcm.Task$Builder setRequiresCharging(boolean)>
<com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.measurement.zzbr: java.lang.String zzz()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: com.microsoft.authenticator.core.telemetry.TelemetryManager getTelemetryManager$app_productionRelease()>
<com.facebook.react.views.textinput.ScrollWatcher: void onScrollChanged(int,int,int,int)>
<com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeUtf8JsNames()>
<com.google.android.gms.internal.maps.zzw: float getZIndex()>
<com.google.android.gms.common.server.response.zan: void <init>(int,java.util.ArrayList,java.lang.String)>
<com.google.android.gms.common.config.zzb: void <init>(java.lang.String,java.lang.Long)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleSetChildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.authentication.msa.ui.ActivityState: void setProgressDialogTag(java.lang.String)>
<android.database.CursorWindow: boolean isNull(int,int)>
<com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig)>
<com.facebook.react.common.DebugServerException: com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.server.response.FastParser: java.lang.String zaA(java.io.BufferedReader,char[],java.lang.StringBuilder,char[])>
<android.view.ViewGroup: void unscheduleDrawable(android.graphics.drawable.Drawable)>
<com.airbnb.lottie.LottieDrawable: int getFrame()>
<com.google.android.gms.internal.measurement.zzir: void <init>(java.util.Map)>
<ch.qos.logback.core.sift.SiftingAppenderBase: long getTimestamp(java.lang.Object)>
<com.google.android.gms.common.api.internal.zabu: boolean zak(com.google.android.gms.common.api.internal.SignInConnectionListener)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void onDataSourceFailed(com.facebook.datasource.DataSource)>
<com.google.android.gms.internal.common.zzn: void <init>(int,int)>
<com.google.android.gms.internal.measurement.zzbu: com.google.android.gms.internal.measurement.zzbw zzh(int)>
<androidx.navigation.fragment.NavHostFragment: androidx.navigation.NavController findNavController(androidx.fragment.app.Fragment)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String)>
<com.azure.authenticator.databinding.AccountFullscreenInfoFragmentBinding: com.azure.authenticator.databinding.AccountFullscreenInfoFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.maps.zzac: boolean isVisible()>
<com.facebook.react.animated.NativeAnimatedNodesManager: void updateNodes(java.util.List)>
<com.google.android.gms.maps.model.PolylineOptions: float getZIndex()>
<com.airbnb.lottie.animation.content.ContentGroup: void setContents(java.util.List,java.util.List)>
<com.google.android.gms.internal.maps.zzw: boolean isClickable()>
<com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>
<android.text.TextPaint: void setLetterSpacing(float)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegment(java.lang.String,int,int)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient: void <init>(android.content.Context)>
<com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)>
<com.azure.authenticator.ui.action.ShowAllowBackgroundDataUsageAction: void <init>(com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<com.google.android.gms.internal.auth-api.zzas: void <init>()>
<ch.qos.logback.classic.sift.AppenderFactoryUsingJoran: void <init>(java.util.List,java.lang.String,java.util.Map)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int access$102(com.google.android.material.bottomsheet.BottomSheetBehavior,int)>
<android.widget.GridView: void invalidate()>
<ch.qos.logback.core.joran.action.NewRuleAction: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider accountsListViewModelProvider()>
<com.google.android.gms.signin.internal.zaa: void <init>(int,int,android.content.Intent)>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1: void <init>(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver,com.facebook.react.modules.network.ForwardingCookieHandler)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: boolean computeIsIntermediateResultExpected()>
<com.azure.authenticator.ui.msa.'-$$Lambda$RemoteMsaNgcUpsellFragment$TekHG-n-xXlkQz6i9YqbA50imQs': void <init>(com.azure.authenticator.ui.msa.RemoteMsaNgcUpsellFragment,boolean,java.lang.String)>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: void <init>(com.microsoft.authenticator.core.telemetry.TelemetryManager,java.util.HashMap,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void dispatchDependentViewsChanged(android.view.View)>
<com.google.android.gms.internal.base.zai: android.graphics.drawable.Drawable zab()>
<com.google.android.gms.internal.measurement.zzjg: void <init>(java.lang.Object[],int)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)>
<com.facebook.common.memory.PooledByteBufferFactory: com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream)>
<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer newInstance(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)>
<com.facebook.imagepipeline.producers.LocalAssetFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.AssetManager)>
<com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[])>
<com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory: void <init>(com.microsoft.authenticator.registration.thirdparty.abstraction.QrCodeResultHandlerThirdPartyAccount,com.microsoft.authenticator.registration.mfa.abstraction.QrCodeResultHandlerAadMfaAccount,com.microsoft.authenticator.registration.msa.abstraction.QrCodeResultHandlerMsaAccount,com.microsoft.authenticator.registration.vc.abstraction.QrCodeHandlerVc)>
<com.google.common.io.ByteSource$ByteArrayByteSource: void <init>(byte[],int,int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void <init>()>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
<com.google.android.gms.common.GooglePlayServicesRepairableException: int getConnectionStatusCode()>
<ch.qos.logback.classic.joran.action.ConfigurationAction: void <init>()>
<android.widget.TextView: int getPaddingTop()>
<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$onCreateView$$inlined$apply$lambda$4: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<android.net.NetworkInfo: boolean isRoaming()>
<java.util.Map: java.lang.Object get(java.lang.Object)>
<com.facebook.react.uimanager.UIImplementation: void addUIBlock(com.facebook.react.uimanager.UIBlock)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistrationCancel$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<androidx.preference.PreferenceFragmentCompat: void onDestroyView()>
<com.facebook.drawee.drawable.DrawableUtils: void setDrawableProperties(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.DrawableProperties)>
<com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1: void disposeResult(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.internal.base.zai: void zac(int)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>
<com.google.android.gms.location.zzac: void <init>(com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.measurement.zzkg: int zzl(java.lang.Class)>
<com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)>
<android.widget.LinearLayout: boolean isEnabled()>
<com.facebook.react.views.image.ImageLoadEvent: void <init>(int,int,java.lang.String)>
<com.facebook.imagepipeline.producers.JobScheduler$2: void <init>(com.facebook.imagepipeline.producers.JobScheduler)>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.LottieComposition getComposition()>
<com.microsoft.onlineid.sdk.extension.SessionManager: void approveRequest(com.microsoft.onlineid.sdk.extension.Session,com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType)>
<android.widget.LinearLayout: android.view.autofill.AutofillId getAutofillId()>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: java.io.InputStream openBitmapInputStream()>
<com.google.android.gms.internal.measurement.zzjx: void <init>(int,int[],java.lang.Object[],boolean)>
<com.google.android.gms.auth.api.identity.zzf: android.os.Bundle toBundle()>
<com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder: void configure(com.azure.authenticator.accounts.GenericAccount,android.graphics.Bitmap)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$11: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker create(android.content.Context,androidx.work.WorkerParameters)>
<java.util.Stack: boolean empty()>
<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIcon(android.graphics.drawable.Drawable)>
<com.google.android.gms.internal.maps.zzac: float getTransparency()>
<com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>
<com.google.crypto.tink.KeyTemplate$OutputPrefixType: void <init>(java.lang.String,int)>
<com.google.android.material.bottomappbar.BottomAppBar$SavedState$1: com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)>
<com.adjust.sdk.PackageHandler$1: void <init>(com.adjust.sdk.PackageHandler)>
<java.util.Map: boolean isEmpty()>
<com.google.android.gms.internal.base.zag: void <init>()>
<kotlinx.coroutines.DelayKt: java.lang.Object delay(long,kotlin.coroutines.Continuation)>
<com.google.android.gms.auth.api.signin.internal.zzi: android.content.Intent zzc(android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinSTEP(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>
<com.evernote.android.job.v21.JobProxy21: void <init>(android.content.Context,java.lang.String)>
<com.google.android.material.internal.CheckableImageButton: boolean isChecked()>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest create()>
<com.google.android.material.resources.MaterialAttributes: boolean resolveBoolean(android.content.Context,int,boolean)>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback$1: void <init>(com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback)>
<ch.qos.logback.classic.net.SocketReceiver: ch.qos.logback.core.net.SocketConnector newConnector(java.net.InetAddress,int,int,int)>
<com.azure.authenticator.jwe.AlgorithmEnum: java.lang.String getAlgorithm()>
<com.adjust.sdk.IActivityHandler: java.lang.String getBasePath()>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher none()>
<com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback: void onTranslationChanged()>
<com.google.android.gms.common.api.internal.zaaz: void zac(int,boolean)>
<com.google.android.gms.auth.api.credentials.zzg: void <init>()>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>
<com.google.android.material.tabs.TabLayout$Tab: void reset()>
<com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)>
<com.facebook.soloader.ApplicationSoSource: boolean checkAndMaybeUpdate()>
<com.facebook.react.modules.core.JavaScriptTimerManager: void callTimers(com.facebook.react.bridge.WritableArray)>
<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: java.lang.String getSharedDeviceRegistraionPrefillUpnAppRestriction()>
<com.airbnb.lottie.animation.keyframe.GradientColorKeyframeAnimation: void <init>(java.util.List)>
<com.facebook.cache.disk.DiskCacheConfig: void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.SchedulingModule_WorkSchedulerFactory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<org.xml.sax.Locator: int getLineNumber()>
<android.app.AlertDialog: android.view.Window getWindow()>
<com.google.android.gms.common.api.internal.zas: void <init>(com.google.android.gms.common.api.Api,boolean)>
<com.google.android.gms.internal.firebase_messaging.zzm: void <init>()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(char[],int,int)>
<com.google.android.gms.internal.maps.zzh: com.google.android.gms.dynamic.IObjectWrapper zzk()>
<com.google.android.gms.gcm.GcmNetworkManager: void cancelTask(java.lang.String,java.lang.Class)>
<com.airbnb.lottie.LottieAnimationView$4: void <init>(com.airbnb.lottie.LottieAnimationView,int)>
<com.google.android.gms.common.api.internal.zabx: void <init>(com.google.android.gms.common.api.internal.GoogleApiManager,int,com.google.android.gms.common.api.internal.ApiKey,long,java.lang.String,java.lang.String)>
<androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>
<com.google.android.gms.internal.measurement.zzbu: com.google.android.gms.internal.measurement.zzbu zzi()>
<android.widget.FrameLayout: void onMeasure(int,int)>
<android.widget.ImageButton: void requestLayout()>
<ch.qos.logback.core.rolling.helper.DateParser: java.util.Date parseDate(java.lang.String)>
<com.google.android.gms.common.internal.zav: boolean zad()>
<android.widget.FrameLayout: android.view.WindowInsets getRootWindowInsets()>
<com.google.android.gms.internal.measurement.zzng: void <init>()>
<android.widget.CheckedTextView: void setCompoundDrawablePadding(int)>
<ch.qos.logback.core.OutputStreamAppender: void encoderInit()>
<com.google.android.gms.common.api.internal.zaba: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zab(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.adjust.sdk.AdjustInstance: boolean isEnabled()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void handleGraphPolicyResult(com.microsoft.authenticator.authentication.aad.entities.AadNgcGraphPolicyResult)>
<com.google.android.gms.internal.measurement.zzhn: void <init>()>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<com.google.android.gms.common.api.internal.zaar: com.google.android.gms.common.internal.ClientSettings zar(com.google.android.gms.common.api.internal.zaar)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener: void reportViewInvisible(long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.abstraction.AutoBackupWorker autoBackupWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.github.amlcurran.showcaseview.ShowcaseView: void tintButton(int,boolean)>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectMfaSdkHostAppDelegate(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate)>
<com.facebook.react.modules.network.NetworkingModule$4: void doInBackgroundGuarded(java.lang.Void[])>
<com.facebook.debug.holder.Printer: void logMessage(com.facebook.debug.debugoverlay.model.DebugOverlayTag,java.lang.String)>
<com.facebook.react.views.art.ARTVirtualNode: void setupMatrix()>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(byte[])>
<ch.qos.logback.core.joran.util.PropertySetter: void setProperty(ch.qos.logback.core.joran.util.PropertyDescriptor,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdh: void <init>()>
<com.facebook.react.modules.toast.ToastModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.classic.net.server.RemoteAppenderServerRunner: boolean configureClient(ch.qos.logback.classic.net.server.RemoteAppenderClient)>
<com.facebook.cache.disk.DynamicDefaultDiskStorage: void deleteOldStorageIfNecessary()>
<com.google.android.gms.common.api.internal.zaba: void zaa()>
<com.google.android.gms.common.internal.zaz: android.view.View zaa(android.content.Context,int,int)>
<ch.qos.logback.core.util.EnvUtil: boolean isAndroidOS()>
<com.google.android.gms.common.api.internal.zzd: int zzb(com.google.android.gms.common.api.internal.zzd)>
<com.google.android.gms.internal.measurement.zzhf: void zzc(java.lang.Object)>
<android.os.Parcel: android.os.Parcel obtain()>
<com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void startSlideOutAnimation(int)>
<java.io.PrintWriter: void print(java.lang.String)>
<com.google.android.gms.internal.measurement.zzcp: boolean zzi()>
<android.graphics.Paint: void <init>(android.graphics.Paint)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String)>
<com.facebook.react.views.text.ReactTextAnchorViewManager: void <init>()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<java.util.Calendar: void setTime(java.util.Date)>
<android.widget.HorizontalScrollView: void onDetachedFromWindow()>
<com.google.android.material.shape.MaterialShapeDrawable: float getElevation()>
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<ch.qos.logback.classic.net.ReceiverBase: boolean shouldStart()>
<com.google.android.gms.maps.MapView$zza: void onExitAmbient()>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>
<com.google.android.gms.measurement.internal.zzhm: void <init>(com.google.android.gms.measurement.internal.zzhn,com.google.android.gms.measurement.internal.zzgz)>
<com.facebook.hermes.reactexecutor.HermesExecutorFactory: void <init>()>
<com.google.common.collect.MapMakerInternalMap: boolean isEmpty()>
<com.google.android.a.a: android.os.Parcel b(android.os.Parcel)>
<com.microsoft.onlineid.Ticket: int hashCode()>
<com.adjust.sdk.ActivityHandler: void startFirstSessionI()>
<com.microsoft.did.feature.cardflow.presentationlogic.WebViewAuthenticationViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.soloader.UnpackingSoSource$DsoManifest: com.facebook.soloader.UnpackingSoSource$DsoManifest read(java.io.DataInput)>
<com.airbnb.lottie.parser.moshi.JsonReader: com.airbnb.lottie.parser.moshi.JsonReader$Token peek()>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)>
<com.google.android.gms.internal.measurement.zzfk: void <init>()>
<com.google.android.material.chip.ChipDrawable: void setChipEndPaddingResource(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$5: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<ch.qos.logback.core.pattern.parser.Compiler: void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map)>
<com.google.android.material.textfield.TextInputLayout: int[] mergeIconState(com.google.android.material.internal.CheckableImageButton)>
<com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.cardflow.viewlogic.RequirementsFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.gms.measurement.internal.zzw: int zza()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistrationCancel$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,kotlin.coroutines.Continuation)>
<com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)>
<java.util.BitSet: boolean get(int)>
<android.app.Application: void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>
<com.facebook.react.views.textinput.ReactEditText: boolean sameTextForSpan(android.text.Editable,android.text.SpannableStringBuilder,int,int)>
<com.facebook.imagepipeline.producers.BaseConsumer: boolean statusHasAnyFlag(int,int)>
<ch.qos.logback.core.rolling.RolloverFailure: void <init>(java.lang.String,java.lang.Throwable)>
<androidx.appcompat.widget.Toolbar: void inflateMenu(int)>
<com.google.android.gms.internal.measurement.zzcf: boolean zzf()>
<com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzbw: int zzb()>
<ch.qos.logback.core.net.ssl.SSLConfigurable: void setWantClientAuth(boolean)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: boolean setMapStyle(com.google.android.gms.maps.model.MapStyleOptions)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)>
<com.google.android.gms.measurement.internal.zzea: int zzm()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseName(int,int,int)>
<com.facebook.react.ReactNativeHost: java.lang.String getBundleAssetName()>
<com.google.android.gms.internal.measurement.zzjx: void zzh(int,java.lang.Object)>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectStorage(com.azure.authenticator.OnAppUpgradeReceiver,com.azure.authenticator.storage.Storage)>
<com.google.android.gms.internal.measurement.zzfg: java.lang.Object zze()>
<com.google.android.gms.internal.auth.zzx: void zzd()>
<com.google.android.gms.common.internal.service.zab: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel mainActivityViewModel()>
<com.google.android.gms.common.server.response.FastParser: java.math.BigInteger zag(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzfl zzC(android.content.Context,com.google.android.gms.internal.measurement.zzy,java.lang.Long)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter: int zaa()>
<com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>
<android.widget.ScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<com.google.android.gms.measurement.internal.zzai: java.util.List zzr(java.lang.String,java.lang.String[])>
<com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)>
<android.view.ViewGroup: android.content.Context getContext()>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback: void maybePost()>
<com.facebook.react.views.art.ARTSurfaceViewShadowNode: void markChildrenUpdatesSeen(com.facebook.react.uimanager.ReactShadowNode)>
<ch.qos.logback.core.joran.action.IncludeAction: void <init>()>
<androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()>
<com.google.android.gms.common.api.internal.zax: boolean zaC(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.gms.measurement.internal.zzhn: void zzy(java.lang.String,java.lang.String,java.lang.Object,boolean)>
<com.google.android.gms.maps.internal.zzaq: void <init>()>
<com.facebook.react.ReactInstanceManager: void onHostResume(android.app.Activity)>
<ch.qos.logback.core.joran.spi.RuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>
<com.google.android.material.timepicker.RadialViewGroup: void setRadius(int)>
<com.google.crypto.tink.proto.KeyData: java.lang.String getTypeUrl()>
<com.google.android.gms.internal.measurement.zzlf: boolean zzb()>
<com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)>
<ch.qos.logback.core.util.StatusPrinter: void buildStrFromStatusList(java.lang.StringBuilder,java.util.List)>
<java.lang.RuntimePermission: void <init>(java.lang.String)>
<android.app.Fragment: boolean isInLayout()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider addressAddEditViewModelProvider()>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>
<android.widget.ImageView: android.content.Context getContext()>
<com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)>
<com.google.android.material.bottomappbar.BottomAppBar: android.view.View access$3100(com.google.android.material.bottomappbar.BottomAppBar)>
<com.facebook.yoga.YogaNodeJNIBase: void <init>(com.facebook.yoga.YogaConfig)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$3: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextQuotedValue(okio.ByteString)>
<ch.qos.logback.classic.net.server.RemoteAppenderClient: void setLoggerContext(ch.qos.logback.classic.LoggerContext)>
<com.google.android.gms.internal.base.zap: void <init>(android.os.Looper,android.os.Handler$Callback)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: void <init>(com.facebook.common.references.CloseableReference,int)>
<java.util.LinkedHashSet: boolean add(java.lang.Object)>
<com.microsoft.authenticator.workaccount.businesslogic.Broker: boolean isAuthenticatorBroker(android.content.Context)>
<com.google.android.material.internal.CollapsingTextHelper: void interpolateBounds(float)>
<com.google.android.gms.measurement.internal.zzef: void <init>(com.google.android.gms.measurement.internal.zzei,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<java.io.FileDescriptor: void sync()>
<com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings$Builder setMapper(com.google.android.gms.common.api.internal.StatusExceptionMapper)>
<com.adjust.sdk.Reflection: java.util.Map getOaidParameters(android.content.Context,com.adjust.sdk.ILogger)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner$1: void <init>(ch.qos.logback.core.net.server.ConcurrentServerRunner)>
<com.evernote.android.job.v14.JobProxy14: void plantOneOffInexact(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)>
<com.azure.authenticator.storage.database.AppDatabase$Companion: void closeDatabase()>
<com.adjust.sdk.PackageBuilder: java.util.Map getClickParameters(java.lang.String)>
<ch.qos.logback.core.rolling.helper.SizeAndTimeBasedArchiveRemover: void <init>(ch.qos.logback.core.rolling.helper.FileNamePattern,ch.qos.logback.core.rolling.helper.RollingCalendar,ch.qos.logback.core.rolling.helper.FileProvider)>
<okhttp3.Response$Builder: okhttp3.Response build()>
<java.lang.Double: int intValue()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenRefreshWorker access$900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.common.api.internal.zax: boolean zaj()>
<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)>
<com.facebook.react.modules.core.ReactChoreographer: void access$100(com.facebook.react.modules.core.ReactChoreographer)>
<ch.qos.logback.classic.joran.action.ConfigurationAction: void processScanAttrib(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes)>
<com.evernote.android.job.JobApi: com.evernote.android.job.JobApi getDefault(android.content.Context)>
<com.airbnb.lottie.LottieTask: void notifyFailureListeners(java.lang.Throwable)>
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setEventCleanUpAge(long)>
<com.google.android.gms.measurement.internal.zzfc: int zzk(java.lang.String,java.lang.String)>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)>
<com.github.amlcurran.showcaseview.ShowcaseView: void access$200(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.google.android.gms.internal.location.zzb: boolean zza(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>
<com.google.android.gms.internal.measurement.zzbv: java.lang.String zza()>
<com.airbnb.lottie.LottieComposition: void setPerformanceTrackingEnabled(boolean)>
<com.facebook.drawee.drawable.TransformCallback: void getRootBounds(android.graphics.RectF)>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$$special$$inlined$viewModels$2: void <init>(androidx.activity.ComponentActivity)>
<com.google.android.gms.internal.measurement.zzbr: com.google.android.gms.internal.measurement.zzp zzQ(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzp)>
<com.facebook.react.uimanager.events.EventDispatcher: java.lang.Object access$1000(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.material.tabs.TabLayout: int getTabMinWidth()>
<com.google.android.gms.internal.measurement.zzcx: void zzn(com.google.android.gms.internal.measurement.zzcx,boolean)>
<com.google.android.material.tabs.TabLayout$AdapterChangeListener: void setAutoRefresh(boolean)>
<com.facebook.react.bridge.CatalystInstanceImpl$4: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.google.android.material.shape.ShapeAppearanceModel: boolean isRoundRect(android.graphics.RectF)>
<com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getRippleColor()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMyLocationClickListener(com.google.android.gms.maps.internal.zzaz)>
<com.google.android.gms.maps.internal.zzbb: void zza(com.google.android.gms.maps.model.PointOfInterest)>
<com.google.android.gms.auth.api.credentials.CredentialRequest$Builder: java.lang.String zzi(com.google.android.gms.auth.api.credentials.CredentialRequest$Builder)>
<com.google.android.gms.common.GoogleApiAvailability: void zag(android.app.Activity,android.app.Dialog,java.lang.String,android.content.DialogInterface$OnCancelListener)>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)>
<com.adjust.sdk.ActivityPackage: long getClickTimeInSeconds()>
<com.google.android.material.datepicker.YearGridAdapter: void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhy zzbD(com.google.android.gms.internal.measurement.zzhy)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.internal.measurement.zzkg: void zzs(java.lang.Object,long,java.lang.Object)>
<com.azure.authenticator.ui.action.CreateBackupAction: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider importPasswordsViewModelProvider()>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzfi zzj()>
<com.microsoft.authenticator.msa.entities.GetMsaEncryptionKeyResult$Error: com.microsoft.onlineid.exception.AuthenticationException getException()>
<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<android.widget.ImageButton: void setTranslationY(float)>
<com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()>
<com.facebook.soloader.UnpackingSoSource$InputDsoIterator: boolean hasNext()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$Flow: void <init>(java.lang.String,int)>
<ch.qos.logback.core.rolling.RollingPolicyBase: void stop()>
<android.os.Handler: boolean post(java.lang.Runnable)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getMccMnc()>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP: void computeCurrentPeriodsHighestCounterValue(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter: int measureContentWidth$app_productionRelease()>
<android.util.SparseBooleanArray: boolean get(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<ch.qos.logback.core.helpers.Transform: java.lang.String escapeTags(java.lang.String)>
<com.google.android.material.appbar.ViewOffsetBehavior: int getTopAndBottomOffset()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void <init>()>
<androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintLayout)>
<com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>
<com.google.android.gms.internal.measurement.zzlu: boolean zzc()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<com.google.android.gms.common.api.internal.zai: void <init>(int)>
<com.facebook.common.executors.StatefulRunnable: void cancel()>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)>
<java.util.Arrays: long[] copyOf(long[],int)>
<com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzQ()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: java.lang.Object trySilentlyRefreshPolicy(com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.parser.JsonUtils: android.graphics.PointF jsonObjectToPoint(com.airbnb.lottie.parser.moshi.JsonReader,float)>
<com.facebook.react.views.art.ARTSurfaceViewShadowNode: void drawOutput(boolean)>
<com.google.android.gms.measurement.internal.zzkd: void zzO(com.google.android.gms.measurement.internal.zzkg,com.google.android.gms.measurement.internal.zzp)>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>
<com.facebook.react.views.art.ARTGroupShadowNode: void <init>()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$20: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeController: void onProgressUpdateInternal(java.lang.String,com.facebook.datasource.DataSource,float,boolean)>
<com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$Builder: void <init>()>
<com.google.android.gms.internal.measurement.zzgg: java.lang.String zzg(int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer: java.util.ArrayList deserializeIterableFromIntentExtra(android.content.Intent,java.lang.String,android.os.Parcelable$Creator)>
<com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment: float getFabCradleRoundedCornerRadius()>
<com.airbnb.lottie.model.animatable.AnimatableTransform: void <init>(com.airbnb.lottie.model.animatable.AnimatablePathValue,com.airbnb.lottie.model.animatable.AnimatableValue,com.airbnb.lottie.model.animatable.AnimatableScaleValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableIntegerValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<android.util.JsonWriter: android.util.JsonWriter value(boolean)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$Companion: void <init>()>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void <init>(okhttp3.Call$Factory,java.util.concurrent.Executor,boolean)>
<com.facebook.react.views.scroll.OnScrollDispatchHelper: boolean onScrollChanged(int,int)>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void setStyle(java.lang.String)>
<com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.api.internal.ApiKey zax(com.google.android.gms.common.api.internal.zabl)>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyError$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.maps.zzt: com.google.android.gms.dynamic.IObjectWrapper zzk()>
<ch.qos.logback.core.subst.Parser: void <init>(java.util.List)>
<com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.api.internal.TaskApiCall$Builder builder()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$$special$$inlined$viewModels$2: void <init>(androidx.activity.ComponentActivity)>
<com.azure.authenticator.databinding.AccountFullscreenSettingsFragmentBinding: void <init>(android.widget.LinearLayout,android.widget.Button,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView)>
<com.facebook.react.views.viewpager.PageScrollEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: int access$200(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover)>
<com.azure.authenticator.Hilt_OnAppUpgradeReceiver: void inject(android.content.Context)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter: void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object)>
<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)>
<com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.core.FileCacheFactory getFileCacheFactory()>
<com.facebook.react.animated.TransformAnimatedNode$TransformConfig: void <init>(com.facebook.react.animated.TransformAnimatedNode)>
<com.azure.authenticator.databinding.ImportPasswordLoaderFragmentBinding: com.azure.authenticator.databinding.ImportPasswordLoaderFragmentBinding bind(android.view.View)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManagerDelegate,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)>
<com.google.android.material.internal.TextDrawableHelper$1: void <init>(com.google.android.material.internal.TextDrawableHelper)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.lang.String zab()>
<com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task removeLocationUpdates(com.google.android.gms.location.LocationCallback)>
<com.adjust.sdk.SdkClickHandler: void <init>(com.adjust.sdk.IActivityHandler,boolean)>
<android.widget.CheckedTextView: void setTextColor(android.content.res.ColorStateList)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder)>
<com.google.android.gms.internal.measurement.zzhi: com.google.android.gms.internal.measurement.zzko zzb()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()>
<com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View)>
<com.microsoft.did.feature.cardinfo.presentationlogic.CardInfoViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.common.util.zzc: java.lang.String zza(java.lang.String)>
<android.graphics.PointF: boolean equals(float,float)>
<java.lang.String: boolean equals(java.lang.Object)>
<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig: java.util.List getScansToDecode()>
<android.widget.FrameLayout: void setSystemUiVisibility(int)>
<com.google.crypto.tink.KeyManagerImpl: void <init>(com.google.crypto.tink.KeyTypeManager,java.lang.Class)>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zzb(java.lang.String)>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: int compare(android.view.View,android.view.View)>
<android.net.Uri: boolean equals(java.lang.Object)>
<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface: void setDrawerLockMode(android.view.View,java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(java.lang.String,boolean)>
<com.google.android.gms.internal.measurement.zzne: boolean zzb()>
<com.azure.authenticator.storage.MfaSdkAccountTranslator: void <init>()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_8_9$1: void <init>(int,int)>
<com.google.android.gms.internal.measurement.zzla: long zzE()>
<com.google.android.gms.auth.api.signin.internal.zzk: void <init>(com.google.android.gms.auth.api.signin.internal.zzh)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int)>
<com.azure.authenticator.notifications.msa.MsaProtectionNotification_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)>
<com.google.android.gms.measurement.internal.zzjb: boolean zzh()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions: void <init>(boolean,java.lang.String,java.lang.String,boolean,java.lang.String,java.util.List)>
<com.google.android.gms.measurement.internal.zzg: long zzQ()>
<com.google.android.material.shape.ShapePath$ShadowCompatOperation: void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: com.facebook.react.bridge.WritableMap createKeyboardEventPayload(double,double,double,double)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isNativeCodeDisabled()>
<com.google.crypto.tink.Util: com.google.crypto.tink.proto.KeysetInfo getKeysetInfo(com.google.crypto.tink.proto.Keyset)>
<java.lang.Long: int numberOfLeadingZeros(long)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult: void <init>(boolean,com.azure.authenticator.accounts.AccountType,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum)>
<com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)>
<com.facebook.react.common.SystemClock: long uptimeMillis()>
<ch.qos.logback.core.spi.AbstractComponentTracker: boolean isComponentStale(java.lang.Object)>
<ch.qos.logback.core.net.server.ServerSocketListener: java.lang.String socketAddressToString(java.net.SocketAddress)>
<ch.qos.logback.classic.net.server.HardenedLoggingEventInputStream: java.util.List getWhilelist()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.vienna.sdk.AutomationRunner access$10200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.module.favicon.PicassoFaviconManager picassoFaviconManager()>
<com.facebook.yoga.YogaNode: void setPosition(com.facebook.yoga.YogaEdge,float)>
<java.io.IOException: void <init>(java.lang.String)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onLowMemory()>
<com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace: void beginSection(java.lang.String)>
<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.evernote.android.job.JobApi: boolean supportsExecutionWindow()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: android.app.job.JobInfo$Builder configureJob(android.app.job.JobInfo$Builder,com.google.android.datatransport.Priority,long,int)>
<com.google.android.gms.common.zze: void <init>(byte[])>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.lang.String getPassword()>
<com.facebook.drawee.controller.AbstractDraweeController$1: void <init>(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,boolean)>
<com.airbnb.lottie.model.content.ShapeData: android.graphics.PointF getInitialPoint()>
<com.microsoft.onlineid.internal.log.Logger: void setLogInstance(com.microsoft.onlineid.internal.log.LogInstance)>
<com.adjust.sdk.AdjustInstance: void sendReferrer(java.lang.String,android.content.Context)>
<ch.qos.logback.classic.spi.EventArgUtil: java.lang.Throwable extractThrowable(java.lang.Object[])>
<com.google.android.gms.location.ActivityTransitionEvent: long getElapsedRealTimeNanos()>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>
<com.google.android.gms.internal.measurement.zzht: java.lang.String zzj(int)>
<com.google.android.material.chip.Chip: int[] createCloseIconDrawableState()>
<com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()>
<com.google.android.material.textfield.ClearTextEndIconDelegate$3: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<ch.qos.logback.core.subst.Token: void <init>(ch.qos.logback.core.subst.Token$Type,java.lang.String)>
<com.facebook.drawee.drawable.FadeDrawable: void endBatchMode()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void reactScrollTo(int,int)>
<com.google.android.gms.measurement.internal.zzdz: void zze(com.google.android.gms.measurement.internal.zzkg,com.google.android.gms.measurement.internal.zzp)>
<android.widget.TextView: int getCurrentTextColor()>
<ch.qos.logback.core.util.LocationUtil: java.net.URL urlForResource(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<com.google.android.gms.common.data.DataBuffer: android.os.Bundle getMetadata()>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.common.ImageDecodeOptions build()>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>
<com.google.android.gms.internal.maps.zzz: void setJointType(int)>
<com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum: com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum[] values()>
<com.google.android.gms.internal.auth.zzad: void <init>(int,java.lang.String)>
<com.google.android.gms.measurement.internal.zzkf: boolean zzq(long,long)>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>
<com.adjust.sdk.ActivityPackage: void <init>(com.adjust.sdk.ActivityKind)>
<com.azure.authenticator.MainNavDirections: com.azure.authenticator.MainNavDirections$ToWelcomeFragment toWelcomeFragment(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.common.executors.ScheduledFutureImpl: void <init>(android.os.Handler,java.util.concurrent.Callable)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginPercent(int,float)>
<com.google.android.gms.internal.measurement.zzig: int size()>
<androidx.room.RoomDatabase$Callback: void onDestructiveMigration(androidx.sqlite.db.SupportSQLiteDatabase)>
<com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)>
<com.azure.authenticator.storage.database.DbAccount: void setId(java.lang.Long)>
<sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()>
<com.airbnb.lottie.model.layer.Layer: com.airbnb.lottie.model.animatable.AnimatableFloatValue getTimeRemapping()>
<java.net.MalformedURLException: void printStackTrace()>
<com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)>
<com.google.android.gms.common.api.internal.zach: void <init>(com.google.android.gms.common.api.internal.RegistrationMethods$Builder,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.common.Feature[],boolean,int)>
<com.adjust.sdk.Reflection: java.util.Map getImeiParameters(android.content.Context,com.adjust.sdk.ILogger)>
<com.azure.authenticator.databinding.AadPhoneSignInSetupBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView,android.widget.Button,android.widget.Button,androidx.constraintlayout.widget.ConstraintLayout,android.widget.LinearLayout,android.widget.TextView,android.view.View,android.widget.TextView,android.widget.ImageView,android.widget.LinearLayout,android.widget.TextView,androidx.constraintlayout.widget.Guideline,android.widget.TextView,android.widget.ImageView,android.widget.LinearLayout,android.widget.TextView,android.widget.ScrollView)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isMemoryCacheEnabled()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDirty()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean maybeDirty()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_19_20$1: void <init>(int,int)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: ch.qos.logback.core.rolling.helper.RollingCalendar access$100(ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover)>
<com.facebook.react.uimanager.ReactShadowNode: float getLayoutHeight()>
<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.ads_identifier.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: java.lang.String getProducerName()>
<com.google.android.gms.measurement.internal.zzbo: void <init>()>
<android.content.DialogInterface$OnClickListener: void onClick(android.content.DialogInterface,int)>
<com.google.android.gms.internal.measurement.zzda: java.util.List zza()>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasure(int,com.facebook.react.bridge.Callback)>
<com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity$onCreate$$inlined$apply$lambda$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity)>
<com.facebook.react.modules.sound.SoundManagerModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>
<com.evernote.android.job.JobManager: java.util.Set getAllJobsForTag(java.lang.String)>
<com.google.common.collect.SingletonImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager$Companion: void initialize(boolean,com.microsoft.authenticator.core.telemetry.entities.OptionalTelemetryEnabledStatusListener)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaViewDelegate: void onLowMemory()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void access$startWorkplaceJoin(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<com.adjust.sdk.ActivityHandler: void delayStartI()>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setProgressViewOffset(android.view.View,float)>
<com.facebook.drawee.drawable.RoundedCornersDrawable: void updatePath()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: boolean shouldAnimateVisibilityChange()>
<com.facebook.imagepipeline.producers.NetworkFetchProducer: void <init>(com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.NetworkFetcher)>
<ch.qos.logback.core.net.ssl.SSLConfigurableSocket: void <init>(javax.net.ssl.SSLSocket)>
<com.google.android.gms.common.ErrorDialogFragment: void <init>()>
<com.azure.authenticator.ui.dialog.StoreRatingTask: boolean checkInstallTime(java.util.Date)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2: void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)>
<com.google.android.material.stateful.ExtendableSavedState: void <init>(android.os.Parcelable)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method)>
<com.facebook.imagepipeline.common.RotationOptions: com.facebook.imagepipeline.common.RotationOptions autoRotateAtRenderTime()>
<com.airbnb.lottie.parser.moshi.JsonReader: void <init>()>
<com.adjust.sdk.ActivityHandler: void pauseSendingI()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.InlineSuggestionUseCase inlineSuggestionUseCase()>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.SignUpFormDatasetsUseCase: void <init>(com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations,com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager)>
<android.view.ViewGroup: void setId(int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketError$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$validateWpjNgcAccount$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,kotlin.coroutines.Continuation)>
<com.google.android.gms.measurement.internal.zzbm: void <init>()>
<com.google.android.gms.common.internal.LibraryVersion: void <init>()>
<com.google.android.gms.internal.measurement.zzja: void zzS(com.google.android.gms.internal.measurement.zzha,int,java.lang.Object,int)>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectAccountWriter(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.azure.authenticator.storage.database.AccountWriter)>
<androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWithTask(com.google.android.gms.tasks.Continuation)>
<com.facebook.react.views.imagehelper.ImageSource: boolean isResource()>
<com.google.android.material.snackbar.SnackbarManager: void <init>()>
<com.google.android.gms.measurement.internal.zzg: java.lang.String zzj()>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showServiceDowngradeDialog$serviceDowngradeDialogBuilder$1: void <init>()>
<ch.qos.logback.core.util.CloseUtil: void closeQuietly(java.io.Closeable)>
<com.google.android.gms.common.api.internal.zaba: void zah(int)>
<com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()>
<android.widget.HorizontalScrollView: int getChildCount()>
<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate: void setRole(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole,android.content.Context)>
<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month current()>
<com.google.android.gms.dynamite.zzk: void <init>(com.google.android.gms.dynamite.zzb)>
<android.util.SparseBooleanArray: int keyAt(int)>
<com.azure.authenticator.logging.ExternalLogger$Companion: int getBrokerLogLevel(com.microsoft.identity.common.java.logging.Logger$LogLevel)>
<com.google.android.gms.measurement.internal.zzdz: byte[] zzj(com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode)>
<com.microsoft.authenticator.registration.thirdparty.businessLogic.AddThirdPartyAccountUseCase: void <init>(com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.storage.database.AccountStorage)>
<com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()>
<com.google.android.gms.measurement.internal.zzaf: java.lang.Boolean zzp(char)>
<com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getOsBuild()>
<com.google.android.gms.internal.measurement.zzbw: java.util.List zzd()>
<com.azure.authenticator.storage.ImageStorage: void <init>(android.content.Context)>
<com.facebook.drawee.debug.listener.ImageLoadingTimeListener: void onFinalImageSet(long)>
<com.fasterxml.jackson.core.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>
<com.google.android.material.textfield.TextInputLayout: boolean isHelperTextEnabled()>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: java.util.zip.ZipFile access$200(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker)>
<com.google.crypto.tink.KeyTemplate: void <init>(com.google.crypto.tink.proto.KeyTemplate)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void checkLenient()>
<android.util.JsonReader: boolean hasNext()>
<com.google.android.gms.internal.measurement.zzfg: void zzc()>
<java.lang.InterruptedException: void <init>()>
<com.adjust.sdk.IActivityHandler: void setAskingAttribution(boolean)>
<java.util.Enumeration: java.lang.Object nextElement()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.RestoreUseCase restoreUseCase()>
<com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig access$2000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.microsoft.brooklyn.module.autofill.request.SaveRequestProcessor: void <init>(com.microsoft.brooklyn.module.autofill.request.AutofillReqParsingUseCase,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.module.autofill.response.businesslogic.SaveResponseUseCase)>
<com.azure.authenticator.ui.fragment.main.ViewLogsFragment$onCreateView$1: void <init>(com.azure.authenticator.ui.fragment.main.ViewLogsFragment,androidx.fragment.app.FragmentActivity)>
<com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener: void onCameraMoveStarted(int)>
<androidx.fragment.app.Fragment: void setMenuVisibility(boolean)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzj(int)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)>
<okhttp3.Request: okhttp3.HttpUrl url()>
<androidx.lifecycle.Observer: void onChanged(java.lang.Object)>
<com.google.android.material.tabs.TabLayout$TabView: void updateOrientation()>
<com.airbnb.lottie.model.KeyPath: boolean isContainer(java.lang.String)>
<androidx.work.Data: java.lang.String getString(java.lang.String)>
<com.google.common.base.Equivalence: void <init>()>
<ch.qos.logback.core.AsyncAppenderBase: void <init>()>
<com.google.android.gms.internal.measurement.zzc: java.util.HashMap zzf(android.os.Parcel)>
<ch.qos.logback.core.net.SMTPAppenderBase: int getSmtpPort()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.azure.authenticator.accounts.MsaAccount: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<com.google.crypto.tink.KeyManager: com.google.crypto.tink.proto.KeyData newKeyData(com.google.crypto.tink.shaded.protobuf.ByteString)>
<com.facebook.common.logging.LoggingDelegate: boolean isLoggable(int)>
<com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection fromInt(int)>
<com.facebook.yoga.YogaConstants: boolean isUndefined(float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase approveAadNgcSessionUseCase()>
<com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()>
<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$retrieveBackupAndMsaKey$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaAddAccountFlowTelemetry: void <init>(com.microsoft.authenticator.core.telemetry.TelemetryManager,android.os.Bundle)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.floatingactionbutton.MotionStrategy access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)>
<com.azure.authenticator.jwe.CryptoHelper: byte[] getCipherTextWithAes(byte[],byte[],byte[])>
<com.google.android.gms.common.providers.PooledExecutorsProvider$PooledExecutorFactory: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>
<com.google.android.gms.internal.measurement.zzdj: boolean zzQ()>
<com.adjust.sdk.ActivityHandler: void access$2400(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.internal.auth-api.zzx: void zzc(com.google.android.gms.internal.auth-api.zzv,com.google.android.gms.auth.api.credentials.CredentialRequest)>
<com.fasterxml.jackson.core.io.NumberOutput: int calcLongStrLength(long)>
<com.google.android.material.internal.CollapsingTextHelper: float getExpansionFraction()>
<com.facebook.drawee.view.DraweeHolder: void setController(com.facebook.drawee.interfaces.DraweeController)>
<ch.qos.logback.core.spi.ContextAwareImpl: void <init>(ch.qos.logback.core.Context,java.lang.Object)>
<com.google.android.material.transformation.FabTransformationBehavior: void <init>()>
<com.google.android.gms.maps.zzm: void <init>(com.google.android.gms.maps.zzl,com.google.android.gms.maps.internal.zzah)>
<com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.RippleDrawable getRippleDrawable(android.content.Context,com.facebook.react.bridge.ReadableMap)>
<android.os.StatFs: void restat(java.lang.String)>
<java.util.concurrent.BlockingDeque: java.lang.Object takeFirst()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object)>
<com.google.android.material.floatingactionbutton.BorderDrawable: android.graphics.RectF getBoundsAsRectF()>
<com.google.android.gms.internal.measurement.zzdf: void zzq(com.google.android.gms.internal.measurement.zzdf,java.lang.String)>
<com.google.common.collect.MapMakerInternalMap$HashIterator: void <init>(com.google.common.collect.MapMakerInternalMap)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToSignInFragment: void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$1)>
<android.widget.ImageView: void onMeasure(int,int)>
<com.azure.authenticator.jwe.JweEncryptionManager: byte[] getEncryptionKey(byte[])>
<com.google.common.io.BaseEncoding$Alphabet: boolean matches(char)>
<com.azure.authenticator.logging.VerifiableCredentialTelemetryEventWrapper: void <init>(java.lang.String,boolean,com.microsoft.authenticator.core.telemetry.entities.FilteringStatus)>
<com.google.android.gms.internal.measurement.zzla: long zzw()>
<com.google.android.gms.internal.common.zzq: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzlq: void <init>()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyError$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback,com.microsoft.onlineid.exception.AuthenticationException)>
<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>
<bolts.UnobservedErrorNotifier: void setObserved()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$17: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$(java.util.Map)>
<com.google.android.material.navigation.NavigationBarItemView: void setIcon(android.graphics.drawable.Drawable)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: void <init>(okio.BufferedSource)>
<com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams: com.facebook.imagepipeline.memory.PoolParams get()>
<android.widget.LinearLayout: android.graphics.drawable.Drawable getBackground()>
<java.io.Reader: void close()>
<com.facebook.soloader.SoLoader: java.io.File unpackLibraryAndDependencies(java.lang.String)>
<com.google.android.material.timepicker.RadialViewGroup: boolean shouldSkipView(android.view.View)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_2_7()>
<com.azure.authenticator.accounts.GenericAccount: boolean isMfa()>
<com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier: com.facebook.imagepipeline.cache.MemoryCacheParams get()>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: java.util.Map getExtraMapOnSuccess(java.lang.Object)>
<com.facebook.jni.HybridData: void <init>()>
<com.facebook.drawee.drawable.AutoRotateDrawable: void <init>(android.graphics.drawable.Drawable,int)>
<com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher: void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<android.icu.text.DateFormat: android.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,java.util.Locale)>
<androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)>
<com.google.android.gms.internal.measurement.zzja: int zzQ(int,int)>
<com.facebook.react.uimanager.UIImplementation: void onHostPause()>
<com.google.android.gms.internal.measurement.zziz: java.lang.String zza(com.google.android.gms.internal.measurement.zzix,java.lang.String)>
<com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)>
<androidx.work.Data: int getInt(java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzhs: java.lang.Object zzbz(com.google.android.gms.internal.measurement.zzix,java.lang.String,java.lang.Object[])>
<ch.qos.logback.core.pattern.parser.TokenStream: void escape(java.lang.String,java.lang.StringBuffer)>
<com.google.android.gms.common.wrappers.Wrappers: void <init>()>
<com.fasterxml.jackson.core.util.TextBuffer: char[] getCurrentSegment()>
<com.google.common.collect.ImmutableList$SerializedForm: void <init>(java.lang.Object[])>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeightPercent(float)>
<android.graphics.Rect: void <init>(android.graphics.Rect)>
<android.view.View: int getBottom()>
<com.google.android.gms.measurement.internal.zzfi: void zzg()>
<com.evernote.android.job.v26.JobProxy26: void <init>(android.content.Context)>
<com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: void <init>()>
<com.adjust.sdk.ActivityHandler$InternalState: boolean isInDelayedStart()>
<ch.qos.logback.core.AsyncAppenderBase$Worker: void <init>(ch.qos.logback.core.AsyncAppenderBase)>
<com.azure.authenticator.PhoneFactorApplication$Companion: void <init>()>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildInsertSQL(ch.qos.logback.classic.db.names.DBNameResolver)>
<com.adjust.sdk.scheduler.TimerCycle: void suspend()>
<javax.mail.internet.MimeMessage: void setFrom(javax.mail.Address)>
<java.lang.Class: java.lang.Class getComponentType()>
<android.widget.ImageButton: android.content.Context getContext()>
<ch.qos.logback.classic.android.LogcatAppender: void setEncoder(ch.qos.logback.classic.encoder.PatternLayoutEncoder)>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void logCustomEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.util.Map)>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>
<com.google.android.material.shape.ShapePath$PathLineOperation: float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String number(int)>
<com.google.android.gms.common.util.DeviceProperties: boolean isSidewinder(android.content.Context)>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzg zzs(java.lang.String)>
<com.facebook.react.uimanager.events.EventDispatcher$DispatchEventsRunnable: void <init>(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.gms.common.internal.zak: boolean zaj(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.google.android.gms.internal.location.zzam: void zzu(com.google.android.gms.internal.location.zzl)>
<com.google.android.gms.measurement.internal.zzg: void zzN()>
<java.lang.AssertionError: void <init>(int)>
<com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog getErrorDialog(android.app.Activity,int,int,android.content.DialogInterface$OnCancelListener)>
<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionTiming getTiming(java.lang.String)>
<com.google.android.gms.internal.measurement.zzja: int zzg(java.lang.Object,byte[],int,int,int,com.google.android.gms.internal.measurement.zzge)>
<androidx.cardview.widget.CardView: int getContentPaddingRight()>
<com.google.android.gms.common.api.internal.zap: void zaf(com.google.android.gms.common.ConnectionResult,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketComplete$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.microsoft.onlineid.Ticket)>
<com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.common.BytesRange getResponseBytesRange()>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: void <init>(java.lang.String,com.facebook.react.bridge.WritableMap,long,boolean,com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy)>
<com.google.android.gms.measurement.internal.zzew: void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.Priority getRequestPriority()>
<com.azure.authenticator.databinding.FragmentMainBinding: com.azure.authenticator.databinding.FragmentMainBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: java.util.Map getExtraMap(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int)>
<com.google.android.material.internal.TextWatcherAdapter: void <init>()>
<com.facebook.systrace.Systrace: boolean isTracing(long)>
<com.google.android.gms.common.api.ApiException: com.google.android.gms.common.api.Status getStatus()>
<com.microsoft.workaccount.authenticatorservice.KeyMigrationBroadcaster: void <init>()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegment(int)>
<com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInUnregistrationViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.material.chip.ChipDrawable: void setChipStrokeColorResource(int)>
<com.google.android.gms.measurement.internal.zzhn: void zzv(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void <init>(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.address.AddressAddEditViewModel addressAddEditViewModel()>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$qJi-aPPdivgRV-S-wXhkIf-Nfs8': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.azure.authenticator.logging.ExternalLogger$Companion: void v(java.lang.String)>
<com.microsoft.authenticator.msa.entities.GetMsaEncryptionKeyResult$Success: void <init>(com.microsoft.onlineid.UserKey)>
<android.os.Message: void setData(android.os.Bundle)>
<android.text.TextPaint: void setLinearText(boolean)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getTotalNativeNodeContributionToParent()>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<com.google.android.material.datepicker.PickerFragment: void <init>()>
<com.google.android.gms.internal.maps.zzw: void setClickable(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$6: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.google.android.gms.common.internal.BaseGmsClient: android.os.Bundle getConnectionHint()>
<com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase: java.lang.Object restoreBackup(com.microsoft.onlineid.UserKey,com.microsoft.authenticator.backup.entities.CloudBackup,kotlin.coroutines.Continuation)>
<android.util.DisplayMetrics: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider restoreViewModelProvider()>
<com.microsoft.authenticator.workaccount.businesslogic.Broker: int getCompanyPortalVersionCode(android.content.Context)>
<androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.google.android.gms.internal.measurement.zzjx: com.google.android.gms.internal.measurement.zzjx zza()>
<com.facebook.react.modules.network.ForwardingCookieHandler: java.util.Map get(java.net.URI,java.util.Map)>
<com.google.android.gms.internal.measurement.zzkz: long zzk()>
<okio.ByteString: int size()>
<com.google.android.material.datepicker.CalendarConstraints$Builder: void <init>(com.google.android.material.datepicker.CalendarConstraints)>
<com.google.android.gms.internal.measurement.zzgy: void <init>(java.lang.Throwable)>
<com.google.android.gms.internal.common.zzh: void <init>(android.os.Looper,android.os.Handler$Callback)>
<com.google.android.gms.common.ConnectionResult: java.lang.String getErrorMessage()>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object)>
<java.util.Collection: boolean add(java.lang.Object)>
<com.microsoft.authenticator.msa.entities.ValidateMsaAccountResult$UserCancelled: void <init>(android.os.Bundle)>
<android.util.SparseArray: int size()>
<com.adjust.sdk.ActivityHandler: void writeActivityStateI()>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: com.google.android.gms.common.zza zzc(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>
<com.azure.authenticator.ui.backup.BackupFlowActivity_MembersInjector: void injectMembers(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.facebook.common.executors.HandlerExecutorServiceImpl: java.util.concurrent.ScheduledFuture submit(java.lang.Runnable)>
<com.google.android.gms.measurement.internal.zzgf: void zzy()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<com.google.android.material.appbar.AppBarLayout$Behavior: void <init>()>
<com.google.android.gms.common.data.DataHolder$Builder: java.lang.String[] zab(com.google.android.gms.common.data.DataHolder$Builder)>
<ch.qos.logback.core.rolling.helper.DateParser: java.util.Date parseFilename(java.lang.String)>
<com.evernote.android.job.util.JobCat: void d(java.lang.String,java.lang.Object[])>
<javax.net.ssl.SSLSocket: void setReceiveBufferSize(int)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onStop()>
<com.facebook.react.modules.network.ProgressRequestBody: com.facebook.react.modules.network.ProgressListener access$000(com.facebook.react.modules.network.ProgressRequestBody)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float)>
<android.graphics.RectF: void union(android.graphics.RectF)>
<com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzo zzf(android.content.Context)>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.uimanager.ReactShadowNode: float getLayoutY()>
<com.google.android.material.datepicker.MonthAdapter: int dayToPosition(int)>
<com.google.common.base.CaseFormat: java.lang.String access$100(java.lang.String)>
<com.facebook.react.modules.network.ResponseUtil: void onRequestSuccess(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)>
<com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zam(com.google.android.gms.common.api.internal.BasePendingResult)>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment: com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment$ICompletion access$getCompletionCallback$p(com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment)>
<android.graphics.Matrix: boolean isIdentity()>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzN()>
<com.microsoft.authenticator.core.common.Utils: boolean checkLastExecutionTimeBeforeScheduling(long,long,java.util.concurrent.TimeUnit)>
<com.google.android.gms.internal.measurement.zzgl: void <init>(com.google.android.gms.internal.measurement.zzgi)>
<com.google.android.gms.internal.measurement.zzbt: int zzd()>
<com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)>
<com.google.android.material.datepicker.MaterialCalendarGridView: int horizontalMidPoint(android.view.View)>
<com.google.common.base.MoreObjects$ToStringHelper: void <init>(java.lang.String,com.google.common.base.MoreObjects$1)>
<com.google.android.gms.internal.measurement.zzv: int zze()>
<com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource: com.facebook.datasource.DataSource getDataSource(int)>
<android.text.Layout: float getLineRight(int)>
<com.facebook.cache.common.CacheKeyUtil: java.lang.String getFirstResourceId(com.facebook.cache.common.CacheKey)>
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.feature.notifications.NotificationService notificationService()>
<com.google.android.gms.maps.MapFragment$zza: void <init>(android.app.Fragment,com.google.android.gms.maps.internal.IMapFragmentDelegate)>
<com.google.android.gms.common.api.Api$Client: void disconnect(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzgq: com.google.android.gms.internal.measurement.zzgs zze(int,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
<com.adjust.sdk.Reflection: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[])>
<com.azure.authenticator.databinding.FragmentCredentialListBinding: com.azure.authenticator.databinding.FragmentCredentialListBinding bind(android.view.View)>
<com.facebook.imagepipeline.memory.BucketMap: java.lang.Object acquire(int)>
<com.google.android.gms.measurement.internal.zzkf: boolean zzy(com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.resources.MaterialResources: int getIndexWithValue(android.content.res.TypedArray,int,int)>
<com.facebook.react.views.text.ReactTextUpdate: int getJustificationMode()>
<com.microsoft.authenticator.graphclient.entities.EnabledState: com.microsoft.authenticator.graphclient.entities.EnabledState[] values()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.backuprestore.presentationlogic.RestoreViewModel restoreViewModel()>
<com.azure.authenticator.ui.msa.RemoteMsaNgcSuccessFragment$ICompletion: void onDismissSuccessFragment()>
<com.facebook.drawee.backends.pipeline.DraweeConfig: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener getImagePerfDataListener()>
<com.facebook.drawee.interfaces.DraweeController: void onDetach()>
<com.google.android.datatransport.runtime.time.TimeModule_UptimeClockFactory: void <init>()>
<com.facebook.react.modules.websocket.WebSocketModule$1: void <init>(com.facebook.react.modules.websocket.WebSocketModule,int)>
<android.widget.Button: void setTransformationMethod(android.text.method.TransformationMethod)>
<com.azure.authenticator.accounts.MsaAccount: java.lang.String getCid()>
<com.facebook.react.bridge.ReactNoCrashSoftException: void <init>(java.lang.String,java.lang.Throwable)>
<com.facebook.react.uimanager.events.Event: void init(int)>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void <init>(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.GoogleApiClient)>
<java.lang.Character: char charValue()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions: boolean isSupported()>
<com.google.android.gms.common.images.ImageManager: java.util.Map zae(com.google.android.gms.common.images.ImageManager)>
<android.view.ViewGroup: float getTranslationX()>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$ViewModelC: void <init>()>
<com.google.android.gms.measurement.internal.zzjt: com.google.android.gms.measurement.internal.zzal zzf()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$ViewC build()>
<com.google.android.gms.common.api.internal.TaskApiCall: void <init>()>
<com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException: void <init>(java.lang.String)>
<com.google.android.datatransport.cct.internal.BatchedLogRequest: com.google.android.datatransport.cct.internal.BatchedLogRequest create(java.util.List)>
<com.facebook.react.uimanager.UIImplementation: void assertViewExists(int,java.lang.String)>
<android.widget.ScrollView: void scrollTo(int,int)>
<android.widget.ScrollView: void setVerticalScrollBarEnabled(boolean)>
<androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.dynamite.zzj: void <init>()>
<javax.mail.PasswordAuthentication: void <init>(java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.DialogEditAccountNameBinding: com.azure.authenticator.databinding.DialogEditAccountNameBinding bind(android.view.View)>
<com.facebook.imagepipeline.image.CloseableImage: boolean isClosed()>
<com.google.android.gms.internal.measurement.zzke: void <init>(sun.misc.Unsafe)>
<java.io.File: boolean setExecutable(boolean,boolean)>
<com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)>
<android.animation.ValueAnimator: float getAnimatedFraction()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)>
<sun.misc.Unsafe: java.lang.Object allocateInstance(java.lang.Class)>
<com.azure.authenticator.databinding.FrxPrivacyConsentBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.internal.location.zzav: void zzj(android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.google.android.gms.internal.measurement.zzjk: int zzy(int,java.util.List)>
<com.google.android.gms.internal.measurement.zzgf: int zzi(com.google.android.gms.internal.measurement.zzji,byte[],int,int,com.google.android.gms.internal.measurement.zzge)>
<javax.net.ssl.SSLSocket: java.lang.String[] getEnabledProtocols()>
<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>
<com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesConnection: void <init>()>
<com.facebook.react.views.textinput.ReactEditText: void maybeSetSelection(int,int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.vc.abstraction.QrCodeHandlerVc qrCodeHandlerVc()>
<java.security.SecureRandom: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void onViewDetachedFromWindow(com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder)>
<com.google.android.gms.internal.measurement.zzhs: void <init>()>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String getAccountDetails(android.content.Context)>
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<com.google.android.gms.measurement.internal.zzcu: void <init>()>
<com.google.android.material.snackbar.BaseTransientBottomBar$10: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.location.LocationSettingsStates: boolean isGpsUsable()>
<com.google.android.gms.measurement.internal.zzg: void zzai(java.lang.Boolean)>
<android.widget.CompoundButton: void measure(int,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketCancel$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.react.devsupport.JSCHeapCapture: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.textfield.TextInputLayout: void setEditTextBoxBackground()>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase: com.microsoft.authenticator.authentication.msa.entities.MsaSession deserializeFromString(java.lang.String)>
<com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()>
<com.google.android.material.internal.ViewUtils: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<com.google.android.gms.common.internal.zzo: void <init>(com.google.android.gms.common.internal.zzq,com.google.android.gms.common.internal.zzm)>
<android.widget.HorizontalScrollView: android.view.ViewParent getParent()>
<android.net.Uri: java.lang.String getScheme()>
<com.google.android.datatransport.runtime.backends.CreationContext: void <init>()>
<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>
<com.azure.authenticator.storage.database.AccountDao: void deleteAccount(long)>
<com.google.android.gms.common.util.ArrayUtils: void writeArray(java.lang.StringBuilder,float[])>
<com.azure.authenticator.accounts.AadAccount: void <init>(java.lang.String,java.lang.String,com.azure.authenticator.accounts.AccountCapability,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: androidx.lifecycle.LiveData getEnterpriseControlResponseObject()>
<com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()>
<com.google.android.gms.dynamite.zzo: com.google.android.gms.dynamic.IObjectWrapper zzk(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setShadowPaddingEnabled(boolean)>
<com.airbnb.lottie.parser.moshi.JsonUtf8Reader: java.lang.String nextName()>
<ch.qos.logback.classic.android.SQLiteAppender: void bindLoggingEvent(android.database.sqlite.SQLiteStatement,ch.qos.logback.classic.spi.ILoggingEvent)>
<com.microsoft.authenticator.commonuilibrary.util.NotificationHelper: void <init>(android.content.Context)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: void setPassword(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void configureToolbar(boolean)>
<com.google.android.gms.measurement.internal.zzaf: boolean zzh()>
<com.airbnb.lottie.model.content.ShapeStroke: java.util.List getLineDashPattern()>
<com.airbnb.lottie.parser.LayerParser: com.airbnb.lottie.model.layer.Layer parse(com.airbnb.lottie.LottieComposition)>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result createFailedResult(com.google.android.gms.common.api.Status)>
<com.google.android.material.bottomappbar.BottomAppBar: void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setRequestTimeMs(long)>
<com.google.android.gms.auth.account.WorkAccountApi$AddAccountResult: android.accounts.Account getAccount()>
<com.google.android.gms.common.api.Api$Client: com.google.android.gms.common.Feature[] getAvailableFeatures()>
<com.facebook.react.modules.camera.ImageEditingManager: boolean access$200(java.lang.String)>
<com.google.android.gms.cloudmessaging.zzc: void <init>()>
<android.widget.HorizontalScrollView: int getScrollX()>
<com.google.android.material.navigation.NavigationBarPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhz zzbE()>
<android.app.Activity: android.content.res.Resources getResources()>
<com.google.android.gms.internal.measurement.zzld: boolean zza()>
<com.google.android.material.appbar.AppBarLayout: void clearLiftOnScrollTargetView()>
<com.google.android.gms.auth.api.accounttransfer.zza: void <init>()>
<com.google.android.gms.tasks.zzf: void onFailure(java.lang.Exception)>
<com.google.android.gms.measurement.internal.zzkk: int zzo(java.lang.String)>
<android.widget.EditText: android.graphics.drawable.Drawable getTextCursorDrawable()>
<com.google.android.gms.gcm.GcmNetworkManager: com.google.android.gms.gcm.GcmNetworkManager getInstance(android.content.Context)>
<com.google.android.gms.common.internal.zzm: int zzc()>
<com.google.android.gms.internal.measurement.zzkh: boolean zzE(java.lang.Class)>
<com.azure.authenticator.databinding.ImportPasswordLoaderFragmentBinding: void <init>(android.widget.RelativeLayout,android.widget.TextView,android.widget.ProgressBar,android.widget.RelativeLayout)>
<ch.qos.logback.core.spi.AppenderAttachableImpl: void addAppender(ch.qos.logback.core.Appender)>
<com.google.android.material.resources.TextAppearance: void <init>(android.content.Context,int)>
<com.adjust.sdk.ActivityHandler: com.adjust.sdk.ActivityHandler getInstance(com.adjust.sdk.AdjustConfig)>
<com.google.android.gms.internal.measurement.zzlu: boolean zzb()>
<android.widget.ImageButton: void setPadding(int,int,int,int)>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean isEndMarkerRead()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.facebook.react.modules.camera.ImageEditingManager$CropTask: void <init>(com.facebook.react.bridge.ReactContext,java.lang.String,int,int,int,int,boolean,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback,com.facebook.react.modules.camera.ImageEditingManager$1)>
<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level toLevel(java.lang.String)>
<com.google.android.gms.internal.location.zzam: android.location.Location zzm()>
<com.google.android.material.datepicker.MonthAdapter: void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView)>
<com.fasterxml.jackson.core.base.ParserBase: void _handleEOF()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<kotlin.Pair: java.lang.Object getSecond()>
<bolts.Task: boolean isCompleted()>
<com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.LinearLayoutManager getLayoutManager()>
<java.util.concurrent.FutureTask: boolean isDone()>
<com.facebook.imagepipeline.memory.Bucket: java.lang.Object pop()>
<com.google.android.material.transformation.FabTransformationBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment self()>
<com.airbnb.lottie.model.animatable.AnimatableIntegerValue: void <init>(java.util.List)>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildInsertExceptionSQL(ch.qos.logback.classic.db.names.DBNameResolver)>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: com.facebook.react.bridge.WritableMap getData()>
<com.microsoft.authenticator.core.common.Utils: java.util.Date getCurrentTime()>
<com.facebook.react.modules.appearance.AppearanceModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)>
<com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeWrapWithRoundedOverlayColor(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams)>
<java.util.BitSet: int cardinality()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void tweenIndicatorPosition(android.view.View,android.view.View,float)>
<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity$initialize$2: void onChanged(com.microsoft.authenticator.authentication.msa.entities.MsaOperationResult)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.image.EncodedImage getCloneWithRotationApplied(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.airbnb.lottie.model.content.ShapeData: java.util.List getCurves()>
<com.facebook.react.views.text.TextLayoutManager: void buildSpannableFromFragment(android.content.Context,com.facebook.react.bridge.ReadableArray,android.text.SpannableStringBuilder,java.util.List)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeTypedList(android.os.Parcel,int,java.util.List,boolean)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: int getMaxBitmapSize()>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: void <init>(com.facebook.react.views.viewpager.ReactViewPager,com.facebook.react.views.viewpager.ReactViewPager$1)>
<com.google.android.gms.internal.measurement.zzbm: void <init>(com.google.android.gms.internal.measurement.zzbq,android.app.Activity)>
<com.google.common.net.InternetDomainName: boolean validatePart(java.lang.String,boolean)>
<java.io.File: java.lang.String[] list()>
<androidx.fragment.app.Fragment: void onPause()>
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>
<com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: void <init>()>
<com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()>
<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View)>
<com.google.android.gms.tasks.zzj: com.google.android.gms.tasks.OnCompleteListener zzd(com.google.android.gms.tasks.zzj)>
<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>
<com.azure.authenticator.storage.database.DbAccount: void setMfaPinEncryptionKeyAlias(java.lang.String)>
<java.util.Stack: boolean isEmpty()>
<ch.qos.logback.core.joran.util.PropertySetter: void introspect()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _handleLongCustomEscape(byte[],int,int,byte[],int)>
<com.google.android.gms.location.zzal: void <init>(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.maps.model.PolylineOptions: boolean isGeodesic()>
<com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)>
<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$2: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.common.dropdown.businesslogic.UsernameDropdownUseCase usernameDropdownUseCase()>
<com.fasterxml.jackson.core.io.InputDecorator: java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader)>
<com.google.android.material.shape.ShapePath$PathArcOperation: float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter: java.lang.Object zac(java.lang.Object)>
<com.facebook.common.file.FileUtils$CreateDirectoryException: void <init>(java.lang.String)>
<android.os.Vibrator: void vibrate(long)>
<com.adjust.sdk.ActivityHandler$11: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.EventResponseData)>
<com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int)>
<com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)>
<com.google.android.material.timepicker.TimePickerView: void updateToggleConstraints()>
<com.google.android.gms.internal.measurement.zzcd: boolean zzc()>
<com.google.android.material.card.MaterialCardViewHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>
<com.facebook.drawee.view.DraweeHolder: boolean onTouchEvent(android.view.MotionEvent)>
<java.io.InputStream: int read(byte[])>
<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>
<com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>
<com.google.android.gms.common.server.response.FastJsonResponse: void setIntegerInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSessionUseCase mfaSessionUseCase()>
<com.facebook.react.views.switchview.ReactSwitchManager: void <init>()>
<com.google.android.gms.internal.base.zab: void <init>(java.lang.String)>
<java.util.List: java.lang.Object set(int,java.lang.Object)>
<com.airbnb.lottie.parser.FontCharacterParser: com.airbnb.lottie.model.FontCharacter parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.gms.maps.model.CircleOptions: int getFillColor()>
<com.google.android.gms.measurement.internal.zzg: void zzm(java.lang.String)>
<com.facebook.imagepipeline.producers.ProducerContextCallbacks: void onCancellationRequested()>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String toRegex(boolean,boolean)>
<com.google.common.base.CaseFormat$4: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onLowMemory()>
<com.google.android.gms.internal.measurement.zzp: void beginAdUnitExposure(java.lang.String,long)>
<com.google.android.material.internal.ViewUtils: void requestApplyInsetsWhenAttached(android.view.View)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMapLoadedCallback(com.google.android.gms.maps.internal.zzal)>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean isSwipeDismissable()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$4: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.facebook.react.views.art.ARTVirtualNode: void draw(android.graphics.Canvas,android.graphics.Paint,float)>
<com.google.android.material.textfield.IndicatorViewController: boolean isErrorEnabled()>
<ch.qos.logback.core.util.PropertySetterException: void <init>(java.lang.String)>
<com.facebook.react.views.picker.ReactPickerManager: void setSelected(com.facebook.react.views.picker.ReactPicker,int)>
<com.google.android.gms.common.internal.zap: void <init>(com.google.android.gms.common.api.PendingResult,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.internal.PendingResultUtil$ResultConverter,com.google.android.gms.common.internal.zas)>
<com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator: void computeLengthArray(java.lang.String,int[],int[],int)>
<com.azure.authenticator.jwe.SecureRandomGenerator: void <init>()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate$1: void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate)>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getSecondaryButtonLabel()>
<android.view.View: int getMeasuredWidth()>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean ensureLoaded(int)>
<ch.qos.logback.classic.android.SQLiteAppender: void clearExpiredLogs(android.database.sqlite.SQLiteDatabase)>
<com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPathElement getResolvedElement()>
<com.azure.authenticator.logging.LoggingReceiver: android.content.Intent getIntent()>
<java.io.ObjectInputStream$GetField: long get(java.lang.String,long)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions()>
<com.google.android.material.transformation.FabTransformationBehavior: void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>
<com.google.android.material.button.MaterialButtonToggleGroup: int access$200(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzad()>
<com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)>
<com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)>
<java.util.Calendar: int getFirstDayOfWeek()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void drawRoundedBackgroundWithBorders(android.graphics.Canvas)>
<android.view.View: android.content.Context getContext()>
<com.facebook.react.uimanager.ReactShadowNode: void markUpdateSeen()>
<com.google.android.gms.internal.measurement.zzja: void zzN(java.lang.Object,int,int)>
<java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
<com.facebook.drawee.drawable.OrientedDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>
<com.facebook.react.fabric.FabricUIManager: java.util.ArrayDeque getAndResetPreMountItems()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$getCachedPolicyForRichContext$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzex: android.net.Uri zza(java.lang.String)>
<com.microsoft.authenticator.mfasdk.di.hilt.MfaModule_ProvideAppPolicyDatabaseFactory: com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyDatabase provideAppPolicyDatabase(com.microsoft.authenticator.mfasdk.di.hilt.MfaModule,android.content.Context)>
<com.facebook.react.modules.blob.BlobModule$3: void <init>(com.facebook.react.modules.blob.BlobModule)>
<com.azure.authenticator.accounts.MsaAccount: java.lang.String getNgcServerKeyIdentifier()>
<java.lang.Math: double tan(double)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMyLocationButtonClickListener(com.google.android.gms.maps.internal.zzav)>
<com.facebook.imageformat.DefaultImageFormatChecker: boolean isHeifHeader(byte[],int)>
<com.facebook.react.modules.core.ReactChoreographer$CallbackType: void <init>(java.lang.String,int,int)>
<com.facebook.react.uimanager.ReactShadowNode: boolean hasUpdates()>
<com.google.android.gms.common.api.internal.zacc: void <init>(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod,java.lang.Runnable)>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.authenticator.MainNavDirections$1)>
<com.azure.authenticator.databinding.FragmentViewPaymentBinding: android.widget.ScrollView getRoot()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void showMsaErrorDialog(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,java.lang.Exception)>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.bridge.ReactContext getReactContext()>
<com.google.android.gms.internal.measurement.zznt: void <init>()>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer$ValueSanitizer)>
<com.facebook.imagepipeline.listener.BaseRequestListener: void <init>()>
<android.os.Parcel: void readStringArray(java.lang.String[])>
<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>
<com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)>
<com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)>
<com.google.android.gms.tasks.zzw: void zza(java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: java.lang.Iterable loadBatch(com.google.android.datatransport.runtime.TransportContext)>
<com.facebook.react.uimanager.ReactShadowNode: void dispose()>
<com.fasterxml.jackson.core.io.CharTypes: int charToHex(int)>
<okio.BufferedSource: byte readByte()>
<java.util.List: boolean remove(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzdz: java.lang.String zzl(com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.measurement.internal.zzae: int zzk(java.lang.String,com.google.android.gms.measurement.internal.zzdv)>
<com.google.android.gms.auth.api.signin.GoogleSignIn: com.google.android.gms.auth.api.signin.GoogleSignInClient getClient(android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zzi(java.lang.String,com.google.android.gms.internal.measurement.zzcd)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<com.google.android.gms.maps.model.GroundOverlayOptions: boolean isVisible()>
<android.widget.CheckBox: void invalidateOutline()>
<ch.qos.logback.core.net.SyslogAppenderBase: ch.qos.logback.core.net.SyslogOutputStream createOutputStream()>
<com.facebook.drawee.interfaces.DraweeController: boolean onTouchEvent(android.view.MotionEvent)>
<com.facebook.imagepipeline.request.ImageRequest: int getPreferredHeight()>
<android.widget.ImageButton: void setScaleX(float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.businessLogic.BackupSerializer backupSerializer()>
<com.google.android.gms.internal.measurement.zzan: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm)>
<com.facebook.drawee.drawable.RoundedCornersDrawable: boolean getPaintFilterBitmap()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task zae(int,com.google.android.gms.common.api.internal.TaskApiCall)>
<com.google.android.gms.internal.measurement.zzga: void <init>()>
<java.lang.Integer: boolean equals(java.lang.Object)>
<com.google.android.material.tabs.TabLayout: void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getLayoutParent()>
<com.adjust.sdk.PackageBuilder: java.util.Map getSessionParameters(boolean)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: java.lang.String getTagName(java.lang.String,java.lang.String)>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: android.net.Uri getCacheKeySourceUri(android.net.Uri)>
<com.evernote.android.job.Job: com.evernote.android.job.Job setRequest(com.evernote.android.job.JobRequest,android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzco: com.google.android.gms.internal.measurement.zzco zze()>
<com.facebook.imagepipeline.cache.StagingArea: boolean remove(com.facebook.cache.common.CacheKey)>
<com.google.android.datatransport.cct.internal.AutoValue_LogEvent: void <init>(long,java.lang.Integer,long,byte[],java.lang.String,long,com.google.android.datatransport.cct.internal.NetworkConnectionInfo)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize)>
<java.lang.SecurityException: void <init>(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Metadata: void <init>(java.lang.String,java.lang.String,com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$1)>
<androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)>
<com.google.android.gms.measurement.internal.zzbz: void <init>()>
<android.os.HandlerThread: android.os.Looper getLooper()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int)>
<android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetKeyCallback$onAcquireKeyError$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zziu: int zzc()>
<com.google.android.gms.internal.measurement.zzmg: boolean zzc()>
<com.google.android.gms.internal.maps.zzk: float getBearing()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void animateIndicatorToPosition(int,int)>
<com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)>
<com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener access$000(com.facebook.react.views.modal.ReactModalHostView)>
<ch.qos.logback.core.util.StringCollectionUtil: void retainMatching(java.util.Collection,java.lang.String[])>
<java.security.cert.X509Certificate: byte[] getEncoded()>
<com.facebook.imageutils.TiffUtil$TiffHeader: void <init>()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.google.android.material.chip.ChipDrawable: void setTextStartPaddingResource(int)>
<com.facebook.imagepipeline.cache.MemoryCacheTracker: void onCacheHit(java.lang.Object)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory: void init(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList,com.facebook.common.internal.Supplier)>
<com.facebook.soloader.SoLoader: boolean loadLibrary(java.lang.String)>
<com.airbnb.lottie.utils.BaseLottieAnimator: void notifyCancel()>
<com.facebook.react.ReactInstanceManager: void setupReactContext(com.facebook.react.bridge.ReactApplicationContext)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: androidx.lifecycle.LiveData getAppLockEnforcedAccountNames()>
<androidx.sqlite.db.SupportSQLiteDatabase: void execSQL(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
<com.google.android.gms.internal.auth.zzm: void <init>(com.google.android.gms.internal.auth.zzl)>
<com.google.android.gms.measurement.internal.zzby: void <init>()>
<com.google.android.gms.internal.location.zzak: void zzb(int,java.lang.String[])>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void checkForIsSharedDeviceStatusAsync()>
<com.google.android.gms.internal.measurement.zzfn: void <init>(java.lang.Object)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker$doWork$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: org.xmlpull.v1.sax2.Driver buildPullParser()>
<org.json.JSONArray: java.lang.String optString(int,java.lang.String)>
<com.google.android.gms.measurement.internal.zzgd: void <init>(com.google.android.gms.measurement.internal.zzkd,java.lang.String)>
<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>
<com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAddAccountError$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.microsoft.brooklyn.module.repository.CredentialsRepository: void <init>(android.content.Context,com.microsoft.brooklyn.module.sync.CredentialsSDKConnector,com.microsoft.brooklyn.module.autofill.heuristics.HeuristicsConnector,com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository)>
<com.google.android.gms.measurement.internal.zzkd: java.lang.Boolean zzal(com.google.android.gms.measurement.internal.zzg)>
<com.facebook.drawee.generic.WrappingUtils: com.facebook.drawee.drawable.DrawableParent findDrawableParentForLeaf(com.facebook.drawee.drawable.DrawableParent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuManager accountListActionMenuManager()>
<com.github.amlcurran.showcaseview.AnimatorAnimationFactory$1: void <init>(com.github.amlcurran.showcaseview.AnimatorAnimationFactory,com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener)>
<com.airbnb.lottie.model.content.MergePaths: boolean isHidden()>
<com.adjust.sdk.UtilNetworking$IConnectionOptions: void applyConnectionOptions(javax.net.ssl.HttpsURLConnection,java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeStringSegments(char[],int,int)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onMemoryCachePut()>
<android.widget.CheckBox: void setSingleLine(boolean)>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$9sC-HR2ZP4RRjZ5KJ6tOov0M_Nc': void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragment,java.util.HashMap)>
<com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: void <init>(com.airbnb.lottie.animation.content.TrimPathContent,com.airbnb.lottie.animation.content.BaseStrokeContent$1)>
<com.google.android.material.datepicker.CalendarConstraints$1: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationWorker_AssistedFactory brooklynIntroNotificationWorker_AssistedFactory()>
<com.google.android.gms.measurement.internal.zzu: void <init>(com.google.android.gms.measurement.internal.zzy,com.google.android.gms.measurement.internal.zzs)>
<ch.qos.logback.core.net.ssl.SSLConfigurable: java.lang.String[] getSupportedCipherSuites()>
<com.facebook.react.views.slider.ReactSliderEvent: boolean isFromUser()>
<androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>
<com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig get()>
<com.google.android.gms.maps.model.VisibleRegion: void <init>(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLngBounds)>
<androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)>
<android.graphics.RectF: float height()>
<com.google.android.gms.measurement.internal.zzjt: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<ch.qos.logback.classic.turbo.TurboFilter: boolean isStarted()>
<com.github.amlcurran.showcaseview.ShowcaseView: void hide()>
<com.facebook.shimmer.Shimmer$ColorHighlightBuilder: com.facebook.shimmer.Shimmer$ColorHighlightBuilder consumeAttributes(android.content.res.TypedArray)>
<ch.qos.logback.core.pattern.ConverterUtil: void startConverters(ch.qos.logback.core.pattern.Converter)>
<com.fasterxml.jackson.core.JsonFactory: boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)>
<com.facebook.react.modules.core.TimingModule$BridgeTimerManager: void <init>(com.facebook.react.modules.core.TimingModule)>
<com.google.android.material.floatingactionbutton.BorderDrawable$BorderState: void <init>(com.google.android.material.floatingactionbutton.BorderDrawable)>
<com.evernote.android.job.v14.JobProxy14: int getType(boolean)>
<com.google.android.material.navigation.NavigationBarView: void setItemTextColor(android.content.res.ColorStateList)>
<com.azure.authenticator.jobs.DeferrableWorkerUtils_Factory: com.azure.authenticator.jobs.DeferrableWorkerUtils newInstance(android.content.Context)>
<android.widget.LinearLayout: void playSoundEffect(int)>
<com.google.android.gms.measurement.internal.zzkd: void zzZ(boolean)>
<com.google.android.material.transformation.FabTransformationBehavior: android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec)>
<com.facebook.debug.holder.Printer: boolean shouldDisplayLogMessage(com.facebook.debug.debugoverlay.model.DebugOverlayTag)>
<com.microsoft.brooklyn.module.sync.SDKInitHelper: void <init>(android.content.Context)>
<androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View)>
<com.facebook.imagepipeline.common.RotationOptions: void <init>(int,boolean)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion: void onAddAccountError(com.microsoft.onlineid.exception.AuthenticationException)>
<com.google.android.material.appbar.ViewOffsetBehavior: boolean isVerticalOffsetEnabled()>
<com.facebook.imagepipeline.producers.DecodeProducer: java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.DecodeProducer)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getRoutingHint()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider deviceRegistrationViewModelProvider()>
<android.widget.CheckBox: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.azure.authenticator.logging.ExternalLogger$Companion: int access$getAdalLogLevel(com.azure.authenticator.logging.ExternalLogger$Companion,com.microsoft.aad.adal.Logger$LogLevel)>
<android.widget.FrameLayout: void setClipChildren(boolean)>
<com.google.android.gms.internal.measurement.zzav: void <init>(com.google.android.gms.internal.measurement.zzbr)>
<com.google.android.gms.common.api.internal.zaag: com.google.android.gms.common.api.internal.zabd zaj(com.google.android.gms.common.api.internal.zaag)>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock eventClock()>
<ch.qos.logback.core.joran.spi.Interpreter: org.xml.sax.Locator getLocator()>
<ch.qos.logback.core.net.DefaultSocketConnector: void <init>(java.net.InetAddress,int,ch.qos.logback.core.util.DelayStrategy)>
<android.app.TimePickerDialog: void onStop()>
<com.google.android.datatransport.runtime.logging.Logging: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: void <init>()>
<com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)>
<com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)>
<android.os.StatFs: void <init>(java.lang.String)>
<com.google.android.material.badge.BadgeDrawable: void updateBadgeCoordinates(android.view.View,android.widget.FrameLayout)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: boolean isInConnectedTestMode()>
<com.google.android.gms.common.api.internal.zai: void zaf(com.google.android.gms.common.api.internal.zabl)>
<com.google.crypto.tink.KeyTemplate: com.google.crypto.tink.proto.KeyTemplate getProto()>
<com.google.android.gms.common.api.internal.zaby: void <init>(com.google.android.gms.common.internal.MethodInvocation,int,long,int)>
<androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()>
<com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()>
<com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[])>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)>
<android.view.View: float getTranslationY()>
<com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationUseCase: void <init>(android.content.Context,com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.storage.database.AccountStorage)>
<android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap$Config)>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType$Companion: void <init>()>
<com.google.android.gms.maps.internal.zzy: void <init>()>
<com.facebook.react.ReactRootView: void <init>(android.content.Context)>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.BufferMemoryChunkPool getBufferMemoryChunkPool()>
<com.azure.authenticator.ui.MainActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>
<java.io.ObjectInputStream: void defaultReadObject()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.airbnb.lottie.animation.keyframe.PathKeyframe: void <init>(com.airbnb.lottie.LottieComposition,com.airbnb.lottie.value.Keyframe)>
<com.airbnb.lottie.parser.KeyframeParser: java.lang.ref.WeakReference getInterpolator(int)>
<com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.textfield.IndicatorViewController: android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)>
<com.google.android.material.snackbar.BaseTransientBottomBar: int getTranslationYBottom()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void <init>()>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: void <init>(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)>
<com.microsoft.authenticator.registration.msa.entities.MsaNgcKeyGenerationStatus$Failure: java.lang.Exception getException()>
<com.google.android.material.appbar.ViewOffsetBehavior: void <init>()>
<com.google.android.material.textfield.IndicatorViewController: void setTypefaces(android.graphics.Typeface)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager msaRefreshUserDaManager()>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount mergeAadMfaAccountWithExistingAadMfaAccounts(com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.material.shape.ShapePath$PathOperation: void <init>()>
<androidx.core.util.Pools$SynchronizedPool: void <init>(int)>
<com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity$Companion: void <init>()>
<com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: void <init>(android.os.Bundle)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: android.content.Intent getIntent()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>
<com.google.android.gms.common.api.internal.zabu: void zam()>
<com.facebook.common.file.FileTree: void walkFileTree(java.io.File,com.facebook.common.file.FileTreeVisitor)>
<com.google.android.gms.common.api.ResultTransform: com.google.android.gms.common.api.PendingResult onSuccess(com.google.android.gms.common.api.Result)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeight(float)>
<android.view.ViewGroup: void <init>(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: java.util.Map mapOfStringAndProviderOfWorkerAssistedFactoryOf()>
<android.widget.EditText: void setLetterSpacing(float)>
<android.widget.ImageButton: int getLeft()>
<com.evernote.android.job.Job: com.evernote.android.job.Job setContext(android.content.Context)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: void <init>(java.lang.String,int)>
<com.azure.authenticator.logging.ExternalLogger$Companion: int access$getBrokerLogLevel(com.azure.authenticator.logging.ExternalLogger$Companion,com.microsoft.identity.common.java.logging.Logger$LogLevel)>
<com.airbnb.lottie.model.animatable.BaseAnimatableValue: void <init>(java.util.List)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean setCurrentDataSource(com.facebook.datasource.DataSource)>
<com.google.android.gms.measurement.internal.zzg: boolean zza()>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<com.azure.authenticator.authentication.msa.MsaAccountManager: void showAccountPicker(androidx.appcompat.app.AppCompatActivity,int,java.util.List,com.azure.authenticator.authentication.msa.ui.AccountPickerCallback$ICompletion)>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$1200(com.google.android.material.badge.BadgeDrawable$SavedState)>
<com.google.android.gms.location.SleepClassifyEvent: boolean hasEvents(android.content.Intent)>
<com.airbnb.lottie.utils.LottieValueAnimator: void resumeAnimation()>
<com.google.android.gms.common.api.internal.GoogleServices: com.google.android.gms.common.api.internal.GoogleServices checkInitialized(java.lang.String)>
<com.facebook.imagepipeline.producers.MultiplexProducer: com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer access$100(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object)>
<com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>
<com.google.android.gms.measurement.internal.zzap: java.lang.String zza()>
<com.google.android.material.timepicker.ClockHandView$2: void <init>(com.google.android.material.timepicker.ClockHandView)>
<androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()>
<com.facebook.imagepipeline.memory.GenericByteArrayPool: int getBucketedSizeForValue(byte[])>
<java.util.ServiceLoader: java.util.Iterator iterator()>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: ch.qos.logback.core.joran.spi.ConfigurationWatchList buildClone()>
<com.google.android.material.datepicker.Month: long getDay(int)>
<com.azure.authenticator.databinding.AccountAddMethodListBinding: void <init>(android.widget.LinearLayout,android.widget.ImageView,android.widget.TextView)>
<com.facebook.common.logging.FLog: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.material.button.MaterialButtonToggleGroup: void checkForced(int,boolean)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.azure.authenticator.logging.CollectLogsUtils: void logNumberOfAccounts(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,java.util.List)>
<com.microsoft.brooklyn.module.sync.PersonalDataChangedObserver: void <init>(com.microsoft.brooklyn.module.repository.AddressesRepository,com.microsoft.brooklyn.module.repository.PaymentsRepository)>
<com.facebook.soloader.SoLoader: void doLoadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy)>
<com.google.android.material.textfield.TextInputLayout: void showPlaceholderText()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setRequestPriority(com.facebook.imagepipeline.common.Priority)>
<com.azure.authenticator.databinding.AccountAddMethodListWorkBinding: void <init>(android.widget.LinearLayout,android.widget.TextView,android.widget.ImageView,android.widget.TextView)>
<com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection: java.lang.Object execute()>
<android.app.Fragment: void onStart()>
<com.facebook.react.uimanager.events.TouchEvent: void init(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)>
<com.google.android.gms.internal.measurement.zzkn: java.lang.String zze(byte[],int,int)>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void maybeNotifyExclusiveEntryInsertion(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<ch.qos.logback.core.pattern.parser.Node: void <init>(int,java.lang.Object)>
<com.google.android.gms.common.api.Api$Client: boolean providesSignIn()>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>
<com.facebook.react.ReactDelegate: boolean onBackPressed()>
<android.app.Activity: void setRequestedOrientation(int)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeParcel(android.os.Parcel,int,android.os.Parcel,boolean)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void toggleElementInspector()>
<com.facebook.react.views.text.ReactTypefaceUtils: int parseFontStyle(java.lang.String)>
<com.google.android.gms.internal.maps.zzk: void setTransparency(float)>
<com.airbnb.lottie.utils.LogcatLogger: void debug(java.lang.String,java.lang.Throwable)>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>
<com.facebook.imagepipeline.producers.JobScheduler: void submitJob()>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<com.facebook.react.animated.ValueAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap)>
<android.graphics.Paint: void setSubpixelText(boolean)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions tiltGesturesEnabled(boolean)>
<com.google.android.gms.maps.SupportMapFragment$zza: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)>
<com.google.android.material.ripple.RippleDrawableCompat: void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthUseCase mfaAuthUseCase()>
<com.google.android.gms.internal.measurement.zzhz: void zzb()>
<android.widget.Button: android.text.Layout getLayout()>
<com.azure.authenticator.common.AdjustLifecycleCallbacks: void onActivityStopped(android.app.Activity)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.android.gms.dynamite.zzl: void <init>(int,int)>
<com.google.android.gms.internal.measurement.zzja: int zzF(java.lang.Object,long)>
<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setPeekHeight(int,boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore get()>
<com.facebook.drawee.drawable.DrawableProperties: void <init>()>
<android.widget.SeekBar: void setEnabled(boolean)>
<com.microsoft.ngc.aad.NgcSession: java.lang.String getObjectIdHash()>
<com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker: boolean isSet()>
<ch.qos.logback.core.status.ErrorStatus: void <init>(java.lang.String,java.lang.Object)>
<com.google.android.gms.measurement.AppMeasurement: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.azure.authenticator.notifications.AbstractNotification$Action$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.common.streams.TailAppendingInputStream: int read(byte[],int,int)>
<com.facebook.yoga.YogaNodeJNIBase: com.facebook.yoga.YogaDirection getLayoutDirection()>
<com.google.android.gms.internal.measurement.zzja: int zzr(java.lang.Object)>
<com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)>
<com.facebook.drawee.drawable.MatrixDrawable: void configureBounds()>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)>
<com.azure.authenticator.databinding.EnableRemoteNgcUpsellBinding: android.widget.ScrollView getRoot()>
<com.microsoft.authenticator.registration.mfa.businessLogic.RegisterAadMfaAccountUseCase: void <init>(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.mfasdk.MfaSdkManager,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<com.google.android.gms.cloudmessaging.zzf: void zza()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey)>
<com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void <init>(android.view.View,int,int,int,int)>
<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(int,int)>
<com.google.crypto.tink.Registry$KeyManagerContainer: com.google.crypto.tink.KeyManager getUntypedKeyManager()>
<com.google.android.material.tabs.TabLayout$Tab: com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence)>
<com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle createBundleFromClientSettings(com.google.android.gms.common.internal.ClientSettings)>
<com.facebook.react.modules.i18nmanager.I18nUtil: boolean isRTLForced(android.content.Context)>
<java.util.Properties: void <init>(java.util.Properties)>
<javax.net.ssl.SSLSocket: void shutdownOutput()>
<android.view.View: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<com.airbnb.lottie.model.content.CircleShape: boolean isReversed()>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzt(com.google.android.gms.dynamic.IObjectWrapper)>
<ch.qos.logback.core.pattern.parser.TokenStream: void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer)>
<com.google.common.io.BaseEncoding: void <init>()>
<com.google.android.gms.common.api.internal.zabt: void zaa(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzdj: void zzao(com.google.android.gms.internal.measurement.zzdj,java.lang.Iterable)>
<ch.qos.logback.core.spi.FilterReply: void <init>(java.lang.String,int)>
<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config valueOf(java.lang.String)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllAccounts()>
<com.facebook.cache.disk.DefaultDiskStorage: java.lang.String getVersionSubdirectoryName(int)>
<com.facebook.fbreact.specs.NativeStatusBarManagerSpec: java.util.Map getTypedExportedConstants()>
<ch.qos.logback.core.pattern.parser.TokenStream: java.util.List tokenize()>
<com.evernote.android.job.v21.PlatformJobService: boolean onStopJob(android.app.job.JobParameters)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getActiveMsaAccounts()>
<com.adjust.sdk.ActivityHandler: com.adjust.sdk.ActivityHandler$InternalState access$900(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.maps.zzj: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMyLocationClickListener)>
<com.facebook.imagepipeline.memory.MemoryChunkPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: com.facebook.imagepipeline.image.CloseableImage decodeAnimatedWebp(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)>
<com.microsoft.authenticator.backup.entities.RetrieveBackupResult$Error: java.lang.Exception getException()>
<androidx.preference.Preference: void setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener)>
<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)>
<com.facebook.react.views.art.ARTShapeShadowNode: android.graphics.Path createPath(float[])>
<com.google.android.gms.common.internal.BaseGmsClient: java.util.ArrayList zzm(com.google.android.gms.common.internal.BaseGmsClient)>
<com.facebook.react.uimanager.ReactClippingViewGroupHelper: void calculateClippingRect(android.view.View,android.graphics.Rect)>
<com.azure.authenticator.accounts.AadAccount: void setObjectId(java.lang.String)>
<com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzdb zze(int)>
<ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>
<com.google.android.material.navigation.NavigationBarItemView: void setViewScaleValues(android.view.View,float,float,int)>
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<com.azure.authenticator.storage.Storage: boolean readIsFcmTokenAadServiceFailedRetry()>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setTestID(android.view.View,java.lang.String)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: int calculateKind(com.facebook.imagepipeline.request.ImageRequest)>
<com.facebook.drawee.generic.RoundingParams: float[] getCornersRadii()>
<androidx.interpolator.view.animation.FastOutSlowInInterpolator: void <init>()>
<com.adjust.sdk.ActivityPackage: void setCallbackParameters(java.util.Map)>
<com.google.android.material.navigation.NavigationBarMenuView: android.graphics.drawable.Drawable getItemBackground()>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment_MembersInjector: void injectTelemetryManager(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSignInFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.facebook.react.uimanager.ReactAccessibilityDelegate: void setState(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.bridge.ReadableMap,android.content.Context)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int)>
<com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)>
<com.airbnb.lottie.utils.Logger: void error(java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.value.LottieValueCallback: void <init>(java.lang.Object)>
<com.adjust.sdk.AttributionResponseData: void <init>()>
<com.google.android.material.navigation.NavigationBarMenuView: void removeUnusedBadges()>
<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: android.app.AlertDialog buildDialog()>
<com.facebook.react.modules.core.ReactChoreographer: void initialize()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getChildAt(int)>
<com.azure.authenticator.databinding.FragmentAutofillControlSettingsBinding: void <init>(android.widget.ScrollView,android.widget.RadioButton,android.widget.RadioGroup,android.widget.RadioButton,com.google.android.material.switchmaterial.SwitchMaterial,android.view.View,android.widget.RadioButton,android.widget.RadioGroup,android.widget.RadioButton,com.google.android.material.switchmaterial.SwitchMaterial)>
<com.google.android.gms.common.server.converter.zaa: com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter zab()>
<com.google.android.material.navigation.NavigationBarItemView: void setEnabled(boolean)>
<android.animation.ValueAnimator: void cancel()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$showPartiallyRestoredAccountsWarningIfNecessary$upgradeInformationDialogBuilder$1: void <init>()>
<com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)>
<com.facebook.yoga.YogaNode: boolean isMeasureDefined()>
<com.google.android.gms.internal.measurement.zzmh: boolean zzb()>
<com.google.android.datatransport.cct.CCTDestination: byte[] asByteArray()>
<com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler: boolean supports(com.facebook.react.bridge.ReadableMap)>
<com.google.android.material.floatingactionbutton.MotionStrategy: void onAnimationEnd()>
<com.google.common.collect.ImmutableCollection: void <init>()>
<com.google.android.gms.common.api.internal.zaak: void <init>(com.google.android.gms.common.api.internal.zaal,com.google.android.gms.common.api.internal.zaba,com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)>
<com.facebook.react.ReactRootView: void onAttachedToReactInstance()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void configureSelfhostControls()>
<com.azure.authenticator.storage.AuthenticatorMfaSdkStorage$updateUsernameMigration$1: void <init>(com.azure.authenticator.storage.AuthenticatorMfaSdkStorage,kotlin.coroutines.Continuation)>
<com.facebook.react.modules.camera.ImageEditingManager$CleanTask: void <init>(com.facebook.react.bridge.ReactContext)>
<ch.qos.logback.core.joran.spi.NoAutoStartUtil: boolean notMarkedWithNoAutoStart(java.lang.Object)>
<ch.qos.logback.core.joran.spi.ConsoleTarget$2: void <init>()>
<com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)>
<com.evernote.android.job.v21.JobProxy21: boolean isJobInfoScheduled(android.app.job.JobInfo,com.evernote.android.job.JobRequest)>
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>
<com.google.android.gms.maps.internal.zzar: boolean zza(com.google.android.gms.internal.maps.zzt)>
<com.adjust.sdk.IPackageHandler: java.lang.String getBasePath()>
<androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>
<com.azure.authenticator.jobs.DeferrableWorkerTag$Companion: void <init>()>
<android.widget.ImageButton: float getRotation()>
<com.facebook.react.views.viewpager.PageSelectedEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onCreate(android.os.Bundle)>
<com.google.android.material.chip.Chip: float getChipMinHeight()>
<android.widget.EditText: float getTextSize()>
<ch.qos.logback.classic.LoggerContext: void fireOnStop()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: void initializeComponentContext()>
<com.airbnb.lottie.animation.keyframe.ValueCallbackKeyframeAnimation: java.lang.Object getValue()>
<com.facebook.react.common.MapBuilder: com.facebook.react.common.MapBuilder$Builder builder()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.main.SendFeedbackFragment injectSendFeedbackFragment2(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.google.android.gms.internal.measurement.zzgz: void zzk(int)>
<com.facebook.imageutils.BitmapUtil: int getSizeInByteForBitmap(int,int,android.graphics.Bitmap$Config)>
<com.google.android.material.tabs.TabLayout: void setInlineLabel(boolean)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: com.fasterxml.jackson.core.JsonToken _handleOddValue(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.payment.PaymentViewModel paymentViewModel()>
<ch.qos.logback.core.status.StatusBase: java.util.Iterator iterator()>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams setBorder(int,float)>
<com.google.android.material.button.MaterialButtonHelper: int getCornerRadius()>
<com.google.android.gms.measurement.internal.zzg: void zzE(long)>
<com.facebook.react.uimanager.IllegalViewOperationException: void <init>(java.lang.String,android.view.View,java.lang.Throwable)>
<com.adjust.sdk.ActivityPackage: void setClickTimeInSeconds(long)>
<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)>
<com.azure.authenticator.PhoneFactorApplication$onCreate$2: void <init>(com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase)>
<com.facebook.imagepipeline.memory.FlexByteArrayPool: void release(byte[])>
<com.adjust.sdk.Util: java.lang.String getRootCause(java.lang.Exception)>
<ch.qos.logback.core.status.StatusManager: boolean add(ch.qos.logback.core.status.StatusListener)>
<java.lang.Throwable: java.lang.String toString()>
<com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository: void <init>(android.content.Context)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>
<com.google.crypto.tink.PrimitiveSet: com.google.crypto.tink.PrimitiveSet$Entry addPrimitive(java.lang.Object,com.google.crypto.tink.proto.Keyset$Key)>
<java.lang.Throwable: void <init>()>
<com.fasterxml.jackson.core.json.JsonReadContext: java.lang.String getCurrentName()>
<com.facebook.react.animated.PropsAnimatedNode: void connectToView(int)>
<android.app.Dialog: void cancel()>
<ch.qos.logback.core.spi.AbstractComponentTracker: void processPriorToRemoval(java.lang.Object)>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean access$100(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.facebook.react.bridge.NoSuchKeyException: void <init>(java.lang.String)>
<android.widget.TextView: void onFinishTemporaryDetach()>
<com.google.android.material.bottomappbar.BottomAppBar: boolean access$002(com.google.android.material.bottomappbar.BottomAppBar,boolean)>
<com.facebook.react.modules.core.JavaScriptTimerManager: void emitTimeDriftWarning(java.lang.String)>
<android.text.style.StrikethroughSpan: void <init>()>
<com.google.android.gms.common.api.internal.zap: void onStart()>
<com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzfg zzd(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.common.zzv: java.lang.Object[] zza(java.lang.Object[],int)>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)>
<com.facebook.imagepipeline.memory.FlexByteArrayPool: com.facebook.common.references.CloseableReference get(int)>
<com.facebook.react.touch.JSResponderHandler: void maybeUnblockNativeResponder()>
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectMfaAuthenticationManager(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager)>
<com.airbnb.lottie.LottieDrawable$5: void <init>(com.airbnb.lottie.LottieDrawable,float)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.devsupport.interfaces.DevSupportManager access$700(com.facebook.react.ReactInstanceManager)>
<com.google.android.gms.internal.measurement.zznt: boolean zzb()>
<ch.qos.logback.classic.net.SyslogAppender: java.lang.String getPrefixPattern()>
<com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()>
<com.adjust.sdk.AdjustEvent: boolean checkEventToken(java.lang.String,com.adjust.sdk.ILogger)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzab(int)>
<com.google.android.gms.safetynet.SafeBrowsingData: android.os.ParcelFileDescriptor getFileDescriptor()>
<com.google.android.material.navigation.NavigationBarView: void setOnItemSelectedListener(com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener)>
<com.google.android.gms.internal.measurement.zzgz: int zzv(int)>
<com.google.android.gms.common.server.response.FastParser: java.util.ArrayList zav(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<java.lang.Math: double random()>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>
<com.airbnb.lottie.model.DocumentData: void <init>(java.lang.String,java.lang.String,float,com.airbnb.lottie.model.DocumentData$Justification,int,float,float,int,int,float,boolean)>
<com.google.android.gms.measurement.internal.zzfl: java.lang.String zzs()>
<com.google.android.gms.tasks.zzh: java.lang.Object zzc(com.google.android.gms.tasks.zzh)>
<com.github.amlcurran.showcaseview.ShowcaseDrawer: int getShowcaseHeight()>
<com.google.android.gms.internal.measurement.zzkq: boolean zzb()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder: void <init>()>
<com.facebook.react.views.picker.ReactPicker: void setImmediateSelection(int)>
<java.lang.StackTraceElement: java.lang.String getFileName()>
<com.azure.authenticator.accounts.AadAccount: boolean isMfaTotpEnabled()>
<com.google.android.gms.measurement.internal.zzkh: void <init>()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: ch.qos.logback.core.net.ssl.KeyStoreFactoryBean keyStoreFromSystemProperties(java.lang.String)>
<com.google.android.material.switchmaterial.SwitchMaterial: android.content.res.ColorStateList getMaterialThemeColorsTrackTintList()>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: android.util.Pair filterOutMfaNgcWithoutUsefulTotpAccount(java.util.List)>
<com.facebook.react.views.text.ReactTextUpdate: float getPaddingRight()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)>
<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: boolean hasCoalescingKey(long)>
<com.google.android.gms.internal.measurement.zzjk: int zzk(int,java.util.List,boolean)>
<com.google.android.gms.measurement.internal.zzei: java.lang.String zzz(java.lang.String)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2: void <init>(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,long,java.lang.Runnable)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: java.net.InetAddress getInetAddress()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalImageFileFetchSequence()>
<com.google.android.material.elevation.ElevationOverlayProvider: int compositeOverlay(int,float)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void enablePositiveButtonIfNecessary()>
<com.facebook.react.modules.datepicker.DatePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)>
<com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void updateState(com.facebook.react.uimanager.StateWrapper,int,int)>
<com.google.android.gms.internal.measurement.zzgv: void <init>(com.google.android.gms.internal.measurement.zzgt)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$Builder setMobileSubtype(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype)>
<com.google.android.gms.common.internal.zac: java.lang.String zaf(android.content.Context)>
<com.facebook.react.uimanager.OnLayoutEvent: void init(int,int,int,int,int)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzal(long)>
<ch.qos.logback.core.BasicStatusManager: java.util.List getCopyOfStatusListenerList()>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment_MembersInjector: void injectAppPolicyRepository(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenSettingsFragment,com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository)>
<java.math.BigDecimal: void <init>(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressFormDatasetsUseCase addressFormDatasetsUseCase()>
<com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>
<com.google.android.material.navigation.NavigationBarMenuView: boolean isShifting(int,int)>
<com.google.android.material.textfield.TextInputEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: float determineResizeRatio(com.facebook.imagepipeline.common.ResizeOptions,int,int)>
<ch.qos.logback.core.joran.action.IADataForComplexProperty: ch.qos.logback.core.util.AggregationType getAggregationType()>
<com.azure.authenticator.ui.MainActivity$hideAppBarForSpecificFragments$1: void <init>(com.microsoft.authenticator.common.viewLogic.AppBarLayout)>
<com.adjust.sdk.ActivityHandler$5: void <init>(com.adjust.sdk.ActivityHandler,boolean)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzex zzd()>
<android.widget.ProgressBar: int getMeasuredWidth()>
<android.view.animation.DecelerateInterpolator: void <init>()>
<com.google.android.material.textfield.IndicatorViewController: void setCaptionViewVisibilities(int,int)>
<com.google.android.material.shape.EdgeTreatment: void <init>()>
<com.google.android.datatransport.runtime.TransportRuntimeComponent: com.google.android.datatransport.runtime.scheduling.persistence.EventStore getEventStore()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getLocalContentUriFetchSequence()>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node C()>
<com.google.android.material.button.MaterialButton: void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)>
<com.google.android.gms.internal.measurement.zzcw: com.google.android.gms.internal.measurement.zzcw zzb(com.google.android.gms.internal.measurement.zzdp)>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>
<com.google.android.gms.internal.maps.zzw: void setStrokePattern(java.util.List)>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setEnabled(android.view.View,boolean)>
<com.airbnb.lottie.model.layer.Layer: int getSolidWidth()>
<com.azure.authenticator.ui.fragment.main.Hilt_DeviceRegistrationFragment: dagger.hilt.android.internal.managers.FragmentComponentManager createComponentManager()>
<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean getDidJSHitFrameAndCleanup(long,long)>
<com.google.android.material.internal.ThemeEnforcement: boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])>
<com.google.android.gms.internal.measurement.zzdj: java.util.List zzc()>
<com.google.android.gms.dynamic.zaa: void <init>(com.google.android.gms.dynamic.DeferredLifecycleHelper)>
<com.facebook.drawee.components.RetryManager: void notifyTapToRetry()>
<com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.google.android.gms.common.internal.BaseGmsClient: java.util.Set getScopes()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void addImagePerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener)>
<com.azure.authenticator.databinding.FrxSyncToggleScreenBinding: com.azure.authenticator.databinding.FrxSyncToggleScreenBinding bind(android.view.View)>
<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.android.gms.common.internal.zzc: void zzc()>
<com.google.android.gms.common.api.internal.zag: void <init>(int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
<com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()>
<com.google.android.material.shadow.ShadowRenderer: android.graphics.Paint getShadowPaint()>
<com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String getDeviceTokenForLogging(java.lang.String)>
<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>
<android.widget.ImageButton: void setElevation(float)>
<com.google.android.material.appbar.AppBarLayout: void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyCancel$$inlined$let$lambda$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.databinding.FrxRestorePromptBinding: void <init>(android.widget.LinearLayout,android.widget.Button)>
<okhttp3.ResponseBody: void close()>
<com.google.android.gms.internal.maps.zzz: void setPoints(java.util.List)>
<com.google.common.collect.Maps$EntryFunction$1: void <init>(java.lang.String,int)>
<com.google.android.gms.common.api.internal.zaar: void <init>(com.google.android.gms.common.api.internal.zabd,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.GoogleApiAvailabilityLight,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.concurrent.locks.Lock,android.content.Context)>
<com.facebook.react.bridge.JavaOnlyMap$1: void <init>(com.facebook.react.bridge.JavaOnlyMap)>
<com.azure.authenticator.ui.fragment.accounts.adapter.EditAccountViewHolder$configure$2: void <init>()>
<com.google.android.gms.internal.measurement.zzht: void zzi(int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDownsampleEnabled(boolean)>
<com.azure.authenticator.databinding.AccountListRowDefaultModeBinding: com.azure.authenticator.databinding.AccountListRowDefaultModeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>
<com.google.android.gms.common.server.response.FastParser: int zax(java.io.BufferedReader,char[])>
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>
<com.google.android.gms.internal.measurement.zzha: void zzs(int,java.lang.Object,com.google.android.gms.internal.measurement.zzji)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: android.graphics.ColorSpace getColorSpace()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: void <init>()>
<com.facebook.react.views.art.ARTTextViewManager: void <init>()>
<com.facebook.yoga.YogaConfig: void setPointScaleFactor(float)>
<com.facebook.yoga.YogaNode: void setHeightAuto()>
<ch.qos.logback.core.spi.ContextAwareBase: void <init>()>
<com.google.android.material.datepicker.DateSelector: java.lang.String getSelectionDisplayString(android.content.Context)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setEventMillis(long)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_MembersInjector: void injectMfaSdkStorage(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)>
<com.google.android.material.internal.ToolbarUtils: android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar)>
<com.google.android.gms.common.api.AvailabilityException: void <init>(androidx.collection.ArrayMap)>
<com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl: void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<java.lang.Object: int hashCode()>
<android.widget.ImageView: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.datepicker.CalendarConstraints: com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)>
<ch.qos.logback.core.sift.AppenderTracker: void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.sift.AppenderFactory)>
<com.google.android.datatransport.runtime.scheduling.persistence.AutoValue_PersistedEvent: void <init>(long,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>
<com.google.android.gms.internal.auth-api.zzx: void zzc(com.google.android.gms.internal.auth-api.zzv,com.google.android.gms.internal.auth-api.zzz)>
<com.microsoft.authenticator.msa.entities.ValidateMsaAccountResult$AccountAcquired: void <init>(com.microsoft.onlineid.UserAccount,android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzfl: void zzR(com.google.android.gms.measurement.internal.zzf)>
<ch.qos.logback.core.spi.AppenderAttachableImpl: boolean detachAppender(java.lang.String)>
<com.facebook.drawee.view.DraweeHolder: void onDetach()>
<com.azure.authenticator.storage.database.migration.Migration21To22: void createDatabaseVersion22(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>
<com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: void execute(android.text.SpannableStringBuilder,int)>
<android.view.ViewGroup: void refreshDrawableState()>
<com.google.android.material.animation.MotionSpec: com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()>
<android.view.View: int getSystemUiVisibility()>
<com.facebook.react.modules.core.JavaTimerManager$Timer: void <init>(int,long,int,boolean,com.facebook.react.modules.core.JavaTimerManager$1)>
<androidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)>
<java.lang.System: void load(java.lang.String)>
<com.google.android.gms.common.util.ArrayUtils: void writeArray(java.lang.StringBuilder,long[])>
<com.google.android.gms.internal.measurement.zzja: int zzP(int,int)>
<ch.qos.logback.core.spi.AbstractComponentTracker: void removeExcedentComponents()>
<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: void clear()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromRawResSync(android.content.Context,int,java.lang.String)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: void fetch(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<com.google.android.gms.cloudmessaging.zze: void <init>(android.content.Context,java.util.concurrent.ScheduledExecutorService)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()>
<com.google.android.gms.measurement.internal.zzkk: int zzr(java.lang.String)>
<java.lang.Class: boolean isEnum()>
<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>
<com.airbnb.lottie.model.content.Mask: boolean isInverted()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>
<com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean)>
<com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzfm: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String,android.os.Bundle)>
<com.azure.authenticator.databinding.AadAddAccountSetupBinding: void <init>(android.widget.ScrollView,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView)>
<com.google.android.gms.measurement.internal.zzae: java.lang.Boolean zzp(java.lang.String)>
<android.content.ContentValues: java.util.Set valueSet()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider backupViewModelProvider()>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.google.common.collect.ForwardingMap: java.util.Map delegate()>
<com.facebook.imagepipeline.memory.BitmapPoolBackend: void put(android.graphics.Bitmap)>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>
<ch.qos.logback.core.Appender: void doAppend(java.lang.Object)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void signInAndRestore()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel access$12400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.lang.String zai(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.fasterxml.jackson.core.util.BufferRecycler: char[] calloc(int)>
<com.google.android.gms.measurement.internal.zzae: long zzA()>
<com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>
<com.facebook.react.views.text.ReactBackgroundColorSpan: void <init>(int)>
<com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry: void setEntropyNumberEntryUsed(boolean)>
<com.facebook.common.file.FileUtils$FileDeleteException: void <init>(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.image.EncodedImage getNewResultsForJpegOrHeif(com.facebook.imagepipeline.image.EncodedImage)>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>
<ch.qos.logback.classic.Logger: void error(java.lang.String)>
<com.airbnb.lottie.LottieDrawable: void setApplyingOpacityToLayersEnabled(boolean)>
<com.airbnb.lottie.model.animatable.AnimatableScaleValue: java.util.List getKeyframes()>
<android.widget.EditText: boolean requestFocus()>
<ch.qos.logback.classic.pattern.FileOfCallerConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.facebook.react.views.text.TextTransform: java.lang.String capitalize(java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)>
<com.google.android.material.internal.CollapsingTextHelper: boolean shouldDrawMultiline()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter: void onBindViewHolder(com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder,int)>
<com.google.android.gms.dynamic.IFragmentWrapper: com.google.android.gms.dynamic.IFragmentWrapper zzi()>
<java.lang.Thread: java.lang.String getName()>
<com.google.android.gms.internal.measurement.zzgz: int zzx(long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.storage.database.MfaSdkDatabase mfaSdkDatabase()>
<java.io.File: java.io.File getParentFile()>
<java.util.Arrays: byte[] copyOf(byte[],int)>
<com.google.android.gms.common.util.DeviceProperties: boolean isWearable(android.content.pm.PackageManager)>
<androidx.fragment.app.Fragment: android.view.View getView()>
<com.google.android.gms.measurement.internal.zzch: void <init>()>
<com.fasterxml.jackson.core.util.BufferRecycler: char[] allocCharBuffer(int,int)>
<ch.qos.logback.core.joran.util.PropertyDescriptor: void setWriteMethod(java.lang.reflect.Method)>
<com.azure.authenticator.storage.database.AccountStorage_Factory: void <init>(javax.inject.Provider)>
<java.io.ObjectOutputStream: void writeInt(int)>
<ch.qos.logback.core.status.Status: java.lang.String getMessage()>
<com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseChars(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,androidx.collection.SparseArrayCompat)>
<com.google.android.gms.internal.measurement.zzac: void <init>(com.google.android.gms.internal.measurement.zzbr,java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzm)>
<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>
<com.google.android.material.chip.ChipDrawable: float getCurrentChipIconHeight()>
<com.google.android.gms.common.util.Strings: boolean isEmptyOrWhitespace(java.lang.String)>
<com.google.android.gms.tasks.zzf: com.google.android.gms.tasks.zzw zzd(com.google.android.gms.tasks.zzf)>
<ch.qos.logback.classic.spi.CallerData: java.lang.StackTraceElement[] extract(java.lang.Throwable,java.lang.String,int,java.util.List)>
<com.google.android.gms.location.GeofencingClient: void <init>(android.app.Activity)>
<com.google.android.material.circularreveal.CircularRevealWidget: int getCircularRevealScrimColor()>
<com.google.android.material.datepicker.CalendarConstraints: void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$1)>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void dispatchPendingNonBatchedOperations(long)>
<com.adjust.sdk.ActivityHandler: void setPushToken(java.lang.String,boolean)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean usesClientTelemetry()>
<com.azure.authenticator.ui.LaunchActivity: boolean isSharedDeviceModeAppRestrictionSet()>
<ch.qos.logback.classic.turbo.LRUMessageCache: int getMessageCountAndThenIncrement(java.lang.String)>
<com.google.android.gms.measurement.internal.zzkk: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.google.android.material.textfield.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)>
<com.airbnb.lottie.LottieComposition: void incrementMatteOrMaskCount(int)>
<com.google.android.gms.measurement.internal.zzfq: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.maps.zzh: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener)>
<com.adjust.sdk.ActivityHandler: void foregroundTimerFired()>
<com.google.android.gms.internal.measurement.zzcr: void <init>()>
<com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordAutofillViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>
<com.azure.authenticator.accounts.AadAccount: boolean getSecurityDefaultsPolicyEnabled()>
<com.google.android.gms.measurement.internal.zzkf: com.google.android.gms.internal.measurement.zzdb zzf(com.google.android.gms.measurement.internal.zzan)>
<android.media.MediaMetadataRetriever: void <init>()>
<com.microsoft.authenticator.commonuilibrary.localauth.DeviceScreenLockManager: void unlock(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.common.zzm: java.lang.String zza(java.lang.String,java.lang.Object[])>
<ch.qos.logback.core.subst.Tokenizer: void handleLiteralState(char,java.util.List,java.lang.StringBuilder)>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzR()>
<ch.qos.logback.core.spi.CyclicBufferTracker: boolean isComponentStale(ch.qos.logback.core.helpers.CyclicBuffer)>
<com.adjust.sdk.AdjustInstance$5: void <init>(com.adjust.sdk.AdjustInstance)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAccountAdded$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,kotlin.coroutines.Continuation)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: void <init>(android.content.Context)>
<com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable getCheckedIcon()>
<com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask removeListener(com.airbnb.lottie.LottieListener)>
<java.lang.Float: int intValue()>
<com.google.android.material.internal.StateListAnimator: void <init>()>
<android.widget.EditText: void setSingleLine(boolean)>
<com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>
<com.evernote.android.job.JobRequest$Builder: boolean access$900(com.evernote.android.job.JobRequest$Builder)>
<android.graphics.Matrix: void setValues(float[])>
<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node Eopt()>
<com.google.android.gms.measurement.internal.zzfp: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String,java.lang.String,java.lang.String)>
<sun.misc.Unsafe: double getDouble(java.lang.Object,long)>
<com.facebook.react.views.scroll.ScrollEventType: void <init>(java.lang.String,int)>
<com.fasterxml.jackson.core.io.IOContext: void releaseNameCopyBuffer(char[])>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void access$200(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.imagepipeline.core.ImagePipeline: com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener)>
<com.google.android.material.bottomnavigation.BottomNavigationView: void addCompatibilityTopDivider(android.content.Context)>
<java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<com.microsoft.authenticator.location.di.LocationModule_ProvideGeocoderFactory: android.location.Geocoder provideGeocoder(com.microsoft.authenticator.location.di.LocationModule,android.content.Context)>
<com.facebook.datasource.AbstractDataSource: boolean hasResult()>
<com.google.android.gms.common.GoogleApiAvailability: boolean zac(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>
<com.google.android.gms.internal.measurement.zzll: void <init>()>
<com.google.android.gms.internal.maps.zzt: void setPosition(com.google.android.gms.maps.model.LatLng)>
<com.google.android.material.circularreveal.CircularRevealHelper: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeString(java.lang.String)>
<com.google.android.gms.maps.model.LatLngBounds: double zzd(double,double)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.res.Resources getRemoteResource(android.content.Context)>
<ch.qos.logback.core.AppenderBase: void stop()>
<com.azure.authenticator.Hilt_PhoneFactorApplication: void onCreate()>
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>
<com.google.android.gms.common.api.internal.zak: com.google.android.gms.common.api.internal.zaj zai(int)>
<com.google.android.gms.internal.measurement.zzgg: void <init>(boolean[],int)>
<com.google.android.gms.common.data.AbstractDataBuffer: void close()>
<com.google.android.material.textfield.TextInputLayout: boolean isEndIconVisible()>
<com.facebook.soloader.SysUtil: void fsyncRecursive(java.io.File)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance()>
<com.facebook.react.views.text.TextTransform: java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$7: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)>
<android.graphics.Paint: void reset()>
<com.airbnb.lottie.model.layer.Layer$MatteType: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)>
<com.facebook.datasource.DataSubscriber: void onProgressUpdate(com.facebook.datasource.DataSource)>
<com.azure.authenticator.common.AdjustHelper: void setAdjustEnabled(boolean)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel$approveNgcSession$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.imagepipeline.producers.ProducerListener: void onProducerEvent(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzck: int zzh()>
<android.widget.AutoCompleteTextView: int getMeasuredWidth()>
<com.airbnb.lottie.model.Marker: void <init>(java.lang.String,float,float)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker_Factory: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker newInstance(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.internal.common.zzc: void zzf(android.os.Parcel,android.os.IInterface)>
<com.google.android.material.badge.BadgeDrawable: void tryWrapAnchorInCompatParent(android.view.View)>
<ch.qos.logback.core.net.ssl.SSLConfigurable: java.lang.String[] getDefaultProtocols()>
<com.google.android.gms.internal.measurement.zzkn: int zzd(java.lang.CharSequence,byte[],int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.authentication.aad.businessLogic.AadPhoneSignInSessionUseCase aadPhoneSignInSessionUseCase()>
<com.facebook.react.uimanager.events.EventDispatcher$1: int compare(com.facebook.react.uimanager.events.Event,com.facebook.react.uimanager.events.Event)>
<com.facebook.react.modules.dialog.DialogModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.react.uimanager.annotations.ReactProp: double defaultDouble()>
<com.fasterxml.jackson.core.JsonParser$Feature: void <init>(java.lang.String,int,boolean)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidth(float)>
<com.azure.authenticator.storage.database.DbAccount: boolean getAadNgcTotpEnabled()>
<com.facebook.react.modules.timepicker.TimePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.timepicker.TimePickerDialogModule)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig selfhostConfig()>
<android.graphics.Rect: boolean contains(int,int)>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void <init>()>
<com.google.android.gms.internal.measurement.zzkh: long zzf(java.lang.Object,long)>
<com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll: com.facebook.react.bridge.Promise access$000(com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll)>
<com.facebook.common.time.AwakeTimeSinceBootClock: void <init>()>
<com.google.android.gms.internal.measurement.zzmj: boolean zzb()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper generatePasswordInfoHelper()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: android.net.Uri createUriForPartialCacheKey(com.facebook.imagepipeline.request.ImageRequest)>
<com.evernote.android.job.work.JobProxyWorkManager: void <init>(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCBuilder: com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCBuilder service(android.app.Service)>
<com.google.android.gms.maps.internal.zzh: com.google.android.gms.dynamic.IObjectWrapper zzh(com.google.android.gms.internal.maps.zzt)>
<androidx.appcompat.widget.ListPopupWindow: void show()>
<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer: android.media.ExifInterface getExifInterface(android.net.Uri)>
<com.airbnb.lottie.utils.MiscUtils: void getPathFromData(com.airbnb.lottie.model.content.ShapeData,android.graphics.Path)>
<com.azure.authenticator.accounts.RestoreCapability: void addCapability(com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum)>
<com.facebook.react.views.text.FontMetricsUtil: com.facebook.react.bridge.WritableArray getFontMetrics(java.lang.CharSequence,android.text.Layout,android.text.TextPaint,android.content.Context)>
<com.airbnb.lottie.LottieDrawable: void buildCompositionLayer()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback: void onScaleChanged()>
<ch.qos.logback.core.pattern.FormatInfo: void <init>()>
<com.facebook.react.modules.core.ReactChoreographer: void access$700(com.facebook.react.modules.core.ReactChoreographer)>
<com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel: androidx.lifecycle.LiveData getDeviceIdStatus()>
<com.google.android.gms.internal.measurement.zzby: void <init>()>
<com.google.android.material.appbar.AppBarLayout: boolean shouldOffsetFirstChild()>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>
<okhttp3.Response: boolean isSuccessful()>
<com.google.android.gms.common.api.GoogleApiClient: void maybeSignOut()>
<com.facebook.common.memory.Pool: void release(java.lang.Object)>
<com.google.android.gms.measurement.api.AppMeasurementSdk: void <init>(com.google.android.gms.internal.measurement.zzbr)>
<com.microsoft.authenticator.mainactivity.abstraction.ShowcaseViewUtils: void displayShowcaseView(androidx.fragment.app.FragmentActivity,android.view.View,java.lang.String,java.lang.String,long)>
<com.google.android.gms.common.server.response.zad: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AccountPickerCallback: void <init>(androidx.appcompat.app.AppCompatActivity,com.azure.authenticator.authentication.msa.ui.AccountPickerCallback$ICompletion,java.lang.Iterable,com.microsoft.onlineid.AccountManager,int)>
<com.google.android.gms.internal.measurement.zzgh: void <init>()>
<androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>
<ch.qos.logback.classic.spi.PackagingDataCalculator: void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader)>
<com.google.crypto.tink.Registry: java.lang.Object wrap(com.google.crypto.tink.PrimitiveSet)>
<com.facebook.react.uimanager.ReactClippingViewGroupHelper: boolean getChildVisibleRectHelper(android.view.View,android.graphics.Rect,android.graphics.Point,android.view.View,java.lang.String)>
<com.google.android.material.bottomappbar.BottomAppBar: void replaceMenu(int)>
<com.google.android.material.transformation.ExpandableBehavior: int access$000(com.google.android.material.transformation.ExpandableBehavior)>
<com.facebook.react.views.scroll.ReactScrollView: void enableFpsListener()>
<com.google.android.gms.maps.model.PolygonOptions: int getFillColor()>
<com.microsoft.brooklyn.module.sync.SyncSDKConnector: void <init>(android.content.Context,com.microsoft.rialto.RialtoSyncManager,com.microsoft.brooklyn.module.sync.SDKInitHelper,com.microsoft.brooklyn.module.wstrust.WSTrustTicketProvider,com.microsoft.brooklyn.module.sync.PersonalDataChangedObserver)>
<com.google.common.base.Preconditions: java.lang.String badPositionIndexes(int,int,int)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment_MembersInjector: void injectStorage(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,com.azure.authenticator.storage.Storage)>
<com.google.android.gms.internal.measurement.zzjk: void zzI(com.google.android.gms.internal.measurement.zzis,java.lang.Object,java.lang.Object,long)>
<com.google.android.material.shape.MaterialShapeDrawable: void setCornerSize(float)>
<com.facebook.common.logging.FLog: void w(java.lang.Class,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$9: void <init>(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore,com.google.android.datatransport.runtime.TransportContext)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,boolean)>
<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>
<com.azure.authenticator.logging.VerifiableCredentialSdkLogConsumer: void <init>()>
<com.google.android.gms.common.api.internal.zabf: void <init>(android.os.Handler)>
<com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()>
<com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: java.lang.Boolean getResizingAllowedOverride()>
<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>
<com.facebook.imagepipeline.producers.NetworkFetcher: void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<com.google.android.gms.maps.internal.zzw: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getAccountName()>
<com.google.android.gms.internal.measurement.zzdq: void zzv(com.google.android.gms.internal.measurement.zzdq,int)>
<ch.qos.logback.core.joran.action.IADataForComplexProperty: void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String)>
<android.os.AsyncTask: void execute(java.lang.Runnable)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$$special$$inlined$viewModels$2: void <init>(androidx.activity.ComponentActivity)>
<com.evernote.android.job.JobRequest: void setScheduledAt(long)>
<com.google.android.gms.internal.measurement.zzdj: long zzm()>
<com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver: java.lang.String resolveCustomEventName(java.lang.String)>
<android.widget.ImageButton: int[] onCreateDrawableState(int)>
<com.facebook.react.uimanager.OnLayoutEvent: java.lang.String getEventName()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$initialize$3: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.enterprisedenylist.EnterpriseDenyListRefreshWorker_AssistedFactory enterpriseDenyListRefreshWorker_AssistedFactory()>
<okio.BufferedSource: long indexOf(okio.ByteString)>
<com.google.android.gms.internal.measurement.zzdu: void zzn(com.google.android.gms.internal.measurement.zzdu,java.lang.String)>
<com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry()>
<com.google.android.gms.internal.measurement.zzk: com.google.android.gms.internal.measurement.zzh zza()>
<com.google.android.gms.common.api.internal.zai: void zac(com.google.android.gms.common.api.Status)>
<com.google.android.gms.tasks.zzx: void <init>(com.google.android.gms.tasks.zzw,java.util.concurrent.Callable)>
<com.facebook.react.views.text.TextInlineViewPlaceholderSpan: int getWidth()>
<com.google.android.gms.internal.measurement.zzkn: int zzl(int,int,int)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String getRegexForShortDaysOfTheWeek()>
<com.google.android.gms.internal.maps.zzk: com.google.android.gms.maps.model.LatLngBounds getBounds()>
<ch.qos.logback.core.joran.JoranConfiguratorBase: void <init>()>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$AndroidClientInfoEncoder: void encode(com.google.android.datatransport.cct.internal.AndroidClientInfo,com.google.firebase.encoders.ObjectEncoderContext)>
<com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel: void processLaunchParametersAsync(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.mainactivity.abstraction.ActivityStartIntentHandler)>
<com.google.android.gms.maps.internal.zzbz: android.content.Context zzb(android.content.Context)>
<com.google.android.gms.internal.measurement.zzll: com.google.android.gms.internal.measurement.zzlm zzd()>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void <init>()>
<com.facebook.imagepipeline.cache.CacheKeyFactory: com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,android.net.Uri,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzp: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: boolean isGingerbreadDecoderEnabled()>
<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig: void <init>()>
<com.google.android.gms.common.stats.ConnectionTracker: boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int)>
<com.google.android.datatransport.runtime.logging.Logging: void w(java.lang.String,java.lang.String,java.lang.Object)>
<com.google.android.material.animation.ImageMatrixProperty: void <init>()>
<com.google.android.gms.internal.cloudmessaging.zze: void <init>(android.os.Looper)>
<com.google.android.gms.internal.location.zzaa: com.google.android.gms.common.api.Status getStatus()>
<com.google.android.material.datepicker.CalendarItemStyle: void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzae zzd()>
<com.facebook.react.modules.core.JavaScriptTimerManager: void callIdleCallbacks(double)>
<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>
<java.lang.Float: float floatValue()>
<com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)>
<com.google.android.gms.maps.SupportMapFragment$zzb: void <init>(androidx.fragment.app.Fragment)>
<com.google.android.gms.measurement.internal.zzaf: boolean zzi(com.google.android.gms.measurement.internal.zzaf)>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object)>
<com.google.android.material.button.MaterialButtonHelper: void setShouldDrawSurfaceColorStroke(boolean)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4: void set(android.view.View,java.lang.Float)>
<ch.qos.logback.core.net.QueueFactory: void <init>()>
<com.google.android.gms.internal.location.zzs: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.common.util.Clock zzax()>
<com.google.android.gms.auth.api.identity.zzl$zzc: void <init>(com.google.android.gms.auth.api.identity.zzn)>
<com.microsoft.workaccount.workplacejoin.WorkplaceJoin: void isWorkplaceJoinedAsync(android.content.Context,com.microsoft.workaccount.workplacejoin.WorkplaceJoin$OnWorkplaceJoinStatusCallback)>
<com.google.android.gms.common.GoogleApiAvailability: java.lang.String getErrorString(int)>
<com.google.android.gms.internal.measurement.zzja: void zzR(java.lang.Object,com.google.android.gms.internal.measurement.zzha)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$generateBackupSilentlyAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.action.ActionStateManager: com.azure.authenticator.storage.Storage access$getStorage$p(com.azure.authenticator.ui.action.ActionStateManager)>
<com.azure.authenticator.accounts.GenericAccount: void setId(long)>
<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zzf(int)>
<com.google.android.gms.internal.base.zal: java.util.concurrent.ExecutorService zac(java.util.concurrent.ThreadFactory,int)>
<com.google.android.gms.internal.measurement.zzkt: com.google.android.gms.internal.measurement.zzku zzc()>
<com.google.android.gms.common.internal.GmsClientSupervisor: boolean bindService(android.content.ComponentName,android.content.ServiceConnection,java.lang.String)>
<com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fromInputStream(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String)>
<com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()>
<android.graphics.Canvas: int getWidth()>
<com.microsoft.authenticator.core.common.CoroutineTimer: void cancelTimer()>
<com.azure.authenticator.ui.action.ActionStateManager_Factory: com.azure.authenticator.ui.action.ActionStateManager get()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: androidx.lifecycle.LiveData getSelfhostControlResponseObject()>
<android.widget.GridView: int getFirstVisiblePosition()>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zzd()>
<com.adjust.sdk.PackageHandler: void writePackageQueueI()>
<ch.qos.logback.core.subst.Node$Type: ch.qos.logback.core.subst.Node$Type[] values()>
<com.google.android.gms.tasks.zzy: void <init>(java.util.Collection)>
<com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])>
<com.google.android.material.button.MaterialButtonToggleGroup: void adjustChildMarginsAndUpdateLayout()>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>
<com.facebook.cache.common.SimpleCacheKey: void <init>(java.lang.String)>
<android.widget.ScrollView: void invalidate()>
<com.facebook.react.modules.blob.BlobModule$2: void <init>(com.facebook.react.modules.blob.BlobModule)>
<kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>
<androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>
<com.google.android.gms.internal.measurement.zzkz: long zzH()>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<android.graphics.Matrix: boolean preRotate(float)>
<com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase: void <init>(com.azure.authenticator.storage.database.AccountStorage,com.microsoft.powerlift.PowerLift,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.measurement.internal.zzdv: java.lang.Object zzb(java.lang.Object)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)>
<com.google.android.material.resources.TextAppearance: void createFallbackFont()>
<com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)>
<com.facebook.react.common.SingleThreadAsserter: void assertNow()>
<com.adjust.sdk.AdjustInstance$8: void <init>(com.adjust.sdk.AdjustInstance,android.content.Context,java.lang.String)>
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>
<com.microsoft.brooklyn.ui.importCred.ImportPasswordsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher: void <init>(com.facebook.react.modules.core.ReactChoreographer)>
<com.facebook.soloader.UnpackingSoSource: void prepare(int)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder)>
<okio.Buffer: long size()>
<com.google.common.base.CharMatcher: int indexIn(java.lang.CharSequence,int)>
<com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: long getCount()>
<com.facebook.react.TurboReactPackage$ModuleHolderProvider: void <init>(com.facebook.react.TurboReactPackage,java.lang.String,com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>
<com.google.common.base.Present: void <init>(java.lang.Object)>
<com.google.android.datatransport.runtime.EventInternal: java.util.Map getMetadata()>
<com.google.android.material.internal.TextDrawableHelper: java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeController build()>
<com.google.android.gms.common.images.zab: void <init>(com.google.android.gms.common.images.ImageManager,com.google.android.gms.common.images.zag)>
<android.view.View: float getAlpha()>
<com.adjust.sdk.AdjustInstance: void savePushToken(java.lang.String,android.content.Context)>
<com.facebook.common.internal.Objects: com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)>
<android.widget.ImageView: int getId()>
<com.azure.authenticator.authentication.msa.ui.ActivityState: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow,boolean,java.lang.String)>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.manager.FontAssetManager getFontAssetManager()>
<com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormatChecker getInstance()>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzaa zzo(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.zzy: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapClickListener)>
<com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void <init>(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.common.config.GservicesValue: java.lang.Object zza(java.lang.String)>
<com.google.android.gms.internal.base.zai: int getChangingConfigurations()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1: void <init>(com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2,kotlin.jvm.internal.Ref$ObjectRef,com.microsoft.onlineid.sdk.extension.Session,com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType,androidx.work.ForegroundInfo,com.azure.authenticator.notifications.AbstractNotification$Action,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthenticationTimeTelemetry,kotlin.coroutines.Continuation)>
<android.graphics.Rect: boolean intersect(int,int,int,int)>
<com.azure.authenticator.ui.action.ActionStateManager$refreshActionsIfNecessaryAsync$1: void <init>(com.azure.authenticator.ui.action.ActionStateManager)>
<com.google.android.gms.dynamite.zzp: com.google.android.gms.dynamic.IObjectWrapper zze(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)>
<java.util.PriorityQueue: boolean isEmpty()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function: java.lang.Object apply(java.lang.Object)>
<com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: void <init>(java.util.List)>
<com.fasterxml.jackson.core.io.IOContext: void _verifyRelease(byte[],byte[])>
<com.airbnb.lottie.model.layer.BaseLayer: void applyAddMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<ch.qos.logback.classic.LoggerContext: void updateLoggerContextVO()>
<android.widget.Spinner: int getSelectedItemPosition()>
<com.google.android.material.datepicker.Month: int monthsUntil(com.google.android.material.datepicker.Month)>
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.google.android.gms.internal.measurement.zzic: com.google.android.gms.internal.measurement.zzib zzd()>
<com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener: void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer)>
<ch.qos.logback.classic.spi.LoggerContextVO: java.lang.String getName()>
<com.google.android.gms.maps.model.CircleOptions: float getStrokeWidth()>
<com.azure.authenticator.storage.MfaSdkAccountTranslator: com.azure.authenticator.storage.database.DbAccount mfaSdkAccountToDbAccount$app_productionRelease(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount)>
<com.adjust.sdk.ActivityHandler: void endI()>
<com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$trySilentlyRefreshPolicy$1: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,kotlin.coroutines.Continuation)>
<com.google.common.base.CaseFormat: java.lang.String normalizeFirstWord(java.lang.String)>
<com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)>
<com.google.android.material.shape.ShapePath: com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix)>
<com.google.android.gms.common.internal.zay: void <init>()>
<com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>
<ch.qos.logback.core.recovery.RecoveryCoordinator: long getBackoffCoefficient()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer_Factory create(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: java.lang.String convert(java.lang.Object)>
<com.google.android.gms.tasks.zzp: void onCanceled()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onCreate(android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzac: void <init>()>
<com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toTask(com.google.android.gms.common.api.PendingResult,com.google.android.gms.common.internal.PendingResultUtil$ResultConverter)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker access$1100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.airbnb.lottie.network.NetworkFetcher: void <init>(com.airbnb.lottie.network.NetworkCache,com.airbnb.lottie.network.LottieNetworkFetcher)>
<com.facebook.imagepipeline.memory.NoOpPoolStatsTracker: void <init>()>
<com.azure.authenticator.notifications.aad.AadNgcNotification$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zzd()>
<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector: boolean hasEventBetweenTimestamps(com.facebook.react.common.LongArray,long,long)>
<com.google.android.material.bottomappbar.BottomAppBar: void access$1600(com.google.android.material.bottomappbar.BottomAppBar)>
<com.google.android.gms.internal.measurement.zzha: void zzn(int,com.google.android.gms.internal.measurement.zzgs)>
<android.widget.LinearLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.ShapeDrawable: void setTint(int)>
<com.google.android.material.button.MaterialButton$SavedState$1: com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.google.android.gms.internal.measurement.zzea: void <init>(com.google.android.gms.internal.measurement.zzdv)>
<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener: void reportViewVisible(long)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: void access$200(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource)>
<java.io.PrintWriter: void println(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,androidx.fragment.app.Fragment)>
<com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)>
<com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1)>
<com.azure.authenticator.databinding.FragmentAddCredentialBinding: com.azure.authenticator.databinding.FragmentAddCredentialBinding bind(android.view.View)>
<com.adjust.sdk.SharedPreferencesManager: boolean getInstallTracked()>
<com.adjust.sdk.scheduler.TimerOnce: void cancel(boolean)>
<com.facebook.react.modules.camera.ImageEditingManager: void access$500(android.content.Context,android.net.Uri,java.io.File)>
<com.google.android.gms.common.api.internal.zae: void zad(java.lang.Exception)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$$special$$inlined$navArgs$1: void <init>(androidx.fragment.app.Fragment)>
<com.google.android.material.transformation.FabTransformationBehavior$2: void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View)>
<com.google.android.gms.internal.measurement.zzdj: com.google.android.gms.internal.measurement.zzdu zzh(int)>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.android.gms.common.api.Api$Client: boolean requiresGooglePlayServices()>
<ch.qos.logback.core.joran.action.NestedComplexPropertyIA: void <init>()>
<com.google.android.material.datepicker.UtcDates: java.text.DateFormat getFormat(int,java.util.Locale)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzo()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.platform.PlatformDecoder getPlatformDecoder()>
<com.adjust.sdk.IAttributionHandler: void checkSessionResponse(com.adjust.sdk.SessionResponseData)>
<com.google.android.gms.tasks.zzd: void <init>(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzw)>
<ch.qos.logback.classic.joran.action.RootLoggerAction: void <init>()>
<com.azure.authenticator.utils.TestActivity_GeneratedInjector: void injectTestActivity(com.azure.authenticator.utils.TestActivity)>
<com.facebook.react.common.LongArray: void growArrayIfNeeded()>
<android.widget.EditText: void setSelectAllOnFocus(boolean)>
<com.facebook.react.modules.core.JavaTimerManager: void onHostResume()>
<com.google.android.gms.common.Feature: java.lang.String getName()>
<com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig: boolean isEnterNumberUXAllowedForTenant(java.lang.String)>
<com.google.android.gms.maps.SupportMapFragment: void <init>()>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<com.google.android.gms.measurement.internal.zzt: void <init>(com.google.android.gms.measurement.internal.zzy,java.lang.String,com.google.android.gms.internal.measurement.zzdq,java.util.BitSet,java.util.BitSet,java.util.Map,java.util.Map,com.google.android.gms.measurement.internal.zzs)>
<com.google.android.material.internal.CollapsingTextHelper: void clearTexture()>
<com.facebook.react.uimanager.ViewAtIndex: void <init>(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.azure.authenticator.notifications.msa.MsaProtectionNotification msaProtectionNotification()>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: retrofit2.Retrofit retrofit()>
<com.google.android.gms.internal.measurement.zzmv: java.lang.String zzf()>
<android.widget.ImageView: void setImageURI(android.net.Uri)>
<com.adjust.sdk.PackageHandler: void initI()>
<ch.qos.logback.core.status.StatusUtil: java.util.List filterStatusListByTimeThreshold(java.util.List,long)>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.Producer)>
<com.google.android.material.tabs.TabLayout: int getTabMaxWidth()>
<com.google.android.material.card.MaterialCardViewHelper: void setCornerRadius(float)>
<ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.lang.String getProvider()>
<com.microsoft.did.feature.backuprestore.viewlogic.RestorePromptFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.backuprestore.viewlogic.RestorePromptFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<android.widget.CompoundButton: android.content.res.Resources getResources()>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.EntropyUseCase: void <init>()>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<com.facebook.yoga.YogaWrap: int intValue()>
<com.google.android.gms.internal.safetynet.zzi: void zzc(com.google.android.gms.internal.safetynet.zzg)>
<com.azure.authenticator.ui.action.CreateBackupAction: boolean containsBackupableAccounts(android.content.Context)>
<androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()>
<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>
<com.facebook.react.uimanager.UIManagerModule$4: void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,int,int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void finishActivityWithResult(com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode)>
<com.google.android.gms.safetynet.SafetyNetApi$SafeBrowsingResult: java.util.List getDetectedThreats()>
<com.facebook.react.views.viewpager.ReactViewPager$Adapter: void removeViewAt(int)>
<com.evernote.android.job.JobRequest: com.evernote.android.job.JobRequest fromCursor(android.database.Cursor)>
<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: com.facebook.common.references.CloseableReference createBitmap(int,int)>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackException(java.lang.Throwable)>
<com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzc(android.os.Parcel,int)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUserRecoverableError(int)>
<androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()>
<androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: int getIdentifier(android.content.Context,java.lang.String)>
<com.facebook.react.ReactPackageLogger: void startProcessPackage()>
<com.google.android.material.button.MaterialButtonToggleGroup$1: int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton)>
<com.google.android.material.card.MaterialCardViewHelper: int getStrokeColor()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void removeRequestListener(com.facebook.imagepipeline.listener.RequestListener)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBigDecimalArray(android.os.Parcel,int,java.math.BigDecimal[],boolean)>
<com.facebook.yoga.YogaBaselineFunction: float baseline(com.facebook.yoga.YogaNode,float,float)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void handleBackupError$default(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.backup.entities.BackupRestoreError,java.lang.Exception,java.lang.String,int,java.lang.Object)>
<com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void resetArray(double[])>
<android.graphics.PointF: void <init>()>
<com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: void initMeasureFunction()>
<com.google.android.material.shape.MaterialShapeDrawable$1: void <init>(com.google.android.material.shape.MaterialShapeDrawable)>
<com.google.android.material.tabs.TabLayout: void updateTabViews(boolean)>
<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>
<com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)>
<com.google.android.datatransport.runtime.scheduling.Scheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal,com.google.android.datatransport.TransportScheduleCallback)>
<com.adjust.sdk.ActivityHandler: void gotOptOutResponseI()>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: void increment(long,long)>
<com.google.android.gms.internal.measurement.zzcp: java.util.List zzh()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: void onResume()>
<androidx.appcompat.view.menu.MenuItemImpl: int getItemId()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureSelfhostControls$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzhm: com.google.android.gms.internal.measurement.zzhe zza()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase access$getMsaRegistrationUseCase$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_HiltModules$KeyModule: java.lang.String provide()>
<com.facebook.react.modules.network.RequestBodyUtil: com.facebook.react.modules.network.ProgressRequestBody createProgressRequest(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener)>
<com.microsoft.brooklyn.module.logging.BrooklynLogger: void v(java.lang.String)>
<com.microsoft.authenticator.reactnative.modules.PowerLiftPackage: void <init>(android.content.Context)>
<com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemHorizontalTranslationEnabled(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxBlobByteSizePerRow(int)>
<com.google.android.gms.cloudmessaging.zza: void <init>(android.os.IBinder)>
<android.app.ActivityManager: int getMemoryClass()>
<androidx.work.impl.background.systemjob.SystemJobService: void onCreate()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder()>
<com.airbnb.lottie.LottieComposition: int getMaskAndMatteCount()>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gms.common.wrappers.PackageManagerWrapper: int checkPermission(java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState: void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.azure.authenticator.ui.action.ReEnableAutoBackupAction_Factory: com.azure.authenticator.ui.action.ReEnableAutoBackupAction newInstance(com.microsoft.authenticator.backup.abstraction.AutoBackupManager)>
<com.azure.authenticator.storage.database.AccountStorage: void <init>(android.content.Context)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzv(long)>
<android.widget.EditText: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
<java.lang.String: int compareTo(java.lang.String)>
<com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String toString()>
<com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getYogaSize(float,float)>
<com.google.android.gms.maps.internal.zzat: void zzb(com.google.android.gms.internal.maps.zzt)>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>
<com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$ensureBeginTransaction$16(java.lang.Throwable)>
<com.google.android.gms.cloudmessaging.zzo: void <init>(android.os.IBinder)>
<com.google.android.gms.common.data.DataHolder: int getCount()>
<androidx.viewpager.widget.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzcp zzk()>
<com.adjust.sdk.ActivityHandler: boolean deleteActivityState(android.content.Context)>
<com.google.crypto.tink.KeysetHandle: com.google.crypto.tink.proto.Keyset decrypt(com.google.crypto.tink.proto.EncryptedKeyset,com.google.crypto.tink.Aead)>
<java.lang.Thread: void setName(java.lang.String)>
<com.google.android.gms.measurement.internal.zzfi: java.util.concurrent.Semaphore zzl(com.google.android.gms.measurement.internal.zzfi)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: android.location.Location getMyLocation()>
<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>
<com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()>
<com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder zaa(android.accounts.Account)>
<com.google.android.gms.internal.maps.zza: void <init>(android.os.IBinder,java.lang.String)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzg zzX(com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$5: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.CredentialViewModel access$12300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getWindowDisplayMetrics()>
<com.google.android.material.button.MaterialButton: void setCheckable(boolean)>
<com.google.android.material.animation.MotionTiming: void apply(android.animation.Animator)>
<com.facebook.common.logging.LoggingDelegate: void i(java.lang.String,java.lang.String)>
<com.azure.authenticator.storage.database.AppDatabase$Companion: com.azure.authenticator.storage.database.AppDatabase getInstance(android.content.Context)>
<com.airbnb.lottie.model.animatable.AnimatableTransform: com.airbnb.lottie.model.animatable.AnimatableFloatValue getEndOpacity()>
<com.google.android.gms.internal.measurement.zzmf: void <init>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6: void <init>(java.lang.Class,java.lang.String)>
<com.google.android.material.internal.ThemeEnforcement: void checkTheme(android.content.Context,int[],java.lang.String)>
<com.adjust.sdk.AdjustInstance: void setPushToken(java.lang.String)>
<com.facebook.react.views.textinput.ReactEditText: void setBorderWidth(int,float)>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void <init>(java.lang.Class)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: boolean isPolicyEvaluationNeeded()>
<com.google.common.collect.MapMakerInternalMap: void clear()>
<ch.qos.logback.classic.spi.ClassPackagingData: boolean isExact()>
<com.facebook.react.modules.network.TLSSocketFactory: java.net.Socket enableTLSOnSocket(java.net.Socket)>
<com.google.android.material.textfield.TextInputLayout: void closeCutout()>
<com.google.common.collect.MapMakerInternalMap$HashIterator: boolean nextInTable()>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: boolean isProgressiveRenderingEnabled()>
<com.airbnb.lottie.utils.LottieValueAnimator: void setMinAndMaxFrames(float,float)>
<com.google.common.base.CharMatcher$None: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider generatePasswordsViewModelProvider()>
<com.facebook.react.jscexecutor.JSCExecutor: void <init>(com.facebook.react.bridge.ReadableNativeMap)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.database.Cursor: void close()>
<com.google.android.gms.internal.safetynet.zzg: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zza)>
<ch.qos.logback.core.rolling.helper.IntParser: void <init>(ch.qos.logback.core.rolling.helper.FileNamePattern)>
<com.google.android.gms.measurement.internal.zzia: void <init>(com.google.android.gms.measurement.internal.zzib)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$onTicketAcquired$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<android.widget.DatePicker: void setSpinnersShown(boolean)>
<com.airbnb.lottie.utils.MiscUtils: int floorMod(int,int)>
<com.google.android.gms.location.zzaq: void <init>(com.google.android.gms.location.GeofencingRequest,android.app.PendingIntent)>
<android.database.Cursor: boolean isAfterLast()>
<com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)>
<com.google.android.gms.internal.maps.zzt: void setAnchor(float,float)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void setRunning(boolean)>
<ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler: void <init>(ch.qos.logback.core.net.DefaultSocketConnector$1)>
<com.facebook.imagepipeline.memory.MemoryChunkPool: boolean isReusable(com.facebook.imagepipeline.memory.MemoryChunk)>
<com.azure.authenticator.logging.ExternalLogger$Companion: int getAdalLogLevel(com.microsoft.aad.adal.Logger$LogLevel)>
<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>
<java.io.RandomAccessFile: void close()>
<ch.qos.logback.core.subst.Tokenizer: java.util.List tokenize()>
<androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface: void setEnabled(android.view.View,boolean)>
<com.azure.authenticator.databinding.FragmentMsaProtectionBinding: com.azure.authenticator.databinding.FragmentMsaProtectionBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.azure.authenticator.ui.MainActivity$onResume$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.measurement.zzjk: int zzn(java.util.List)>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$2: void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int)>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: com.microsoft.onlineid.ExtensionAccountManager getAccountManager()>
<ch.qos.logback.classic.joran.action.ReceiverAction: void <init>()>
<com.google.android.gms.maps.model.RuntimeRemoteException: void <init>(android.os.RemoteException)>
<com.airbnb.lottie.LottieDrawable$8: void <init>(com.airbnb.lottie.LottieDrawable,java.lang.String)>
<android.util.JsonWriter: android.util.JsonWriter beginObject()>
<com.facebook.react.ReactInstanceManager: void recreateReactContextInBackground(com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader)>
<java.lang.Float: float parseFloat(java.lang.String)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier: void <init>(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig)>
<kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)>
<com.facebook.react.uimanager.MatrixMathHelper: void applyScaleX(double[],double)>
<javax.net.ssl.SSLSocket: void sendUrgentData(int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$networkErrorDialogBuilder$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.microsoft.authenticator.core.logging.BaseLogger: void e(java.lang.String)>
<com.google.android.gms.auth.api.identity.SavePasswordRequest$Builder: void <init>()>
<com.airbnb.lottie.LottieDrawable: void drawWithOriginalAspectRatio(android.graphics.Canvas)>
<com.google.common.collect.MapMakerInternalMap$InternalEntryHelper: com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeProgressLayoutBinding bind(android.view.View)>
<com.facebook.react.modules.core.JavaTimerManager: java.util.concurrent.atomic.AtomicBoolean access$000(com.facebook.react.modules.core.JavaTimerManager)>
<com.facebook.react.ReactAndroidHWInputDeviceHelper: void <init>(com.facebook.react.ReactRootView)>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder disableDismiss(boolean)>
<com.google.android.gms.internal.measurement.zzki: void zzf(byte,byte,byte,byte,char[],int)>
<com.evernote.android.job.v14.PlatformAlarmServiceExact: void <init>()>
<com.evernote.android.job.JobRequest: android.content.Context context()>
<com.google.android.gms.common.server.response.FastJsonResponse: java.util.Map getFieldMappings()>
<com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: android.view.View inflateContentView(int)>
<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
<ch.qos.logback.core.FileAppender: boolean openFile(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaFcmChangeDeviceTokenWorker_AssistedFactory access$15500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.maps.zzq: boolean zzb(com.google.android.gms.internal.maps.zzq)>
<com.google.android.gms.internal.maps.zzh: boolean zzb(com.google.android.gms.internal.maps.zzh)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>
<com.facebook.systrace.Systrace: void unregisterListener(com.facebook.systrace.TraceListener)>
<androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.microsoft.authenticator.core.protocol.CloudEnvironment$Companion: com.microsoft.authenticator.core.protocol.CloudEnvironment getCloudFromAuthority(java.lang.String)>
<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: com.facebook.imagepipeline.producers.Consumer createConsumer()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier access$200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>
<android.widget.GridView: void onAttachedToWindow()>
<android.view.ViewGroup: void setClickable(boolean)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7: void <init>(java.lang.Class,java.lang.String)>
<com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel: void initializeSync$default(com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel,long,com.microsoft.authenticator.msa.MsaBaseAccountManager,androidx.appcompat.app.AppCompatActivity,int,java.lang.Object)>
<com.facebook.drawee.drawable.FadeDrawable: void <init>(android.graphics.drawable.Drawable[])>
<android.os.WorkSource: boolean add(android.os.WorkSource)>
<ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState: void <init>(java.lang.String,int)>
<com.google.android.gms.auth.api.signin.internal.zaa: void <init>()>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzfi zzau()>
<androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)>
<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
<androidx.sqlite.db.SupportSQLiteDatabase: int getVersion()>
<com.google.android.gms.internal.measurement.zzdj: void zzan(com.google.android.gms.internal.measurement.zzdj,com.google.android.gms.internal.measurement.zzdb)>
<com.google.android.gms.common.server.converter.zac: void <init>(int,java.lang.String,int)>
<com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder getNativeImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)>
<com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)>
<android.widget.CheckedTextView: void setChecked(boolean)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: com.azure.authenticator.ui.backup.BackupFlowActivity$Flow getFlow()>
<com.adjust.sdk.ActivityHandler: void <init>(com.adjust.sdk.AdjustConfig)>
<ch.qos.logback.core.net.SMTPAppenderBase$SenderRunnable: void <init>(ch.qos.logback.core.net.SMTPAppenderBase,ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object)>
<com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>
<com.azure.authenticator.accounts.GenericAccount: boolean isAadMfaNgcPushNotificationsWithoutUsefulTotpAccount()>
<com.google.android.material.badge.BadgeUtils: void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View)>
<com.google.android.material.navigation.NavigationBarMenuView: void setIconTintList(android.content.res.ColorStateList)>
<ch.qos.logback.classic.util.LogbackMDCAdapter: boolean wasLastOpReadOrNull(java.lang.Integer)>
<com.google.android.material.snackbar.BaseTransientBottomBar$7$1: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$7)>
<com.google.android.material.datepicker.MonthsPagerAdapter: com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
<bolts.Task: boolean trySetCancelled()>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.location.LocationSettingsStates getLocationSettingsStates()>
<android.view.MotionEvent: int findPointerIndex(int)>
<com.azure.authenticator.ui.MainActivity: void onStop()>
<com.google.android.datatransport.runtime.backends.CreationContext: android.content.Context getApplicationContext()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void access$handleMsaSessionResult(com.azure.authenticator.ui.authentication.MsaSessionActivity,com.microsoft.authenticator.authentication.msa.entities.MsaOperationResult,com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void setDateInCurrentPeriod(java.util.Date)>
<android.widget.LinearLayout: boolean isHovered()>
<android.content.IntentSender: java.lang.String getCreatorPackage()>
<com.facebook.imagepipeline.cache.BufferedDiskCache$4: void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey)>
<com.google.android.gms.tasks.zzi: void <init>(com.google.android.gms.tasks.zzj,com.google.android.gms.tasks.Task)>
<com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()>
<com.google.android.gms.common.zzz: void <init>(java.lang.String,long,com.google.android.gms.internal.common.zzu,com.google.android.gms.internal.common.zzu,com.google.android.gms.common.zzx)>
<com.facebook.react.animated.InterpolationAnimatedNode: double interpolate(double,double,double,double,double,java.lang.String,java.lang.String)>
<com.facebook.imagepipeline.image.CloseableImage: com.facebook.imagepipeline.image.QualityInfo getQualityInfo()>
<com.google.android.gms.internal.base.zal: java.util.concurrent.ExecutorService zaa(int,int)>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>
<com.google.android.material.datepicker.DateSelector: int getDefaultThemeResId(android.content.Context)>
<com.facebook.drawee.drawable.FadeDrawable: void invalidateSelf()>
<com.evernote.android.job.JobStorage: void closeCursor(android.database.Cursor)>
<com.google.android.gms.internal.measurement.zzcf: void <init>()>
<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>
<com.azure.authenticator.databinding.ThirdPartyNoticeBinding: com.azure.authenticator.databinding.ThirdPartyNoticeBinding bind(android.view.View)>
<com.google.android.gms.common.api.internal.zaap: void <init>(com.google.android.gms.common.api.internal.zaar,com.google.android.gms.common.api.internal.zaah)>
<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>
<com.adjust.sdk.Util: java.lang.String getSdkVersion()>
<com.google.android.material.bottomappbar.BottomAppBar: android.view.View findDependentView()>
<com.microsoft.aad.adal.AuthenticationContext: java.lang.String getVersionName()>
<com.google.android.gms.auth.account.zzf: void <init>()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: ch.qos.logback.core.net.ssl.KeyStoreFactoryBean getKeyStore()>
<com.azure.authenticator.accounts.AccountCapability: boolean isAadNgcNotification()>
<com.azure.authenticator.storage.database.AccountStorage: void <init>(com.azure.authenticator.storage.database.AppDatabase)>
<com.google.android.material.internal.DescendantOffsetUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>
<android.view.ViewGroup: int getSuggestedMinimumHeight()>
<com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)>
<com.google.android.gms.internal.measurement.zzp: void resetAnalyticsData(long)>
<com.microsoft.authenticator.rootdetection.di.RootDetectionModule_ProvideSafetyNetClientFactory: com.google.android.gms.safetynet.SafetyNetClient provideSafetyNetClient(com.microsoft.authenticator.rootdetection.di.RootDetectionModule,android.content.Context)>
<java.lang.Character: int codePointAt(java.lang.CharSequence,int)>
<com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$200(com.facebook.react.animated.NativeAnimatedModule)>
<com.facebook.yoga.YogaDirection: int intValue()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<com.google.android.gms.common.images.ImageManager: java.util.concurrent.ExecutorService zai(com.google.android.gms.common.images.ImageManager)>
<com.google.android.gms.common.api.internal.zabl: boolean zao()>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzkd zza(android.content.Context)>
<com.airbnb.lottie.parser.moshi.JsonDataException: void <init>(java.lang.String)>
<com.google.android.gms.internal.measurement.zzgz: void zzC()>
<com.google.android.gms.maps.zzz: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapLongClickListener)>
<java.lang.Throwable: java.lang.Throwable getCause()>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzc()>
<com.facebook.imagepipeline.decoder.ImageDecoderConfig: java.util.Map getCustomImageDecoders()>
<com.facebook.react.modules.fresco.ReactNetworkImageRequest: void <init>(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.measurement.internal.zzai: java.lang.String[] zzS()>
<java.util.Vector: void <init>(int)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void maybeNotifyOnFailure(java.lang.Throwable)>
<java.lang.Class: java.lang.Package getPackage()>
<com.azure.authenticator.storage.Storage: long getMsaRefreshUserDaWorkerLastExecutionTimeKey()>
<com.google.android.gms.internal.maps.zzt: void remove()>
<com.google.android.material.shape.ShapeAppearancePathProvider: void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)>
<com.google.android.gms.measurement.internal.zzkf: void zzH(java.lang.StringBuilder,int,java.lang.String,com.google.android.gms.internal.measurement.zzcd)>
<android.widget.CheckBox: void onFocusChanged(boolean,int,android.graphics.Rect)>
<java.util.regex.Matcher: java.lang.String group(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<android.widget.Button: void setEllipsize(android.text.TextUtils$TruncateAt)>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.Feature[] getRequiredFeatures()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$showAddMsaAccountDialog$addMsaAccountDialogBuilder$2: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity)>
<com.google.android.gms.internal.location.zzaj: void <init>()>
<com.facebook.react.uimanager.MatrixMathHelper: void multiplyVectorByMatrix(double[],double[],double[])>
<com.facebook.react.uimanager.ViewManager: java.lang.String getName()>
<com.google.crypto.tink.KeyTypeManager: java.lang.Class firstSupportedPrimitiveClass()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipComment()>
<com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)>
<com.google.android.material.datepicker.YearGridAdapter: int getPositionForYear(int)>
<com.google.android.material.bottomappbar.BottomAppBar: void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<android.view.View: void setClickable(boolean)>
<com.google.android.gms.safetynet.zza: void <init>(java.lang.String)>
<com.microsoft.authenticator.authentication.aad.businessLogic.AadPhoneSignInSessionUseCase: com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails parseAuthDetails(java.lang.String)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void access$000(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenRefreshWorker_AssistedFactory access$15400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.material.resources.TextAppearance: boolean shouldLoadFontSynchronously(android.content.Context)>
<com.microsoft.authenticator.core.common.StringExtensionsKt: java.lang.String orDefaultValueIfEmpty(java.lang.String,java.lang.String)>
<com.google.android.gms.common.internal.zag: void zaa()>
<com.facebook.drawee.controller.ControllerListener: void onIntermediateImageFailed(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.common.internal.Preconditions: void checkNotMainThread()>
<com.adjust.sdk.ActivityHandler: void access$2200(com.adjust.sdk.ActivityHandler,java.lang.String)>
<com.google.android.gms.common.config.zza: void <init>(java.lang.String,java.lang.Boolean)>
<androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)>
<com.facebook.common.internal.Closeables: void closeQuietly(java.io.InputStream)>
<com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: void <init>(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,com.facebook.imagepipeline.memory.BucketMap$1)>
<okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.LottieComposition getComposition()>
<com.evernote.android.job.util.Device: com.evernote.android.job.util.BatteryStatus getBatteryStatus(android.content.Context)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$denyAadNgcSessionSuspend$2: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$2shH9_Q8FO4hud72iUH3fIAsD14': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.azure.authenticator.logging.ExternalLogger$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: com.google.android.datatransport.runtime.scheduling.DefaultScheduler get()>
<com.adjust.sdk.ActivityPackage: void setPath(java.lang.String)>
<androidx.room.RoomDatabase: void setTransactionSuccessful()>
<com.facebook.imagepipeline.producers.FetchState: com.facebook.imagepipeline.producers.Consumer getConsumer()>
<com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)>
<com.google.crypto.tink.KeyManagerImpl: com.google.crypto.tink.KeyManagerImpl$KeyFactoryHelper keyFactoryHelper()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)>
<com.facebook.imagepipeline.memory.BasePool: void trimToSize(int)>
<com.google.android.gms.internal.auth-api.zzd: android.os.Parcel zzc()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.lang.String zal(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: boolean getDevSupportEnabled()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordChallengeFragment injectBackupPasswordChallengeFragment2(com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordChallengeFragment)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setDisabled(android.view.View,boolean)>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.AadAccount getAadAccount(java.lang.String,java.lang.String)>
<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnInfoWindowClickListener(com.google.android.gms.maps.internal.zzab)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: android.text.TextWatcher access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<com.facebook.react.bridge.CatalystInstanceImpl$1$1: void <init>(com.facebook.react.bridge.CatalystInstanceImpl$1)>
<com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: void <init>(com.facebook.react.bridge.JavaMethodWrapper$1)>
<ch.qos.logback.core.rolling.helper.Compressor: void <init>(ch.qos.logback.core.rolling.helper.CompressionMode)>
<com.google.android.gms.internal.measurement.zzha: void zzl(int,boolean)>
<com.adjust.sdk.AttributionHandler: void checkAttributionResponseI(com.adjust.sdk.IActivityHandler,com.adjust.sdk.AttributionResponseData)>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean access$600(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean)>
<com.airbnb.lottie.parser.ShapeDataParser: void <init>()>
<com.azure.authenticator.storage.database.migration.Migration24To25$Companion: void <init>()>
<ch.qos.logback.core.rolling.helper.FileProvider: boolean isDirectory(java.io.File)>
<ch.qos.logback.classic.pattern.MethodOfCallerConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.airbnb.lottie.utils.LottieValueAnimator: void setRepeatMode(int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel$allAccountsObserver$1: void onChanged(java.util.List)>
<com.google.android.gms.internal.measurement.zzcd: java.lang.String zzh()>
<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>
<androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)>
<com.google.android.gms.common.api.internal.StatusExceptionMapper: java.lang.Exception getException(com.google.android.gms.common.api.Status)>
<com.microsoft.authenticator.authentication.mfa.businessLogic.MfaSdkAuthenticatorDelegate: void <init>(com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.common.businessLogic.AuthenticatorState)>
<ch.qos.logback.core.net.SocketConnectorBase$FixedDelay: void <init>(int,int)>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>
<com.google.android.gms.location.GeofencingRequest$Builder: com.google.android.gms.location.GeofencingRequest build()>
<com.facebook.common.streams.TailAppendingInputStream: int readNextTailByte()>
<com.google.android.gms.internal.measurement.zzdq: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.backuprestore.viewlogic.RestorePasswordChallengeFragment injectRestorePasswordChallengeFragment2(com.microsoft.did.feature.backuprestore.viewlogic.RestorePasswordChallengeFragment)>
<com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener: void onViewHierarchyUpdateEnqueued()>
<android.widget.CheckBox: void setHorizontallyScrolling(boolean)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task foundPinnedImage(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.soloader.SoLoader$WrongAbiError: void <init>(java.lang.Throwable,java.lang.String)>
<com.google.android.gms.common.server.response.zao: void <init>()>
<com.google.android.gms.common.GoogleApiAvailability: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)>
<android.graphics.Canvas: void drawColor(int)>
<com.facebook.react.modules.core.JavaTimerManager$Timer: long access$400(com.facebook.react.modules.core.JavaTimerManager$Timer)>
<com.adjust.sdk.Util: long readLongField(java.io.ObjectInputStream$GetField,java.lang.String,long)>
<com.google.android.gms.measurement.internal.zzet: void zzb(android.os.Bundle)>
<com.facebook.common.file.FileTreeVisitor: void visitFile(java.io.File)>
<ch.qos.logback.core.joran.spi.Interpreter: void endElement(ch.qos.logback.core.joran.event.EndEvent)>
<java.lang.IllegalArgumentException: java.lang.String getMessage()>
<com.adjust.sdk.IAttributionHandler: void getAttribution()>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setJSIModulesPackage(com.facebook.react.bridge.JSIModulePackage)>
<com.google.android.gms.measurement.internal.zzjb: void zzN(com.google.android.gms.measurement.internal.zzjb)>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<com.google.android.gms.common.internal.zzj: void <init>()>
<com.facebook.react.bridge.JSIModule: void initialize()>
<com.adjust.sdk.ILogger: void lockLogLevel()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String parseLongName(int,int,int)>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzag zzu(long,java.lang.String,boolean,boolean,boolean,boolean,boolean)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: void configureBrooklynEnterpriseControls()>
<com.google.android.gms.common.server.response.zan: java.util.Map zad(java.lang.String)>
<com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)>
<com.google.android.gms.measurement.internal.zzkk: void zzH(android.os.Bundle,android.os.Bundle)>
<com.azure.authenticator.profile.GetMsaProfileImageTask: void <init>(android.content.Context,com.azure.authenticator.accounts.GenericAccount,com.azure.authenticator.profile.ProfileImageTaskCallback)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: androidx.lifecycle.LiveData getActivityState()>
<com.facebook.react.views.scroll.VelocityHelper: void <init>()>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<com.google.android.gms.location.SleepClassifyEvent: int getConfidence()>
<bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void clear()>
<com.google.android.material.appbar.HeaderBehavior: void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>
<ch.qos.logback.classic.pattern.ThrowableHandlingConverter: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.businessLogic.FlightManager flightManager()>
<android.os.LocaleList: boolean isEmpty()>
<com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: void <init>(com.facebook.react.bridge.CatalystInstance,java.lang.Class)>
<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>
<com.google.android.gms.common.api.PendingResult: com.google.android.gms.common.api.Result await(long,java.util.concurrent.TimeUnit)>
<com.adjust.sdk.AdjustInstance: void sendFirstPackages()>
<com.facebook.common.memory.PooledByteBufferInputStream: int read(byte[],int,int)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context,int)>
<androidx.preference.PreferenceFragmentCompat: void onStop()>
<ch.qos.logback.core.net.DefaultSocketConnector: java.net.Socket call()>
<com.google.android.gms.measurement.internal.zzae: java.lang.String zzB(java.lang.String,java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureBrooklynEnterpriseControls$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableTransform getTransform()>
<com.google.android.gms.internal.measurement.zzdu: com.google.android.gms.internal.measurement.zzdt zzj()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void skipUnknownField(android.os.Parcel,int)>
<com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.Priority getPriority()>
<com.microsoft.authenticator.di.AppModule_DefaultInterModuleActivityLauncherFactory: com.microsoft.authenticator.core.navigation.InterModuleActivityLauncher defaultInterModuleActivityLauncher(com.microsoft.authenticator.di.AppModule,android.content.Context)>
<com.facebook.react.uimanager.UIViewOperationQueue$UIOperation: void execute()>
<com.google.android.material.badge.BadgeDrawable: void setAdditionalVerticalOffset(int)>
<com.facebook.react.common.JavascriptException: void <init>(java.lang.String)>
<com.google.android.gms.auth.api.signin.internal.zzi: com.google.android.gms.common.api.PendingResult zzd(com.google.android.gms.common.api.GoogleApiClient,android.content.Context,boolean)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.backup.BackupFlowViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.facebook.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<com.github.amlcurran.showcaseview.TextDrawer: void setContentPaint(android.text.TextPaint)>
<com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordPromptFragment_MembersInjector: void injectVcTelemetryClient(com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordPromptFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem: int getActionIconResourceId()>
<com.google.android.gms.common.api.internal.zap: void onStop()>
<com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener: void <init>(com.google.android.material.chip.ChipGroup)>
<com.adjust.sdk.IAttributionHandler: void checkSdkClickResponse(com.adjust.sdk.SdkClickResponseData)>
<ch.qos.logback.core.subst.NodeToStringTransformer: java.lang.String variableNodeValue(ch.qos.logback.core.subst.Node)>
<com.airbnb.lottie.parser.moshi.JsonReader: com.airbnb.lottie.parser.moshi.JsonReader of(okio.BufferedSource)>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler: void openFileSystem()>
<com.evernote.android.job.JobRequest$Builder: boolean equals(java.lang.Object)>
<com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()>
<com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>
<android.os.Parcel: char[] createCharArray()>
<com.azure.authenticator.authentication.msa.MsaAccountManager$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.safetynet.HarmfulAppsData: void <init>(java.lang.String,byte[],int)>
<com.google.crypto.tink.PrimitiveSet: java.util.List getPrimitive(byte[])>
<ch.qos.logback.core.subst.NodeToStringTransformer: java.lang.String lookupKey(java.lang.String)>
<ch.qos.logback.core.Context: java.lang.String getName()>
<com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<androidx.collection.ArraySet: void <init>()>
<java.io.UnsupportedEncodingException: java.lang.String getMessage()>
<java.util.concurrent.PriorityBlockingQueue: void <init>()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: boolean loadFragment(androidx.fragment.app.Fragment,java.lang.String)>
<okhttp3.Headers: int size()>
<android.widget.EditText: void setLabelFor(int)>
<com.google.android.gms.internal.measurement.zzmp: boolean zzc()>
<com.google.android.material.textfield.TextInputLayout$SavedState$1: com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$handleDeletionTicketResult$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,com.microsoft.authenticator.msa.entities.GetMsaTicketResult,kotlin.coroutines.Continuation)>
<java.lang.IndexOutOfBoundsException: java.lang.String getMessage()>
<com.fasterxml.jackson.core.JsonParser: java.lang.String getCurrentName()>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>
<com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails: java.lang.String getApplicationDisplayName()>
<com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<android.app.Application: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()>
<com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void <init>(boolean,int,boolean)>
<com.facebook.cache.disk.DefaultDiskStorage$FileInfo: java.lang.String toPath(java.lang.String)>
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>
<com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.google.android.gms.internal.maps.zzz: java.util.List getPoints()>
<com.airbnb.lottie.model.layer.BaseLayer: void setVisible(boolean)>
<com.google.android.material.button.MaterialButtonToggleGroup: void dispatchOnButtonChecked(int,boolean)>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.azure.authenticator.storage.database.DbAccount: void setPhoneAppDetailId(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.cardflow.viewlogic.DeepLinkFragment injectDeepLinkFragment2(com.microsoft.did.feature.cardflow.viewlogic.DeepLinkFragment)>
<com.google.android.material.shape.MaterialShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void attachBaseContext(android.content.Context)>
<ch.qos.logback.core.helpers.CyclicBuffer: void add(java.lang.Object)>
<com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)>
<com.fasterxml.jackson.core.io.UTF8Writer: void write(java.lang.String,int,int)>
<java.util.LinkedHashMap: boolean isEmpty()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)>
<com.facebook.react.modules.debug.DevSettingsModule$2: void <init>(com.facebook.react.modules.debug.DevSettingsModule,java.lang.String)>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void update()>
<com.google.android.gms.common.api.internal.zabo: void zaa(com.google.android.gms.common.ConnectionResult)>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: int getClientQueueSize()>
<android.widget.FrameLayout: void setElevation(float)>
<com.google.android.gms.common.api.internal.LifecycleFragment: com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class)>
<com.azure.authenticator.storage.database.DbAccount: void setTenantCountryCode(java.lang.String)>
<com.azure.authenticator.databinding.SendFeedbackBinding: com.azure.authenticator.databinding.SendFeedbackBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.common.data.EntityBuffer: java.lang.String getChildDataMarkerColumn()>
<com.adjust.sdk.ActivityHandler: void setOfflineModeI(boolean)>
<com.facebook.drawee.controller.BaseControllerListener: void <init>()>
<java.lang.Number: double doubleValue()>
<android.view.ViewParent: void requestLayout()>
<android.widget.RelativeLayout: boolean postDelayed(java.lang.Runnable,long)>
<com.facebook.react.uimanager.RootViewUtil: com.facebook.react.uimanager.RootView getRootView(android.view.View)>
<com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()>
<com.google.android.gms.internal.auth-api.zzx: void zzc(com.google.android.gms.internal.auth-api.zzv,com.google.android.gms.internal.auth-api.zzt)>
<java.util.TreeMap: java.util.NavigableMap descendingMap()>
<com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)>
<android.app.DatePickerDialog: android.view.Window getWindow()>
<com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.bridge.ReadableArray)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: void <init>(android.content.Context,com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory,com.facebook.imagepipeline.core.ImagePipeline,java.util.Set)>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.TextDelegate getTextDelegate()>
<java.util.LinkedList: int size()>
<com.google.android.gms.measurement.internal.zzr: boolean zzd()>
<com.adjust.sdk.Util$2: java.lang.String doInBackground(android.content.Context[])>
<com.facebook.imagepipeline.image.EncodedImage: void setHeight(int)>
<com.google.android.gms.common.util.ArrayUtils: void writeArray(java.lang.StringBuilder,java.lang.Object[])>
<com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: void closeResult(com.facebook.common.references.CloseableReference)>
<android.widget.RelativeLayout: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.bridge.JavaScriptExecutorFactory getDefaultJSExecutorFactory(java.lang.String,java.lang.String,android.content.Context)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)>
<ch.qos.logback.core.pattern.FormatInfo: boolean equals(java.lang.Object)>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getWidth()>
<com.google.android.gms.common.api.internal.zzc: void <init>(com.google.android.gms.common.api.internal.zzd,com.google.android.gms.common.api.internal.LifecycleCallback,java.lang.String)>
<com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder setMethodKey(int)>
<java.util.Iterator: java.lang.Object next()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>
<java.lang.Long: java.lang.String toString()>
<com.airbnb.lottie.LottieDrawable: void setImageAssetDelegate(com.airbnb.lottie.ImageAssetDelegate)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getModel()>
<com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzhl: void <init>(float[],int)>
<com.facebook.imageutils.WebpUtil: android.util.Pair getVP8Dimension(java.io.InputStream)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity: android.content.Intent getIntent()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: int getInUseCount()>
<android.widget.EditText: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>
<com.airbnb.lottie.parser.AnimatableTransformParser: boolean isAnchorPointIdentity(com.airbnb.lottie.model.animatable.AnimatablePathValue)>
<com.adjust.sdk.ActivityHandler$39: void <init>(com.adjust.sdk.ActivityHandler,android.net.Uri,android.content.Intent)>
<com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyData: com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult getAuthMethodsPolicyResult()>
<com.google.android.datatransport.runtime.backends.BackendRequest: java.lang.Iterable getEvents()>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)>
<com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(com.facebook.react.views.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.measurement.internal.zzis: void <init>(com.google.android.gms.measurement.internal.zzjb,java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.gms.common.api.internal.zaag: boolean zad()>
<com.facebook.react.views.view.ReactViewGroup: void removeViewAt(int)>
<com.adjust.sdk.ActivityPackage: java.lang.String getClientSdk()>
<android.view.MotionEvent: int getAction()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void reset()>
<com.google.android.gms.common.internal.zzaf: int zzb(android.content.Context)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void syncBrokerAccounts()>
<com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode defaultTileMode()>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zaf(com.google.android.gms.common.api.internal.zaab)>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder neutralButtonAction(java.lang.String,android.content.DialogInterface$OnClickListener)>
<com.facebook.react.uimanager.Spacing: float get(int)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: void <init>()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: void updatePath()>
<com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException: void <init>(java.lang.String,com.microsoft.identity.broker4j.workplacejoin.WorkplaceJoinFailure)>
<android.os.Bundle: java.util.Set keySet()>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onStart()>
<com.evernote.android.job.v21.JobProxy21: int schedule(android.app.job.JobInfo)>
<com.airbnb.lottie.LottieDrawable$4: void <init>(com.airbnb.lottie.LottieDrawable,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void startSettlingAnimation(android.view.View,int,int,boolean)>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: boolean isStreetNamesEnabled()>
<com.facebook.jni.DestructorThread$Destructor: void destruct()>
<com.airbnb.lottie.parser.moshi.JsonEncodingException: void <init>(java.lang.String)>
<okhttp3.Headers: java.lang.String value(int)>
<com.airbnb.lottie.manager.ImageAssetManager: android.graphics.Bitmap bitmapForId(java.lang.String)>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzg()>
<android.widget.AutoCompleteTextView: void setHint(java.lang.CharSequence)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections: androidx.navigation.NavDirections actionSettingsFragmentToDidRestorePromptFragment()>
<bolts.BoltsExecutors: void <init>()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.material.resources.TextAppearance: android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface)>
<com.facebook.react.common.futures.SimpleSettableFuture: void setException(java.lang.Exception)>
<com.azure.authenticator.databinding.ViewLogBinding: com.azure.authenticator.databinding.ViewLogBinding bind(android.view.View)>
<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleRemoveView(android.view.View)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: boolean isMfaTotpEnabled()>
<android.view.ViewGroup: int getLayerType()>
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>
<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.material.snackbar.SnackbarManager: void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: void launchCheckWorkplaceJoinStatus()>
<com.facebook.react.bridge.LifecycleEventListener: void onHostResume()>
<com.google.android.material.textfield.ClearTextEndIconDelegate$7: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<androidx.room.util.DBUtil: void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)>
<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>
<com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)>
<android.app.Fragment: void setArguments(android.os.Bundle)>
<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)>
<com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()>
<com.facebook.common.references.SharedReference$NullReferenceException: void <init>()>
<com.google.android.material.snackbar.SnackbarManager$SnackbarRecord: void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.facebook.react.views.text.ReactTextUpdate: void <init>(android.text.Spannable,int,boolean,float,float,float,float,int,int,int,int,int)>
<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)>
<android.util.JsonReader: long nextLong()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer: boolean access$000(bolts.Task)>
<android.content.Context: android.content.ContentResolver getContentResolver()>
<com.google.android.gms.measurement.internal.zzae: java.util.List zzq(java.lang.String)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzl(com.google.android.gms.common.AccountPicker$AccountChooserOptions)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String addName(java.lang.String,int[],int)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: java.util.concurrent.atomic.AtomicBoolean getShouldRefreshActionList()>
<com.google.android.material.appbar.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.selfhost.SelfhostConfigManager access$getSelfhostConfigManager$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.google.android.gms.internal.maps.zzk: boolean isClickable()>
<android.animation.StateListAnimator: void <init>()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: boolean access$800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzp()>
<com.google.android.material.appbar.AppBarLayout: boolean setLiftedState(boolean)>
<com.google.android.gms.maps.model.Cap: void <init>(int)>
<com.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()>
<com.azure.authenticator.databinding.AddressListRowLayoutBinding: com.azure.authenticator.databinding.AddressListRowLayoutBinding bind(android.view.View)>
<com.airbnb.lottie.LottieResult: java.lang.Object getValue()>
<com.google.android.material.card.MaterialCardViewHelper: float getProgress()>
<com.facebook.imagepipeline.cache.CountingMemoryCache$Entry: com.facebook.imagepipeline.cache.CountingMemoryCache$Entry of(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver)>
<com.adjust.sdk.AdjustFactory: boolean getTryInstallReferrer()>
<com.azure.authenticator.databinding.PasswordAutoChangeExplainLayoutBinding: void <init>(android.widget.LinearLayout,android.widget.Button,android.widget.TextView)>
<androidx.fragment.app.Fragment: boolean isRemoving()>
<android.database.DataSetObserver: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void hidePlaceholderText()>
<ch.qos.logback.core.pattern.DynamicConverter: void setOptionList(java.util.List)>
<com.microsoft.aad.adal.Logger: void setEnablePII(boolean)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzN(boolean)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void updateMargins()>
<com.facebook.imagepipeline.producers.BaseConsumer: boolean statusHasFlag(int,int)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)>
<com.facebook.imagepipeline.producers.LocalContentUriFetchProducer: int getLength(java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.drawable.DrawableFactory getAnimatedDrawableFactory(android.content.Context)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.azure.authenticator.logging.ExternalLogger$Companion: int getMsalLogLevel(com.microsoft.identity.client.Logger$LogLevel)>
<com.facebook.imagepipeline.image.EncodedImage: com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage)>
<android.graphics.Outline: void setAlpha(float)>
<com.google.android.gms.common.api.GoogleApiClient: void disconnect()>
<java.lang.String: int length()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService$$Lambda$1: java.lang.Runnable lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService,android.app.job.JobParameters)>
<com.azure.authenticator.authentication.msa.MsaRefreshUserDaManager: java.util.concurrent.TimeUnit access$getREPEAT_INTERVAL_UNIT$cp()>
<android.graphics.Region: boolean set(android.graphics.Rect)>
<android.content.IntentFilter: void addDataScheme(java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)>
<android.app.Activity: void requestPermissions(java.lang.String[],int)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zza(java.lang.Iterable)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>
<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
<com.google.android.material.tabs.TabLayout$TabView: void tryUpdateBadgeDrawableBounds(android.view.View)>
<java.util.concurrent.ConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>
<com.microsoft.authenticator.core.configuration.Features: boolean isFeatureEnabled(com.microsoft.authenticator.core.configuration.Features$Flag)>
<com.google.android.gms.internal.common.zzc: void zzd(android.os.Parcel,android.os.Parcelable)>
<android.content.res.Resources: int getDimensionPixelOffset(int)>
<com.google.android.material.card.MaterialCardViewHelper: int getCheckedIconMargin()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<java.util.HashMap: void <init>()>
<com.google.android.gms.maps.model.Tile: void <init>(int,int,byte[])>
<com.google.android.material.shape.ShapePath$PathArcOperation: void setTop(float)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getPhoneAppDetailId()>
<com.google.android.material.textfield.IndicatorViewController: void <init>(com.google.android.material.textfield.TextInputLayout)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String[] stringToArray(java.lang.String)>
<android.widget.EditText: void setText(java.lang.CharSequence)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$$special$$inlined$viewModels$2: androidx.lifecycle.ViewModelStore invoke()>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getDecodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzQ(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void setBackgroundTintList(android.content.res.ColorStateList)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setScaleX(android.view.View,float)>
<java.lang.Character: int getType(int)>
<com.airbnb.lottie.LottieDrawable: void setMinAndMaxFrame(int,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel access$getAccountsListViewModel$p(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.gms.internal.measurement.zzbr: android.os.Bundle zzD(android.os.Bundle,boolean)>
<ch.qos.logback.core.ContextBase: ch.qos.logback.core.status.StatusManager getStatusManager()>
<com.google.android.gms.common.internal.ClientSettings: java.util.Set getAllRequestedScopes()>
<com.facebook.react.uimanager.events.EventDispatcher$2: void <init>(com.facebook.react.uimanager.events.EventDispatcher)>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: com.facebook.common.internal.Supplier getNextSupplier()>
<ch.qos.logback.core.rolling.helper.RollingCalendar: java.util.Date getEndOfNextNthPeriod(java.util.Date,int)>
<com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.proto.Keyset$Builder newBuilder()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void showDeviceNotSupportedDialog()>
<com.google.android.gms.internal.measurement.zzf: android.os.Bundle zzd(android.os.Bundle)>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: boolean isValid()>
<com.facebook.react.modules.storage.ReactDatabaseSupplier: void clear()>
<android.graphics.Bitmap: void recycle()>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$1: void <init>(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.String)>
<com.google.android.material.datepicker.UtcDates: android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)>
<dummyMainClass: androidx.fragment.app.Fragment dummyMainMethod_androidx_fragment_app_Fragment(android.content.Intent,android.app.Activity)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setMaxWidth(int)>
<com.facebook.react.modules.core.ReactChoreographer: com.facebook.react.modules.core.ChoreographerCompat access$200(com.facebook.react.modules.core.ReactChoreographer)>
<com.azure.authenticator.common.Util$Companion: void adjustFontScale(float,android.content.Context,android.app.Activity)>
<com.google.android.finsky.externalreferrer.IGetInstallReferrerService$Stub$Proxy: void <init>(android.os.IBinder)>
<com.google.android.gms.common.internal.BaseGmsClient: void setAttributionTag(java.lang.String)>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult$DeviceIdError: void <init>(com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$000(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<ch.qos.logback.core.subst.Tokenizer$TokenizerState: void <init>(java.lang.String,int)>
<com.google.android.material.internal.CheckableImageButton$SavedState$1: com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int)>
<com.google.android.gms.internal.location.zzba: com.google.android.gms.internal.location.zzba zzd(boolean)>
<com.google.android.gms.internal.measurement.zzki: boolean zza(byte)>
<com.adjust.sdk.ActivityPackage: void setPartnerParameters(java.util.Map)>
<com.google.android.gms.internal.location.zzc: android.os.Parcelable zzb(android.os.Parcel,android.os.Parcelable$Creator)>
<java.lang.Character: boolean isUpperCase(char)>
<com.google.android.gms.internal.measurement.zzkh: int zzd(java.lang.Object,long)>
<com.google.android.gms.measurement.internal.zzkf: void zzD(java.lang.StringBuilder,int)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$Companion: void <init>()>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: void setHasAccountInfoLogged(boolean)>
<com.microsoft.authenticator.di.ActivityModule: void <init>()>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult$AadServiceFailure: com.microsoft.authenticator.core.protocol.exception.GenericServiceException getException()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getFamilyName()>
<com.microsoft.did.feature.backuprestore.presentationlogic.BackupViewModel: void <init>(com.microsoft.did.businesslogic.BackupUseCase)>
<android.widget.Button: void setTag(java.lang.Object)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: boolean hasRoundedBorders()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdu zzl(int)>
<com.facebook.drawee.drawable.FadeDrawable: long getCurrentTimeMs()>
<com.google.android.gms.internal.auth.zzv: void <init>(java.lang.String)>
<com.google.android.gms.common.server.response.FastParser: float zac(com.google.android.gms.common.server.response.FastParser,java.io.BufferedReader)>
<com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.google.android.gms.common.api.ResultCallbacks: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$configureDeviceIdInformation$1: void onChanged(com.microsoft.authenticator.workaccount.entities.GetDeviceIdStatus)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>
<android.widget.LinearLayout: int getChildCount()>
<com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>
<com.google.android.material.internal.CollapsingTextHelper: boolean isDefaultIsRtl()>
<com.azure.authenticator.accounts.AadAccount: void setEncryptedCachedPin(java.lang.String)>
<com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener: void onAnimationStart()>
<com.google.android.gms.measurement.internal.zzaq: java.lang.Object zza(java.lang.String)>
<android.view.ViewGroup: android.graphics.drawable.Drawable getBackground()>
<com.azure.authenticator.databinding.AccountFullscreenSettingsFragmentBinding: android.widget.LinearLayout getRoot()>
<ch.qos.logback.classic.android.SQLiteAppender: java.io.File getDatabaseFile(java.lang.String)>
<com.google.android.gms.measurement.internal.zzex: boolean zzh(int)>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<android.widget.SeekBar: int getId()>
<com.google.android.gms.internal.measurement.zzla: long zza()>
<com.google.android.datatransport.runtime.time.UptimeClock: void <init>()>
<android.text.style.MetricAffectingSpan: void <init>()>
<com.facebook.common.time.SystemClock: void <init>()>
<com.facebook.react.uimanager.ReactRoot: java.lang.String getJSModuleName()>
<com.google.android.gms.internal.measurement.zzkz: long zzz()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureAppLockPreference()>
<com.facebook.react.views.picker.ReactPicker: void commitStagedData()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$EmptyKeyframeWrapper: void <init>()>
<com.google.android.gms.common.data.DataHolder: int getInteger(java.lang.String,int,int)>
<androidx.legacy.content.WakefulBroadcastReceiver: void <init>()>
<com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzby zzi()>
<com.google.android.material.resources.TextAppearance: void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)>
<java.util.concurrent.BlockingQueue: boolean add(java.lang.Object)>
<com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity$1: void <init>(com.azure.authenticator.authentication.msa.ui.Hilt_SignOutMsaAccountActivity)>
<com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: android.app.AlertDialog buildDialog()>
<com.google.android.gms.internal.measurement.zzp: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzs)>
<com.google.android.gms.measurement.internal.zzkk: void zzad(com.google.android.gms.internal.measurement.zzs,java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNode: float getLayoutX()>
<com.google.android.material.textfield.EndIconDelegate: boolean isBoxBackgroundModeSupported(int)>
<java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>
<com.google.android.gms.auth.TokenData: java.lang.String zzb()>
<com.google.android.gms.internal.measurement.zzcd: java.lang.String zzf()>
<com.google.android.gms.measurement.internal.zzdy: void <init>()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<android.widget.ImageButton: int[] mergeDrawableStates(int[],int[])>
<com.google.android.gms.common.internal.zzo: android.content.ComponentName zzj()>
<com.google.android.material.internal.ThemeEnforcement: void checkMaterialTheme(android.content.Context)>
<java.lang.Float: java.lang.String toString(float)>
<com.google.android.gms.measurement.internal.zzr: void zzb(java.lang.String,android.os.Bundle)>
<com.google.android.gms.internal.maps.zza: void zzb(int,android.os.Parcel)>
<com.azure.authenticator.databinding.AccountFullscreenSettingsFragmentBinding: com.azure.authenticator.databinding.AccountFullscreenSettingsFragmentBinding bind(android.view.View)>
<com.microsoft.did.feature.notifications.NotificationService: void <init>(android.content.Context,com.microsoft.did.datasource.network.ApiProvider,com.microsoft.did.businesslogic.NotificationUseCase,com.microsoft.did.feature.notifications.BottomNavBadgeHandler,com.microsoft.did.feature.notifications.AccountAndAuthenticationInterface,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.gms.common.api.GoogleApiClient: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.material.datepicker.Month: void <init>(java.util.Calendar)>
<com.adjust.sdk.MacAddressUtil: java.lang.String removeSpaceString(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$initialize$1: void onChanged(com.microsoft.authenticator.authentication.aad.entities.AadNgcApproveSessionResult)>
<com.azure.authenticator.jobs.DeferrableWorkerUtils: androidx.work.Operation enqueueOneTimeWorkRequest(java.lang.Class,androidx.work.Data,androidx.work.Constraints,long)>
<com.facebook.imagepipeline.producers.BaseProducerContext: void callOnCancellationRequested(java.util.List)>
<com.google.android.gms.internal.measurement.zzdj: java.lang.String zzA()>
<android.view.ViewGroup: void setRight(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectDialogFragmentManager(com.azure.authenticator.ui.fragment.accounts.AccountListFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllSecretKeyBasedAccounts()>
<com.google.android.gms.common.images.zaf: void <init>(com.google.android.gms.common.images.ImageManager$OnImageLoadedListener,android.net.Uri)>
<com.google.android.gms.internal.cloudmessaging.zzc: void <init>()>
<com.google.android.material.datepicker.MaterialCalendarGridView$1: void <init>(com.google.android.material.datepicker.MaterialCalendarGridView)>
<com.google.android.gms.internal.measurement.zzid: java.lang.Class zza()>
<okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()>
<java.lang.ThreadLocal: void <init>()>
<com.facebook.common.memory.PooledByteBufferFactory: com.facebook.common.memory.PooledByteBuffer newByteBuffer(byte[])>
<com.facebook.react.devsupport.JSCHeapCapture$CaptureException: void <init>(java.lang.String)>
<com.google.common.collect.ForwardingConcurrentMap: java.util.concurrent.ConcurrentMap delegate()>
<com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.backuprestore.presentationlogic.BackupViewModel access$11500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: java.lang.String getLocalFilePath(com.facebook.imagepipeline.request.ImageRequest)>
<com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,boolean,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: android.content.Intent getReEnableAutoBackupIntent(android.content.Context)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel$fetchAppLockEnforcedPolicies$1: void <init>(com.azure.authenticator.ui.fragment.main.SettingsViewModel,kotlin.coroutines.Continuation)>
<ch.qos.logback.classic.net.SocketNode: void <init>(ch.qos.logback.classic.net.SimpleSocketServer,java.net.Socket,ch.qos.logback.classic.LoggerContext)>
<com.facebook.react.touch.ReactHitSlopView: android.graphics.Rect getHitSlopRect()>
<com.google.android.material.tabs.TabLayout: android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs()>
<com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(boolean)>
<com.google.android.gms.internal.location.zzaz: void zzq(long,android.app.PendingIntent)>
<com.azure.authenticator.utils.TestActivity: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: void setOtpEnabled(boolean)>
<com.github.amlcurran.showcaseview.MaterialShowcaseDrawer: void <init>(android.content.res.Resources)>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void submitPostprocessing()>
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewHolderFactory: void <init>()>
<java.util.BitSet: void set(int,boolean)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$restoreBackupAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>
<android.widget.FrameLayout: int getHeight()>
<com.facebook.drawee.drawable.ArrayDrawable: android.graphics.drawable.Drawable setDrawable(int,android.graphics.drawable.Drawable)>
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>
<com.google.android.material.chip.ChipDrawable: void setTextAppearance(com.google.android.material.resources.TextAppearance)>
<com.evernote.android.job.JobRequest: boolean isFlexSupport()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: void <init>(java.lang.String,int)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder addMetadata(java.lang.String,java.lang.String)>
<com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)>
<com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)>
<com.airbnb.lottie.network.NetworkFetcher: com.airbnb.lottie.LottieResult fromJsonStream(java.lang.String,java.io.InputStream,java.lang.String)>
<com.google.android.gms.internal.measurement.zzgz: int zzs()>
<com.microsoft.authenticator.location.abstraction.LocationPermissionRequestViewModel: void <init>(android.content.Context)>
<com.google.android.gms.measurement.internal.zzf: void zzf()>
<android.widget.EditText: void setCompoundDrawablePadding(int)>
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
<com.google.android.material.navigation.NavigationBarMenuView: androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.navigation.NavigationBarMenuView)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerScheduler: boolean isJobServiceOn(android.content.Intent)>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()>
<com.google.android.gms.internal.measurement.zzha: void zzz(int,java.util.List,boolean)>
<com.facebook.react.views.modal.ReactModalHostView: void showOrUpdate()>
<com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: void access$1300(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.azure.authenticator.notifications.AbstractNotification$Action$Companion: com.azure.authenticator.notifications.AbstractNotification$Action fromString(java.lang.String)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.math.BigDecimal createBigDecimal(android.os.Parcel,int)>
<com.facebook.drawee.drawable.ArrayDrawable: int getNumberOfLayers()>
<com.google.android.gms.common.stats.ConnectionTracker: boolean zzc(android.content.ServiceConnection)>
<com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: void loadSections()>
<com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder: void apply(okhttp3.OkHttpClient$Builder)>
<com.azure.authenticator.databinding.WebviewBinding: void <init>(android.widget.LinearLayout,android.webkit.WebView)>
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>
<com.google.android.gms.common.api.internal.zabl: void zak()>
<ch.qos.logback.core.joran.spi.ConfigurationWatchList: void clear()>
<com.facebook.imageutils.WebpUtil: boolean compare(byte[],java.lang.String)>
<com.google.android.gms.dynamic.ObjectWrapper: java.lang.Object unwrap(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.gms.cloudmessaging.Rpc: android.os.Bundle zza(com.google.android.gms.tasks.Task)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver: void <init>()>
<com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: void onCancellation()>
<com.google.android.gms.internal.measurement.zzkz: long zzv()>
<androidx.collection.ArraySet: boolean isEmpty()>
<com.google.android.gms.internal.measurement.zzcy: void <init>(com.google.android.gms.internal.measurement.zzcs)>
<androidx.collection.SimpleArrayMap: void clear()>
<com.google.android.gms.auth.api.signin.internal.SignInHubActivity: void zzv()>
<com.google.android.gms.measurement.internal.zzkd: void zzak()>
<com.facebook.react.views.slider.ReactSliderManager$1: void <init>()>
<com.google.common.collect.ObjectArrays: java.lang.Object[] checkElementsNotNull(java.lang.Object[],int)>
<com.google.android.gms.common.api.internal.zaar: void zaA()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.appiddomain.AppIdDomainRefreshWorker access$200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.chip.ChipDrawable: void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void <init>(okhttp3.Call$Factory,java.util.concurrent.Executor)>
<com.google.android.gms.internal.auth-api-phone.zzl: void <init>(com.google.android.gms.internal.auth-api-phone.zzk)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void addUpdateListener(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener)>
<com.facebook.react.animated.ValueAnimatedNode: void extractOffset()>
<com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.lang.Object findGeneratedSetter(java.lang.Class)>
<android.widget.HorizontalScrollView: void onMeasure(int,int)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder requestProfile()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback: com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion access$getCallback$p(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback)>
<com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredentialSaveDatasetsUseCase: void <init>(com.microsoft.brooklyn.module.repository.CredentialsRepository,com.microsoft.brooklyn.module.autofill.FormInfoHelper,com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations)>
<com.google.android.material.appbar.HeaderBehavior$FlingRunnable: void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>
<com.airbnb.lottie.utils.GammaEvaluator: float OECF_sRGB(float)>
<com.google.android.gms.internal.maps.zzh: void zze(com.google.android.gms.dynamic.IObjectWrapper)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: java.util.List getActiveActionList()>
<com.azure.authenticator.ui.action.ActionStateManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<java.util.Date: void <init>()>
<java.util.ListIterator: int previousIndex()>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()>
<kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>
<com.google.android.gms.signin.zab: void <init>()>
<android.widget.PopupMenu: void show()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: com.facebook.drawee.drawable.ScalingUtils$ScaleType getProgressBarImageScaleType()>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void handleDenyNgcResult(com.microsoft.authenticator.authentication.aad.entities.AadNgcDenySessionResult)>
<com.google.android.material.tabs.TabLayout: int calculateScrollXForTab(int,float)>
<com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface: void setInitialPage(android.view.View,int)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$ApiOptions getApiOptions()>
<com.microsoft.onlineid.ExtensionAccountManager: void <init>(android.content.Context,com.microsoft.onlineid.OnlineIdConfiguration)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void <init>()>
<com.facebook.systrace.Systrace$EventScope: void <init>(java.lang.String,int,char)>
<com.facebook.imagepipeline.transcoder.DownsampleUtil: int ratioToSampleSizeJPEG(float)>
<android.os.Message: android.os.Message obtain()>
<android.widget.SeekBar: int getMeasuredWidth()>
<com.google.crypto.tink.CryptoFormat: byte[] getOutputPrefix(com.google.crypto.tink.proto.Keyset$Key)>
<com.google.android.gms.measurement.internal.zzak: void <init>(com.google.android.gms.measurement.internal.zzal,com.google.android.gms.measurement.internal.zzgg)>
<android.view.View: void setAlpha(float)>
<com.facebook.react.common.network.OkHttpCallUtil: void cancelTag(okhttp3.OkHttpClient,java.lang.Object)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _outputRawMultiByteChar(int,char[],int,int)>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)>
<android.accounts.Account: boolean equals(java.lang.Object)>
<com.adjust.sdk.AttributionHandler: com.adjust.sdk.ActivityPackage buildAndGetAttributionPackage()>
<com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase: void <init>(com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.workaccount.businesslogic.Broker)>
<com.fasterxml.jackson.core.json.JsonGeneratorImpl: com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder setMaxStorageSizeInBytes(long)>
<com.facebook.common.internal.Objects: java.lang.String simpleName(java.lang.Class)>
<com.facebook.common.internal.ImmutableList: com.facebook.common.internal.ImmutableList of(java.lang.Object[])>
<com.google.android.gms.internal.maps.zzw: java.util.List getPoints()>
<com.google.android.gms.internal.measurement.zzkh: void zzJ(java.lang.Object,long,byte)>
<com.facebook.react.modules.network.ProgressResponseBody: long access$000(com.facebook.react.modules.network.ProgressResponseBody)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: int access$400(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)>
<java.util.LinkedHashMap: void clear()>
<com.airbnb.lottie.parser.ContentModelParser: com.airbnb.lottie.model.content.ContentModel parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.facebook.react.views.picker.events.PickerItemSelectEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.airbnb.lottie.L: float endSection(java.lang.String)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: boolean addNewConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactContext getCurrentReactContext()>
<com.airbnb.lottie.parser.moshi.JsonReader: void endObject()>
<com.google.common.collect.ImmutableList: int indexOf(java.lang.Object)>
<com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment_MembersInjector: void injectLocationPermissionManager(com.microsoft.authenticator.mfasdk.authentication.ui.AbstractMfaAuthFragment,com.microsoft.authenticator.location.abstraction.LocationPermissionManager)>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>
<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>
<com.adjust.sdk.ActivityHandler: void access$2700(com.adjust.sdk.ActivityHandler)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.abstraction.FillResponseManager fillResponseManager()>
<java.lang.Long: long parseLong(java.lang.String)>
<com.airbnb.lottie.model.CubicCurveData: void setControlPoint1(float,float)>
<com.facebook.react.ReactInstanceManager: java.lang.Thread access$1202(com.facebook.react.ReactInstanceManager,java.lang.Thread)>
<ch.qos.logback.classic.spi.LoggerContextListener: void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level)>
<com.google.android.gms.common.util.ClientLibraryUtils: int getClientVersion(android.content.Context,java.lang.String)>
<com.google.android.gms.measurement.internal.zzgg: com.google.android.gms.common.util.Clock zzax()>
<com.facebook.drawee.drawable.ArrayDrawable: com.facebook.drawee.drawable.DrawableParent createDrawableParentForIndex(int)>
<com.facebook.imagepipeline.cache.BufferedDiskCache$4: java.lang.Void call()>
<com.microsoft.brooklyn.ui.payment.ViewPaymentFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.brooklyn.ui.payment.ViewPaymentFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<java.io.ObjectOutputStream: void flush()>
<com.google.android.gms.internal.measurement.zzha: void zzp(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.msa.businessLogic.MsaChangeFcmTokenUseCase msaChangeFcmTokenUseCase()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$approveAadNgcSession$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.model.animatable.AnimatableColorValue: void <init>(java.util.List)>
<com.google.android.gms.measurement.internal.zzho: void zzb(java.lang.String,java.lang.String,android.os.Bundle,long)>
<com.google.android.gms.internal.measurement.zzha: void zzx(int,java.util.List,boolean)>
<com.facebook.common.logging.LoggingDelegate: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)>
<com.google.android.material.shape.RoundedCornerTreatment: void <init>()>
<com.google.android.material.datepicker.OnSelectionChangedListener: void onSelectionChanged(java.lang.Object)>
<com.microsoft.authenticator.authentication.aad.businessLogic.ApproveAadNgcSessionUseCase: java.lang.Object approveNgcSession(com.microsoft.ngc.aad.NgcSession,com.azure.authenticator.accounts.AadAccount,java.lang.String,java.lang.String,kotlin.coroutines.Continuation)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.enterpriseDenyList.service.EnterpriseDenyListMappingSvcInterface enterpriseDenyListMappingSvcInterface()>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
<ch.qos.logback.core.rolling.helper.FileNamePattern: void <init>(java.lang.String,ch.qos.logback.core.Context)>
<com.google.android.gms.common.internal.zac: java.lang.String zab(android.content.Context,int)>
<com.google.android.gms.maps.internal.zzq: void <init>()>
<android.widget.ImageButton: int getHeight()>
<com.airbnb.lottie.animation.content.ContentGroup: java.util.List contentsFromModels(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,java.util.List)>
<java.io.DataOutput: void writeInt(int)>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<com.facebook.imagepipeline.producers.BaseProducerContext: void callOnIsIntermediateResultExpectedChanged(java.util.List)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<android.widget.ImageButton: boolean isHovered()>
<com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: int access$800(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<com.microsoft.brooklyn.ui.credential.EditCredentialFragment_MembersInjector: void injectBrooklynStorage(com.microsoft.brooklyn.ui.credential.EditCredentialFragment,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void dirty()>
<com.facebook.react.uimanager.ThemedReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)>
<com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.uimanager.MatrixMathHelper: double[] v3Normalize(double[],double)>
<com.google.android.gms.tasks.RuntimeExecutionException: void <init>(java.lang.Throwable)>
<com.google.android.material.button.MaterialButtonToggleGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager access$2700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.cache.disk.DynamicDefaultDiskStorage: void <init>(int,com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheErrorLogger)>
<com.google.android.gms.common.server.response.FastJsonResponse: boolean isFieldSet(com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<ch.qos.logback.core.pattern.parser.OptionTokenizer: void escape(java.lang.String,java.lang.StringBuffer)>
<com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()>
<ch.qos.logback.core.joran.spi.ElementPath: java.util.List getCopyOfPartList()>
<com.facebook.drawee.drawable.RoundedDrawable: int getIntrinsicWidth()>
<ch.qos.logback.core.joran.spi.InterpretationContext: ch.qos.logback.core.joran.spi.Interpreter getJoranInterpreter()>
<okhttp3.ResponseBody: long contentLength()>
<com.facebook.imagepipeline.memory.NativeMemoryChunkPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.facebook.react.views.textinput.ReactTextInputSelectionEvent: java.lang.String getEventName()>
<com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)>
<java.util.concurrent.ConcurrentMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<android.widget.EditText: void setTextSize(int,float)>
<com.adjust.sdk.IActivityHandler: void resetSessionPartnerParameters()>
<com.azure.authenticator.notifications.aad.AadNgcNotification_Factory: com.azure.authenticator.notifications.aad.AadNgcNotification newInstance(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.ngc.aad.AadNgcSessionUseCase)>
<com.google.android.material.chip.ChipGroup$CheckedStateTracker: void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1)>
<com.azure.authenticator.storage.database.DbAccount: void setAadObjectId(java.lang.String)>
<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>
<com.google.android.gms.internal.maps.zzh: int zzj()>
<com.facebook.systrace.Systrace: void endAsyncSection(long,java.lang.String,int,long)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setOnStreetViewPanoramaChangeListener(com.google.android.gms.maps.internal.zzbj)>
<com.facebook.imagepipeline.memory.BufferMemoryChunkPool: void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: java.lang.String getSource()>
<com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap getEndCap()>
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int)>
<com.google.common.base.CaseFormat$2: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>
<android.widget.HorizontalScrollView: android.view.View getChildAt(int)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: int getBacklog()>
<com.google.android.gms.measurement.internal.zzkf: java.util.List zzn(java.util.BitSet)>
<com.microsoft.brooklyn.ui.address.AddressAddEditViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressSaveDatasetsUseCase addressSaveDatasetsUseCase()>
<ch.qos.logback.classic.joran.ReconfigureOnChangeTaskListener: void changeDetected()>
<kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)>
<com.google.android.gms.internal.measurement.zzgd: java.lang.Class zzb()>
<android.content.res.AssetFileDescriptor: long getLength()>
<androidx.room.RoomDatabase: void <init>()>
<com.evernote.android.job.v21.PlatformJobService: android.os.Bundle getTransientBundle(android.app.job.JobParameters)>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showResult(int)>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: boolean access$000(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)>
<com.facebook.imagepipeline.request.ImageRequest: int getSourceUriType(android.net.Uri)>
<com.google.android.gms.internal.measurement.zzlz: void <init>()>
<org.slf4j.MarkerFactory: org.slf4j.Marker getMarker(java.lang.String)>
<com.adjust.sdk.AdjustAttribution: boolean equals(java.lang.Object)>
<com.google.android.gms.tasks.zzr: void <init>()>
<com.google.android.gms.common.GoogleApiAvailability: void zab(android.content.Context,int,java.lang.String,android.app.PendingIntent)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void onStop()>
<ch.qos.logback.core.spi.LifeCycle: void stop()>
<com.github.amlcurran.showcaseview.ShowcaseView: void setTarget(com.github.amlcurran.showcaseview.targets.Target)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()>
<com.google.android.gms.common.api.internal.zabk: void <init>(com.google.android.gms.common.api.internal.zabl)>
<com.google.android.datatransport.runtime.Destination: java.lang.String getName()>
<com.azure.authenticator.databinding.AccountAddMethodListBinding: com.azure.authenticator.databinding.AccountAddMethodListBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)>
<com.airbnb.lottie.utils.LottieValueAnimator: void removeFrameCallback(boolean)>
<com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.zzi zza(android.content.pm.PackageInfo,com.google.android.gms.common.zzi[])>
<com.google.android.gms.internal.measurement.zzjk: int zzg(int,java.util.List,boolean)>
<com.google.android.gms.common.internal.Preconditions: void checkHandlerThread(android.os.Handler,java.lang.String)>
<com.microsoft.brooklyn.module.passwordautochange.PasswordRulesUseCase: void <init>()>
<com.facebook.react.bridge.CatalystInstanceImpl$6: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.google.android.gms.cloudmessaging.zzm: void <init>(com.google.android.gms.cloudmessaging.zzf)>
<com.google.android.gms.common.api.internal.zacx: void zab()>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistrationError$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>
<com.google.android.material.card.MaterialCardViewHelper: void setCheckedIconMargin(int)>
<android.view.Display: void getSize(android.graphics.Point)>
<com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>
<com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()>
<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.google.android.gms.measurement.internal.zzge: void zzav()>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<java.util.Collection: boolean retainAll(java.util.Collection)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzB(com.google.android.gms.common.AccountPicker$AccountChooserOptions,boolean)>
<com.google.crypto.tink.proto.Keyset: int getPrimaryKeyId()>
<android.widget.ImageButton: void onRestoreInstanceState(android.os.Parcelable)>
<com.facebook.react.DebugCorePackage$1: void <init>(com.facebook.react.DebugCorePackage,java.util.Map)>
<com.google.android.gms.internal.measurement.zzkc: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$ICompletion: void onSignOutCancel()>
<com.facebook.react.views.text.TextInlineImageSpan: void onAttachedToWindow()>
<android.widget.LinearLayout: void setEnabled(boolean)>
<com.google.android.gms.internal.safetynet.zzj: void <init>(android.os.IBinder)>
<com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,long)>
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_21_22$cp()>
<com.google.android.gms.common.internal.BaseGmsClient: boolean hasConnectionInfo()>
<android.util.SparseIntArray: int keyAt(int)>
<com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity$handleDenyNgcResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.react.modules.storage.AsyncStorageModule$4: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer: void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.PostprocessorProducer$1)>
<com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)>
<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.database.CursorWindow: boolean setNumColumns(int)>
<android.widget.CheckBox: void setGravity(int)>
<ch.qos.logback.classic.pattern.EnsureExceptionHandling: void <init>()>
<com.evernote.android.job.JobRequest$Builder: boolean access$1700(com.evernote.android.job.JobRequest$Builder)>
<android.view.View: void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragmentArgs: boolean getShowPhoneSignInMsg()>
<com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)>
<com.facebook.react.fabric.FabricUIManager$1: void <init>(com.facebook.react.fabric.FabricUIManager,int,int,boolean)>
<com.google.android.gms.internal.base.zai: void <init>(com.google.android.gms.internal.base.zah)>
<android.view.ViewGroup: int getHeight()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_23_24()>
<com.google.android.gms.measurement.internal.zzfl: boolean zzu()>
<com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.Integer getSdkVersion()>
<com.google.android.gms.internal.measurement.zzdj: void zzaP(com.google.android.gms.internal.measurement.zzdj)>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1: com.facebook.common.references.CloseableReference getResult()>
<ch.qos.logback.classic.net.server.RemoteAppenderStreamClient: void close()>
<com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)>
<ch.qos.logback.core.net.SyslogAppenderBase: int facilityStringToint(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter access$getListAdapter$p(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.util.ArrayList)>
<com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer: android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext)>
<okio.ByteString: okio.ByteString decodeBase64(java.lang.String)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setClipToChildren(boolean)>
<com.google.android.gms.measurement.internal.zzen: void <init>(com.google.android.gms.measurement.internal.zzeo,java.lang.String,java.net.URL,byte[],java.util.Map,com.google.android.gms.measurement.internal.zzel)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _closeInput()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int)>
<android.view.View: void setScaleX(float)>
<com.azure.authenticator.ui.fragment.main.ViewLogTask$ViewLogTaskCallback: void onComplete(java.lang.String)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<android.widget.LinearLayout: void setGravity(int)>
<com.facebook.imagepipeline.decoder.DefaultImageDecoder: void <init>(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder)>
<android.view.View: void <init>(android.content.Context)>
<com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)>
<com.google.android.material.animation.MotionTiming: com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion$MIGRATION_26_27$1: void <init>(int,int)>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getPurpose()>
<com.google.android.gms.internal.measurement.zzkb: com.google.android.gms.internal.measurement.zzih zza(com.google.android.gms.internal.measurement.zzkb)>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean)>
<com.google.android.gms.common.api.Status: boolean equals(java.lang.Object)>
<com.facebook.react.animated.EventAnimationDriver: void <init>(java.util.List,com.facebook.react.animated.ValueAnimatedNode)>
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onAccountSignedOut$1: java.lang.Object invokeSuspend(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(boolean)>
<java.util.zip.ZipFile: void close()>
<com.facebook.cache.disk.DynamicDefaultDiskStorage: boolean shouldCreateNewStorage()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void updateFromViewRotation()>
<com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()>
<com.google.android.gms.internal.auth.zze: com.google.android.gms.auth.AccountChangeEventsResponse zza(com.google.android.gms.auth.AccountChangeEventsRequest)>
<com.google.android.material.timepicker.TimeModel$1: com.google.android.material.timepicker.TimeModel[] newArray(int)>
<com.google.android.gms.measurement.internal.zzfi: java.util.concurrent.atomic.AtomicLong zzs()>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getGroupKey()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: int access$602(com.google.android.material.bottomsheet.BottomSheetBehavior,int)>
<com.google.android.material.chip.Chip: void setLines(int)>
<com.facebook.react.ReactDelegate: boolean shouldShowDevMenuOrReload(int,android.view.KeyEvent)>
<com.azure.authenticator.databinding.BottomNavigationLayoutBinding: androidx.constraintlayout.widget.ConstraintLayout getRoot()>
<com.google.android.gms.dynamic.IFragmentWrapper: boolean zzk()>
<com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object zzd(com.google.android.gms.common.internal.BaseGmsClient)>
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>
<ch.qos.logback.classic.spi.ILoggingEvent: ch.qos.logback.classic.Level getLevel()>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>
<com.microsoft.authenticator.mainactivity.entities.MainActivityFlow: android.os.Bundle getAadNgcRegistrationFlowParams()>
<com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)>
<com.google.android.gms.internal.measurement.zzao: void <init>(com.google.android.gms.internal.measurement.zzbr,com.google.android.gms.internal.measurement.zzm)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$ViewCI: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl,android.view.View,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String,java.lang.Throwable)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()>
<com.facebook.imagepipeline.producers.LocalAssetFetchProducer: java.lang.String getAssetName(com.facebook.imagepipeline.request.ImageRequest)>
<com.google.android.gms.common.internal.zag: void <init>()>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: android.view.View getChildAt(com.facebook.react.views.viewpager.ReactViewPager,int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setVisible(boolean)>
<com.fasterxml.jackson.core.io.JsonStringEncoder: byte[] encodeAsUTF8(java.lang.String)>
<com.google.android.gms.cloudmessaging.zzo: void zza(android.os.Message)>
<com.google.android.gms.internal.measurement.zzmv: boolean zzb()>
<com.facebook.imageutils.BitmapUtil: int getSizeInBytes(android.graphics.Bitmap)>
<com.airbnb.lottie.LottieDrawable: void setMaxFrame(int)>
<com.google.android.gms.measurement.internal.zzjc: android.util.Pair zzd(java.lang.String)>
<com.google.android.gms.internal.measurement.zziz: void zzc(com.google.android.gms.internal.measurement.zzix,java.lang.StringBuilder,int)>
<com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()>
<com.azure.authenticator.notifications.msa.MsaNotification$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(com.google.firebase.encoders.FieldDescriptor,java.lang.Object)>
<com.google.common.base.Splitter$1: void <init>(com.google.common.base.CharMatcher)>
<com.google.android.gms.signin.internal.zag: void <init>(java.util.List,java.lang.String)>
<com.facebook.yoga.YogaNode: void setHeightPercent(float)>
<androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>
<com.facebook.react.modules.timepicker.DismissableTimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)>
<com.airbnb.lottie.utils.Utils: android.graphics.Bitmap resizeBitmapIfNeeded(android.graphics.Bitmap,int,int)>
<com.google.android.gms.common.internal.RootTelemetryConfigManager: com.google.android.gms.common.internal.RootTelemetryConfiguration getConfig()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>
<okio.Buffer: void skip(long)>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<com.google.android.gms.common.api.internal.zzb: android.os.Bundle zzc(com.google.android.gms.common.api.internal.zzb)>
<android.text.Editable: int getSpanEnd(java.lang.Object)>
<com.google.android.material.shape.ShapePath: float getEndX()>
<com.airbnb.lottie.model.layer.BaseLayer: void clearCanvas(android.graphics.Canvas)>
<androidx.drawerlayout.widget.DrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.material.button.MaterialButtonHelper: void setStrokeWidth(int)>
<com.google.android.gms.internal.measurement.zzdf: void zzu(com.google.android.gms.internal.measurement.zzdf,double)>
<ch.qos.logback.core.android.AndroidContextUtil: java.lang.String getPackageName()>
<bolts.AndroidExecutors$UIThreadExecutor: void <init>(bolts.AndroidExecutors$1)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem: com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem copy(int,int,int,int)>
<com.google.android.material.chip.Chip: void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.maps.model.PolylineOptions: int getJointType()>
<androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
<com.google.android.gms.internal.measurement.zzdu: void zzt(com.google.android.gms.internal.measurement.zzdu)>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableShapeValue parseShapeData(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<java.io.DataOutput: void writeByte(int)>
<com.google.android.material.datepicker.UtcDates: java.util.TimeZone getTimeZone()>
<com.google.android.gms.common.data.DataHolder: boolean getBoolean(java.lang.String,int,int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel$launchGetDeviceId$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.WpjStatusViewModel,kotlin.coroutines.Continuation)>
<com.google.android.gms.safetynet.zzi: void <init>()>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$Client zaa(android.os.Looper,com.google.android.gms.common.api.internal.zabl)>
<com.google.android.gms.common.api.internal.SignInConnectionListener: void onComplete()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$showSignInButton$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,java.lang.String)>
<com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>
<com.google.android.gms.auth.api.signin.internal.zzg: com.google.android.gms.auth.api.signin.GoogleSignInOptions zzc(com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig$1)>
<java.lang.Integer: int signum(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void init(com.facebook.common.internal.Supplier)>
<ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toStableString()>
<com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue: void <init>(com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue)>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: void <init>(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder)>
<com.google.common.collect.MapMakerInternalMap$Segment: boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object)>
<com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo: void <init>(com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType,com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype,com.google.android.datatransport.cct.internal.AutoValue_NetworkConnectionInfo$1)>
<android.widget.EditText: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<com.google.android.gms.auth.api.credentials.CredentialRequest: void <init>(int,boolean,java.lang.String[],com.google.android.gms.auth.api.credentials.CredentialPickerConfig,com.google.android.gms.auth.api.credentials.CredentialPickerConfig,boolean,java.lang.String,java.lang.String,boolean)>
<com.fasterxml.jackson.core.JsonStreamContext: boolean inRoot()>
<com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: void <init>(com.facebook.react.uimanager.ThemedReactContext,int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.String toIdList(java.lang.Iterable)>
<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.JsonEncoding getEncoding()>
<com.google.android.gms.internal.measurement.zzdj: java.util.List zzS()>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: java.net.InetAddress getInetAddress()>
<androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)>
<com.microsoft.authenticator.repository.businessLogic.AccountStorageCustomQueries: boolean hasMsaAccountsConfiguredForNotifications()>
<android.widget.FrameLayout: void onDetachedFromWindow()>
<com.google.android.material.chip.ChipDrawable: int getAlpha()>
<ch.qos.logback.core.joran.spi.ActionException: void <init>(java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzdj: void zzar(com.google.android.gms.internal.measurement.zzdj,int,com.google.android.gms.internal.measurement.zzdu)>
<androidx.fragment.app.Fragment: void onDetach()>
<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean)>
<com.facebook.imagepipeline.producers.PostprocessorProducer: java.util.concurrent.Executor access$800(com.facebook.imagepipeline.producers.PostprocessorProducer)>
<ch.qos.logback.core.pattern.util.RegularEscapeUtil: java.lang.String basicEscape(java.lang.String)>
<com.google.android.gms.internal.measurement.zzbn: void <init>(com.google.android.gms.internal.measurement.zzbq,android.app.Activity)>
<com.google.android.gms.internal.measurement.zzcn: java.lang.String zza()>
<java.util.Locale: java.lang.String toString()>
<android.widget.EditText: void setIncludeFontPadding(boolean)>
<com.adjust.sdk.PackageHandler$7: void <init>(com.adjust.sdk.PackageHandler)>
<com.google.crypto.tink.shaded.protobuf.ByteString: byte[] toByteArray()>
<com.facebook.imagepipeline.cache.CountingLruMap: java.lang.Object remove(java.lang.Object)>
<com.facebook.react.modules.timepicker.TimePickerDialogFragment: void <init>()>
<com.google.common.base.Equivalence: com.google.common.base.Equivalence equals()>
<com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey createListenerKey(java.lang.Object,java.lang.String)>
<com.google.android.gms.common.api.internal.zaaz: void zaa(android.os.Bundle)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: boolean isMyLocationEnabled()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry getTelemetry()>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: void setType(java.lang.String)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int)>
<com.google.android.gms.internal.measurement.zzha: void zzy(int,java.util.List,boolean)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<com.facebook.react.modules.blob.BlobModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>
<com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.ConnectionResult zad(com.google.android.gms.common.api.Api)>
<com.facebook.react.ReactInstanceManager: void access$1400(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiredNetworkType(androidx.work.NetworkType)>
<com.github.amlcurran.showcaseview.NewShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>
<com.google.android.gms.internal.maps.zzw: int getStrokeJointType()>
<com.facebook.react.views.text.TextLayoutManager: long measureText(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,com.facebook.react.views.text.ReactTextViewManagerCallback,int[])>
<com.google.android.gms.maps.model.IndoorBuilding: void <init>(com.google.android.gms.internal.maps.zzn)>
<com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager injectAadTokenRefreshManager(com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<com.google.android.gms.common.internal.zac: java.lang.String zai(android.content.Context,java.lang.String)>
<com.azure.authenticator.accounts.AadAccount: void setSecurityDefaultsPolicyEnabled(boolean)>
<com.google.android.gms.internal.measurement.zzds: int zzd()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.feature.notifications.AccountAndAuthenticationInterface accountAndAuthenticationInterface()>
<com.azure.authenticator.notifications.msa.Hilt_MsaNotificationActionBroadcastReceiver: void <init>()>
<com.facebook.yoga.YogaNode: void reset()>
<com.facebook.imagepipeline.transcoder.ImageTranscodeResult: int getTranscodeStatus()>
<android.view.View$MeasureSpec: int getMode(int)>
<com.evernote.android.job.JobRequest$Builder: long access$200(com.evernote.android.job.JobRequest$Builder)>
<com.google.android.gms.internal.location.zzh: com.google.android.gms.internal.location.zzam zza()>
<com.facebook.soloader.SysUtil: boolean is64Bit()>
<com.facebook.react.MemoryPressureRouter: void dispatchMemoryPressure(int)>
<com.facebook.common.memory.PooledByteBuffer$ClosedException: void <init>()>
<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
<ch.qos.logback.core.joran.util.PropertySetter: void addBasicProperty(java.lang.String,java.lang.String)>
<com.facebook.infer.'annotation'.Assertions: java.lang.Object assertNotNull(java.lang.Object)>
<com.google.android.gms.common.data.DataHolder$Builder: java.util.ArrayList zac(com.google.android.gms.common.data.DataHolder$Builder)>
<com.google.android.gms.internal.measurement.zzeh: void <init>(android.os.Handler)>
<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>
<com.google.android.gms.measurement.internal.zzet: android.os.Bundle zza()>
<com.azure.authenticator.logging.ExternalLogger$Companion: void e(java.lang.String)>
<com.facebook.react.modules.statusbar.StatusBarModule$1: void <init>(com.facebook.react.modules.statusbar.StatusBarModule,com.facebook.react.bridge.ReactContext,android.app.Activity,boolean,int)>
<com.google.android.gms.measurement.internal.zza: void <init>(com.google.android.gms.measurement.internal.zzd,java.lang.String,long)>
<com.airbnb.lottie.animation.content.PolystarContent: void createStarPath()>
<com.google.android.gms.maps.model.Dot: void <init>()>
<com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder createListenerHolder(java.lang.Object,android.os.Looper,java.lang.String)>
<com.facebook.react.ReactActivity: java.lang.String getMainComponentName()>
<com.google.android.gms.internal.maps.zzh: double getRadius()>
<com.facebook.imagepipeline.memory.MemoryChunk: int write(int,byte[],int,int)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance()>
<com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase: void <init>(android.content.Context,com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager)>
<com.google.android.gms.internal.safetynet.zzk: com.google.android.gms.common.api.PendingResult isVerifyAppsEnabled(com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream: void write(byte[],int,int)>
<com.google.android.gms.maps.model.StreetViewSource: void <init>(int)>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder onShowListener(android.content.DialogInterface$OnShowListener)>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void checkForKeyboardEvents()>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
<com.adjust.sdk.Util: java.lang.String getCpuAbi()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zas(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,java.util.ArrayList)>
<com.facebook.imagepipeline.core.ImagePipeline$4: boolean apply(com.facebook.cache.common.CacheKey)>
<ch.qos.logback.core.pattern.PatternLayoutBase: void setPattern(java.lang.String)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity_MembersInjector: void injectAadTokenRefreshManager(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeActivity,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback: void stop()>
<android.widget.ScrollView: android.content.Context getContext()>
<com.adjust.sdk.IActivityHandler: void removeSessionCallbackParameter(java.lang.String)>
<com.google.common.collect.ImmutableCollection: boolean isPartialView()>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$bjOov_vSeXtmd3VMomRfgVfv8Ew': void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.google.android.material.appbar.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)>
<com.google.android.gms.measurement.internal.zzkk: boolean zzW(android.content.Context,java.lang.String)>
<com.facebook.imagepipeline.cache.CountingLruMap: void <init>(com.facebook.imagepipeline.cache.ValueDescriptor)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize)>
<com.google.android.datatransport.cct.internal.LogEvent$Builder: com.google.android.datatransport.cct.internal.LogEvent build()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: kotlinx.coroutines.Job denyAadNgcSession(java.lang.String)>
<com.google.android.gms.common.zzn: void <init>(java.lang.String,boolean,boolean,android.os.IBinder,boolean)>
<com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseLayers(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.List,androidx.collection.LongSparseArray)>
<com.google.android.gms.auth.api.signin.GoogleSignInClient: android.content.Intent getSignInIntent()>
<com.airbnb.lottie.utils.BaseLottieAnimator: void notifyRepeat()>
<com.facebook.soloader.ExoSoSource$ExoUnpacker: com.facebook.soloader.ExoSoSource$FileDso[] access$100(com.facebook.soloader.ExoSoSource$ExoUnpacker)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidOther(int)>
<androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>
<com.google.android.gms.measurement.internal.zzkl: void <init>(com.google.android.gms.measurement.internal.zzkm,javax.net.ssl.SSLSocket)>
<com.google.android.gms.internal.measurement.zzcr: java.lang.String zzb()>
<com.google.android.material.snackbar.Snackbar: void show()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_20_21$cp()>
<com.facebook.imagepipeline.memory.Bucket: boolean isMaxLengthExceeded()>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)>
<com.google.android.gms.common.zzs: void <init>(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zza(android.os.Parcel,int,int)>
<ch.qos.logback.core.subst.Token$Type: ch.qos.logback.core.subst.Token$Type[] values()>
<com.airbnb.lottie.animation.keyframe.PathKeyframeAnimation: void <init>(java.util.List)>
<java.util.List: boolean contains(java.lang.Object)>
<androidx.appcompat.widget.TintTypedArray: float getDimension(int,float)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.thirdparty.abstraction.QrCodeResultHandlerThirdPartyAccount qrCodeResultHandlerThirdPartyAccount()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getDataFetchSequence()>
<com.google.android.gms.common.data.DataHolder: void <init>(com.google.android.gms.common.data.DataHolder$Builder,int,android.os.Bundle,int,com.google.android.gms.common.data.zab)>
<com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()>
<com.evernote.android.job.JobConfig: boolean isAllowSmallerIntervalsForMarshmallow()>
<com.facebook.react.views.text.TextAttributes: float getEffectiveMaxFontSizeMultiplier()>
<com.azure.authenticator.databinding.FragmentEditAddAddressBinding: com.azure.authenticator.databinding.FragmentEditAddAddressBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.measurement.zzne: void <init>()>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setTypeAttr(android.view.View,java.lang.String)>
<com.google.android.material.snackbar.BaseTransientBottomBar$16: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.facebook.imagepipeline.transcoder.SimpleImageTranscoder: android.graphics.Bitmap$CompressFormat getOutputFormat(com.facebook.imageformat.ImageFormat)>
<com.google.android.gms.common.BlockingServiceConnection: void <init>()>
<com.google.common.collect.MapMakerInternalMap$InternalEntry: java.lang.Object getKey()>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.imagepipeline.memory.BitmapPool getBitmapPool()>
<com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)>
<com.airbnb.lottie.LottieComposition: float getDuration()>
<com.google.android.gms.measurement.internal.zzjb: void zzP()>
<android.animation.Animator: void cancel()>
<com.google.android.material.tabs.TabLayout$TabView: void tryRemoveBadgeFromAnchor()>
<com.google.android.gms.internal.measurement.zzbg: void <init>(com.google.android.gms.internal.measurement.zzbr,boolean)>
<com.facebook.imagepipeline.core.CloseableReferenceFactory: com.facebook.common.references.CloseableReference create(java.io.Closeable)>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void logSuccessResult(com.microsoft.authenticator.core.telemetry.TelemetryResultEnum)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: void <init>(android.os.Bundle)>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordsViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)>
<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>
<com.facebook.soloader.UnpackingSoSource$Unpacker: com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: void <init>(java.lang.String,android.os.Parcel)>
<com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)>
<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
<com.google.android.gms.common.server.response.FastParser: void zaz(int)>
<androidx.collection.LongSparseArray: void put(long,java.lang.Object)>
<android.graphics.Paint: android.graphics.Shader getShader()>
<com.adjust.sdk.IRequestHandler: void teardown()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackPageView(java.lang.String)>
<com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onBitmapCacheMiss()>
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIBlock)>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager: void onActivityResult(int,int,android.content.Intent)>
<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeCustomStringSegment2(java.lang.String,int,int)>
<android.widget.LinearLayout: int getOrientation()>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemBackground(android.graphics.drawable.Drawable)>
<android.widget.ImageButton: int getWidth()>
<com.google.android.gms.internal.measurement.zzbr: java.lang.String zzw()>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method,com.facebook.react.uimanager.ViewManagersPropertyCache$1)>
<com.google.android.gms.internal.location.zzaz: void zzH(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzai)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb: void setResult(java.lang.Object)>
<com.facebook.react.fabric.mounting.mountitems.BatchMountItem: void <init>(com.facebook.react.fabric.mounting.mountitems.MountItem[],int,int)>
<com.azure.authenticator.PhoneFactorApplication_HiltComponents$SingletonC: void <init>()>
<com.facebook.imagepipeline.producers.SwallowResultProducer$1: void <init>(com.facebook.imagepipeline.producers.SwallowResultProducer,com.facebook.imagepipeline.producers.Consumer)>
<com.adjust.sdk.AdjustConfig: void setLogLevel(com.adjust.sdk.LogLevel,java.lang.String)>
<com.google.android.material.floatingactionbutton.MotionStrategy: boolean shouldCancel()>
<com.google.android.gms.common.api.GoogleApiActivity: void zab()>
<com.github.amlcurran.showcaseview.StandardShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<com.google.common.net.InternetDomainName: void <init>(java.lang.String)>
<com.google.android.gms.internal.measurement.zzck: java.lang.String zzd()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions maxZoomPreference(float)>
<com.facebook.react.bridge.ReactContext$1: void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.android.material.navigation.NavigationBarMenuView: void validateMenuItemId(int)>
<com.google.android.gms.auth.api.identity.SignInCredential: java.lang.String getFamilyName()>
<java.lang.Object: java.lang.Class getClass()>
<com.google.android.material.button.MaterialButtonHelper: void setStrokeColor(android.content.res.ColorStateList)>
<ch.qos.logback.core.filter.AbstractMatcherFilter: void <init>()>
<com.facebook.react.bridge.DynamicFromArray: void <init>()>
<com.github.amlcurran.showcaseview.ShowcaseView$3: void <init>(com.github.amlcurran.showcaseview.ShowcaseView)>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void <init>()>
<com.adjust.sdk.ActivityHandler: void deleteState(android.content.Context)>
<com.github.amlcurran.showcaseview.TextDrawer: void calculateTextPosition(int,int,boolean,android.graphics.Rect)>
<com.airbnb.lottie.animation.content.RepeaterContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.Repeater)>
<com.google.android.gms.internal.measurement.zzhl: void zzd(float)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: com.google.android.datatransport.runtime.backends.MetadataBackendRegistry get()>
<com.google.android.gms.internal.measurement.zzeg: com.google.android.gms.internal.measurement.zzeg zza()>
<com.facebook.react.common.MapBuilder: java.util.Map of()>
<com.google.common.base.CaseFormat: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>
<com.google.android.gms.measurement.internal.zzcz: void <init>()>
<com.google.android.gms.internal.measurement.zzmk: boolean zza()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setPositionWithSource(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.StreetViewSource)>
<ch.qos.logback.core.UnsynchronizedAppenderBase: void start()>
<com.google.android.gms.internal.location.zzbn: java.lang.String zza(java.lang.String,java.lang.Object[])>
<com.evernote.android.job.util.JobUtil: java.lang.String timeToString(long)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: boolean parseMoreData(com.facebook.imagepipeline.image.EncodedImage)>
<javax.net.ssl.SSLSocket: void setSendBufferSize(int)>
<com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)>
<com.google.android.gms.internal.auth.zzak: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.auth.api.AuthProxyOptions,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onBitmapCacheHit(com.facebook.cache.common.CacheKey)>
<com.microsoft.brooklyn.ui.payment.PaymentViewModel: void <init>(com.microsoft.brooklyn.module.repository.PaymentsRepository)>
<com.facebook.react.uimanager.events.TouchEvent: float getViewX()>
<com.airbnb.lottie.model.content.ShapeStroke$LineCapType: android.graphics.Paint$Cap toPaintCap()>
<androidx.transition.TransitionSet: androidx.transition.TransitionSet setOrdering(int)>
<com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)>
<ch.qos.logback.core.util.COWArrayList: void clear()>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: java.lang.String getMsg(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.measurement.zzdj: long zzq()>
<com.google.android.gms.internal.auth-api.zzf: void zzc(android.os.Parcel,android.os.Parcelable)>
<com.google.android.material.timepicker.RadialViewGroup: void updateLayoutParamsAsync()>
<com.google.android.gms.internal.measurement.zzkg: int zzn(java.lang.Object,long)>
<com.google.android.gms.internal.measurement.zzih: com.google.android.gms.internal.measurement.zzih zzi()>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zak(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.gms.common.api.GoogleApiClient: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.facebook.react.animated.NativeAnimatedModule$19: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<ch.qos.logback.core.net.SMTPAppenderBase: boolean isSTARTTLS()>
<com.microsoft.identity.client.Logger: void setEnableLogcatLog(boolean)>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.google.android.gms.maps.MapFragment: void setArguments(android.os.Bundle)>
<com.microsoft.authenticator.notifications.controller.FcmListenerService_MembersInjector: void injectAppNotificationsManager(com.microsoft.authenticator.notifications.controller.FcmListenerService,com.microsoft.authenticator.notifications.abstraction.AppNotificationsManager)>
<com.facebook.react.uimanager.NativeKind: void <init>(java.lang.String,int)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>
<com.google.android.gms.internal.measurement.zzg: int zza(android.content.Context,android.app.job.JobInfo,java.lang.String,java.lang.String)>
<com.azure.authenticator.databinding.FrxPrivacyConsentBinding: com.azure.authenticator.databinding.FrxPrivacyConsentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.soloader.ExtractFromZipSoSource$ZipDso: java.lang.String makePseudoHash(java.util.zip.ZipEntry)>
<androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)>
<com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()>
<android.widget.ImageView: android.os.Parcelable onSaveInstanceState()>
<com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable createDrawableFromJSDescription(android.content.Context,com.facebook.react.bridge.ReadableMap)>
<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>
<com.evernote.android.job.WorkManagerAvailableHelper: boolean isWorkManagerApiSupported()>
<com.evernote.android.job.JobManager: com.evernote.android.job.JobRequest getJobRequest(int,boolean)>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isPlayStorePossiblyUpdating(android.content.Context,int)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.res.Resources getRemoteResource(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenRefreshWorker_AssistedFactory fcmTokenRefreshWorker_AssistedFactory()>
<com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)>
<com.facebook.react.views.textinput.ReactEditText: boolean access$000(com.facebook.react.views.textinput.ReactEditText)>
<com.google.android.gms.measurement.internal.zzjq: void zzl()>
<com.google.android.gms.measurement.internal.zzhg: void <init>(com.google.android.gms.measurement.internal.zzhn,java.util.concurrent.atomic.AtomicReference)>
<androidx.collection.ArrayMap: java.util.Set keySet()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AutoValue_SchedulerConfig_ConfigValue$Builder: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue$Builder setFlags(java.util.Set)>
<com.google.android.material.shape.CornerTreatment: void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>
<com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: void <init>(android.os.Looper)>
<com.facebook.datasource.AbstractDataSource: boolean isClosed()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.passwordautochange.PasswordAutoChangeViewModel access$13400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] values()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.InstrumentedMemoryCache getEncodedMemoryCache()>
<com.google.android.gms.auth.api.signin.internal.zzm: void <init>(com.google.android.gms.auth.api.signin.internal.zzj)>
<com.airbnb.lottie.model.layer.BaseLayer: void drawLayer(android.graphics.Canvas,android.graphics.Matrix,int)>
<ch.qos.logback.core.spi.FilterAttachableImpl: java.util.List getCopyOfAttachedFiltersList()>
<com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float)>
<com.facebook.react.views.textinput.ReactTextInputBlurEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.gms.internal.measurement.zzaz: void <init>(com.google.android.gms.internal.measurement.zzbr,boolean)>
<com.evernote.android.job.JobStorage$JobOpenHelper: void upgradeFrom1To2(android.database.sqlite.SQLiteDatabase)>
<com.azure.authenticator.databinding.FragmentSignInBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.TextView,android.widget.RelativeLayout,android.widget.Button,android.widget.ImageView,com.airbnb.lottie.LottieAnimationView,android.widget.TextView,android.widget.LinearLayout,android.widget.ProgressBar,android.widget.TextView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.TextView)>
<com.facebook.react.common.LongArray: void dropTail(int)>
<com.google.android.gms.measurement.internal.zzhi: void <init>(com.google.android.gms.measurement.internal.zzhn,com.google.android.gms.measurement.internal.zzaf,long,int,long,boolean)>
<android.util.SparseLongArray: void <init>()>
<java.io.BufferedWriter: void <init>(java.io.Writer)>
<android.widget.AutoCompleteTextView: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeEndObject()>
<android.widget.Button: android.view.ViewParent getParent()>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber: void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getIdToken()>
<ch.qos.logback.core.joran.GenericConfigurator: void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter)>
<com.google.crypto.tink.PrimitiveSet: com.google.crypto.tink.PrimitiveSet newPrimitiveSet(java.lang.Class)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void handleMsaNgcKeyGenerationStatus(java.lang.String,com.microsoft.authenticator.registration.msa.entities.MsaNgcKeyGenerationStatus)>
<androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: com.azure.authenticator.ui.action.UserInteractionRequiredAction[] getAllActionList()>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<com.google.android.gms.internal.base.zac: void zad(android.os.Parcel,android.os.IInterface)>
<ch.qos.logback.core.joran.util.PropertySetter: void setProperty(java.lang.String,java.lang.String)>
<com.google.android.material.shadow.ShadowViewDelegate: boolean isCompatPaddingEnabled()>
<com.airbnb.lottie.model.layer.BaseLayer: void applyInvertedIntersectMask(android.graphics.Canvas,android.graphics.Matrix,com.airbnb.lottie.model.content.Mask,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation,com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.google.android.gms.internal.maps.zzk: void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds)>
<com.microsoft.did.feature.backuprestore.viewlogic.RestorePasswordChallengeFragment_MembersInjector: void injectInterModuleNavigator(com.microsoft.did.feature.backuprestore.viewlogic.RestorePasswordChallengeFragment,com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<android.widget.GridView: void onMeasure(int,int)>
<com.google.android.gms.measurement.internal.zzg: boolean zzF()>
<android.view.View: int getBaseline()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()>
<com.google.android.gms.common.GooglePlayServicesUtilLight: android.app.PendingIntent getErrorPendingIntent(int,android.content.Context,int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.PipelineDraweeController)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.PhoneFactorApplication injectPhoneFactorApplication2(com.azure.authenticator.PhoneFactorApplication)>
<com.facebook.drawee.drawable.ForwardingDrawable: boolean setVisible(boolean,boolean)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity_MembersInjector: void injectMembers(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity)>
<com.google.android.gms.common.data.EntityBuffer: int zaa(int)>
<com.google.android.gms.maps.model.zzh: void <init>()>
<android.database.CursorWindow: byte[] getBlob(int,int)>
<com.airbnb.lottie.model.layer.BaseLayer: com.airbnb.lottie.model.layer.BaseLayer forModel(com.airbnb.lottie.model.layer.Layer,com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.LottieComposition)>
<androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback getFrameCallback()>
<androidx.navigation.NavArgsLazy: void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function0)>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>
<com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList createColorStateList(int,int)>
<com.google.android.gms.internal.measurement.zzfs: com.google.android.gms.internal.measurement.zzfo zzb(java.lang.Object)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$17: void <init>(java.util.Map)>
<com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation: java.lang.Integer getValue(com.airbnb.lottie.value.Keyframe,float)>
<com.google.android.datatransport.runtime.EventInternal: java.util.Map getAutoMetadata()>
<com.microsoft.authenticator.reactnative.modules.BackupPackage: void <init>()>
<com.google.android.gms.common.stats.WakeLockTracker: void registerReleaseEvent(android.content.Context,android.content.Intent)>
<com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getCurrent()>
<com.facebook.react.fabric.FabricUIManager: void onHostPause()>
<java.io.OutputStream: void <init>()>
<com.facebook.imagepipeline.image.EncodedImage: int getSize()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionManager_Factory: com.azure.authenticator.notifications.msa.MsaNotificationActionManager get()>
<java.lang.Math: double log1p(double)>
<com.adjust.sdk.ActivityHandler: boolean deleteSessionPartnerParameters(android.content.Context)>
<ch.qos.logback.classic.android.SQLiteAppender: long subAppend(ch.qos.logback.classic.spi.ILoggingEvent,android.database.sqlite.SQLiteStatement)>
<com.google.android.gms.internal.measurement.zzkz: long zzt()>
<com.google.android.gms.internal.measurement.zzms: com.google.android.gms.internal.measurement.zzmt zzc()>
<android.widget.HorizontalScrollView: android.view.View findFocus()>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>
<com.google.android.gms.common.api.internal.zacj: java.util.concurrent.ExecutorService zaa()>
<com.google.crypto.tink.KeysetManager: int newKeyId()>
<com.google.android.gms.common.api.internal.zap: void zah(com.google.android.gms.common.api.internal.zap,com.google.android.gms.common.ConnectionResult,int)>
<com.google.android.gms.measurement.internal.zzai: boolean zzF()>
<com.airbnb.lottie.LottieAnimationView: void setAnimation(int)>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher ascii()>
<com.google.android.gms.safetynet.SafeBrowsingData: long getLastUpdateTimeMs()>
<com.google.common.io.BaseEncoding$Alphabet: int hashCode()>
<com.facebook.imagepipeline.image.CloseableImage: int getSizeInBytes()>
<com.google.android.material.shape.MaterialShapeDrawable: android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean)>
<com.google.android.gms.internal.measurement.zzgb: void zzbr(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.suggestion.businesslogic.AutofillSuggestionManager autofillSuggestionManager()>
<androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)>
<com.google.android.gms.internal.measurement.zzfc: void <init>(com.google.android.gms.internal.measurement.zzfe,java.lang.String,java.lang.Double,boolean)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int,int[],int)>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks zzk(com.google.android.gms.common.internal.BaseGmsClient)>
<com.facebook.react.common.futures.SimpleSettableFuture: java.lang.Object get()>
<com.google.android.gms.common.zzf: void <init>(byte[])>
<java.util.concurrent.atomic.AtomicInteger: int get()>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar)>
<com.facebook.react.views.checkbox.ReactCheckBoxEvent: java.lang.String getEventName()>
<com.google.android.material.chip.ChipDrawable: boolean isCloseIconStateful()>
<com.adjust.sdk.IPackageHandler: void resumeSending()>
<com.azure.authenticator.ui.action.ReEnableAutoBackupAction$Companion: void <init>()>
<com.google.android.gms.internal.measurement.zzjn: void <init>()>
<ch.qos.logback.core.status.StatusUtil: void addStatus(ch.qos.logback.core.status.Status)>
<com.google.android.gms.common.api.ResultCallback: void onResult(com.google.android.gms.common.api.Result)>
<com.google.android.gms.internal.maps.zzc: void zza(android.os.Parcel,android.os.Parcelable)>
<android.system.ErrnoException: java.lang.String toString()>
<com.google.android.material.bottomappbar.BottomAppBar: int access$3000(com.google.android.material.bottomappbar.BottomAppBar)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getGroupKey()>
<com.google.android.gms.internal.measurement.zzdj: void zzaM(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<java.security.AccessController: void checkPermission(java.security.Permission)>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder: com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder filterByHostedDomain(java.lang.String)>
<com.google.android.gms.internal.measurement.zzja: void zzi(java.lang.Object)>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: boolean isCollapsible()>
<ch.qos.logback.core.OutputStreamAppender: void writeBytes(byte[])>
<com.google.android.gms.maps.internal.zzab: void zze(com.google.android.gms.internal.maps.zzt)>
<com.google.android.material.button.MaterialButtonToggleGroup$CornerData: com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View)>
<com.google.android.material.shape.MaterialShapeUtils: com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenDailyRetryRefreshWorker_AssistedFactory fcmTokenDailyRetryRefreshWorker_AssistedFactory()>
<com.microsoft.authenticator.common.abstraction.BottomNavigationController: void <init>()>
<com.google.common.base.MoreObjects$ToStringHelper: void <init>(java.lang.String)>
<com.google.android.material.animation.ArgbEvaluatorCompat: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>
<android.graphics.Paint: void setFlags(int)>
<com.google.android.gms.internal.measurement.zziv: com.google.android.gms.internal.measurement.zziu zzc(java.lang.Class)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void maybeFinish(boolean)>
<ch.qos.logback.core.util.OptionHelper: boolean toBoolean(java.lang.String,boolean)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzc: void <init>()>
<com.google.android.gms.measurement.internal.zzkh: void zza(com.google.android.gms.measurement.internal.zzkg,android.os.Parcel,int)>
<com.facebook.react.views.image.GlobalImageLoadListener: void onLoadAttempt(android.net.Uri)>
<com.facebook.drawee.controller.AbstractDraweeController: void setControllerOverlay(android.graphics.drawable.Drawable)>
<com.facebook.react.views.scroll.OnScrollDispatchHelper: void <init>()>
<com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap)>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>
<com.google.android.gms.common.api.internal.zaan: void <init>(com.google.android.gms.common.api.internal.zaao,com.google.android.gms.common.api.internal.zaba,com.google.android.gms.common.api.internal.zaar,com.google.android.gms.signin.internal.zak)>
<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener)>
<com.google.android.material.chip.ChipGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<ch.qos.logback.core.subst.Token$Type: void <init>(java.lang.String,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity injectSignOutMsaAccountActivity2(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity)>
<com.airbnb.lottie.LottieComposition: float getDurationFrames()>
<com.google.android.material.ripple.RippleUtils: int getColorForState(android.content.res.ColorStateList,int[])>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>
<androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)>
<org.xml.sax.helpers.DefaultHandler: void <init>()>
<com.google.android.material.datepicker.DateValidatorPointForward: void <init>(long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.abstraction.AutoBackupWorker_AssistedFactory autoBackupWorker_AssistedFactory()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int[] createIntArray(android.os.Parcel,int)>
<com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor: void scheduleNext()>
<com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener: void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean)>
<com.google.android.material.badge.BadgeDrawable: int getMaxCharacterCount()>
<ch.qos.logback.classic.util.LogbackMDCAdapter: java.util.Map duplicateAndInsertNewMap(java.util.Map)>
<android.widget.CheckBox: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>
<com.google.android.gms.internal.maps.zzn: int getActiveLevelIndex()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisPercent(float)>
<com.google.android.material.card.MaterialCardViewHelper: void setProgress(float)>
<com.google.android.material.bottomappbar.BottomAppBar: float access$1800(com.google.android.material.bottomappbar.BottomAppBar,int)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.reflect.Method findSetterMethod(java.lang.String)>
<androidx.collection.ArrayMap: void <init>()>
<com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource getBestResultInCache()>
<com.google.android.gms.common.zzr: void <init>()>
<ch.qos.logback.core.spi.AbstractComponentTracker: java.util.Collection allComponents()>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType getNetworkType()>
<ch.qos.logback.core.net.AbstractSSLSocketAppender: ch.qos.logback.core.net.ssl.SSLConfiguration getSsl()>
<com.facebook.drawee.generic.RoundingParams: int getOverlayColor()>
<com.google.android.gms.measurement.internal.zzju: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.google.android.material.timepicker.TimePickerView$2: void <init>(com.google.android.material.timepicker.TimePickerView)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBigInteger(android.os.Parcel,int,java.math.BigInteger,boolean)>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)>
<com.evernote.android.job.JobStorage$JobOpenHelper: void upgradeFrom3To4(android.database.sqlite.SQLiteDatabase)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.google.android.gms.internal.measurement.zzjx: void zzg(java.lang.StringBuilder,int)>
<android.widget.EditText: void setLines(int)>
<com.azure.authenticator.databinding.AccountOtpViewLayoutBinding: com.azure.authenticator.databinding.AccountOtpViewLayoutBinding bind(android.view.View)>
<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.facebook.react.views.art.ARTSurfaceViewManager: void updateExtraData(com.facebook.react.views.art.ARTSurfaceView,java.lang.Object)>
<com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding: void <init>(com.google.android.material.card.MaterialCardView,android.widget.ImageView,android.widget.RelativeLayout,com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton,android.widget.TextView)>
<com.google.android.gms.internal.measurement.zzgb: byte[] zzbp()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation: void setValueCallback(com.airbnb.lottie.value.LottieValueCallback)>
<com.google.android.gms.common.internal.BaseGmsClient: android.os.Bundle getGetServiceRequestExtraArgs()>
<com.adjust.sdk.SdkClickHandler: java.util.List access$000(com.adjust.sdk.SdkClickHandler)>
<com.azure.authenticator.notifications.msa.MsaNotification: void <init>(android.content.Context,com.microsoft.authenticator.common.businessLogic.AuthenticatorState,com.azure.authenticator.storage.database.AccountStorage,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.onlineid.sdk.extension.SessionManager)>
<android.graphics.Region: void <init>()>
<android.widget.TextView: void invalidate()>
<com.airbnb.lottie.model.KeyPath: boolean endsWithGlobstar()>
<androidx.room.RoomDatabase: void assertNotMainThread()>
<android.view.ViewGroup: android.os.Handler getHandler()>
<com.google.android.gms.internal.measurement.zzdf: void zzt(com.google.android.gms.internal.measurement.zzdf)>
<com.google.android.material.internal.StaticLayoutBuilderCompat: com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int)>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhx zzbB()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeController: void setControllerViewportVisibilityListener(com.facebook.drawee.controller.ControllerViewportVisibilityListener)>
<com.google.common.io.BaseEncoding$Alphabet: boolean isValidPaddingStartPosition(int)>
<com.google.android.gms.internal.measurement.zzkz: long zzD()>
<android.view.ViewGroup: void setClipToPadding(boolean)>
<com.facebook.react.ReactInstanceManager: void detachViewFromInstance(com.facebook.react.uimanager.ReactRoot,com.facebook.react.bridge.CatalystInstance)>
<android.view.animation.Animation: void setDuration(long)>
<java.util.HashSet: boolean remove(java.lang.Object)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Float readFloatObject(android.os.Parcel,int)>
<com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)>
<com.facebook.drawee.controller.AbstractDraweeController: java.lang.String getImageClass(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzr: void zzc()>
<com.google.android.gms.maps.model.MarkerOptions: float getInfoWindowAnchorU()>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.graphclient.GraphHelper graphHelper()>
<com.google.android.gms.location.FusedLocationProviderClient: void zzd(com.google.android.gms.internal.location.zzaz,com.google.android.gms.tasks.TaskCompletionSource)>
<com.fasterxml.jackson.core.io.IOContext: void _verifyAlloc(java.lang.Object)>
<com.adjust.sdk.AdjustInstance$11: void <init>(com.adjust.sdk.AdjustInstance,android.content.Context)>
<androidx.sqlite.db.SupportSQLiteOpenHelper$Factory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)>
<com.facebook.fbreact.specs.NativeAsyncStorageSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.internal.maps.zzh: float getStrokeWidth()>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_Factory: com.azure.authenticator.ui.backup.RestoreFlowViewModel newInstance(com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase)>
<com.facebook.common.memory.PooledByteStreams: void <init>(com.facebook.common.memory.ByteArrayPool,int)>
<com.google.android.gms.internal.measurement.zzdf: boolean zzc()>
<android.animation.FloatEvaluator: void <init>()>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolParams getSmallByteArrayPoolParams()>
<com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>
<com.google.android.gms.internal.measurement.zzjw: java.lang.Object zzb()>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isZoomControlsEnabled()>
<android.app.Activity: void setResult(int,android.content.Intent)>
<com.facebook.common.references.CloseableReference$1: void <init>()>
<com.facebook.cache.disk.DefaultDiskStorage$EntryImpl: com.facebook.binaryresource.FileBinaryResource getResource()>
<java.lang.StackTraceElement: boolean isNativeMethod()>
<com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder: com.microsoft.authenticator.commonuilibrary.dialogs.CustomDialogFragment$Builder iconResourceId(int)>
<com.google.android.gms.internal.measurement.zzef: com.google.android.gms.internal.measurement.zzef zza(int)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.RichContextSessionUseCase: void <init>()>
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>
<android.util.SparseArray: java.lang.Object get(int)>
<com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)>
<android.widget.TextView: float getTextSize()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateLayout(com.facebook.react.uimanager.ReactShadowNode)>
<androidx.work.Data$Builder: androidx.work.Data$Builder putString(java.lang.String,java.lang.String)>
<ch.qos.logback.classic.android.SQLiteAppender: void bindLoggingEventArguments(android.database.sqlite.SQLiteStatement,java.lang.Object[])>
<com.google.android.gms.auth.zzd: com.google.android.gms.common.logging.Logger zza()>
<com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.Object getCallerContext()>
<com.microsoft.authenticator.core.telemetry.AuthenticationTimeTelemetry: void setLocation(java.lang.String)>
<com.google.android.gms.internal.measurement.zzjf: com.google.android.gms.internal.measurement.zzjf zza()>
<com.google.android.datatransport.runtime.SendRequest: java.lang.String getTransportName()>
<android.view.ViewGroup: void dispatchProvideStructure(android.view.ViewStructure)>
<com.google.android.gms.internal.measurement.zzdj: void zzau(com.google.android.gms.internal.measurement.zzdj,int)>
<com.google.android.material.navigation.NavigationBarPresenter: void updateMenuView(boolean)>
<com.google.android.gms.common.util.IOUtils: byte[] readInputStreamFully(java.io.InputStream)>
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>
<java.lang.Double: void <init>(double)>
<java.util.concurrent.FutureTask: void run()>
<com.facebook.react.views.modal.ReactModalHostManager$2: void <init>(com.facebook.react.views.modal.ReactModalHostManager,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.views.modal.ReactModalHostView)>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>
<com.adjust.sdk.ActivityPackage: long getClickTimeInMilliseconds()>
<com.google.common.base.CharMatcher$NegatedFastMatcher: void <init>(com.google.common.base.CharMatcher)>
<com.facebook.react.uimanager.UIViewOperationQueue: void resumeFrameCallback()>
<com.airbnb.lottie.model.content.GradientFill: java.lang.String getName()>
<com.facebook.react.uimanager.events.EventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)>
<com.facebook.react.uimanager.events.EventDispatcher: void onCatalystInstanceDestroyed()>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket: void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)>
<com.github.amlcurran.showcaseview.AnimatorAnimationFactory: void <init>()>
<com.airbnb.lottie.LottieTask: com.airbnb.lottie.LottieTask removeFailureListener(com.airbnb.lottie.LottieListener)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.KeyManager getKeyManagerInternal(java.lang.String,java.lang.Class)>
<com.google.android.gms.measurement.internal.zzex: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float,int)>
<com.google.android.material.chip.ChipDrawable: float calculateChipIconWidth()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.ControllerViewportVisibilityListener getControllerViewportVisibilityListener()>
<com.google.android.gms.auth.api.credentials.CredentialRequest: com.google.android.gms.auth.api.credentials.CredentialPickerConfig getCredentialPickerConfig()>
<com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)>
<com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1: void <init>(com.facebook.imagepipeline.cache.ImageCacheStatsTracker)>
<com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>
<com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()>
<ch.qos.logback.classic.spi.ILoggingEvent: java.lang.String getMessage()>
<com.google.android.gms.internal.measurement.zzcp: void <init>()>
<com.google.android.material.snackbar.BaseTransientBottomBar: int access$102(com.google.android.material.snackbar.BaseTransientBottomBar,int)>
<com.facebook.cache.common.CacheEventListener: void onWriteSuccess(com.facebook.cache.common.CacheEvent)>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getEmail()>
<com.google.common.collect.RegularImmutableMap$EntrySet: void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int)>
<com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga zzaq()>
<com.google.common.collect.MapMakerInternalMap$Segment: void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue)>
<com.google.crypto.tink.proto.KeyData$Builder: com.google.crypto.tink.proto.KeyData$Builder setKeyMaterialType(com.google.crypto.tink.proto.KeyData$KeyMaterialType)>
<com.google.android.gms.internal.measurement.zzmv: double zzc()>
<com.google.android.gms.internal.measurement.zzcd: com.google.android.gms.internal.measurement.zzcc zzb()>
<com.google.android.gms.internal.measurement.zznp: void <init>()>
<android.widget.HorizontalScrollView: void <init>(android.content.Context)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_Factory: com.azure.authenticator.ui.authentication.MsaAuthViewModel get()>
<com.google.android.gms.location.zzbc: void <init>()>
<com.google.android.material.resources.TextAppearance: android.graphics.Typeface getFont(android.content.Context)>
<com.google.android.gms.measurement.internal.zzd: void zza(java.lang.String,long)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.util.TriState access$000(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RemoteCall zab(com.google.android.gms.common.api.internal.RegistrationMethods$Builder)>
<com.google.android.gms.internal.measurement.zzjk: void zzU(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener: void onLayoutUpdated(com.facebook.react.uimanager.ReactShadowNode)>
<com.adjust.sdk.PackageHandler: void init(com.adjust.sdk.IActivityHandler,android.content.Context,boolean)>
<android.app.Application$ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeSettingsFragment$Companion: void <init>()>
<ch.qos.logback.classic.android.SQLiteAppender: void secondarySubAppend(ch.qos.logback.classic.spi.ILoggingEvent,long)>
<com.google.android.gms.common.internal.service.zaa: void <init>()>
<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
<com.google.android.material.badge.BadgeDrawable: int getNumber()>
<com.google.android.gms.internal.common.zzq: int zzg(java.lang.Object[],int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageLoadStatus(int)>
<androidx.work.WorkManager: androidx.work.Operation enqueue(androidx.work.WorkRequest)>
<java.io.File: boolean createNewFile()>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: void addAnimationsToLayer(com.airbnb.lottie.model.layer.BaseLayer)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.memory.PooledByteBufferFactory access$800(com.facebook.imagepipeline.producers.ResizeAndRotateProducer)>
<com.facebook.react.bridge.GuardedResultAsyncTask: void <init>(com.facebook.react.bridge.ReactContext)>
<android.widget.ImageView: int getPaddingTop()>
<com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab()>
<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.microsoft.authenticator.location.LocationManager: void <init>(android.content.Context,com.google.android.gms.location.FusedLocationProviderClient,android.location.Geocoder,com.google.android.gms.location.SettingsClient)>
<com.facebook.react.bridge.ModuleSpec: void <init>(javax.inject.Provider,java.lang.String)>
<com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)>
<com.facebook.react.devsupport.LogBoxModule$4: void <init>(com.facebook.react.devsupport.LogBoxModule)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$400(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<android.widget.CheckBox: void setLines(int)>
<com.google.android.gms.common.internal.zzm: void <init>(java.lang.String,java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzdi: java.util.List zzb()>
<com.google.android.gms.internal.measurement.zzjm: void <init>()>
<android.os.Parcel: void recycle()>
<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter: void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener)>
<com.fasterxml.jackson.core.io.UTF8Writer: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>
<com.facebook.react.TurboReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: boolean isMapToolbarEnabled()>
<com.facebook.common.internal.Objects$ToStringHelper: java.lang.String toString()>
<com.google.android.gms.internal.measurement.zzj: void <init>(com.google.android.gms.internal.measurement.zzi)>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<com.facebook.datasource.DataSource: boolean hasMultipleResults()>
<com.azure.authenticator.storage.database.migration.Migration24To25$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.math.BigInteger[] createBigIntegerArray(android.os.Parcel,int)>
<com.facebook.react.views.drawer.events.DrawerSlideEvent: void <init>(int,float)>
<ch.qos.logback.classic.spi.LoggingEvent: java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[])>
<com.google.android.datatransport.runtime.EventInternal$Builder: java.util.Map getAutoMetadata()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()>
<android.system.Os: java.lang.String readlink(java.lang.String)>
<com.google.android.material.datepicker.DateStrings: java.lang.String getMonthDayOfWeekDay(long)>
<android.widget.EditText: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
<com.airbnb.lottie.model.layer.BaseLayer: void resolveKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)>
<com.azure.authenticator.ui.msa.'-$$Lambda$MsaProtectionActivity$yHzb-aevCh6SAZn5BiBdzU-0mXQ': void onClick(android.content.DialogInterface,int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$ICompletion access$getCallback$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback)>
<com.google.android.material.resources.TextAppearance: void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface)>
<com.google.android.gms.signin.zae: void zab(com.google.android.gms.common.internal.IAccountAccessor,boolean)>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment: com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager getDialogFragmentManager$app_productionRelease()>
<com.google.android.gms.internal.measurement.zzhs: int zzbw()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: int getResolvedLayoutDirection()>
<javax.net.ssl.SSLSocket: void setSoLinger(boolean,int)>
<com.facebook.cache.disk.DiskStorageCache$1: void <init>(com.facebook.cache.disk.DiskStorageCache)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: int getExpectedNumFrames()>
<ch.qos.logback.classic.spi.LoggingEvent: void setMarker(org.slf4j.Marker)>
<com.azure.authenticator.storage.database.DbAccount: int getAccountCapability()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void approveNgcSession()>
<kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>
<com.google.android.gms.measurement.internal.zzfi: void zzt(com.google.android.gms.measurement.internal.zzfg)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: boolean checkUTF32(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void processFREAndRestoreBackupArgs(android.os.Bundle)>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.BackupUseCase access$7900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.auth-api-phone.zzi: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.facebook.yoga.YogaNode: void setMinWidthPercent(float)>
<com.microsoft.brooklyn.ui.UiEvent: boolean getHasBeenHandled()>
<android.widget.EditText: int getPaddingRight()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldName(java.lang.String,boolean)>
<com.google.android.material.navigation.NavigationBarItemView: int getItemBackgroundResId()>
<com.microsoft.onlineid.internal.Assertion: void check(boolean)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.measurement.internal.zzkk: java.lang.String zzC(java.lang.String,int,boolean)>
<com.google.android.gms.common.api.internal.zabl: boolean zaF(com.google.android.gms.common.api.internal.zai)>
<ch.qos.logback.core.util.EnvUtil: boolean isJDK_N_OrHigher(int)>
<android.view.ViewGroup: void addView(android.view.View)>
<com.facebook.react.NativeModuleRegistryBuilder: com.facebook.react.bridge.NativeModuleRegistry build()>
<com.facebook.react.fabric.mounting.mountitems.RemoveDeleteMultiMountItem: void <init>(int[])>
<com.adjust.sdk.SharedPreferencesManager: boolean getDisableThirdPartySharing()>
<ch.qos.logback.core.rolling.helper.DateTokenConverter: java.lang.String toRegex()>
<com.google.android.gms.internal.measurement.zzlp: boolean zzc()>
<com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)>
<com.facebook.react.views.textinput.ReactEditText: void setSelection(int,int)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.google.android.gms.internal.measurement.zzmv: com.google.android.gms.internal.measurement.zzmw zzg()>
<android.view.TextureView: void <init>(android.content.Context)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketComplete$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,kotlin.coroutines.Continuation,com.microsoft.onlineid.Ticket)>
<java.io.IOException: void printStackTrace(java.io.PrintStream)>
<java.lang.Integer: java.lang.String toString()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.ExperimentationManager experimentationManager()>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: java.lang.Integer getBacklog()>
<ch.qos.logback.core.encoder.Encoder: byte[] encode(java.lang.Object)>
<android.view.ViewGroup: void setBackgroundResource(int)>
<com.adjust.sdk.SharedPreferencesManager: long getLong(java.lang.String,long)>
<com.google.android.gms.internal.measurement.zzla: long zzI()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$GetTicketCallback$onGetTicketComplete$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context,okhttp3.OkHttpClient)>
<com.adjust.sdk.ActivityHandler: void updateHandlersStatusAndSendI()>
<android.os.Trace: void beginSection(java.lang.String)>
<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapperImpl: void <init>(java.util.List)>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath)>
<com.azure.authenticator.ui.fragment.main.Hilt_SendFeedbackFragment: void inject()>
<android.graphics.Canvas: void restore()>
<com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.api.internal.zabr zae(android.content.Context,com.google.android.gms.common.api.internal.zabq)>
<com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)>
<com.google.android.gms.internal.measurement.zzp: void setEventInterceptor(com.google.android.gms.internal.measurement.zzv)>
<com.azure.authenticator.ui.MainActivity: void onResume()>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment: void <init>(com.google.common.collect.MapMakerInternalMap,int,int)>
<com.github.amlcurran.showcaseview.ShotStateStore: void storeShot()>
<com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getStartServiceAction()>
<com.facebook.drawee.drawable.RoundedCornersDrawable: void <init>(android.graphics.drawable.Drawable)>
<androidx.recyclerview.widget.PagerSnapHelper: void <init>()>
<com.google.common.collect.AbstractMapEntry: void <init>()>
<com.adjust.sdk.AdjustInstance: java.lang.String getAdid()>
<com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.api.Api$Client zaA(com.google.android.gms.common.api.internal.zabl)>
<com.airbnb.lottie.model.content.ShapeGroup: java.util.List getItems()>
<com.azure.authenticator.databinding.AadRemoteNgcSessionDialogBinding: void <init>(android.widget.ScrollView,androidx.fragment.app.FragmentContainerView,android.widget.TextView,android.widget.TextView,android.widget.ProgressBar)>
<com.azure.authenticator.authentication.msa.ui.ActivityState: boolean getAutoEnableRemoteNgc()>
<com.google.android.gms.measurement.internal.zzcr: void <init>()>
<com.android.installreferrer.api.InstallReferrerClientImpl$InstallReferrerServiceConnection: void <init>(com.android.installreferrer.api.InstallReferrerClientImpl,com.android.installreferrer.api.InstallReferrerStateListener)>
<ch.qos.logback.core.spi.ScanException: void <init>(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$kZvaOyGiykCp83qNu3CJMxB50Uk': void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.facebook.react.uimanager.layoutanimation.OpacityAnimation: void <init>(android.view.View,float,float)>
<androidx.appcompat.app.AppCompatActivity: void setTheme(int)>
<java.util.LinkedHashMap: void <init>(java.util.Map)>
<com.microsoft.authenticator.backup.entities.CloudBackup: java.lang.String serialize()>
<java.nio.channels.FileLock: boolean isValid()>
<com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)>
<com.google.android.gms.internal.auth.zzx: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.accounttransfer.zzl)>
<com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener: void onViewFound(android.view.View,java.lang.String)>
<com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)>
<com.google.android.gms.measurement.internal.zzjt: android.app.PendingIntent zzj()>
<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver)>
<com.facebook.yoga.YogaPositionType: void <init>(java.lang.String,int,int)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzn()>
<com.google.android.gms.measurement.internal.zzd: void zzc(long)>
<com.google.android.material.resources.TextAppearance: android.graphics.Typeface getFallbackFont()>
<android.util.JsonWriter: android.util.JsonWriter name(java.lang.String)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void dispose()>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy)>
<java.lang.String: java.lang.String toLowerCase()>
<com.google.android.material.card.MaterialCardView: float getCardViewRadius()>
<com.google.android.gms.common.stats.StatsEvent: int zzb()>
<com.microsoft.authenticator.reactnative.modules.TelemetryPackage: void <init>()>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer newLocalThumbnailProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[])>
<bolts.Task: bolts.Task$UnobservedExceptionHandler getUnobservedExceptionHandler()>
<com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String,java.lang.Object)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzd(android.os.Parcel,android.os.Parcelable,int)>
<com.google.android.gms.internal.measurement.zzeu: void <init>(android.content.Context)>
<com.facebook.react.animated.AnimatedNodeValueListener: void onValueUpdate(double)>
<com.google.android.gms.location.LocationSettingsStates: boolean isBlePresent()>
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$100(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer)>
<com.google.android.material.chip.Chip: boolean access$100(com.google.android.material.chip.Chip)>
<com.azure.authenticator.databinding.GeneratorHistoryLayoutBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,com.azure.authenticator.databinding.EmptyHistoryLayoutBinding,android.widget.Button,androidx.recyclerview.widget.RecyclerView,android.widget.TextView,androidx.constraintlayout.widget.ConstraintLayout,androidx.core.widget.NestedScrollView,androidx.coordinatorlayout.widget.CoordinatorLayout,android.widget.LinearLayout,android.widget.Button,android.widget.CheckBox,android.widget.Button)>
<com.google.android.gms.security.ProviderInstaller: com.google.android.gms.common.GoogleApiAvailabilityLight zza()>
<com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.base.Equivalence defaultEquivalence()>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>
<com.google.android.material.snackbar.BaseTransientBottomBar$8: void <init>(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.android.gms.internal.location.zzbr: void <init>(com.google.android.gms.internal.location.zzbs,int,int)>
<com.google.android.gms.measurement.internal.zzfs: void <init>(com.google.android.gms.measurement.internal.zzgd,java.lang.String,java.lang.String,java.lang.String)>
<ch.qos.logback.classic.spi.StackTraceElementProxy: void <init>(java.lang.StackTraceElement)>
<android.view.View: int getScrollY()>
<java.util.Arrays: float[] copyOf(float[],int)>
<com.google.android.material.shape.MaterialShapeDrawable: boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean)>
<com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)>
<com.adjust.sdk.scheduler.SingleThreadCachedScheduler$3: void <init>(com.adjust.sdk.scheduler.SingleThreadCachedScheduler,java.lang.Runnable)>
<ch.qos.logback.core.rolling.helper.FilenameParser: java.lang.Comparable parseFilename(java.lang.String)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker_Factory: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationWorker newInstance(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.common.api.zaf: void <init>(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.Result)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewHolderFactory: com.azure.authenticator.ui.fragment.accounts.adapter.BaseAccountViewHolder createViewHolder(android.view.LayoutInflater,android.view.ViewGroup,com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType,androidx.lifecycle.LifecycleCoroutineScope,com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzad(long)>
<com.google.android.material.chip.ChipDrawable: float getChipMinHeight()>
<com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)>
<androidx.room.EntityInsertionAdapter: void insert(java.lang.Object)>
<java.util.zip.ZipEntry: long getSize()>
<com.google.android.gms.internal.auth-api-phone.zzb: void <init>(java.lang.String)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase access$getDenyAadNgcSessionUseCase$p(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel)>
<com.google.android.gms.common.api.internal.zaar: void zaG(boolean)>
<com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool: void <init>()>
<com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)>
<com.google.android.gms.measurement.internal.zzkk: long zzab(long,long)>
<com.airbnb.lottie.parser.moshi.JsonReader$Token: void <init>(java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzbr: int zzE(java.lang.String)>
<com.google.android.gms.measurement.internal.zzai: void zzU(java.lang.String,long,long,com.google.android.gms.measurement.internal.zzkc)>
<com.google.android.gms.internal.auth.zzh: void <init>()>
<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer: android.content.ContentResolver access$200(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer)>
<dummyMainClass: com.evernote.android.job.v14.PlatformAlarmService dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmService(android.content.Intent)>
<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequest build()>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.lang.String,java.lang.String)>
<ch.qos.logback.core.net.SMTPAppenderBase: void sendBuffer(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object)>
<com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory: void <init>(int)>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: boolean delete(java.io.File)>
<com.facebook.imagepipeline.memory.BucketMap$LinkedEntry: void <init>(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)>
<com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment: com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment self()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.graphclient.data.repository.AuthMethodsPolicyStorage authMethodsPolicyStorage()>
<com.azure.authenticator.ui.fragment.main.ThirdPartyNoticeFragment: java.lang.String readThirdPartyNoticesAssetsFile()>
<com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.navigation.NavigationBarPresenter access$000(com.google.android.material.navigation.NavigationBarMenuView)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.SyncSDKConnector syncSDKConnector()>
<com.google.android.gms.internal.maps.zzh: void setVisible(boolean)>
<com.google.android.material.internal.CollapsingTextHelper: int blendColors(int,int,float)>
<com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>
<org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>
<com.microsoft.authenticator.reactnative.ReactNativeFragmentManager: void startReactFragment(androidx.fragment.app.FragmentActivity,int,java.lang.String,com.microsoft.authenticator.core.telemetry.TelemetryManager,android.os.Bundle)>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$200(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_6_7$cp()>
<com.adjust.sdk.Reflection: java.lang.Object createInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker injectMfaNotificationActionWorker(com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker)>
<com.google.android.gms.measurement.internal.zzjf: void <init>(com.google.android.gms.measurement.internal.zzjh,com.google.android.gms.measurement.internal.zzkd,java.lang.Runnable)>
<com.evernote.android.job.util.JobLogger: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)>
<com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)>
<com.facebook.imagepipeline.cache.StagingArea: void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<com.airbnb.lottie.model.layer.Layer: java.lang.String getName()>
<android.text.style.URLSpan: void <init>(java.lang.String)>
<android.view.ViewGroup: void setWillNotDraw(boolean)>
<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>
<com.google.android.material.bottomsheet.BottomSheetDialog: boolean getDismissWithAnimation()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.facebook.react.bridge.NativeModule: java.lang.String getName()>
<com.google.android.gms.measurement.internal.zzka: void <init>(com.google.android.gms.measurement.internal.zzkb,java.lang.String,android.os.Bundle)>
<com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: com.facebook.imagepipeline.nativecode.WebpTranscoder getWebpTranscoder()>
<com.google.android.material.textfield.IndicatorViewController: int getErrorViewCurrentTextColor()>
<java.nio.ByteBuffer: java.nio.ByteBuffer compact()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaUpdateRegistrationUseCase mfaUpdateRegistrationUseCase()>
<com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback)>
<com.google.android.gms.measurement.internal.zzeo: java.net.HttpURLConnection zzc(java.net.URL)>
<com.google.android.gms.measurement.internal.zzaw: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: void zzay(com.google.android.gms.internal.measurement.zzdj,long)>
<com.facebook.common.internal.ImmutableList: void <init>(int)>
<com.google.android.gms.common.data.DataHolder: android.database.CursorWindow[] zae(com.google.android.gms.common.data.DataHolder$Builder,int)>
<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int)>
<com.facebook.yoga.YogaNode: float getLayoutX()>
<androidx.lifecycle.MutableLiveData: void <init>()>
<com.facebook.shimmer.ShimmerDrawable: void maybeStartShimmer()>
<com.google.android.gms.measurement.internal.zzja: boolean zzd(com.google.android.gms.measurement.internal.zzja,boolean)>
<com.google.common.collect.ImmutableSet: boolean isHashCodeFast()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaJ(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult)>
<com.adjust.sdk.Util: boolean hasRootCause(java.lang.Exception)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
<com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzbv zzb(java.lang.String)>
<android.net.Uri: java.lang.String getAuthority()>
<com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager: boolean isInAcquireTokenFlow()>
<com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()>
<com.google.android.gms.location.LocationSettingsStates: void <init>(boolean,boolean,boolean,boolean,boolean,boolean)>
<com.evernote.android.job.JobRequest$Builder: void fillContentValues(android.content.ContentValues)>
<com.google.android.gms.measurement.internal.zzhn: int zzL(java.lang.String)>
<android.widget.EditText: void setImeHintLocales(android.os.LocaleList)>
<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>
<com.google.android.gms.common.api.ResultCallbacks: void onSuccess(com.google.android.gms.common.api.Result)>
<com.google.android.gms.internal.measurement.zzkg: boolean zzc(java.lang.Object,long)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity_MembersInjector: void injectExperimentationManager(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity,com.microsoft.authenticator.experimentation.ExperimentationManager)>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzA(com.google.android.gms.dynamic.IObjectWrapper)>
<com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton)>
<android.app.Activity: void applyOverrideConfiguration(android.content.res.Configuration)>
<com.facebook.imagepipeline.memory.MemoryChunkPool: int getBucketedSizeForValue(com.facebook.imagepipeline.memory.MemoryChunk)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider cardFlowViewModelProvider()>
<com.google.android.gms.internal.measurement.zzja: int zzs(java.lang.Object,byte[],int,int,int,int,int,int,long,int,long,com.google.android.gms.internal.measurement.zzge)>
<com.facebook.react.views.textinput.ReactContentSizeChangedEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.facebook.react.ReactRootView$CustomGlobalLayoutListener: void emitUpdateDimensionsEvent()>
<com.google.android.gms.common.api.internal.zzb: int zzb(com.google.android.gms.common.api.internal.zzb)>
<android.content.Context: void sendBroadcast(android.content.Intent)>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void updateAccessibilityActions()>
<com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()>
<com.azure.authenticator.storage.Storage: void setShouldShowContactsPermissionPrompt(boolean)>
<android.widget.TextView: android.content.res.Resources getResources()>
<java.util.ListIterator: java.lang.Object next()>
<dummyMainClass: com.azure.authenticator.BootReceiver dummyMainMethod_com_azure_authenticator_BootReceiver(android.content.Intent)>
<ch.qos.logback.core.spi.ContextAware: void addError(java.lang.String,java.lang.Throwable)>
<org.xmlpull.v1.sax2.Driver: void <init>()>
<com.airbnb.lottie.model.KeyPath: com.airbnb.lottie.model.KeyPath resolve(com.airbnb.lottie.model.KeyPathElement)>
<java.io.DataOutput: void writeUTF(java.lang.String)>
<com.evernote.android.job.JobManager: android.content.Context getContext()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions: boolean filterByAuthorizedAccounts()>
<com.google.android.material.internal.NavigationMenuItemView: boolean shouldExpandActionArea()>
<com.facebook.imagepipeline.image.EncodedImage: void setImageFormat(com.facebook.imageformat.ImageFormat)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum: void <init>(java.lang.String,int)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void enableAppLockByDefault(androidx.fragment.app.FragmentActivity)>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>
<com.facebook.react.views.checkbox.ReactCheckBox: void <init>(android.content.Context)>
<com.google.android.gms.location.LocationSettingsStates: boolean isNetworkLocationPresent()>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: int getBitmapHeight(android.graphics.Bitmap)>
<com.google.android.gms.internal.measurement.zzjw: java.lang.Object zzd(java.lang.Object)>
<com.google.android.gms.auth.zzb: void <init>()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$10: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate)>
<android.widget.FrameLayout: void setId(int)>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory()>
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.microsoft.identity.broker4j.workplacejoin.AccountInfo: java.lang.String getUniqueId()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback)>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections: androidx.navigation.NavDirections actionSettingsFragmentToDidBackupFragment()>
<com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit fromInt(int)>
<com.facebook.react.module.model.ReactModuleInfo: java.lang.String className()>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder: com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder setServerClientId(java.lang.String)>
<com.google.android.gms.location.zzs: void <init>(boolean,long,float,long,int)>
<com.google.common.collect.MapMakerInternalMap: java.lang.Object get(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzbw: void zzp(com.google.android.gms.internal.measurement.zzbw,java.lang.String)>
<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPersisted(boolean)>
<com.google.android.gms.internal.measurement.zzby: com.google.android.gms.internal.measurement.zzcd zzd()>
<com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$500()>
<com.google.android.gms.internal.base.zap: void <init>(android.os.Looper)>
<com.google.android.gms.internal.maps.zzh: void setStrokePattern(java.util.List)>
<com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void <init>(com.facebook.react.uimanager.UIManagerModule)>
<com.google.android.gms.common.api.internal.zacv: void zak(com.google.android.gms.common.api.Status)>
<android.widget.TextView: void setTag(int,java.lang.Object)>
<com.google.android.gms.measurement.internal.zzg: void zzu(java.lang.String)>
<com.facebook.datasource.AbstractDataSource: boolean setResult(java.lang.Object,boolean)>
<android.widget.EditText: boolean requestRectangleOnScreen(android.graphics.Rect)>
<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>
<com.microsoft.brooklyn.module.favicon.PicassoFaviconManager: void <init>(android.content.Context,com.microsoft.brooklyn.module.repository.CredentialsRepository)>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<com.google.android.gms.auth.api.accounttransfer.zzs: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeController obtainController()>
<com.facebook.react.ReactInstanceManager: com.facebook.react.bridge.ReactApplicationContext access$1100(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader)>
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzw: java.lang.Boolean zze(java.lang.Boolean,boolean)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int,com.facebook.react.uimanager.ViewManagersPropertyCache$1)>
<com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.views.art.ARTRenderableViewManager createARTTextViewManager()>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void onSuccess(com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)>
<com.facebook.react.modules.i18nmanager.I18nUtil: void forceRTL(android.content.Context,boolean)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: android.graphics.Bitmap getBitmapFromVectorDrawable(int)>
<java.io.FilterOutputStream: void flush()>
<com.google.android.gms.common.api.internal.zaar: void zaD()>
<com.evernote.android.job.JobProxy: void plantOneOff(com.evernote.android.job.JobRequest)>
<com.azure.authenticator.accounts.GenericAccount: int getPosition()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void onCreate(android.database.sqlite.SQLiteDatabase,int)>
<com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()>
<com.facebook.drawee.generic.GenericDraweeHierarchy: void fadeOutBranches()>
<com.google.android.gms.dynamic.LifecycleDelegate: void onPause()>
<com.facebook.react.views.art.ARTVirtualNode: void saveAndSetupCanvas(android.graphics.Canvas)>
<com.facebook.react.modules.image.ImageLoaderModule$4: void <init>(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)>
<android.widget.EditText: boolean hasFocus()>
<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory: void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool,com.facebook.common.memory.PooledByteStreams)>
<com.facebook.react.modules.core.ReactChoreographer: void postFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)>
<com.facebook.react.views.text.ReactTextShadowNode: boolean access$200(com.facebook.react.views.text.ReactTextShadowNode)>
<com.google.android.material.appbar.ViewOffsetHelper: boolean setTopAndBottomOffset(int)>
<android.os.StatFs: long getAvailableBlocksLong()>
<com.facebook.react.views.drawer.ReactDrawerLayout: void <init>(com.facebook.react.bridge.ReactContext)>
<com.google.android.gms.common.api.internal.zabx: com.google.android.gms.common.internal.ConnectionTelemetryConfiguration zab(com.google.android.gms.common.api.internal.zabl,com.google.android.gms.common.internal.BaseGmsClient,int)>
<com.google.android.gms.internal.measurement.zzet: void <init>(com.google.android.gms.internal.measurement.zzeu,android.os.Handler)>
<com.facebook.react.views.text.TextInlineImageSpan: void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setUltimateProducerName(java.lang.String)>
<android.widget.Button: void measure(int,int)>
<com.microsoft.did.feature.cardinfo.presentationlogic.CardInfoViewModel: void <init>(com.microsoft.did.businesslogic.CardUseCase,com.microsoft.did.businesslogic.ReceiptUseCase)>
<com.google.android.gms.internal.auth.zzao: void <init>(android.os.IBinder)>
<android.view.View: boolean isFocused()>
<com.google.android.gms.internal.auth.zza: android.os.Parcel transactAndReadException(int,android.os.Parcel)>
<com.google.android.gms.common.internal.zzaa: void <init>()>
<com.adjust.sdk.IActivityHandler: com.adjust.sdk.AdjustAttribution getAttribution()>
<ch.qos.logback.classic.net.server.RemoteAppenderServerListener: ch.qos.logback.classic.net.server.RemoteAppenderClient createClient(java.lang.String,java.net.Socket)>
<com.facebook.react.uimanager.ReactCompoundView: int reactTagForTouch(float,float)>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.google.android.gms.common.images.ImageManager: java.util.Map zaf(com.google.android.gms.common.images.ImageManager)>
<com.evernote.android.job.v24.JobProxy24: void <init>(android.content.Context)>
<com.google.android.gms.measurement.internal.zzjb: void zzA(android.os.Bundle)>
<com.google.android.gms.maps.internal.zzaj: void onMapClick(com.google.android.gms.maps.model.LatLng)>
<java.util.ArrayList: void <init>()>
<com.facebook.react.views.textinput.ReactEditText: boolean isSecureText()>
<ch.qos.logback.core.spi.FilterAttachableImpl: void addFilter(ch.qos.logback.core.filter.Filter)>
<com.google.android.gms.internal.measurement.zzmw: java.lang.String zze()>
<com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>
<com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)>
<com.azure.authenticator.databinding.PasswordAutoChangeDialogLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeDialogLayoutBinding bind(android.view.View)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int)>
<com.facebook.react.modules.camera.ImageEditingManager: void writeCompressedBitmapToFile(android.graphics.Bitmap,java.lang.String,java.io.File)>
<com.evernote.android.job.JobRequest: long getBackoffMs()>
<com.google.android.gms.common.api.internal.zax: boolean zau(com.google.android.gms.common.api.internal.zax,boolean)>
<ch.qos.logback.classic.html.DefaultCssBuilder: void <init>()>
<com.google.android.material.timepicker.TimeModel$1: com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase: java.lang.Object approveMsaNgcSession(com.microsoft.authenticator.authentication.msa.entities.MsaSession,java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.gms.safetynet.SafeBrowsingData: com.google.android.gms.common.data.DataHolder getBlacklistsDataHolder()>
<com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator: com.facebook.common.references.CloseableReference generate(short,short)>
<com.google.android.material.navigation.NavigationBarMenuView: int getItemBackgroundRes()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.request.FillRequestProcessor fillRequestProcessor()>
<com.google.android.material.bottomsheet.BottomSheetDialog: void <init>(android.content.Context,int)>
<com.google.android.material.chip.ChipDrawable: void setChipBackgroundColor(android.content.res.ColorStateList)>
<com.adjust.sdk.AdjustFactory: void setSessionInterval(long)>
<com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createCompatRippleDrawable()>
<com.azure.authenticator.databinding.AadRemoteNgcSessionDialogBinding: android.widget.ScrollView getRoot()>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$18: void <init>(android.database.sqlite.SQLiteDatabase)>
<com.google.android.gms.internal.maps.zzw: void remove()>
<com.airbnb.lottie.animation.keyframe.SplitDimensionPathKeyframeAnimation: android.graphics.PointF getValue()>
<android.widget.FrameLayout: void invalidate()>
<com.google.android.gms.internal.measurement.zzdj: void zzaW(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.google.android.material.textview.MaterialTextView: int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[])>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.autofill.response.businesslogic.address.AddressSuggestionHelper getAddressSuggestionHelper()>
<com.google.android.gms.internal.measurement.zzgx: void zzo(long)>
<com.google.android.gms.auth.GooglePlayServicesAvailabilityException: void <init>(int,java.lang.String,android.content.Intent)>
<java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>
<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.mfasdk.authentication.viewLogic.MfaAuthHiltViewModel access$13200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.crypto.tink.Aead: byte[] encrypt(byte[],byte[])>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemTextAppearanceActive(int)>
<com.google.android.gms.common.api.internal.zaaz: int zaf(java.lang.Iterable,boolean)>
<com.google.android.gms.internal.measurement.zzbr: java.lang.String zzN(com.google.android.gms.internal.measurement.zzbr)>
<com.google.android.material.internal.ToolbarUtils: android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar)>
<com.google.android.gms.maps.internal.zzbs: void onSnapshotReady(android.graphics.Bitmap)>
<com.google.android.gms.internal.measurement.zzcj: com.google.android.gms.internal.measurement.zzhw zzb()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>
<com.microsoft.authenticator.core.graphics.BitmapConverter: android.graphics.Bitmap getImageWithCircularBorder()>
<com.azure.authenticator.accounts.AccountCapability: boolean isNgc()>
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>
<android.widget.Button: void setTypeface(android.graphics.Typeface)>
<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>
<com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,int,int,int,int)>
<androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()>
<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()>
<com.google.android.material.shape.ShapePath: float getStartX()>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.azure.authenticator.databinding.AccountListRowEditModeBinding: void <init>(android.widget.RelativeLayout,android.widget.ImageButton,android.widget.TextView,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView)>
<com.facebook.react.views.image.ReactImageManager: void <init>()>
<com.google.android.gms.internal.safetynet.zzf: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: com.facebook.imagepipeline.cache.ValueDescriptor wrapValueDescriptor(com.facebook.imagepipeline.cache.ValueDescriptor)>
<android.widget.SeekBar: void setProgress(int)>
<com.azure.authenticator.notifications.aad.AadNgcNotification: void logTelemetryForResult(com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult)>
<com.microsoft.authenticator.workaccount.entities.InstallCertificateStatus$Error: com.microsoft.identity.broker4j.workplacejoin.exception.WorkplaceJoinException getException()>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean access$1700()>
<ch.qos.logback.core.rolling.helper.FileFinder: java.util.List findDirs(java.lang.String)>
<java.lang.UnsupportedOperationException: void <init>()>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzy(android.content.Intent)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doRead(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zzf(double)>
<com.google.android.gms.internal.maps.zzm: void <init>(android.os.IBinder)>
<com.google.android.material.badge.BadgeUtils: void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getTokenWithNotification(android.content.Context,android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zak(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.math.BigDecimal)>
<com.google.android.material.internal.ToolbarUtils: android.widget.TextView getTextView(androidx.appcompat.widget.Toolbar,java.lang.CharSequence)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: double[] createDoubleArray(android.os.Parcel,int)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: com.google.android.gms.auth.api.credentials.CredentialPickerConfig build()>
<com.google.android.material.timepicker.TimePickerView$1: void <init>(com.google.android.material.timepicker.TimePickerView)>
<com.google.android.material.behavior.SwipeDismissBehavior: void ensureViewDragHelper(android.view.ViewGroup)>
<android.app.Service: void <init>()>
<com.fasterxml.jackson.core.util.TextBuffer: char[] buf(int)>
<com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$000()>
<com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)>
<android.animation.ValueAnimator: void setRepeatMode(int)>
<com.azure.authenticator.common.Util$Companion$setupTotpText$1: void <init>(java.lang.String,android.view.View)>
<com.google.android.gms.common.internal.service.zah: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions: com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions$Builder builder()>
<com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate: boolean onStateChange(int[])>
<com.google.android.gms.internal.measurement.zzeo: void zza()>
<com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()>
<com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)>
<com.facebook.imagepipeline.image.EncodedImage: boolean isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage)>
<com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.common.internal.TelemetryData: java.util.List zab()>
<com.azure.authenticator.authentication.msa.MsaAccountManager: android.content.Intent getReEnableNgcIntent(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>
<java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.google.android.gms.common.api.internal.zaar: void zaB()>
<android.widget.FrameLayout: int[] onCreateDrawableState(int)>
<com.evernote.android.job.JobStorage: com.evernote.android.job.JobRequest load(int,boolean)>
<com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.ThumbnailBranchProducer newThumbnailBranchProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[])>
<ch.qos.logback.classic.net.server.ServerSocketAppender: void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.airbnb.lottie.LottieCompositionFactory$9: void <init>(com.airbnb.lottie.LottieComposition)>
<com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)>
<com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)>
<com.airbnb.lottie.LottieCompositionFactory$3: void <init>(java.lang.ref.WeakReference,android.content.Context,int,java.lang.String)>
<com.google.android.gms.common.api.internal.zabl: void zaG(com.google.android.gms.common.api.internal.zai)>
<android.widget.FrameLayout: android.content.Context getContext()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.azure.authenticator.notifications.aad.AadNgcNotification aadNgcNotification()>
<com.google.android.gms.measurement.internal.zzkk: android.os.Bundle zzU(android.os.Bundle)>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>
<com.airbnb.lottie.LottieAnimationView$3: void <init>(com.airbnb.lottie.LottieAnimationView)>
<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.generatepasswords.presentationlogic.GeneratePasswordsViewModel access$12800(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.favicon.FaviconRefreshWorker access$700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>
<androidx.collection.SimpleArrayMap: int hashCode()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.features.frx.businessLogic.InstallReferrerManager installReferrerManager()>
<com.evernote.android.job.JobRequest: boolean isTransient()>
<android.widget.CheckBox: void setText(java.lang.CharSequence)>
<com.google.android.material.datepicker.MaterialDatePicker: android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadNgcPnRegistrationManager access$7700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.measurement.internal.zzed: java.lang.String zzd(java.lang.String)>
<com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.powerlift.PowerLift,com.microsoft.authenticator.logging.businesslogic.RemoveLogsUseCase)>
<com.google.android.material.shape.MaterialShapeDrawable: int getOpacity()>
<com.google.android.datatransport.cct.CCTDestination: com.google.android.datatransport.cct.CCTDestination fromByteArray(byte[])>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>
<androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)>
<com.google.android.gms.measurement.internal.zzie: void <init>(com.google.android.gms.measurement.internal.zzjb,java.util.concurrent.atomic.AtomicReference,com.google.android.gms.measurement.internal.zzp,boolean)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>
<com.google.android.gms.auth.api.credentials.CredentialsOptions: void <init>(com.google.android.gms.auth.api.credentials.CredentialsOptions$Builder,com.google.android.gms.auth.api.credentials.zzh)>
<android.graphics.drawable.ColorDrawable: void <init>(int)>
<com.google.android.gms.internal.measurement.zzgs: boolean equals(java.lang.Object)>
<androidx.activity.result.ActivityResultLauncher: void unregister()>
<java.util.Calendar: int getActualMaximum(int)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$ViewModelC build()>
<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>
<com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding: com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$KeyframesWrapper: com.airbnb.lottie.value.Keyframe getCurrentKeyframe()>
<com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl$SwitchingProvider: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl,int)>
<com.google.android.material.appbar.AppBarLayout: boolean hasCollapsibleChild()>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: kotlinx.coroutines.Job access$generateBackupAsync(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: java.util.List access$000(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.google.android.gms.internal.maps.zzn: boolean isUnderground()>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getContent()>
<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
<ch.qos.logback.core.pattern.parser.Parser: void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil)>
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$buildDialog$7(android.content.DialogInterface,int)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: boolean isCollisionFree()>
<com.google.android.gms.common.internal.zah: void <init>(com.google.android.gms.common.api.internal.ConnectionCallbacks)>
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper)>
<android.widget.EditText: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.fasterxml.jackson.core.base.ParserMinimalBase: void <init>(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.CredentialsSDKConnector credentialsSDKConnector()>
<com.facebook.drawee.generic.RoundingParams: com.facebook.drawee.generic.RoundingParams fromCornersRadius(float)>
<android.util.SparseArray: void clear()>
<com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()>
<android.widget.LinearLayout: int getPaddingLeft()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void attachBaseContext(android.content.Context)>
<com.azure.authenticator.ui.dialog.StoreRatingTask$showStoreRatingDialog$storeRatingDialogBuilder$1: void <init>(com.azure.authenticator.ui.dialog.StoreRatingTask,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks: void onConnected(android.os.Bundle)>
<com.adjust.sdk.AdjustConfig: void init(android.content.Context,java.lang.String,java.lang.String,boolean)>
<com.azure.authenticator.storage.Storage: boolean readShowTurnOffBatteryOptimizationAction()>
<android.os.SystemClock: void sleep(long)>
<com.facebook.react.LazyReactPackage$2: void <init>(com.facebook.react.LazyReactPackage,java.util.List,java.util.Map)>
<com.google.android.gms.measurement.internal.zzjb: void zzz(com.google.android.gms.measurement.internal.zzhu)>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSetAsDefaultFragment_MembersInjector: void injectTelemetryManager(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSetAsDefaultFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.material.ripple.RippleDrawableCompat: void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1)>
<com.google.android.gms.internal.base.zac: void zaa(android.os.Parcel,boolean)>
<android.widget.ImageView: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.EditText: void setSelection(int)>
<com.google.android.gms.maps.model.MarkerOptions: boolean isFlat()>
<com.google.android.gms.maps.model.GroundOverlayOptions: float getAnchorU()>
<com.microsoft.authenticator.registration.mfa.entities.AadMfaAccountAdditionalInformation: java.lang.String getPhoneAppDetailId()>
<com.google.android.gms.maps.GoogleMap$InfoWindowAdapter: android.view.View getInfoContents(com.google.android.gms.maps.model.Marker)>
<java.math.BigInteger: void <init>(int,byte[])>
<com.google.common.collect.MapMakerInternalMap$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>
<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>
<ch.qos.logback.core.net.SocketConnectorBase$ConsoleExceptionHandler: void <init>(ch.qos.logback.core.net.SocketConnectorBase$1)>
<javax.mail.internet.InternetAddress: void <init>(java.lang.String)>
<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>
<com.google.android.gms.common.api.Api$BaseClientBuilder: void <init>()>
<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>
<com.google.android.material.datepicker.Month: int compareTo(com.google.android.material.datepicker.Month)>
<com.microsoft.ngc.aad.NgcSession: java.lang.String getVerificationSign3()>
<com.google.common.base.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)>
<com.google.common.base.Splitter: void <init>(com.google.common.base.Splitter$Strategy)>
<com.google.android.gms.internal.measurement.zzgv: long zzc(long)>
<com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase: java.lang.Object createBackup(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.FillResponseSignedUseCase fillResponseSignedUseCase()>
<com.facebook.react.views.picker.events.PickerItemSelectEvent: java.lang.String getEventName()>
<javax.net.ssl.SSLContext: java.security.Provider getProvider()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>
<com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: void onShown(java.lang.Object)>
<com.google.android.gms.internal.common.zzr: com.google.android.gms.internal.common.zzr zzb(java.lang.Object)>
<com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.proto.KeyTemplate$Builder newBuilder()>
<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)>
<com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)>
<com.google.android.material.timepicker.RadialViewGroup: int getRadius()>
<com.google.android.gms.internal.maps.zzt: float getZIndex()>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2: void <init>(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.ui.backup.RestoreFlowActivity injectRestoreFlowActivity2(com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.google.android.gms.internal.measurement.zzdf: void zzw(com.google.android.gms.internal.measurement.zzdf,com.google.android.gms.internal.measurement.zzdf)>
<com.facebook.datasource.DataSource: boolean isFinished()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.selfhost.SelfhostConfigManager getSelfHostConfigManager()>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)>
<com.adjust.sdk.Util: void writeObject(java.lang.Object,android.content.Context,java.lang.String,java.lang.String)>
<com.adjust.sdk.InstallReferrer: void startConnection()>
<com.azure.authenticator.storage.database.DbAccount: void setIdentityProvider(java.lang.String)>
<com.facebook.react.bridge.ReactContext: void runOnJSQueueThread(java.lang.Runnable)>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setStatusBarTranslucent(android.view.View,boolean)>
<com.microsoft.authenticator.registration.vc.abstraction.QrCodeHandlerVc: void <init>(com.microsoft.authenticator.core.navigation.InterModuleNavigator)>
<java.security.CodeSource: java.net.URL getLocation()>
<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int,int)>
<androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)>
<com.google.android.gms.internal.auth-api.zzax: void <init>(com.google.android.gms.internal.auth-api.zzao,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.measurement.zzaj: void <init>(com.google.android.gms.internal.measurement.zzbr,long)>
<dummyMainClass: com.evernote.android.job.v21.PlatformJobService dummyMainMethod_com_evernote_android_job_v21_PlatformJobService(android.content.Intent)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState: void <init>(java.lang.String,com.microsoft.onlineid.Ticket,com.microsoft.authenticator.backup.entities.CloudBackup)>
<com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: void <init>(java.lang.Iterable,byte[])>
<com.facebook.react.bridge.NativeArgumentsParseException: void <init>(java.lang.String)>
<com.fasterxml.jackson.core.io.UTF32Reader: void freeBuffers()>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: boolean changeDetected(long)>
<ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry: java.lang.Class oneShotFind(java.lang.Class,java.lang.String)>
<ch.qos.logback.core.joran.util.PropertySetter: java.lang.Class getParameterClassForMethod(java.lang.reflect.Method)>
<android.widget.CheckBox: void setVisibility(int)>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer)>
<com.microsoft.authenticator.core.common.CoroutineTimer: void <init>(kotlinx.coroutines.CoroutineScope,long,long,kotlin.jvm.functions.Function0)>
<com.facebook.imageformat.ImageFormat$FormatChecker: int getHeaderSize()>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy)>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.cache.disk.DiskCacheConfig getDefaultMainDiskCacheConfig(android.content.Context)>
<com.google.android.gms.common.api.internal.zax: com.google.android.gms.common.ConnectionResult zax(com.google.android.gms.common.api.internal.zax,com.google.android.gms.common.ConnectionResult)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_16_17()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean clearCurrentDataSource(com.facebook.datasource.DataSource)>
<android.text.StaticLayout: float getLineLeft(int)>
<com.facebook.react.animated.SpringAnimation: void advance(double)>
<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<com.google.android.gms.location.zzaw: com.google.android.gms.location.zzax zzb(android.os.IBinder)>
<com.facebook.react.views.textinput.ReactEditText: void setIntrinsicContentSize()>
<okio.BufferedSource: okio.Buffer buffer()>
<com.facebook.react.bridge.ReactContext: boolean isBridgeless()>
<com.google.android.material.textfield.EndIconDelegate: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader getUploader()>
<com.google.android.gms.common.api.internal.zaas: void <init>(com.google.android.gms.common.api.internal.zabd)>
<com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseFonts(com.airbnb.lottie.parser.moshi.JsonReader,java.util.Map)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: boolean isZoomGesturesEnabled()>
<ch.qos.logback.core.joran.util.StringToObjectConverter: java.nio.charset.Charset convertToCharset(ch.qos.logback.core.spi.ContextAware,java.lang.String)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setRequestListener(com.facebook.imagepipeline.listener.RequestListener)>
<com.google.android.gms.common.api.internal.ListenerHolder: void <init>(android.os.Looper,java.lang.Object,java.lang.String)>
<ch.qos.logback.core.joran.spi.Interpreter: void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction)>
<androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()>
<com.google.android.gms.internal.measurement.zzhs: java.lang.Object zzl(int,java.lang.Object,java.lang.Object)>
<androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)>
<com.google.android.gms.maps.model.PolygonOptions: boolean isVisible()>
<kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>
<androidx.fragment.app.Fragment: android.content.Context getContext()>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.internal.auth.zzan: void zza(com.google.android.gms.internal.auth.zzal)>
<com.google.android.material.bottomappbar.BottomAppBar$SavedState: void <init>(android.os.Parcelable)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)>
<com.adjust.sdk.SharedPreferencesManager: org.json.JSONArray getRawReferrerArray()>
<com.google.android.gms.common.api.internal.zabr: void zaa(android.content.Context)>
<com.azure.authenticator.databinding.AccountListRowBinding: android.widget.RelativeLayout getRoot()>
<com.google.android.gms.internal.location.zzam: void zzp(boolean)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$Field forInteger(java.lang.String,int)>
<ch.qos.logback.classic.Logger: void handleParentLevelChange(int)>
<com.airbnb.lottie.PerformanceTracker$FrameListener: void onFrameRendered(float)>
<com.google.android.datatransport.runtime.backends.BackendRequest: void <init>()>
<android.content.Context: java.io.File getCacheDir()>
<ch.qos.logback.classic.spi.LoggerComparator: void <init>()>
<com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getSpringDamping(com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.internal.measurement.zzev: java.lang.String zza(android.net.Uri,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.material.textfield.TextInputLayout: void updatePlaceholderText()>
<android.app.Fragment: boolean isAdded()>
<com.facebook.react.bridge.ReadableType: void <init>(java.lang.String,int)>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider addCredentialViewModelProvider()>
<com.google.android.gms.measurement.internal.zzfi: void zzj(java.lang.Runnable)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.internal.measurement.zzfh: void zzb()>
<com.google.android.gms.internal.safetynet.zzk$zzg: void <init>(com.google.android.gms.common.api.Status,com.google.android.gms.safetynet.zzd)>
<android.graphics.PointF: void <init>(float,float)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzfi zzau()>
<com.google.android.gms.internal.auth.zzap: void zza(android.content.Context,com.google.android.gms.internal.auth.zzan)>
<java.security.SecureRandom: java.security.Provider getProvider()>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask cache(java.lang.String,java.util.concurrent.Callable)>
<com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState: void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider)>
<dagger.internal.InstanceFactory: dagger.internal.Factory create(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean contains(java.lang.Object)>
<ch.qos.logback.classic.Logger: boolean isDebugEnabled(org.slf4j.Marker)>
<bolts.BoltsExecutors: boolean isAndroidRuntime()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredentialSaveDatasetsUseCase credentialSaveDatasetsUseCase()>
<com.google.android.gms.internal.maps.zzw: void zze(com.google.android.gms.dynamic.IObjectWrapper)>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<ch.qos.logback.classic.sift.ContextBasedDiscriminator: java.lang.String getDiscriminatingValue(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.fasterxml.jackson.core.io.CharTypes: int[] getInputCodeLatin1()>
<java.lang.NumberFormatException: void <init>(java.lang.String)>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>
<com.google.android.gms.common.server.converter.zab: void <init>()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo)>
<com.google.android.gms.tasks.zzg: void <init>(com.google.android.gms.tasks.zzh)>
<com.google.android.gms.common.internal.service.zap: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.internal.TelemetryLoggingOptions,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)>
<android.widget.ImageView: android.graphics.Bitmap getDrawingCache(boolean)>
<ch.qos.logback.core.util.StatusPrinter: void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status)>
<com.azure.authenticator.storage.database.AppDatabase$Companion: void <init>()>
<com.microsoft.authenticator.registration.mfa.entities.AadMfaAccountAdditionalInformation: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: boolean hideTotpCodeForAppLock()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void registerNgcAsync(java.lang.String)>
<java.util.BitSet: void <init>(int)>
<java.util.concurrent.SynchronousQueue: void <init>()>
<ch.qos.logback.core.rolling.RollingPolicy: void rollover()>
<com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$trackDndSettingState$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,int[])>
<com.evernote.android.job.util.JobCat: void <init>(java.lang.String)>
<com.airbnb.lottie.LottieAnimationView: void clearComposition()>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setSource(int)>
<com.google.android.gms.internal.maps.zzk: float getWidth()>
<com.google.android.material.internal.StateListAnimator$Tuple: void <init>(int[],android.animation.ValueAnimator)>
<com.azure.authenticator.ui.action.ShowTurnOffBatteryOptimizationAction: void requestIgnoreBatteryOptimizations(android.content.Context)>
<com.google.android.gms.internal.measurement.zzjs: int hashCode()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.cache.disk.DiskCacheConfig access$2300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer newBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer)>
<com.airbnb.lottie.LottieAnimationView: boolean access$300(com.airbnb.lottie.LottieAnimationView)>
<com.airbnb.lottie.animation.content.TrimPathContent: boolean isHidden()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeLong(android.os.Parcel,int,long)>
<ch.qos.logback.classic.Logger: void detachAndStopAllAppenders()>
<com.airbnb.lottie.model.content.ShapeFill: com.airbnb.lottie.model.animatable.AnimatableIntegerValue getOpacity()>
<com.google.android.gms.internal.measurement.zznn: boolean zzb()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.feature.notifications.BottomNavBadgeHandler bottomNavBadgeHandler()>
<com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.common.internal.Supplier access$200(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.airbnb.lottie.model.layer.BaseLayer: boolean hasMatteOnThisLayer()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$5: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$Flow)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler access$5200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<android.widget.Button: boolean isActivated()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int)>
<com.microsoft.authenticator.core.logging.BaseLogger: java.io.File[] getRollOverLogFiles()>
<com.google.android.gms.internal.maps.zzt: boolean isDraggable()>
<com.google.android.gms.common.data.zac: void <init>(java.lang.String)>
<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.common.LocalisedCountryData localisedCountryData()>
<com.google.android.gms.dynamic.OnDelegateCreatedListener: void onDelegateCreated(com.google.android.gms.dynamic.LifecycleDelegate)>
<com.google.android.material.switchmaterial.SwitchMaterial: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation: void <init>(int,int,com.facebook.react.views.text.ReactSpan)>
<android.app.Fragment: android.app.Fragment getParentFragment()>
<com.microsoft.did.di.VcWalletModule_NotificationsDaoFactory: com.microsoft.did.datasource.db.dao.NotificationDao notificationsDao(com.microsoft.did.di.VcWalletModule,com.microsoft.did.datasource.db.VcDatabase)>
<com.google.android.gms.internal.maps.zzk: float getHeight()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.backup.abstraction.AutoBackupManager autoBackupManager()>
<com.facebook.react.bridge.JavaMethodWrapper$7: void <init>()>
<com.microsoft.brooklyn.module.sync.PaymentsSDKConnector: void <init>(com.microsoft.rialto.RialtoSyncManager)>
<com.airbnb.lottie.model.layer.BaseLayer: void access$100(com.airbnb.lottie.model.layer.BaseLayer,boolean)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setEncodedPayload(com.google.android.datatransport.runtime.EncodedPayload)>
<com.azure.authenticator.ui.fragment.accounts.AccountsCommonUI$showEditAccountNameDialog$dialogRenameAccount$2: void <init>(com.azure.authenticator.databinding.DialogEditAccountNameBinding,com.azure.authenticator.accounts.GenericAccount,android.app.Activity,kotlin.jvm.functions.Function1)>
<com.airbnb.lottie.LottieComposition: android.graphics.Rect getBounds()>
<kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>
<com.google.android.gms.measurement.internal.zzg: long zzr()>
<android.util.LruCache: java.lang.Object remove(java.lang.Object)>
<com.google.android.datatransport.runtime.backends.BackendRequest$Builder: com.google.android.datatransport.runtime.backends.BackendRequest$Builder setExtras(byte[])>
<com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: boolean isMainActivityInForeground()>
<com.microsoft.authenticator.mainactivity.entities.MainActivityFlow: android.os.Bundle getRestoreBackupFlowParams()>
<com.google.android.material.tabs.TabLayout$Tab: void updateView()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate getDelegate()>
<com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation: void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)>
<com.facebook.imagepipeline.transcoder.DownsampleUtil: int ratioToSampleSize(float)>
<com.evernote.android.job.JobProxy$Common: boolean completeWakefulIntent(android.content.Intent)>
<java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
<com.facebook.drawee.drawable.DrawableParent: android.graphics.drawable.Drawable getDrawable()>
<com.google.android.gms.measurement.internal.zzbr: void <init>()>
<com.adjust.sdk.scheduler.TimerOnce: java.lang.String access$000(com.adjust.sdk.scheduler.TimerOnce)>
<com.google.android.gms.internal.measurement.zzlr: boolean zzb()>
<com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager getCookieManager()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.abstraction.SaveDatasetManager saveDatasetManager()>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()>
<com.google.android.gms.internal.measurement.zzbh: void <init>(com.google.android.gms.measurement.internal.zzgl)>
<android.view.View: android.view.ViewParent getParent()>
<com.google.android.gms.common.api.Batch: int zae(com.google.android.gms.common.api.Batch)>
<com.google.android.gms.internal.measurement.zzla: long zzq()>
<com.airbnb.lottie.model.content.PolystarShape$Type: void <init>(java.lang.String,int,int)>
<com.azure.authenticator.databinding.AadAddAccountSetupBinding: android.widget.ScrollView getRoot()>
<ch.qos.logback.core.filter.Filter: java.lang.String getName()>
<java.util.AbstractCollection: int size()>
<com.facebook.yoga.YogaNode: float getLayoutPadding(com.facebook.yoga.YogaEdge)>
<com.facebook.soloader.MinElf: short getu8(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)>
<com.evernote.android.job.JobRequest: long getIntervalMs()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase backupRestoreUseCase()>
<com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)>
<ch.qos.logback.core.hook.ShutdownHookBase: void <init>()>
<com.google.android.material.shape.MaterialShapeDrawable: void setTint(int)>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$wzTGnEH-esFiyowUHf_pzlAbsvU': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker getBitmapPoolStatsTracker()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String _parseAposName()>
<com.facebook.datasource.AbstractDataSource: boolean close()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.generatepasswords.viewlogic.ChangePasswordAutofillActivity injectChangePasswordAutofillActivity2(com.microsoft.brooklyn.module.generatepasswords.viewlogic.ChangePasswordAutofillActivity)>
<com.airbnb.lottie.model.content.Repeater: void <init>(java.lang.String,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableFloatValue,com.airbnb.lottie.model.animatable.AnimatableTransform,boolean)>
<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<ch.qos.logback.core.subst.Node: void recursive(ch.qos.logback.core.subst.Node,java.lang.StringBuilder)>
<com.google.android.gms.internal.measurement.zzki: void zzc(byte,byte,char[],int)>
<com.google.android.datatransport.runtime.EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setTransportName(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: com.azure.authenticator.storage.database.AccountWriter access$getAccountWriter$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel)>
<com.azure.authenticator.accounts.AccountCapability: boolean isTotp()>
<com.google.android.gms.measurement.internal.zzim: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzas,java.lang.String,com.google.android.gms.internal.measurement.zzs)>
<java.lang.Runnable: void run()>
<com.fasterxml.jackson.core.JsonLocation: void <init>(java.lang.Object,long,int,int)>
<com.google.android.gms.auth.api.identity.BeginSignInResult: android.app.PendingIntent getPendingIntent()>
<com.google.android.material.textfield.IndicatorViewController: android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)>
<ch.qos.logback.core.net.server.ServerSocketListener: void <init>(java.net.ServerSocket)>
<com.evernote.android.job.JobStorage$JobOpenHelper: void <init>(android.content.Context,java.lang.String)>
<com.airbnb.lottie.model.content.ShapeFill: boolean isHidden()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getRetryImage()>
<com.google.android.gms.common.api.internal.zabg: void <init>(com.google.android.gms.common.api.internal.GoogleApiManager)>
<android.widget.FrameLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.gms.dynamite.zze: void <init>()>
<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getRippleColor()>
<com.google.android.gms.internal.measurement.zzho: void zzax()>
<android.text.Spannable: int length()>
<com.airbnb.lottie.LottieDrawable: void playAnimation()>
<com.adjust.sdk.Util: long getWaitingTime(int,com.adjust.sdk.BackoffStrategy)>
<com.google.android.gms.auth.TokenData: void <init>(int,java.lang.String,java.lang.Long,boolean,boolean,java.util.List,java.lang.String)>
<com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)>
<com.google.android.material.internal.CollapsingTextHelper: int getCurrentColor(android.content.res.ColorStateList)>
<org.slf4j.Marker: boolean contains(org.slf4j.Marker)>
<com.google.android.gms.maps.model.PolygonOptions: float getStrokeWidth()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()>
<com.airbnb.lottie.PerformanceTracker: void <init>()>
<com.facebook.imagepipeline.cache.CountingMemoryCache: void increaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.cardinfo.presentationlogic.CardInfoViewModel access$11900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback$onGetTicketCancel$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback)>
<com.airbnb.lottie.parser.IntegerParser: void <init>()>
<com.google.android.gms.internal.location.zzav: android.location.Location zza(java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenInfoFragment injectAccountFullscreenInfoFragment2(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenInfoFragment)>
<com.airbnb.lottie.model.content.Repeater: com.airbnb.lottie.model.animatable.AnimatableFloatValue getOffset()>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult: void <init>()>
<com.google.android.gms.measurement.internal.zzdz: java.util.List zzo(java.lang.String,java.lang.String,boolean,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect)>
<com.facebook.cache.disk.SettableCacheEvent: com.facebook.cache.disk.SettableCacheEvent setCacheLimit(long)>
<com.google.android.gms.measurement.internal.zzv: void <init>(com.google.android.gms.measurement.internal.zzy,java.lang.String,int,com.google.android.gms.internal.measurement.zzbw)>
<com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent obtain(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)>
<com.azure.authenticator.Hilt_PhoneFactorApplication: void <init>()>
<ch.qos.logback.core.joran.action.IncludeAction: java.io.InputStream openURL(java.net.URL)>
<com.google.android.gms.internal.measurement.zzc: void zzd(android.os.Parcel,android.os.Parcelable)>
<androidx.appcompat.widget.AppCompatImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gms.auth.UserRecoverableNotifiedException: void <init>(java.lang.String)>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient$Builder setAccountName(java.lang.String)>
<com.airbnb.lottie.LottieComposition: java.util.Map getFonts()>
<com.microsoft.authenticator.core.configuration.UtilChecks: boolean isDeviceLocked(android.content.Context)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.listener.RequestListener getRequestListener()>
<com.facebook.fbreact.specs.NativeUIManagerSpec: java.util.Map getTypedExportedConstants()>
<com.facebook.imagepipeline.memory.BasePool: void fillBuckets(android.util.SparseIntArray)>
<com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType[] values()>
<com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result await(long,java.util.concurrent.TimeUnit)>
<com.facebook.common.executors.ScheduledFutureImpl: int compareTo(java.util.concurrent.Delayed)>
<com.facebook.react.uimanager.UIViewOperationQueue: void flushPendingBatches()>
<java.lang.Enum: void <init>(java.lang.String,int)>
<com.google.android.gms.measurement.internal.zzho: java.util.Map zzc(java.lang.String,java.lang.String,boolean)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<com.facebook.cache.disk.DynamicDefaultDiskStorage: void createStorage()>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectAadTokenRefreshManager(com.azure.authenticator.PhoneFactorApplication,com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager)>
<com.google.android.gms.internal.measurement.zzih: java.util.List zzh()>
<ch.qos.logback.core.pattern.parser.Compiler: ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode)>
<com.facebook.react.uimanager.UIImplementation: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>
<android.widget.ImageView: int getHeight()>
<com.facebook.drawee.drawable.RoundedCornersDrawable: void setOverlayColor(int)>
<android.widget.TextView: void setSelected(boolean)>
<com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)>
<java.util.AbstractList: void <init>()>
<com.google.android.gms.maps.GoogleMap: void <init>(com.google.android.gms.maps.internal.IGoogleMapDelegate)>
<android.graphics.Matrix: void set(android.graphics.Matrix)>
<com.google.android.gms.location.places.PlaceReport: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>
<com.facebook.datasource.AbstractDataSource: void notifyDataSubscriber(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor,boolean,boolean)>
<com.google.android.gms.auth.api.signin.internal.zzf: com.google.android.gms.auth.api.signin.GoogleSignInOptions zzo()>
<com.airbnb.lottie.LottieDrawable: void setScale(float)>
<com.facebook.react.views.slider.ReactSliderEvent: void <init>(int,double,boolean)>
<com.google.android.gms.internal.measurement.zzkz: long zzi()>
<com.google.android.material.bottomappbar.BottomAppBar: android.animation.Animator access$1702(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)>
<com.google.android.material.chip.Chip$ChipTouchHelper: void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip)>
<com.github.amlcurran.showcaseview.ApiUtils: boolean isCompatWith(int)>
<androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.airbnb.lottie.model.content.RectangleShape: java.lang.String getName()>
<androidx.collection.LongSparseArray: boolean containsKey(long)>
<com.google.android.material.textfield.TextInputLayout: void openCutout()>
<com.facebook.react.views.checkbox.ReactCheckBoxManager$1: com.facebook.react.bridge.ReactContext getReactContext(android.widget.CompoundButton)>
<com.facebook.react.views.slider.ReactSlider: void setValue(double)>
<com.google.android.gms.measurement.internal.zzei: com.google.android.gms.measurement.internal.zzeg zzd()>
<com.facebook.react.animated.ValueAnimatedNode: void flattenOffset()>
<com.facebook.react.uimanager.StateWrapper: com.facebook.react.bridge.ReadableNativeMap getState()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl,androidx.lifecycle.SavedStateHandle)>
<java.util.HashSet: void <init>(int,float)>
<java.util.concurrent.TimeUnit: long toNanos(long)>
<com.facebook.react.views.text.ReactFontManager: void <init>()>
<ch.qos.logback.core.pattern.parser.OptionTokenizer: void <init>(ch.qos.logback.core.pattern.parser.TokenStream)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel$observeAccountById$wrappedObserver$1: void <init>(com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel,long,androidx.lifecycle.Observer)>
<com.facebook.react.ReactDelegate: void onHostResume()>
<com.facebook.imagepipeline.image.EncodedImage: void setWidth(int)>
<com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)>
<com.google.android.gms.measurement.internal.zzkf: void zzC(java.lang.StringBuilder,int,com.google.android.gms.internal.measurement.zzby)>
<com.google.android.gms.measurement.internal.zzjh: void zzd(java.lang.Runnable)>
<com.azure.authenticator.storage.database.DbAccount: void setAadTenantId(java.lang.String)>
<com.google.android.gms.internal.maps.zzt: com.google.android.gms.maps.model.LatLng getPosition()>
<com.google.android.gms.measurement.internal.zzeg: void zzc(java.lang.String,java.lang.Object,java.lang.Object)>
<android.graphics.PathMeasure: void <init>()>
<com.google.android.material.textfield.TextInputLayout: void updateInputLayoutMargins()>
<com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gms.common.api.internal.zaar: void zaC(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.google.android.material.button.MaterialButton: void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)>
<com.airbnb.lottie.model.layer.TextLayer: java.lang.String codePointToString(java.lang.String,int)>
<androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$showConfirmLeaveWpj$leaveWpjDialogBuilder$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>
<android.widget.EditText: android.text.InputFilter[] getFilters()>
<android.graphics.Outline: void setRect(android.graphics.Rect)>
<com.google.android.material.shape.ShapeAppearancePathProvider$PathListener: void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean access$200(com.facebook.react.views.scroll.ReactHorizontalScrollView)>
<android.widget.GridView: int getChildCount()>
<com.facebook.imagepipeline.core.ImagePipelineFactory: com.facebook.imagepipeline.cache.CountingMemoryCache getEncodedCountingMemoryCache()>
<androidx.room.EntityDeletionOrUpdateAdapter: int handle(java.lang.Object)>
<com.microsoft.authenticator.registration.thirdparty.viewLogic.RegisterThirdPartyAccountFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.authenticator.registration.thirdparty.viewLogic.RegisterThirdPartyAccountFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String getText()>
<com.azure.authenticator.OnAppUpgradeReceiver: com.azure.authenticator.storage.database.AccountStorage getAccountStorage$app_productionRelease()>
<com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)>
<com.facebook.react.bridge.CatalystInstanceImpl: void destroy()>
<android.util.LruCache: java.util.Map snapshot()>
<com.airbnb.lottie.utils.MiscUtils: boolean contains(float,float,float)>
<com.google.android.material.datepicker.DateSelector: void select(long)>
<com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()>
<com.facebook.imagepipeline.cache.StagingArea: void logStats()>
<java.net.MalformedURLException: void <init>(java.lang.String)>
<com.google.android.material.datepicker.UtcDates: long canonicalYearMonthDay(long)>
<com.azure.authenticator.logging.LoggingConstants: void <init>()>
<com.facebook.react.views.art.ARTVirtualNode: void restoreCanvas(android.graphics.Canvas)>
<com.google.android.gms.internal.measurement.zzkz: long zzE()>
<com.facebook.common.logging.FLog: void e(java.lang.Class,java.lang.String,java.lang.Object[])>
<com.facebook.imagepipeline.cache.BufferedDiskCache: boolean checkInStagingAreaAndFileCache(com.facebook.cache.common.CacheKey)>
<com.azure.authenticator.databinding.AadPhoneSignInSetupBinding: com.azure.authenticator.databinding.AadPhoneSignInSetupBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.Month getCurrentMonth()>
<com.google.android.material.internal.NavigationMenuItemView$1: void <init>(com.google.android.material.internal.NavigationMenuItemView)>
<com.airbnb.lottie.parser.LottieCompositionMoshiParser: void parseMarkers(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,java.util.List)>
<com.azure.authenticator.storage.database.AccountWriter: com.azure.authenticator.storage.database.DbAccount updateAadIdsOnAadMfaAccount(com.azure.authenticator.storage.database.DbAccount,java.lang.String,java.lang.String)>
<android.content.res.Configuration: android.os.LocaleList getLocales()>
<android.os.Bundle: java.lang.String toString()>
<com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)>
<android.widget.ImageView: void onVisibilityChanged(android.view.View,int)>
<com.microsoft.authenticator.mfasdk.storage.MfaSdkAccountConfigurationStorage: void <init>(com.microsoft.authenticator.mfasdk.storage.database.MfaSdkDatabase)>
<com.facebook.imagepipeline.producers.DataFetchProducer: void <init>(com.facebook.common.memory.PooledByteBufferFactory)>
<com.azure.authenticator.authentication.msa.ui.ActivityState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.common.base.CaseFormat$3: void <init>(java.lang.String,int,com.google.common.base.CharMatcher,java.lang.String)>
<com.facebook.react.views.art.ARTSurfaceViewShadowNode: void setupSurfaceTextureListener(com.facebook.react.views.art.ARTSurfaceView)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeChildCount()>
<com.google.android.gms.auth.api.identity.zzi: void <init>()>
<android.widget.EditText: void setInputType(int)>
<com.google.android.datatransport.cct.internal.LogEvent: long getEventTimeMs()>
<com.microsoft.authenticator.commonuilibrary.network.CustomNoNetworkSnackbar: void onPauseActivity()>
<ch.qos.logback.core.joran.util.PropertySetter: boolean isUnequivocallyInstantiable(java.lang.Class)>
<android.graphics.drawable.Drawable: void jumpToCurrentState()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.common.RotationOptions getRotationOptions()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.generatepasswords.repository.GeneratePasswordRepository access$9200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.azure.authenticator.MainNavDirections: androidx.navigation.NavDirections toSettingsFragment()>
<com.google.android.gms.measurement.internal.zzjb: void zzx(com.google.android.gms.internal.measurement.zzs)>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>
<com.google.android.gms.internal.measurement.zzkt: boolean zzb()>
<com.facebook.datasource.AbstractDataSource: java.lang.Object getResult()>
<com.google.android.material.shape.MaterialShapeDrawable: boolean updateTintFilter()>
<com.google.android.gms.internal.measurement.zzen: void zzd()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setOnScreenHeight(int)>
<java.net.URL: java.lang.String getProtocol()>
<com.google.android.gms.common.internal.IGmsServiceBroker: void getService(com.google.android.gms.common.internal.IGmsCallbacks,com.google.android.gms.common.internal.GetServiceRequest)>
<com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor: void <init>(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1)>
<com.google.android.gms.location.ActivityTransition: int getActivityType()>
<com.facebook.common.statfs.StatFsHelper: android.os.StatFs createStatFs(java.lang.String)>
<com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)>
<com.google.android.gms.measurement.internal.zzae: int zzc()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater mfaUpdater()>
<com.facebook.react.uimanager.events.TouchEvent: void <init>()>
<com.google.android.gms.location.zzh: void <init>(android.app.PendingIntent)>
<com.google.android.gms.measurement.internal.zzjo: void zza(long)>
<com.android.installreferrer.commons.InstallReferrerCommons: void logWarn(java.lang.String,java.lang.String)>
<android.util.SparseBooleanArray: int size()>
<com.microsoft.authenticator.di.DidAppModule: void <init>()>
<com.google.android.material.appbar.MaterialToolbar: void maybeCenterTitleViews()>
<com.google.common.io.BaseEncoding: byte[] decodeChecked(java.lang.CharSequence)>
<ch.qos.logback.core.joran.GenericConfigurator: void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry)>
<com.facebook.drawee.drawable.ForwardingDrawable: void getTransform(android.graphics.Matrix)>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>
<com.google.android.gms.common.api.internal.zabo: boolean zad(com.google.android.gms.common.api.internal.zabo,boolean)>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder getThis()>
<com.google.android.gms.auth.api.proxy.ProxyResponse: void <init>(int,int,android.app.PendingIntent,int,android.os.Bundle,byte[])>
<com.google.android.gms.internal.measurement.zzdj: void zzbf(com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.LogEvent$Builder builder()>
<com.google.common.collect.AbstractMapEntry: java.lang.Object getValue()>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: java.lang.String getAddress()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.address.AddressViewModel addressViewModel()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$6: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<android.content.SharedPreferences$Editor: void apply()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry)>
<com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int,boolean)>
<ch.qos.logback.classic.net.SMTPAppender: ch.qos.logback.classic.PatternLayout makeNewToPatternLayout(java.lang.String)>
<com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.ConnectionResult zaf()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.credential.CredAutofillCommonOperations credAutofillCommonOperations()>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzjr zzL(com.google.android.gms.measurement.internal.zzai)>
<com.azure.authenticator.notifications.msa.MsaSessionProcessingResult: void <init>(java.lang.String,int)>
<com.google.common.collect.MapMakerInternalMap$Segment: void expand()>
<com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: void <init>(java.lang.String,int)>
<com.facebook.react.viewmanagers.ModalHostViewManagerInterface: void setAnimated(android.view.View,boolean)>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: void updateText(java.lang.Object)>
<com.facebook.drawable.base.DrawableWithCaches: void dropCaches()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void access$invalidateAadNgcAccounts(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.facebook.react.animated.NativeAnimatedModule$13: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)>
<ch.qos.logback.classic.net.server.SSLServerSocketReceiver: ch.qos.logback.core.net.ssl.SSLConfiguration getSsl()>
<com.facebook.drawee.drawable.RoundedCornersDrawable$Type: void <init>(java.lang.String,int)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.GoogleApiAvailability)>
<com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotification: void <init>(android.content.Context,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSilentLocationManager,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthenticationManager,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaSessionUseCase,com.microsoft.authenticator.mfasdk.businessLogic.MfaUpdater,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper,com.microsoft.authenticator.mfasdk.storage.IMfaSdkStorage,com.microsoft.authenticator.mfasdk.IMfaSdkHostAppDelegate,com.microsoft.authenticator.mfasdk.authentication.viewLogic.IMfaSdkDeviceGestureManager,com.microsoft.authenticator.mfasdk.policy.repository.AppPolicyRepository,com.microsoft.authenticator.mfasdk.configuration.FeatureConfig,com.microsoft.authenticator.mfasdk.authentication.businessLogic.GetEndpointManager)>
<android.text.Layout: int getEllipsizedWidth()>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager_MembersInjector: void injectMsalTokenRefreshManager(com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,com.microsoft.authenticator.authentication.aad.abstraction.MsalTokenRefreshManager)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider cardListViewModelProvider()>
<com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable: void cancel()>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_19_20()>
<com.google.android.gms.common.util.concurrent.NamedThreadFactory: void <init>(java.lang.String)>
<com.google.android.gms.internal.maps.zzz: boolean zzb(com.google.android.gms.internal.maps.zzz)>
<com.microsoft.authenticator.authentication.businessLogic.AuthCheckManager: void <init>(android.content.Context,com.azure.authenticator.storage.Storage,com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthCheckUseCase,com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaAuthCheckUseCase,com.microsoft.authenticator.authentication.aad.businessLogic.AadRemoteNgcAuthCheckUseCase,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.internal.measurement.zzjs: boolean zzb()>
<com.facebook.react.animated.NativeAnimatedModule$1: void <init>(com.facebook.react.animated.NativeAnimatedModule,com.facebook.react.bridge.ReactContext)>
<com.azure.authenticator.ui.action.UserInteractionRequiredAction: int getActionTextResourceId()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel: boolean isAccountsListEmpty()>
<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable create(android.content.Context)>
<com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: void <init>(java.lang.String,int)>
<com.facebook.imagepipeline.image.EncodedImage: android.graphics.ColorSpace getColorSpace()>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: java.lang.String getEntropySign(com.microsoft.authenticator.authentication.entities.EntropySignEnum)>
<com.facebook.imagepipeline.producers.ThrottlingProducer: java.util.concurrent.ConcurrentLinkedQueue access$100(com.facebook.imagepipeline.producers.ThrottlingProducer)>
<com.facebook.soloader.ApplicationSoSource: android.content.Context getUpdatedContext()>
<com.facebook.react.views.scroll.ReactScrollView: void flingAndSnap(int)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addGrandchildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)>
<com.google.android.gms.common.api.Api$Client: void connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)>
<com.facebook.react.modules.storage.AsyncStorageModule$6: void doInBackgroundGuarded(java.lang.Void[])>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel$fetchAppLockEnforcedPolicies$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.azure.authenticator.ui.Hilt_MainActivity$1: void <init>(com.azure.authenticator.ui.Hilt_MainActivity)>
<com.microsoft.authenticator.backup.entities.CloudBackup$Companion: com.microsoft.authenticator.backup.entities.CloudBackup deserialize(java.lang.String)>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
<android.os.Environment: java.io.File getDataDirectory()>
<com.azure.authenticator.ui.RootActivityBase: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase getPowerLiftUseCase()>
<com.azure.authenticator.ui.MainActivity: void hideAppBarForSpecificFragments(com.microsoft.authenticator.common.viewLogic.AppBarLayout,androidx.navigation.NavController)>
<com.adjust.sdk.AdjustInstance: void setPushToken(java.lang.String,android.content.Context)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: void getProfileImageAsync(android.content.Context,com.azure.authenticator.accounts.GenericAccount,boolean,com.azure.authenticator.profile.ProfileImageTaskCallback)>
<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>
<com.google.android.gms.auth.api.identity.SignInPassword: java.lang.String getId()>
<com.google.android.gms.internal.measurement.zzgc: boolean zza()>
<com.google.android.gms.measurement.internal.zzjb: void zzE(com.google.android.gms.measurement.internal.zzdz)>
<com.google.android.gms.common.api.Api$Client: int getMinApkVersion()>
<com.facebook.react.uimanager.ReactAccessibilityDelegate: void setDelegate(android.view.View)>
<com.google.android.gms.internal.measurement.zzbw: int zze()>
<com.github.amlcurran.showcaseview.ShowcaseView: void access$1300(com.github.amlcurran.showcaseview.ShowcaseView,android.widget.Button)>
<com.google.android.gms.internal.safetynet.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)>
<com.google.android.material.theme.overlay.MaterialThemeOverlay: int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int)>
<com.azure.authenticator.accounts.AadAccount: void setAuthority(java.lang.String)>
<com.adjust.sdk.AttributionHandler: void access$000(com.adjust.sdk.AttributionHandler)>
<com.google.android.gms.location.zzq: void <init>()>
<ch.qos.logback.core.rolling.helper.RenameUtil: void renameByCopying(java.lang.String,java.lang.String)>
<com.google.android.gms.measurement.internal.zzae: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void stopListeningToAnimatedNodeValue(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel deviceRegistrationViewModel()>
<com.microsoft.brooklyn.ui.settings.AutofillControlsFragment_MembersInjector: void injectBrooklynStorage(com.microsoft.brooklyn.ui.settings.AutofillControlsFragment,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<android.widget.Button: android.text.TextPaint getPaint()>
<android.animation.ObjectAnimator: void start()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void initAnimators()>
<com.google.android.gms.internal.safetynet.zzk$zze: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zaq(com.google.android.gms.common.ConnectionResult,int)>
<com.facebook.react.views.modal.RequestCloseEvent: void <init>(int)>
<com.microsoft.brooklyn.favicon.FaviconRefreshWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.microsoft.brooklyn.module.common.BrooklynStorage,com.microsoft.brooklyn.favicon.FaviconRefreshManager)>
<com.azure.authenticator.storage.database.AccountDao: long getAccountCount()>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectNotificationHelper(com.azure.authenticator.PhoneFactorApplication,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.google.android.gms.measurement.internal.zzji: void <init>(com.google.android.gms.measurement.internal.zzjq,long)>
<com.facebook.binaryresource.FileBinaryResource: java.io.File getFile()>
<androidx.core.view.ViewCompat: int generateViewId()>
<com.microsoft.brooklyn.ui.credential.passwordautochange.PasswordAutoChangeViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)>
<ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: void setProvider(java.lang.String)>
<com.facebook.soloader.ApkSoSource$ApkUnpacker: void <init>(com.facebook.soloader.ApkSoSource,com.facebook.soloader.ExtractFromZipSoSource)>
<com.google.android.datatransport.runtime.EncodedPayload: int hashCode()>
<com.google.android.material.bottomappbar.BottomAppBar: boolean setFabDiameter(int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.db.dao.IssuanceReceiptDao issuanceReceiptDao()>
<dagger.hilt.android.internal.managers.BroadcastReceiverComponentManager: java.lang.Object generatedComponent(android.content.Context)>
<android.content.Context: void unbindService(android.content.ServiceConnection)>
<android.util.TypedValue: float getFraction(float,float)>
<com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)>
<java.util.Map: java.util.Set entrySet()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getNativeParent()>
<com.google.android.material.textfield.IndicatorViewController: boolean errorShouldBeShown()>
<com.google.android.gms.common.internal.RootTelemetryConfigManager: void <init>()>
<com.airbnb.lottie.LottieTask: void <init>(java.util.concurrent.Callable,boolean)>
<com.microsoft.authenticator.di.AppModule_DefaultInterModuleNavigatorFactory: com.microsoft.authenticator.core.navigation.InterModuleNavigator defaultInterModuleNavigator(com.microsoft.authenticator.di.AppModule)>
<com.google.android.material.chip.ChipDrawable: boolean onStateChange(int[],int[])>
<com.google.android.gms.auth.account.WorkAccountClient: void <init>(android.content.Context)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver$$Lambda$1: java.lang.Runnable lambdaFactory$()>
<com.google.android.material.behavior.HideBottomViewOnScrollBehavior: void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator)>
<com.google.android.gms.internal.measurement.zzho: void zza(com.google.android.gms.internal.measurement.zzhs,com.google.android.gms.internal.measurement.zzhs)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$PasswordRequestOptions$Builder setSupported(boolean)>
<android.widget.EditText: void setFocusableInTouchMode(boolean)>
<com.microsoft.ngc.aad.telemetry.AadRemoteNgcTelemetry: void setIsRichContext(boolean)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.drawee.backends.pipeline.PipelineDraweeController obtainController()>
<android.view.ViewGroup: void setLayerType(int,android.graphics.Paint)>
<android.app.Activity: void setContentView(android.view.View)>
<java.lang.Integer: int highestOneBit(int)>
<ch.qos.logback.core.net.HardenedObjectInputStream: boolean isWhitelisted(java.lang.String)>
<com.facebook.soloader.SoSource: java.io.File unpackLibrary(java.lang.String)>
<ch.qos.logback.core.rolling.TimeBasedRollingPolicy: void waitForAsynchronousJobToStop(java.util.concurrent.Future,java.lang.String)>
<com.facebook.imagepipeline.producers.JobScheduler: boolean shouldProcess(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.facebook.imagepipeline.memory.PoolConfig: com.facebook.imagepipeline.memory.PoolStatsTracker getSmallByteArrayPoolStatsTracker()>
<com.adjust.sdk.ActivityHandler: void backgroundTimerFired()>
<com.facebook.react.devsupport.DisabledDevSupportManager: void <init>()>
<com.azure.authenticator.databinding.FragmentPaymentListBinding: com.azure.authenticator.databinding.FragmentPaymentListBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.common.api.Status: android.app.PendingIntent getResolution()>
<com.google.android.gms.internal.location.zzbp: int zzg(java.lang.Object[],int)>
<com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()>
<com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)>
<com.adjust.sdk.UtilNetworking: java.lang.String access$000()>
<com.google.android.gms.common.internal.ClientSettings$Builder: void <init>()>
<com.google.android.material.datepicker.SmoothCalendarLayoutManager: void <init>(android.content.Context,int,boolean)>
<com.facebook.react.common.MapBuilder$Builder: com.facebook.react.common.MapBuilder$Builder put(java.lang.Object,java.lang.Object)>
<com.google.android.gms.internal.measurement.zzbu: void zzj(com.google.android.gms.internal.measurement.zzbu,int,com.google.android.gms.internal.measurement.zzcf)>
<bolts.UnobservedTaskException: void <init>(java.lang.Throwable)>
<com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo: void <init>()>
<com.facebook.common.references.CloseableReference: com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference)>
<com.google.android.material.timepicker.ClockFaceView: float max3(float,float,float)>
<com.microsoft.authenticator.core.configuration.UtilChecks: boolean isLocaleAllowingNgcKeyGeneration()>
<com.azure.authenticator.profile.AbstractGetProfileImageTask$ImageResult: void <init>(com.azure.authenticator.profile.AbstractGetProfileImageTask,android.graphics.Bitmap,boolean)>
<com.facebook.imagepipeline.producers.LocalFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)>
<dummyMainClass: com.evernote.android.job.JobBootReceiver dummyMainMethod_com_evernote_android_job_JobBootReceiver(android.content.Intent)>
<com.google.android.gms.measurement.internal.zzgg: com.google.android.gms.measurement.internal.zzfi zzau()>
<android.view.ViewPropertyAnimator: void start()>
<com.google.android.material.datepicker.MonthsPagerAdapter: void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.azure.authenticator.ui.fragment.main.SettingsFragment injectSettingsFragment2(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.google.android.gms.internal.location.zzbe: void <init>(java.lang.String,int,short,double,double,float,long,int,int)>
<android.widget.CheckBox: boolean dispatchHoverEvent(android.view.MotionEvent)>
<com.google.android.material.transformation.FabTransformationBehavior: void calculateWindowBounds(android.view.View,android.graphics.RectF)>
<java.io.ObjectOutputStream: void defaultWriteObject()>
<com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>
<com.google.android.gms.maps.model.PolylineOptions: boolean isClickable()>
<com.google.android.gms.internal.measurement.zzhe: com.google.android.gms.internal.measurement.zzhe zzb()>
<com.adjust.sdk.IActivityHandler: void readOpenUrl(android.net.Uri,long)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromZipStreamSyncInternal(java.util.zip.ZipInputStream,java.lang.String)>
<com.google.android.gms.gcm.PeriodicTask$Builder: com.google.android.gms.gcm.PeriodicTask$Builder setPeriod(long)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$2: void onChanged(com.microsoft.brooklyn.ui.UiEvent)>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<com.google.android.gms.maps.zzr: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback)>
<com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration()>
<com.google.android.datatransport.cct.CctTransportBackend: void <init>(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollAndSnap(int)>
<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
<com.google.android.gms.measurement.internal.zzfc: com.google.android.gms.internal.measurement.zzcp zzq(java.lang.String,byte[])>
<com.azure.authenticator.utils.TestActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<android.graphics.PathMeasure: float getLength()>
<com.evernote.android.job.GcmAvailableHelper: boolean hasPermission(java.util.List)>
<ch.qos.logback.core.AppenderBase: void start()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_AssistedFactory_Impl: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker create(android.content.Context,androidx.work.WorkerParameters)>
<org.slf4j.event.LoggingEvent: org.slf4j.Marker getMarker()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)>
<com.adjust.sdk.AdjustInstance: boolean isInstanceEnabled()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.mfa.abstraction.QrCodeResultHandlerAadMfaAccount qrCodeResultHandlerAadMfaAccount()>
<com.facebook.react.fabric.mounting.mountitems.CreateMountItem: void <init>(com.facebook.react.uimanager.ThemedReactContext,int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)>
<com.google.android.gms.common.internal.GmsLogger: void <init>(java.lang.String)>
<com.azure.authenticator.ui.fragment.accounts.adapter.EditAccountViewHolder: com.azure.authenticator.ui.fragment.accounts.adapter.AccountListArrayAdapter access$getAdapter$p(com.azure.authenticator.ui.fragment.accounts.adapter.EditAccountViewHolder)>
<com.google.android.gms.internal.measurement.zzkz: long zzg()>
<com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)>
<com.google.android.datatransport.cct.internal.LogEvent: byte[] getSourceExtension()>
<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>
<com.facebook.react.views.text.TextAttributes: int getEffectiveFontSize()>
<java.util.LinkedHashSet: void clear()>
<com.google.android.gms.measurement.internal.zzjs: void <init>(com.google.android.gms.measurement.internal.zzjt,com.google.android.gms.measurement.internal.zzgg)>
<com.google.android.gms.common.zzm: com.google.android.gms.common.zzw zzg(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean)>
<com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<com.google.android.gms.internal.measurement.zzcm: void <init>(com.google.android.gms.internal.measurement.zzcl)>
<com.facebook.imagepipeline.decoder.ImageDecoderConfig: java.util.List getCustomImageFormats()>
<com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)>
<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int)>
<androidx.startup.InitializationProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.facebook.react.bridge.NativeMap: void <init>(com.facebook.jni.HybridData)>
<java.io.ObjectOutputStream: void reset()>
<android.view.ViewGroup: void onAttachedToWindow()>
<android.graphics.Path: void set(android.graphics.Path)>
<com.google.android.gms.common.api.internal.BasePendingResult: void <init>(android.os.Looper)>
<java.lang.Class: java.lang.Object newInstance()>
<com.facebook.callercontext.CallerContextVerifier: void verifyCallerContext(java.lang.Object)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setPositionWithRadius(com.google.android.gms.maps.model.LatLng,int)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void getStreetViewPanoramaAsync(com.google.android.gms.maps.internal.zzbp)>
<android.widget.ArrayAdapter: void clear()>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>
<com.google.android.gms.auth.api.signin.internal.HashAccumulator: int hash()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.ui.settings.EnterpriseSettingsHandler access$5100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl)>
<com.google.android.gms.measurement.internal.zzib: void zzy(com.google.android.gms.measurement.internal.zzib,com.google.android.gms.measurement.internal.zzhu,boolean,long)>
<com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1: void <init>()>
<ch.qos.logback.core.FileAppender: void subAppend(java.lang.Object)>
<com.azure.authenticator.storage.Storage: void <init>(android.content.Context)>
<com.azure.authenticator.accounts.AadAccount: void setIsMfaTotpEnabled(boolean)>
<ch.qos.logback.core.net.AbstractSocketAppender: void tryReAddingEventToFrontOfQueue(java.lang.Object)>
<com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener: void <init>(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.auth-api.zzah: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void maybeAttachListeners(com.facebook.drawee.controller.AbstractDraweeController)>
<com.azure.authenticator.storage.database.AccountTranslator: void <init>()>
<com.google.android.material.appbar.HeaderBehavior: int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int)>
<com.google.android.material.shape.Shapeable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>
<com.facebook.react.animated.PropsAnimatedNode: void disconnectFromView(int)>
<com.microsoft.authenticator.mfasdk.authentication.entities.AuthRequestDetails: java.lang.String getResponseGuid()>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: boolean isInitialized()>
<com.google.android.gms.dynamic.IFragmentWrapper: void zzu(boolean)>
<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>
<com.google.android.gms.internal.common.zzc: void zze(android.os.Parcel,android.os.Parcelable)>
<com.google.crypto.tink.KeyManager: com.google.crypto.tink.shaded.protobuf.MessageLite newKey(com.google.crypto.tink.shaded.protobuf.ByteString)>
<android.net.Uri$Builder: android.net.Uri build()>
<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>
<com.adjust.sdk.SdkClickHandler: void sendSdkClick(com.adjust.sdk.ActivityPackage)>
<android.widget.LinearLayout: android.content.Context getContext()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void <init>(androidx.fragment.app.FragmentActivity,com.azure.authenticator.accounts.AccountType,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingFlowEnum,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingTaskCallback)>
<com.facebook.react.modules.network.ForwardingCookieHandler: android.webkit.CookieManager access$000(com.facebook.react.modules.network.ForwardingCookieHandler)>
<com.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)>
<com.google.android.material.badge.BadgeDrawable$SavedState: int access$702(com.google.android.material.badge.BadgeDrawable$SavedState,int)>
<com.google.android.gms.internal.measurement.zzdu: java.lang.String zzc()>
<com.evernote.android.job.v21.JobProxy21: java.lang.String scheduleResultToString(int)>
<com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper: void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object)>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zar(com.google.android.gms.common.internal.MethodInvocation,int,long,int)>
<com.google.android.material.shadow.ShadowRenderer: void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<com.google.android.gms.internal.measurement.zzjk: void zzZ(int,java.util.List,com.google.android.gms.internal.measurement.zzha,com.google.android.gms.internal.measurement.zzji)>
<com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher: void <init>(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.modules.core.ReactChoreographer$1)>
<com.facebook.shimmer.ShimmerDrawable: boolean isShimmerStarted()>
<com.google.android.gms.measurement.internal.zzhn: void zzz(java.lang.String,java.lang.String,java.lang.Object,boolean,long)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>
<com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_24_25()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadNgcPnRegistrationUpsell aadNgcPnRegistrationUpsell()>
<com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension(int)>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap getHeaders()>
<com.google.firebase.encoders.json.JsonDataEncoderBuilder: com.google.firebase.encoders.json.JsonDataEncoderBuilder configureWith(com.google.firebase.encoders.config.Configurator)>
<com.facebook.drawee.generic.RoundingParams: void <init>()>
<com.facebook.drawee.drawable.Rounded: void setPaintFilterBitmap(boolean)>
<com.azure.authenticator.notifications.aad.AadNgcNotificationProcessingResult$ExpiredSession: void <init>(com.microsoft.ngc.aad.NgcSession)>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>
<java.io.ObjectInputStream: java.lang.Object readObject()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean isHideable()>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment_GeneratedInjector: void injectSendFeedbackFragment(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.facebook.react.views.textinput.ReactTextInputShadowNode: void initMeasureFunction()>
<ch.qos.logback.core.subst.NodeToStringTransformer: void <init>(ch.qos.logback.core.subst.Node,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: void <init>(android.os.Parcelable)>
<com.google.android.gms.common.api.internal.zax: boolean zas(com.google.android.gms.common.api.internal.zax)>
<com.facebook.react.uimanager.UIManagerModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)>
<com.microsoft.authenticator.di.AppModule_ProvideTelemetryManagerFactory: com.microsoft.authenticator.core.telemetry.TelemetryManager provideTelemetryManager(com.microsoft.authenticator.di.AppModule)>
<com.google.android.gms.common.internal.TelemetryLoggingOptions: void <init>(java.lang.String,com.google.android.gms.common.internal.zaac)>
<com.fasterxml.jackson.core.JsonGenerator: void _throwInternal()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnPolygonClickListener(com.google.android.gms.maps.internal.zzbd)>
<androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)>
<com.google.android.gms.common.server.response.zab: void <init>()>
<com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()>
<com.google.android.material.datepicker.UtcDates: java.util.Calendar getDayCopy(java.util.Calendar)>
<com.google.android.gms.measurement.internal.zzht: java.lang.String zza(android.content.Context,java.lang.String)>
<com.google.android.gms.measurement.internal.zzjh: void zzh(android.content.Intent)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.EditCredentialViewModel editCredentialViewModel()>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void showKeyInvalidatedScreen()>
<android.widget.EditText: int getPaddingLeft()>
<com.azure.authenticator.notifications.msa.Hilt_MsaNotificationActionBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean isBottomSheet(android.view.View)>
<com.adjust.sdk.AdjustFactory: java.lang.String getBaseUrl()>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$EG2hJUiEq9heFYHbvGYduxP_Hmo': void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.google.android.gms.measurement.internal.zzec: boolean zzj(com.google.android.gms.measurement.internal.zzkg)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: boolean configureClient(ch.qos.logback.core.net.server.Client)>
<com.microsoft.authenticator.core.protocol.exception.GenericServiceException: java.lang.String getErrorCode()>
<java.net.DatagramSocket: int getSendBufferSize()>
<ch.qos.logback.classic.html.DefaultThrowableRenderer: void <init>()>
<com.facebook.react.TurboReactPackage: void <init>()>
<android.widget.Spinner: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>
<com.google.android.gms.internal.measurement.zzft: void <init>()>
<com.google.android.material.datepicker.MaterialDatePicker$3: void <init>(com.google.android.material.datepicker.MaterialDatePicker)>
<com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()>
<com.google.android.gms.auth.api.credentials.Credential: java.lang.String getAccountType()>
<com.facebook.common.util.UriUtil: boolean isNetworkUri(android.net.Uri)>
<java.security.MessageDigest: byte[] digest()>
<com.airbnb.lottie.model.layer.BaseLayer$1: void <init>(com.airbnb.lottie.model.layer.BaseLayer)>
<com.google.android.gms.auth.api.credentials.HintRequest: void <init>(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<com.microsoft.onlineid.sts.DeviceIdentity: java.lang.String getPuid()>
<com.google.android.material.textfield.TextInputLayout: int calculateBoxBackgroundColor()>
<com.adjust.sdk.Logger: void setLogLevel(com.adjust.sdk.LogLevel,boolean)>
<com.google.android.material.datepicker.MonthAdapter: void updateSelectedState(android.widget.TextView,long)>
<com.google.android.gms.internal.auth.zzx: void zza(byte[])>
<com.microsoft.brooklyn.module.common.BrooklynStorage: boolean readIsAutofillDisabledBannerVisible()>
<com.facebook.jni.DestructorThread$DestructorStack: void <init>()>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: float getFullBorderRadius()>
<com.facebook.cache.disk.DiskCacheConfig$Builder: com.facebook.cache.common.CacheEventListener access$800(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.google.android.gms.measurement.internal.zzjg: void zzb(android.app.job.JobParameters,boolean)>
<com.facebook.react.views.textinput.ContentSizeWatcher: void onLayout()>
<com.facebook.react.modules.core.ReactChoreographer: int access$610(com.facebook.react.modules.core.ReactChoreographer)>
<com.google.common.collect.MapMakerInternalMap$EntryIterator: void <init>(com.google.common.collect.MapMakerInternalMap)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: com.facebook.imagepipeline.cache.MemoryCache access$000(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer)>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<android.widget.ProgressBar: void setProgress(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>
<com.google.android.gms.measurement.internal.zzkd: void zzG(int,java.lang.Throwable,byte[],java.lang.String)>
<com.google.android.material.datepicker.MaterialCalendar$3: void <init>(com.google.android.material.datepicker.MaterialCalendar)>
<com.google.android.gms.internal.measurement.zzdb: boolean zzg()>
<android.animation.ObjectAnimator: android.animation.PropertyValuesHolder[] getValues()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)>
<android.content.Context: boolean isRestricted()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: int _skipColon2(boolean)>
<com.facebook.react.bridge.BaseJavaModule: void initialize()>
<com.facebook.react.views.textinput.ReactTextInputManager$1: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,boolean)>
<com.google.android.material.chip.ChipDrawable: float getCloseIconSize()>
<java.util.Arrays: boolean[] copyOf(boolean[],int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeActivity: dagger.hilt.android.internal.managers.ActivityComponentManager createComponentManager()>
<com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>
<com.evernote.android.job.JobRequest$Builder: android.os.Bundle access$1900(com.evernote.android.job.JobRequest$Builder)>
<com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: void <init>(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.MultiSourceHelper$1)>
<ch.qos.logback.core.net.server.RemoteReceiverClient: boolean offer(java.io.Serializable)>
<com.azure.authenticator.databinding.AccountAddMethodListWorkBinding: android.widget.LinearLayout getRoot()>
<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
<com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleForceViewToBeNonLayoutOnly(com.facebook.react.uimanager.ReactShadowNode)>
<com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()>
<com.google.android.gms.common.api.internal.BasePendingResult: void setResult(com.google.android.gms.common.api.Result)>
<com.google.android.gms.measurement.internal.zzam: long zzb()>
<com.google.android.material.datepicker.MaterialDatePicker: com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)>
<com.azure.authenticator.databinding.PasswordFabOptionBottomSheetBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
<java.lang.Class: java.lang.String getName()>
<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>
<org.json.JSONArray: long optLong(int,long)>
<com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>
<com.facebook.react.ReactInstanceManagerBuilder: com.facebook.react.ReactInstanceManagerBuilder setApplication(android.app.Application)>
<com.google.android.material.bottomappbar.BottomAppBar: void createMenuViewTranslationAnimation(int,boolean,java.util.List)>
<com.google.android.gms.signin.internal.zak: void <init>(int,com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.internal.zav)>
<com.google.android.gms.measurement.internal.zzo: void <init>(com.google.android.gms.measurement.internal.AppMeasurementDynamiteService,com.google.android.gms.internal.measurement.zzv)>
<androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)>
<com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver: void persistCookies()>
<com.microsoft.onlineid.SecurityScope: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzah(int)>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer$1: void <init>(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.image.EncodedImage)>
<com.fasterxml.jackson.core.io.UTF8Writer: java.lang.String illegalSurrogateDesc(int)>
<ch.qos.logback.core.util.CachingDateFormatter: void setTimeZone(java.util.TimeZone)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeLongArray(android.os.Parcel,int,long[],boolean)>
<com.azure.authenticator.profile.AbstractGetProfileImageTask: com.azure.authenticator.profile.AbstractGetProfileImageTask$ImageResult doInBackground(java.lang.Void[])>
<com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableGradientColorValue parseGradientColor(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition,int)>
<com.github.amlcurran.showcaseview.OnShowcaseEventListener$1: void <init>()>
<com.google.android.datatransport.runtime.TransportImpl$$Lambda$1: void <init>()>
<com.google.android.gms.measurement.internal.zzjh: android.os.IBinder zze(android.content.Intent)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectFcmRegistrationManager(com.azure.authenticator.PhoneFactorApplication,com.microsoft.authenticator.notifications.abstraction.FcmRegistrationManager)>
<com.facebook.yoga.YogaJustify: int intValue()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<com.facebook.react.fabric.events.EventBeatManager: void tick()>
<com.airbnb.lottie.value.Keyframe: boolean containsProgress(float)>
<java.io.FileOutputStream: void <init>(java.io.File)>
<javax.mail.internet.MimeMessage: void setContent(javax.mail.Multipart)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1: void onNewResultImpl(com.facebook.common.references.CloseableReference,int)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$configureDeviceIdInformation$1: void <init>(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<java.lang.String: java.lang.String valueOf(double)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.address.AddressViewModel access$11300(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.maps.GoogleMap$OnCameraMoveCanceledListener: void onCameraMoveCanceled()>
<java.io.ByteArrayOutputStream: void <init>()>
<okhttp3.RequestBody: void writeTo(okio.BufferedSink)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.android.gms.common.api.internal.zabl: void zaM(com.google.android.gms.common.ConnectionResult)>
<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.auth.api.identity.zzf$zzc: com.google.android.gms.auth.api.identity.zzf$zzc zze(java.lang.String)>
<androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>
<com.evernote.android.job.JobRequest$Builder: int hashCode()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: void <init>(android.content.res.Resources)>
<com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzjt zzk()>
<com.google.android.gms.internal.measurement.zzja: void zzp(java.lang.Object,java.lang.Object,int)>
<com.google.android.material.chip.ChipDrawable: android.graphics.drawable.Drawable getCloseIcon()>
<com.google.android.gms.measurement.internal.zzjb: void zzF()>
<com.facebook.common.statfs.StatFsHelper: void maybeUpdateStats()>
<com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: void <init>()>
<com.google.android.gms.internal.measurement.zzen: com.google.android.gms.internal.measurement.zzen zza(android.content.ContentResolver,android.net.Uri)>
<okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)>
<com.facebook.yoga.YogaConfig: void setUseLegacyStretchBehaviour(boolean)>
<androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)>
<com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int getDrawerState()>
<com.google.android.gms.measurement.internal.zzkf: byte[] zzs(byte[])>
<com.google.android.gms.measurement.internal.zzip: void <init>(com.google.android.gms.measurement.internal.zzjb,com.google.android.gms.measurement.internal.zzp)>
<com.google.android.material.appbar.AppBarLayout: int getPendingAction()>
<com.google.common.collect.MapMakerInternalMap: int rehash(int)>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetLayoutAnimationEnabled(boolean)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnCameraMoveCanceledListener(com.google.android.gms.maps.internal.zzp)>
<com.google.android.gms.internal.measurement.zzgz: int zzy(java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean)>
<androidx.work.OneTimeWorkRequest$Builder: void <init>(java.lang.Class)>
<com.google.android.material.textfield.TextInputLayout: void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)>
<com.azure.authenticator.databinding.FragmentAutofillControlSettingsBinding: android.widget.ScrollView getRoot()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: float getPressedTranslationZ()>
<android.view.ViewGroup: int getPaddingLeft()>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<com.google.android.gms.common.api.PendingResult: void setResultCallback(com.google.android.gms.common.api.ResultCallback)>
<com.google.android.material.textfield.TextInputLayout: boolean isProvidingHint()>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.concurrent.CopyOnWriteArraySet access$200(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setLogSource(java.lang.Integer)>
<com.microsoft.authenticator.authentication.aad.entities.AadNgcDenySessionResult$UnexpectedFailure: java.lang.String getDetails()>
<com.facebook.react.ReactInstanceManager: void moveToResumedLifecycleState(boolean)>
<com.google.android.material.navigation.NavigationBarMenuView: android.util.SparseArray getBadgeDrawables()>
<com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)>
<com.facebook.yoga.YogaNodeJNIBase: boolean isMeasureDefined()>
<com.microsoft.authenticator.graphclient.entities.Settings: com.microsoft.authenticator.graphclient.entities.EnabledState getDisplayAppInformationRequiredState()>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)>
<com.airbnb.lottie.model.layer.Layer: java.lang.String getRefId()>
<android.widget.EditText: void setMaxLines(int)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback: com.microsoft.authenticator.authentication.msa.businessLogic.MsaAccountUseCase access$getMsaAccountUseCase$p(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback)>
<org.json.JSONObject: java.lang.String toString()>
<com.google.android.gms.maps.model.StreetViewPanoramaCamera: void <init>(float,float,float)>
<com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()>
<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.widget.TextView: int getTotalPaddingRight()>
<com.facebook.react.modules.storage.AsyncStorageModule$6: void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback)>
<com.google.android.gms.dynamic.IFragmentWrapper: android.os.Bundle zzc()>
<com.github.amlcurran.showcaseview.ShowcaseView: void recalculateText()>
<com.facebook.react.uimanager.UIImplementation: void onHostDestroy()>
<com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getLocalStartServiceAction()>
<com.airbnb.lottie.utils.Utils$3: android.graphics.Path initialValue()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.authentication.MsaAuthViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback: java.lang.String access$getMsaCid$p(com.azure.authenticator.ui.backup.BackupFlowActivity$StartBackupCallback)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity$generateBackupSilentlyAsync$1: void <init>(com.azure.authenticator.ui.backup.RestoreFlowActivity,java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.adjust.sdk.Reflection: java.lang.Boolean isPlayTrackingEnabled(android.content.Context)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.material.appbar.AppBarLayout: boolean shouldLift(android.view.View)>
<com.google.android.gms.location.zzbo: void <init>(int,int,long,long)>
<com.facebook.common.references.CloseableReference: void <init>(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable)>
<com.facebook.imagepipeline.cache.ImageCacheStatsTracker: void onMemoryCacheHit(com.facebook.cache.common.CacheKey)>
<com.azure.authenticator.logging.CollectLogsUtils: java.lang.String readFileFromInternalStorage(java.io.File,long)>
<com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()>
<com.microsoft.authenticator.core.logging.BaseLogger: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.material.internal.CollapsingTextHelper: boolean rectEquals(android.graphics.Rect,int,int,int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.util.VerifiableCredentialTelemetryClient verifiableCredentialTelemetryClient()>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInSetupFragmentArgs: android.os.Bundle toBundle()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getPressedStateOverlay()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringCustom(int)>
<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<androidx.preference.Preference: void setVisible(boolean)>
<com.google.android.gms.internal.measurement.zzdi: java.lang.String zzan()>
<androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()>
<com.google.android.material.chip.ChipDrawable: android.text.TextUtils$TruncateAt getEllipsize()>
<ch.qos.logback.core.util.ContextUtil: java.util.Map getFilenameCollisionMap(ch.qos.logback.core.Context)>
<com.facebook.drawee.drawable.DrawableProperties: void setAlpha(int)>
<com.facebook.react.jstasks.HeadlessJsTaskConfig: java.lang.String getTaskKey()>
<com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.accounts.Account getAccount()>
<com.facebook.imageformat.DefaultImageFormats: boolean isStaticWebpFormat(com.facebook.imageformat.ImageFormat)>
<com.azure.authenticator.ui.dialog.IntentTaskIdParser: void <init>()>
<com.google.android.datatransport.cct.CctTransportBackend$$Lambda$4: void <init>()>
<com.evernote.android.job.work.JobProxyWorkManager: androidx.work.Constraints buildConstraints(com.evernote.android.job.JobRequest)>
<java.lang.ClassCastException: void <init>(java.lang.String)>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaAccountManager msaAccountManager()>
<android.text.TextPaint: void setFakeBoldText(boolean)>
<com.github.amlcurran.showcaseview.ShowcaseView: boolean access$302(com.github.amlcurran.showcaseview.ShowcaseView,boolean)>
<com.evernote.android.job.v14.JobProxy14: void <init>(android.content.Context,java.lang.String)>
<android.app.job.JobService: android.content.Context getApplicationContext()>
<ch.qos.logback.core.net.SocketConnectorBase$ConsoleExceptionHandler: void <init>()>
<com.facebook.react.uimanager.UIImplementation: void measure(int,com.facebook.react.bridge.Callback)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer: void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,com.facebook.imagepipeline.producers.MultiplexProducer$1)>
<com.google.android.gms.internal.maps.zzz: void setPattern(java.util.List)>
<android.graphics.Paint: void setAlpha(int)>
<ch.qos.logback.core.util.Loader: java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class)>
<com.google.common.base.Preconditions: void checkArgument(boolean)>
<com.adjust.sdk.Util: int getConnectivityType(android.content.Context)>
<com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>
<androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>
<com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context)>
<com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<ch.qos.logback.core.joran.util.PropertySetter: void setComplexProperty(java.lang.String,java.lang.Object)>
<com.google.android.gms.auth.zzd: java.lang.String getToken(android.content.Context,android.accounts.Account,java.lang.String)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setMapToolbarEnabled(boolean)>
<com.azure.authenticator.ui.authentication.Hilt_MsaSessionActivity: void inject()>
<com.google.android.material.chip.ChipDrawable: void setHideMotionSpecResource(int)>
<com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.credential.EditCredentialViewModel injectEditCredentialViewModel(com.microsoft.brooklyn.ui.credential.EditCredentialViewModel)>
<java.io.RandomAccessFile: void write(int)>
<com.azure.authenticator.notifications.AbstractNotification$NotificationType: java.lang.String getFcmMessageType()>
<com.google.android.gms.internal.measurement.zzjo: java.lang.Iterable zza()>
<com.google.android.gms.internal.measurement.zzja: int zzA(int)>
<androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>
<ch.qos.logback.core.pattern.DynamicConverter: java.lang.String getFirstOption()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$3: void <init>(androidx.fragment.app.Fragment)>
<androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build()>
<com.azure.authenticator.storage.database.AccountWriter: void upsertAccount(com.azure.authenticator.storage.database.DbAccount)>
<com.facebook.react.uimanager.UIManagerModuleListener: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)>
<java.lang.Class: boolean isArray()>
<android.widget.HorizontalScrollView: android.content.res.Resources getResources()>
<com.azure.authenticator.databinding.FragmentCredentialListBinding: androidx.coordinatorlayout.widget.CoordinatorLayout getRoot()>
<ch.qos.logback.core.joran.action.IADataForComplexProperty: void setNestedComplexProperty(java.lang.Object)>
<com.google.android.gms.internal.common.zzq: int zzd()>
<com.google.android.material.resources.TextAppearance: android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance)>
<com.facebook.drawee.controller.ForwardingControllerListener: void clearListeners()>
<com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] $values()>
<com.google.android.gms.common.api.internal.zabd: void zap()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$onTicketAcquired$2: java.lang.Object invokeSuspend(java.lang.Object)>
<ch.qos.logback.core.joran.event.SaxEventRecorder: org.xml.sax.Locator getLocator()>
<com.google.android.gms.common.zzq: void <init>(boolean,java.lang.String,int)>
<com.google.android.gms.internal.measurement.zzbw: com.google.android.gms.internal.measurement.zzcd zzh()>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzkf zzn()>
<com.azure.authenticator.ui.fragment.main.BackupDetailsFragment: java.lang.ref.WeakReference access$getWeakParentActivity$p(com.azure.authenticator.ui.fragment.main.BackupDetailsFragment)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.encryption.businessLogic.MfaPinEncryptionManager mfaPinEncryptionManager()>
<com.airbnb.lottie.animation.content.BaseStrokeContent$PathGroup: void <init>(com.airbnb.lottie.animation.content.TrimPathContent)>
<java.io.BufferedOutputStream: void close()>
<com.google.android.material.textfield.TextInputLayout: void applyStartIconTint()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<com.facebook.react.uimanager.MatrixMathHelper: double[] transpose(double[])>
<com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)>
<com.airbnb.lottie.model.content.GradientColor: void lerp(com.airbnb.lottie.model.content.GradientColor,com.airbnb.lottie.model.content.GradientColor,float)>
<ch.qos.logback.core.pattern.parser.Token: void <init>(int,java.util.List)>
<com.facebook.react.uimanager.BaseViewManager: void <init>()>
<com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getChipIconTint()>
<com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum: int getValue()>
<com.google.android.material.chip.Chip: void updatePaddingInternal()>
<com.adjust.sdk.scheduler.ThreadScheduler: void schedule(java.lang.Runnable,long)>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<androidx.collection.SparseArrayCompat: int size()>
<com.facebook.react.modules.fresco.ReactNetworkImageRequest: com.facebook.react.bridge.ReadableMap getHeaders()>
<org.slf4j.event.LoggingEvent: java.lang.Object[] getArgumentArray()>
<com.google.android.gms.internal.measurement.zzjk: int zzp(java.util.List)>
<com.google.android.gms.tasks.zzu: void <init>()>
<com.google.android.material.shape.ShapePath$PathArcOperation: float getStartAngle()>
<com.adjust.sdk.ActivityHandler$InternalState: boolean hasSessionResponseNotBeenProcessed()>
<com.google.android.material.internal.TextScale: void <init>()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<ch.qos.logback.classic.pattern.ThreadConverter: java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.measurement.internal.zzhn: java.lang.String zzR()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$9: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaFcmChangeDeviceTokenWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.animation.DrawableAlphaProperty: void set(android.graphics.drawable.Drawable,java.lang.Integer)>
<com.microsoft.did.util.DidStorage: void writeIsCardsPreviewEnabled(android.content.Context,boolean)>
<com.google.android.gms.measurement.internal.zzdv: java.lang.String zza()>
<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>
<com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: void <init>(java.lang.String,int,int)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: void verifyGooglePlayServicesIsAvailable(android.content.Context,int)>
<com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>
<com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>
<com.facebook.imageutils.StreamProcessor: int readPackedInt(java.io.InputStream,int,boolean)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel$generateMsaNgcKeyAsync$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel,kotlin.coroutines.Continuation)>
<com.adjust.sdk.DeviceInfo: java.lang.String getScreenFormat(int)>
<com.google.android.gms.maps.internal.zzu: void <init>()>
<android.animation.AnimatorSet: void cancel()>
<com.google.android.gms.common.images.zac: void <init>(com.google.android.gms.common.images.ImageManager,android.net.Uri,android.graphics.Bitmap,boolean,java.util.concurrent.CountDownLatch)>
<com.google.android.gms.internal.measurement.zzdq: java.util.List zze()>
<com.google.common.base.Absent: com.google.common.base.Optional withType()>
<android.view.MotionEvent: int getPointerCount()>
<ch.qos.logback.core.joran.util.PropertySetter: ch.qos.logback.core.util.AggregationType computeRawAggregationType(java.lang.reflect.Method)>
<ch.qos.logback.core.util.FileSize: java.lang.String toString()>
<com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder: void <init>(com.google.android.gms.maps.model.StreetViewPanoramaOrientation)>
<com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter: com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener)>
<java.lang.Runtime: int availableProcessors()>
<com.azure.authenticator.storage.database.AccountDao: void insertAccount(com.azure.authenticator.storage.database.DbAccount)>
<java.util.PriorityQueue: java.lang.Object peek()>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>
<com.google.android.gms.internal.measurement.zzkh: boolean zzb()>
<com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener zzn(com.google.android.gms.common.internal.BaseGmsClient)>
<com.google.android.gms.auth.UserRecoverableAuthException: void <init>(java.lang.String,android.content.Intent)>
<com.google.android.material.shape.MaterialShapeDrawable: void setTintList(android.content.res.ColorStateList)>
<com.google.android.gms.common.util.ScopeUtil: java.lang.String[] toScopeString(com.google.android.gms.common.api.Scope[])>
<android.widget.AutoCompleteTextView: android.content.Context getContext()>
<com.google.android.gms.common.data.DataHolder$Builder: com.google.android.gms.common.data.DataHolder$Builder zaa(java.util.HashMap)>
<ch.qos.logback.classic.net.SocketNode: void close()>
<com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: void detachReconfigurationToNewThread()>
<com.facebook.soloader.ExtractFromZipSoSource: void <init>(android.content.Context,java.lang.String,java.io.File,java.lang.String)>
<com.google.android.material.animation.MotionSpec: void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)>
<com.google.android.gms.internal.common.zzq: com.google.android.gms.internal.common.zzu zze()>
<com.google.android.material.shape.MaterialShapeDrawable: void invalidateSelfIgnoreShape()>
<com.airbnb.lottie.model.Font: void <init>(java.lang.String,java.lang.String,java.lang.String,float)>
<com.google.android.gms.internal.measurement.zzcp: com.google.android.gms.internal.measurement.zzcp zzm()>
<com.google.android.gms.internal.measurement.zzfs: com.google.android.gms.internal.measurement.zzfo zza(com.google.android.gms.internal.measurement.zzfo)>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>
<com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: boolean access$400(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder)>
<com.google.android.gms.internal.measurement.zzcf: com.google.android.gms.internal.measurement.zzce zzi()>
<com.facebook.react.uimanager.UIManagerModule: void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,int)>
<com.google.android.gms.measurement.internal.zzjt: void zzc(long)>
<com.microsoft.ngc.aad.NgcSession: int getNotificationId()>
<com.facebook.imagepipeline.transcoder.ImageTranscoder: com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer)>
<com.google.android.gms.dynamite.zzp: com.google.android.gms.dynamic.IObjectWrapper zzf(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)>
<com.azure.authenticator.databinding.ToolbarLayoutBinding: com.azure.authenticator.databinding.ToolbarLayoutBinding bind(android.view.View)>
<com.google.android.material.appbar.AppBarLayout: boolean shouldDrawStatusBarForeground()>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)>
<com.google.android.gms.internal.measurement.zzla: long zzF()>
<com.google.android.gms.location.zzn: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeController: void releaseImage(java.lang.Object)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment$onCreateView$3: void <init>(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.google.android.material.textfield.IndicatorViewController$1: void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView)>
<com.google.android.gms.common.api.internal.zax: boolean zaE(com.google.android.gms.common.ConnectionResult)>
<android.text.TextPaint: void setTextAlign(android.graphics.Paint$Align)>
<com.airbnb.lottie.animation.keyframe.TextKeyframeAnimation: void <init>(java.util.List)>
<com.facebook.common.logging.FLogDefaultLoggingDelegate: void println(int,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.gms.auth.api.accounttransfer.DeviceMetaData: boolean isChallengeAllowed()>
<androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
<com.google.android.gms.auth.api.accounttransfer.zzr: void <init>(java.util.Set,int,com.google.android.gms.auth.api.accounttransfer.zzt,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.location.zzam: void zzr(com.google.android.gms.internal.location.zzai)>
<androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>
<android.view.View: void layout(int,int,int,int)>
<ch.qos.logback.core.util.Loader: java.net.URL getResource(java.lang.String,java.lang.ClassLoader)>
<dagger.hilt.android.internal.modules.ActivityModule_ProvideFragmentActivityFactory: androidx.fragment.app.FragmentActivity provideFragmentActivity(android.app.Activity)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.notifications.controller.FcmTokenDailyRetryRefreshWorker fcmTokenDailyRetryRefreshWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.internal.measurement.zzdb: void zzp(com.google.android.gms.internal.measurement.zzdb,java.lang.Iterable)>
<com.google.android.gms.internal.measurement.zznk: boolean zzb()>
<ch.qos.logback.core.subst.Tokenizer: void <init>(java.lang.String)>
<com.adjust.sdk.InstallReferrer: void onInstallReferrerSetupFinishedInt(int)>
<com.google.android.gms.internal.location.zzn: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationCallback)>
<com.google.android.material.shape.MaterialShapeDrawable: boolean onStateChange(int[])>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: java.lang.Object zai(java.lang.Object)>
<com.google.android.gms.internal.auth-api.zzy: void <init>()>
<com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager: void <init>()>
<com.adjust.sdk.IActivityHandler: void gdprForgetMe()>
<com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource access$900(com.facebook.react.views.image.ReactImageView)>
<com.azure.authenticator.storage.database.AccountDao_Impl$2: void <init>(com.azure.authenticator.storage.database.AccountDao_Impl,androidx.room.RoomDatabase)>
<com.google.android.gms.common.api.Status: boolean isCanceled()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchNull()>
<com.google.android.gms.internal.measurement.zzt: void <init>(android.os.IBinder)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: com.facebook.imagepipeline.producers.BaseProducerContext access$300(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer)>
<com.google.android.gms.internal.measurement.zzjg: void zzf(int)>
<com.airbnb.lottie.animation.LPaint: void <init>(int,android.graphics.PorterDuff$Mode)>
<com.fasterxml.jackson.core.base.GeneratorBase: com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment$startWorkplaceJoin$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,int)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()>
<com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)>
<ch.qos.logback.classic.encoder.PatternLayoutEncoder: void start()>
<com.google.android.gms.common.internal.zak: void zah(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)>
<com.google.android.material.expandable.ExpandableWidget: boolean isExpanded()>
<android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void doDecode(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)>
<okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>
<com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate: void <init>()>
<com.facebook.react.views.textinput.ReactTextInputEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: void doPostprocessing(com.facebook.common.references.CloseableReference,int)>
<javax.net.ssl.SSLSocket: void setSoTimeout(int)>
<androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)>
<com.google.android.gms.internal.measurement.zzp: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzs,long)>
<ch.qos.logback.core.subst.Parser: void expectCurlyRight(ch.qos.logback.core.subst.Token)>
<android.os.Handler: void <init>(android.os.Looper)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int)>
<com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzed zzq()>
<com.microsoft.authenticator.core.common.CoroutineTimer: void startTimer()>
<com.azure.authenticator.databinding.AadPhoneSignInOnPremQrBinding: com.azure.authenticator.databinding.AadPhoneSignInOnPremQrBinding bind(android.view.View)>
<com.google.android.gms.internal.measurement.zzjk: void zzK(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<com.microsoft.identity.client.Logger: void setEnablePII(boolean)>
<com.google.android.gms.measurement.internal.zzgg: android.content.Context zzaw()>
<com.google.android.material.appbar.AppBarLayout$LayoutParams: android.view.animation.Interpolator getScrollInterpolator()>
<android.app.AlertDialog: void setTitle(int)>
<com.facebook.react.animated.ModulusAnimatedNode: void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager)>
<com.facebook.react.modules.core.JavaTimerManager: void maybeIdleCallback()>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: java.lang.String zzc(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _verifyValueWrite(java.lang.String)>
<com.google.android.gms.internal.common.zzl: int zzb(int,int,java.lang.String)>
<com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean access$002(com.facebook.react.devsupport.DoubleTapReloadRecognizer,boolean)>
<com.google.android.material.textfield.EndIconDelegate: boolean shouldTintIconOnError()>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectPowerLiftUseCase(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUseCase)>
<com.facebook.react.modules.debug.SourceCodeModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.google.android.material.math.MathUtils: float distanceToFurthestCorner(float,float,float,float,float,float)>
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.widget.ProgressBar: boolean isIndeterminate()>
<com.google.android.material.chip.ChipDrawable: boolean isStateful(android.graphics.drawable.Drawable)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>
<ch.qos.logback.core.spi.ContextAwareBase: void addWarn(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.measurement.internal.zzfi: com.google.android.gms.measurement.internal.zzfh zzq(com.google.android.gms.measurement.internal.zzfi)>
<com.azure.authenticator.storage.database.AccountStorage_Factory: com.azure.authenticator.storage.database.AccountStorage newInstance(android.content.Context)>
<com.azure.authenticator.databinding.AddNewAccountBinding: com.azure.authenticator.databinding.AddNewAccountBinding bind(android.view.View)>
<com.google.android.gms.internal.measurement.zzdj: void zzaJ(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<com.google.android.gms.internal.auth-api.zzx: void zzc(com.google.android.gms.internal.auth-api.zzv)>
<com.facebook.imagepipeline.memory.BitmapCounter: boolean increase(android.graphics.Bitmap)>
<com.azure.authenticator.databinding.AddNewAccountBinding: void <init>(android.widget.ScrollView,android.widget.TextView,android.widget.Button,android.widget.Button,android.widget.Button,android.view.View,android.view.View,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView)>
<com.azure.authenticator.storage.database.AccountWriter: void saveNonMfaAadAccount(com.azure.authenticator.storage.database.DbAccount)>
<com.google.android.gms.internal.measurement.zzda: java.lang.String zzk()>
<com.adjust.sdk.ActivityState: java.lang.String stamp(long)>
<android.text.Layout: int getLineCount()>
<com.google.android.material.transformation.FabTransformationBehavior: float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)>
<android.widget.ProgressBar: void setIndeterminate(boolean)>
<java.util.Locale: java.lang.String getCountry()>
<com.facebook.imagepipeline.producers.WebpTranscodeProducer: com.facebook.common.util.TriState shouldTranscode(com.facebook.imagepipeline.image.EncodedImage)>
<com.google.android.gms.internal.measurement.zzdb: long zzf()>
<com.google.android.gms.internal.maps.zzt: float getAlpha()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)>
<com.google.android.material.chip.ChipDrawable: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)>
<com.google.android.gms.measurement.internal.zzgh: void zza(android.os.Bundle,java.lang.Object)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity: java.lang.Object generatedComponent()>
<com.google.android.gms.common.api.internal.zaar: boolean zaI(int)>
<com.google.android.gms.common.api.internal.zacn: void zaa(com.google.android.gms.common.ConnectionResult)>
<com.evernote.android.job.JobRequest: boolean equals(java.lang.Object)>
<com.facebook.react.uimanager.JSTouchDispatcher: void <init>(android.view.ViewGroup)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void enforceAndPromptAppLockIfNecessary(androidx.fragment.app.FragmentActivity,boolean,java.lang.String,java.lang.String)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.Registry$KeyManagerContainer getKeyManagerContainerOrThrow(java.lang.String)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean checkFlag(int,int)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setMyLocationEnabled(boolean)>
<com.google.android.gms.internal.auth-api.zzo: void zzc(android.content.Context,com.google.android.gms.internal.auth-api.zzx)>
<android.telephony.TelephonyManager: int getNetworkType()>
<com.google.android.gms.internal.measurement.zzdi: java.lang.String zzV()>
<com.google.android.gms.measurement.internal.zzfl: void zzP()>
<com.microsoft.onlineid.AccountManager: com.microsoft.onlineid.AccountManager setProofOfPosessionTokensCallback(com.microsoft.onlineid.IProofOfPossessionTokensCallback)>
<com.facebook.yoga.YogaValue: void <init>(float,int)>
<com.airbnb.lottie.value.LottieValueCallback: void setAnimation(com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation)>
<com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker)>
<com.google.android.gms.common.api.internal.zaar: boolean zaE(com.google.android.gms.common.ConnectionResult)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity: void onNegativeButtonClick()>
<com.google.android.material.shape.MaterialShapeDrawable: void setStroke(float,android.content.res.ColorStateList)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void showMfaFingerprintOptInDialog()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment: com.azure.authenticator.databinding.ManageDeviceRegistrationBinding access$getBinding$p(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment)>
<com.google.android.gms.auth.api.credentials.IdToken: java.lang.String getAccountType()>
<com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>
<com.facebook.react.uimanager.UIImplementation: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void showProgress()>
<com.facebook.react.views.view.ReactViewBackgroundManager: void setBorderRadius(float,int)>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void scrollTo(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)>
<java.util.Stack: java.lang.Object push(java.lang.Object)>
<com.google.android.material.button.MaterialButton$SavedState: void readFromParcel(android.os.Parcel)>
<android.os.AsyncTask: void <init>()>
<com.adjust.sdk.PackageBuilder: java.util.Map getGdprParameters()>
<com.airbnb.lottie.animation.content.MergePathsContent: void <init>(com.airbnb.lottie.model.content.MergePaths)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.abstraction.ExperimentationWorker_AssistedFactory access$15100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest: com.google.android.gms.auth.api.identity.GetSignInIntentRequest$Builder builder()>
<com.google.android.gms.measurement.internal.zzfl: int zzG()>
<com.airbnb.lottie.utils.MiscUtils: double clamp(double,double,double)>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket(int)>
<com.facebook.react.ReactDelegate: com.facebook.react.ReactRootView getReactRootView()>
<com.google.android.material.timepicker.TimeModel: java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence)>
<com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler: void setExportPasswordsCount(int)>
<com.google.crypto.tink.Registry: com.google.crypto.tink.Registry$KeyDeriverContainer createDeriverFor(com.google.crypto.tink.KeyTypeManager)>
<com.google.android.material.chip.ChipDrawable: void drawChipBackground(android.graphics.Canvas,android.graphics.Rect)>
<com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode access$600(com.facebook.react.views.image.ReactImageView)>
<android.animation.Animator$AnimatorListener: void onAnimationStart(android.animation.Animator)>
<java.nio.channels.FileChannel: void force(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void lambda$static$0(android.database.sqlite.SQLiteDatabase)>
<com.google.android.gms.measurement.internal.zzg: long zzz()>
<android.widget.FrameLayout: void announceForAccessibility(java.lang.CharSequence)>
<android.widget.TextView: void setTextIsSelectable(boolean)>
<com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder: com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder bearing(float)>
<ch.qos.logback.core.status.OnPrintStreamStatusListenerBase: void start()>
<com.facebook.react.views.textinput.ReactTextInputManager$3: void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ThemedReactContext)>
<com.microsoft.did.di.VcWalletModule_VccDaoFactory: com.microsoft.did.datasource.db.dao.VerifiableCredentialCardDao vccDao(com.microsoft.did.di.VcWalletModule,com.microsoft.did.datasource.db.VcDatabase)>
<com.facebook.react.fabric.mounting.MountingManager: void sendAccessibilityEvent(int,int)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: java.util.ArrayList zzq(com.google.android.gms.common.AccountPicker$AccountChooserOptions,java.util.ArrayList)>
<com.adjust.sdk.IPackageHandler: void pauseSending()>
<com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder: com.google.android.gms.common.internal.TelemetryLoggingOptions build()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel: java.util.List getActiveMsaAccounts()>
<com.facebook.react.animated.SpringAnimation: boolean isOvershooting()>
<ch.qos.logback.core.subst.Parser: ch.qos.logback.core.subst.Node V()>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager: java.lang.Object getTokenAsync$default(com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager,android.app.Activity,com.azure.authenticator.accounts.AadAccount,java.lang.String,com.microsoft.aad.adal.PromptBehavior,java.lang.String,kotlin.coroutines.Continuation,int,java.lang.Object)>
<com.github.amlcurran.showcaseview.ShowcaseView: void show()>
<java.lang.IndexOutOfBoundsException: void <init>()>
<com.azure.authenticator.ui.authentication.'-$$Lambda$AbstractAuthRequestActivity$8vBObeB5keioErzZeFJsxQwa0n8': void <init>(com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity)>
<com.google.android.gms.internal.measurement.zzkh: boolean zzy(java.lang.Object,long)>
<com.evernote.android.job.util.JobCat: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.facebook.react.uimanager.UIViewOperationQueue: void prependUIBlock(com.facebook.react.uimanager.UIBlock)>
<com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>
<java.lang.Class: boolean isInterface()>
<com.facebook.react.uimanager.JSTouchDispatcher: void dispatchCancelEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)>
<com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()>
<com.facebook.common.logging.FLog: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<com.google.common.collect.ComparatorOrdering: void <init>(java.util.Comparator)>
<com.facebook.react.common.LongArray: void set(int,long)>
<com.google.android.material.textfield.TextInputLayout: boolean canDrawStroke()>
<com.microsoft.authenticator.reactnative.modules.AppLockPackage: void <init>(kotlinx.coroutines.CoroutineDispatcher)>
<com.google.android.gms.internal.measurement.zzcc: void <init>(java.lang.String,int,int)>
<com.airbnb.lottie.utils.MeanCalculator: void <init>()>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<com.google.android.gms.dynamite.DynamiteModule$LoadingException: void <init>(java.lang.String,java.lang.Throwable,com.google.android.gms.dynamite.zzb)>
<com.google.android.gms.auth.api.credentials.HintRequest: void <init>(int,com.google.android.gms.auth.api.credentials.CredentialPickerConfig,boolean,boolean,java.lang.String[],boolean,java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$7: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.react.modules.permissions.PermissionsModule$2: void <init>(com.facebook.react.modules.permissions.PermissionsModule,java.util.ArrayList,com.facebook.react.bridge.WritableMap,com.facebook.react.bridge.Promise)>
<com.google.android.material.tabs.TabLayout$TabView: void inflateAndAddDefaultIconView()>
<com.google.android.material.appbar.AppBarLayout$1: void <init>(com.google.android.material.appbar.AppBarLayout)>
<com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest: void <init>(java.lang.Iterable,byte[],com.google.android.datatransport.runtime.backends.AutoValue_BackendRequest$1)>
<com.adjust.sdk.PackageHandler: void flushI()>
<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
<com.google.android.gms.common.stats.StatsEvent: java.lang.String zzd()>
<android.view.ViewGroup: boolean post(java.lang.Runnable)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void showDevOptionsDialog()>
<com.google.android.gms.internal.maps.zzk: java.lang.String getId()>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient asGoogleApiClient()>
<com.microsoft.authenticator.core.common.Strings: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>
<com.facebook.drawee.components.DraweeEventTracker: java.lang.String toString()>
<com.google.android.gms.internal.measurement.zzgz: void zzc(int,int)>
<ch.qos.logback.core.status.StatusUtil: boolean containsMatch(long,int,java.lang.String)>
<com.facebook.react.views.text.ReactTextViewManager: void <init>()>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment: android.widget.TextView access$getDeviceIdText$p(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment)>
<ch.qos.logback.core.net.ssl.SSLParametersConfiguration: java.lang.String[] enabledProtocols(java.lang.String[],java.lang.String[])>
<com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate zzd(com.google.android.gms.dynamic.IObjectWrapper)>
<android.widget.HorizontalScrollView: void onScrollChanged(int,int,int,int)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig get()>
<android.widget.EditText: void setEnabled(boolean)>
<com.google.android.gms.measurement.internal.zzjq: void <init>(com.google.android.gms.measurement.internal.zzfl)>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion$DefaultImpls: void onNgcRegistrationError$default(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback$ICompletion,com.microsoft.onlineid.exception.AuthenticationException,int,java.lang.Object)>
<com.facebook.cache.disk.DiskCacheConfig: long getDefaultSizeLimit()>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: com.azure.authenticator.ui.backup.RestoreFlowViewModel access$getRestoreFlowViewModel$p(com.azure.authenticator.ui.backup.RestoreFlowActivity)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5: void set(android.view.View,java.lang.Float)>
<com.azure.authenticator.storage.Storage: void setIsWpjDeviceShared()>
<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>
<java.io.DataOutputStream: void write(byte[])>
<com.adjust.sdk.ActivityHandler: com.adjust.sdk.AdjustAttribution access$3000(com.adjust.sdk.ActivityHandler)>
<com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()>
<com.facebook.common.memory.PooledByteArrayBufferedInputStream: boolean ensureDataInBuffer()>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator: void <init>(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker,com.facebook.soloader.ExtractFromZipSoSource$1)>
<com.google.android.gms.common.api.CommonStatusCodes: java.lang.String getStatusCodeString(int)>
<ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator: boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long)>
<com.google.android.gms.common.api.internal.zack: void <init>(com.google.android.gms.common.api.Status)>
<com.facebook.react.uimanager.Spacing: float[] newFullSpacingArray()>
<com.azure.authenticator.logging.Hilt_LoggingReceiver: void inject(android.content.Context)>
<java.util.List: java.lang.Object remove(int)>
<com.facebook.fbreact.specs.NativeLinkingSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.common.memory.MemoryTrimmableRegistry: void registerMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable)>
<com.facebook.cache.common.MultiCacheKey: java.util.List getCacheKeys()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAddAccountError$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<ch.qos.logback.core.net.SMTPAppenderBase: ch.qos.logback.core.Layout makeSubjectLayout(java.lang.String)>
<ch.qos.logback.core.spi.AppenderAttachableImpl: int appendLoopOnAppenders(java.lang.Object)>
<com.adjust.sdk.MacAddressUtil: java.lang.String getMacAddress(android.content.Context)>
<com.azure.authenticator.accounts.GenericAccount: int hashCode()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1: void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$5,android.widget.AutoCompleteTextView)>
<com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>
<com.google.android.gms.maps.zzl: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.LocationSource)>
<com.adjust.sdk.EventResponseData: void <init>(com.adjust.sdk.ActivityPackage)>
<com.airbnb.lottie.model.layer.CompositionLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.aad.presentationlogic.AadPhoneSignInUnregistrationViewModel access$10600(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.gms.internal.measurement.zzp: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)>
<android.text.style.ReplacementSpan: void <init>()>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getThis()>
<com.facebook.shimmer.Shimmer$Builder: com.facebook.shimmer.Shimmer$Builder setRepeatDelay(long)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)>
<ch.qos.logback.classic.pattern.ThrowableProxyConverter: java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy)>
<com.facebook.imageutils.WebpUtil: java.lang.String getHeader(byte[])>
<com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)>
<com.facebook.react.modules.network.ProgressiveStringDecoder: java.lang.String decodeNext(byte[],int)>
<java.util.Collections: java.util.List synchronizedList(java.util.List)>
<androidx.room.RoomDatabase: void close()>
<ch.qos.logback.core.joran.action.Action: java.lang.String getLineColStr(ch.qos.logback.core.joran.spi.InterpretationContext)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zzd()>
<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$enableBrowserAccess$enableBrowserAccessDialogBuilder$1$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$enableBrowserAccess$enableBrowserAccessDialogBuilder$1,kotlin.coroutines.Continuation)>
<android.content.res.Resources$Theme: void applyStyle(int,boolean)>
<com.google.android.material.chip.Chip: void setChecked(boolean)>
<com.google.android.gms.measurement.internal.zzhn: java.lang.String zzS()>
<com.facebook.soloader.nativeloader.NativeLoaderDelegate: boolean loadLibrary(java.lang.String,int)>
<com.google.android.gms.common.internal.zzc: void zzf()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup)>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker access$1400(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.content.Context,androidx.work.WorkerParameters)>
<com.facebook.react.views.text.ReactTextUpdate: int getJsEventCounter()>
<android.widget.OverScroller: boolean computeScrollOffset()>
<ch.qos.logback.core.joran.spi.ElementPath: boolean equals(java.lang.Object)>
<com.google.android.gms.maps.internal.zzae: void <init>()>
<com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void <init>(com.facebook.react.bridge.CatalystInstanceImpl)>
<org.json.JSONArray: int optInt(int,int)>
<com.google.android.datatransport.runtime.AutoValue_TransportContext: void <init>(java.lang.String,byte[],com.google.android.datatransport.Priority)>
<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.azure.authenticator.databinding.ImportPasswordBannerBinding: com.google.android.material.card.MaterialCardView getRoot()>
<com.google.android.datatransport.runtime.SafeLoggingExecutor: void <init>(java.util.concurrent.Executor)>
<com.google.android.gms.location.zzm: void <init>()>
<android.widget.ImageButton: int getMeasuredWidth()>
<com.adjust.sdk.Util: boolean isValidParameter(java.lang.String,java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.'unknown'.abstraction.ScanUnknownQrCodeManager scanUnknownQrCodeManager()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken)>
<com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment_MembersInjector: void injectDialogFragmentManager(com.microsoft.authenticator.registration.aad.viewlogic.AadAddAccountSetupFragment,com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager)>
<com.google.android.material.animation.ArgbEvaluatorCompat: void <init>()>
<com.google.android.material.chip.ChipGroup: void check(int)>
<android.os.ParcelFileDescriptor: void close()>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<com.facebook.imagepipeline.image.CloseableStaticBitmap: android.graphics.Bitmap getUnderlyingBitmap()>
<ch.qos.logback.core.util.StatusPrinter: void print(ch.qos.logback.core.Context,long)>
<com.google.android.gms.common.internal.GmsClient: java.util.Set zaa(java.util.Set)>
<com.google.android.gms.cloudmessaging.IMessengerCompat: void send(android.os.Message)>
<com.facebook.react.animated.NativeAnimatedModule$8: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<com.facebook.imagepipeline.core.ProducerSequenceFactory: com.facebook.imagepipeline.producers.Producer getEncodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest)>
<com.facebook.imagepipeline.common.ImageDecodeOptions: com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder newBuilder()>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onActivityResult(int,int,android.content.Intent)>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.Node E()>
<com.google.android.material.tabs.TabLayout$TabView: void reset()>
<android.os.Parcel: java.lang.String[] createStringArray()>
<com.facebook.react.views.slider.ReactSliderEvent: java.lang.String getEventName()>
<com.azure.authenticator.ui.LaunchActivity: void onCreate(android.os.Bundle)>
<com.facebook.common.references.CloseableReference: void close()>
<com.google.android.gms.common.logging.Logger: void <init>(java.lang.String,java.lang.String[])>
<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<ch.qos.logback.core.net.ssl.SSLConfigurableServerSocket: void <init>(javax.net.ssl.SSLServerSocket)>
<android.widget.ImageButton: android.os.Parcelable onSaveInstanceState()>
<com.google.crypto.tink.KeysetManager: void <init>(com.google.crypto.tink.proto.Keyset$Builder)>
<com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate3D(double[],double,double,double)>
<com.facebook.imagepipeline.memory.MemoryChunkPool: int getMinBufferSize()>
<java.lang.Boolean: boolean booleanValue()>
<com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)>
<com.google.android.material.navigation.NavigationBarMenuView: int getSelectedItemId()>
<com.google.android.gms.location.zzt: void <init>()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.lang.String getServerClientId()>
<com.facebook.react.animated.NativeAnimatedModule$5: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<android.app.AlertDialog: boolean isShowing()>
<com.google.android.material.navigation.NavigationBarMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)>
<bolts.Task: void <init>()>
<com.google.android.gms.internal.auth.zzx: void zza(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.accounttransfer.zzt)>
<com.google.android.material.color.MaterialColors: int getColor(android.view.View,int,int)>
<android.view.ViewGroup: void setForeground(android.graphics.drawable.Drawable)>
<ch.qos.logback.core.status.InfoStatus: void <init>(java.lang.String,java.lang.Object)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.response.FastJsonResponse$FieldConverter zaj(com.google.android.gms.common.server.response.FastJsonResponse$Field)>
<com.google.android.material.internal.CollapsingTextHelper: boolean isClose(float,float)>
<com.google.android.material.canvas.CanvasCompat: int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)>
<com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper: void <init>(com.facebook.react.modules.dialog.DialogModule,androidx.fragment.app.FragmentManager)>
<com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIntArray(android.os.Parcel,int,int[],boolean)>
<com.facebook.common.references.CloseableReference: java.lang.Class access$000()>
<com.azure.authenticator.storage.database.AccountDao: java.util.List getAllMsaAccounts()>
<com.facebook.react.views.textinput.ReactEditText$1: void <init>(com.facebook.react.views.textinput.ReactEditText)>
<android.widget.FrameLayout: void setWillNotDraw(boolean)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zzg(java.lang.Iterable)>
<com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.facebook.drawee.controller.ForwardingControllerListener: void onException(java.lang.String,java.lang.Throwable)>
<androidx.work.Configuration$Builder: void <init>()>
<com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: void <init>()>
<com.airbnb.lottie.model.content.PolystarShape: com.airbnb.lottie.model.content.PolystarShape$Type getType()>
<com.facebook.drawee.controller.AbstractDraweeController: void setContentDescription(java.lang.String)>
<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.lang.Error: void <init>(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.material.navigation.NavigationBarView: void setItemRippleColor(android.content.res.ColorStateList)>
<com.facebook.imagepipeline.decoder.ImageDecoder: com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions)>
<com.google.android.gms.location.zzbq: com.google.android.gms.location.zzbq zza(java.util.List)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void processRestoreBackupArguments(android.os.Bundle)>
<com.google.android.gms.common.api.internal.zabl: boolean zap()>
<com.azure.authenticator.ui.fragment.main.Hilt_SettingsFragment: java.lang.Object generatedComponent()>
<com.google.android.gms.internal.measurement.zzfz: void zza(java.lang.Throwable,java.lang.Throwable)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel brooklynSharedViewModel()>
<com.google.android.gms.common.api.Api$ApiOptions$HasGoogleSignInAccountOptions: com.google.android.gms.auth.api.signin.GoogleSignInAccount getGoogleSignInAccount()>
<com.google.android.material.transformation.FabTransformationBehavior$3: void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable)>
<com.google.android.material.datepicker.MaterialCalendarGridView: com.google.android.material.datepicker.MonthAdapter getAdapter()>
<com.google.android.gms.internal.measurement.zzja: boolean zzM(java.lang.Object,int,int)>
<ch.qos.logback.core.spi.AppenderAttachableImpl: ch.qos.logback.core.Appender getAppender(java.lang.String)>
<com.google.android.material.shape.MaterialShapeDrawable: int getShadowOffsetY()>
<com.google.android.material.textfield.TextInputLayout$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.evernote.android.job.JobStorage: void updateRequestInCache(com.evernote.android.job.JobRequest)>
<com.google.android.gms.common.BlockingServiceConnection: android.os.IBinder getService()>
<com.google.android.material.navigation.NavigationBarItemView: void setViewLayoutParams(android.view.View,int,int)>
<com.google.android.gms.measurement.internal.zzfl: com.google.android.gms.measurement.internal.zzib zzx()>
<com.azure.authenticator.databinding.AccountChooserActivityBinding: com.azure.authenticator.databinding.AccountChooserActivityBinding bind(android.view.View)>
<com.google.android.gms.auth.api.signin.internal.SignInConfiguration: void <init>(java.lang.String,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.gms.measurement.internal.zzkf: java.lang.String zzi(com.google.android.gms.internal.measurement.zzbw)>
<com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map,java.util.Map,java.util.Map,java.util.Map)>
<ch.qos.logback.classic.util.LoggerNameUtil: int getSeparatorIndexOf(java.lang.String,int)>
<com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeTypedArray(android.os.Parcel,int,android.os.Parcelable[],int,boolean)>
<com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.WritableNativeMap)>
<com.google.android.material.shape.MaterialShapeDrawable: void setFillColor(android.content.res.ColorStateList)>
<com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>
<com.azure.authenticator.accounts.AadAccount: void setGroupKey(java.lang.String)>
<com.google.android.gms.common.server.response.SafeParcelResponse: void <init>(com.google.android.gms.common.internal.safeparcel.SafeParcelable,com.google.android.gms.common.server.response.zan,java.lang.String)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void hideProgress()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$startBackup$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,java.lang.String,com.azure.authenticator.ui.backup.BackupFlowActivity$Flow,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.auth-api.zzf: void zzc(android.os.Parcel,android.os.IInterface)>
<com.airbnb.lottie.LottieDrawable$LazyCompositionTask: void run(com.airbnb.lottie.LottieComposition)>
<com.facebook.react.bridge.CxxModuleWrapperBase: void <init>(com.facebook.jni.HybridData)>
<com.google.android.gms.internal.measurement.zzdx: com.google.android.gms.internal.measurement.zzdx zza()>
<com.azure.authenticator.ui.backup.Hilt_RestoreFlowActivity: dagger.hilt.android.internal.managers.ActivityComponentManager componentManager()>
<com.google.android.gms.maps.internal.zze: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zze()>
<com.azure.authenticator.databinding.AddressListRowLayoutBinding: void <init>(android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,androidx.cardview.widget.CardView)>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<ch.qos.logback.core.net.AutoFlushingObjectWriter: void <init>(java.io.ObjectOutputStream,int)>
<com.facebook.react.common.ClearableSynchronizedPool: boolean release(java.lang.Object)>
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String get()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<com.airbnb.lottie.animation.content.GradientFillContent: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.GradientFill)>
<com.google.android.datatransport.cct.internal.AutoValue_LogEvent$Builder: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaNotificationActionWorker mfaNotificationActionWorker(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.shape.MaterialShapeDrawable: void setAlpha(int)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: java.lang.Object denyAadNgcSessionSuspend(java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.base.zaa: void zac(int,android.os.Parcel)>
<com.microsoft.brooklyn.ui.importCred.ImportFromOtherAppsFragment_MembersInjector: void injectBrooklynStorage(com.microsoft.brooklyn.ui.importCred.ImportFromOtherAppsFragment,com.microsoft.brooklyn.module.common.BrooklynStorage)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$DeleteBackupTicketCallback$onGetTicketCancel$1$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation)>
<com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$200()>
<com.google.android.gms.measurement.internal.zzhn: java.lang.Integer zzl()>
<com.google.android.gms.common.internal.zzc: void <init>(com.google.android.gms.common.internal.BaseGmsClient,java.lang.Object)>
<com.azure.authenticator.ui.fragment.main.SettingsViewModel: androidx.lifecycle.MutableLiveData access$get_appLockEnforcedAccountNames$p(com.azure.authenticator.ui.fragment.main.SettingsViewModel)>
<com.evernote.android.job.JobManager: void schedule(com.evernote.android.job.JobRequest)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$200(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.gms.measurement.internal.zzhn: void zzs(java.lang.String,java.lang.String,android.os.Bundle)>
<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.PaymentsSDKConnector paymentsSDKConnector()>
<com.facebook.react.views.drawer.events.DrawerClosedEvent: void <init>(int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconTintResource(int)>
<com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()>
<com.facebook.imagepipeline.request.ImageRequest: boolean isMemoryCacheEnabled()>
<com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding: com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding bind(android.view.View)>
<com.facebook.common.references.CloseableReference: int getValueHash()>
<ch.qos.logback.core.joran.event.BodyEvent: java.lang.String getText()>
<android.text.Layout: int getWidth()>
<com.facebook.imagepipeline.producers.DelegatingConsumer: com.facebook.imagepipeline.producers.Consumer getConsumer()>
<com.facebook.react.views.scroll.ReactScrollView: void updateClippingRect()>
<com.google.common.collect.MapMakerInternalMap$WeakValueReference: void clear()>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void rehash()>
<com.google.android.gms.common.config.zzd: void <init>(java.lang.String,java.lang.Float)>
<com.fasterxml.jackson.core.json.DupDetector: void <init>(java.lang.Object)>
<com.google.android.gms.internal.measurement.zznb: boolean zzb()>
<com.google.android.gms.measurement.internal.zzeq: com.google.android.gms.measurement.internal.zzkd zzc(com.google.android.gms.measurement.internal.zzeq)>
<com.google.android.gms.common.util.Clock: long elapsedRealtime()>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setFailedResult(android.os.RemoteException)>
<com.airbnb.lottie.animation.LPaint: void <init>(int)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setBackgroundColor(android.view.View,int)>
<com.google.android.material.shape.MaterialShapeDrawable: void prepareCanvasForShadow(android.graphics.Canvas)>
<ch.qos.logback.classic.net.SimpleSocketServer: void doMain(java.lang.Class,java.lang.String[])>
<com.evernote.android.job.JobRequest: java.lang.String getTag()>
<com.facebook.imagepipeline.core.ImagePipelineConfig: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory()>
<com.facebook.hermes.reactexecutor.HermesExecutor: void <init>(com.facebook.hermes.reactexecutor.RuntimeConfig)>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieTask fromJsonInputStream(java.io.InputStream,java.lang.String)>
<com.google.android.gms.gcm.OneoffTask$Builder: com.google.android.gms.gcm.OneoffTask$Builder setExecutionWindow(long,long)>
<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistered$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.parser.AnimatableTransformParser: boolean isPositionIdentity(com.airbnb.lottie.model.animatable.AnimatableValue)>
<com.facebook.yoga.YogaNode: void setWidthAuto()>
<com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>
<com.google.android.gms.internal.maps.zzw: void setPoints(java.util.List)>
<ch.qos.logback.core.FileAppender: void stop()>
<com.azure.authenticator.accounts.GenericAccount: boolean isBrokerOnly()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler exportPasswordFragmentHandler()>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setTrackTintColor(android.view.View,java.lang.Integer)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$4: void <init>()>
<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object getCallerContext()>
<com.google.android.gms.measurement.internal.zzeh: void <init>(java.lang.String)>
<com.facebook.yoga.YogaConfigJNIBase: void <init>()>
<androidx.collection.SimpleArrayMap: void <init>()>
<com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType access$100(com.facebook.react.views.image.ReactImageView)>
<com.facebook.react.common.MapBuilder: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)>
<com.google.android.gms.measurement.internal.zzho: void zzf(com.google.android.gms.measurement.internal.zzgm)>
<com.google.android.gms.internal.measurement.zzce: void <init>(com.google.android.gms.internal.measurement.zzbs)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel access$10700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<android.widget.TextView: void setIncludeFontPadding(boolean)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.WebpTranscodeProducer newWebpTranscodeProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.material.appbar.AppBarLayout: void invalidateScrollRanges()>
<ch.qos.logback.core.net.SSLSocketAppenderBase: ch.qos.logback.core.net.ssl.SSLConfiguration getSsl()>
<com.google.android.gms.internal.measurement.zzp: void setDefaultEventParameters(android.os.Bundle)>
<com.google.common.collect.Iterators$9: void <init>(java.lang.Object)>
<kotlinx.coroutines.CoroutineScopeKt: boolean isActive(kotlinx.coroutines.CoroutineScope)>
<java.io.File: java.lang.String getCanonicalPath()>
<com.google.android.gms.common.internal.zat: void <init>(int,android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount)>
<com.microsoft.authenticator.commonuilibrary.applock.AppLockManager: void enableAppLock(java.lang.String)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_Factory: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker newInstance(android.content.Context,androidx.work.WorkerParameters,com.microsoft.onlineid.sdk.extension.SessionManager,com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase,com.microsoft.authenticator.commonuilibrary.util.NotificationHelper)>
<com.google.android.gms.measurement.internal.zzib: com.google.android.gms.measurement.internal.zzhu zzz(com.google.android.gms.measurement.internal.zzib,com.google.android.gms.measurement.internal.zzhu)>
<com.facebook.common.internal.ByteStreams: int read(java.io.InputStream,byte[],int,int)>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<com.azure.authenticator.ui.dialog.StoreRatingTask: void access$showRateAppDialog(com.azure.authenticator.ui.dialog.StoreRatingTask,androidx.fragment.app.FragmentActivity,com.azure.authenticator.ui.dialog.StoreRatingTask$StoreRatingResult)>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void <init>()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.facebook.shimmer.Shimmer$ColorHighlightBuilder: void <init>()>
<android.widget.TextView: void setHighlightColor(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getLocale()>
<com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)>
<com.google.android.gms.common.api.GoogleApiClient$Builder: com.google.android.gms.common.api.GoogleApiClient$Builder addApi(com.google.android.gms.common.api.Api)>
<com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.proto.KeyData$Builder newBuilder()>
<com.google.android.gms.internal.measurement.zzjk: java.lang.Object zzH(int,int,java.lang.Object,com.google.android.gms.internal.measurement.zzjw)>
<com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicHeight()>
<com.google.android.material.theme.overlay.MaterialThemeOverlay: android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int)>
<java.util.concurrent.CountDownLatch: long getCount()>
<com.google.android.gms.internal.location.zzar: void <init>(com.google.android.gms.common.api.internal.ListenerHolder)>
<ch.qos.logback.core.net.AbstractSocketAppender: void connectSocketAndDispatchEvents()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzam(long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.msa.abstraction.QrCodeResultHandlerMsaAccount qrCodeResultHandlerMsaAccount()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager_Factory: com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager newInstance(android.content.Context,java.lang.String,int)>
<com.azure.authenticator.databinding.GeneratorHistoryLayoutBinding: com.azure.authenticator.databinding.GeneratorHistoryLayoutBinding bind(android.view.View)>
<com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)>
<com.google.android.gms.internal.measurement.zzji: void zzi(java.lang.Object)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig: boolean isProgressiveRenderingEnabled()>
<com.google.android.material.shape.MaterialShapeDrawable: void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInSetupUseCase access$6700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.adjust.sdk.ActivityPackage: void setSuffix(java.lang.String)>
<com.fasterxml.jackson.core.base.ParserBase: com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int)>
<android.util.JsonWriter: android.util.JsonWriter nullValue()>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.material.circularreveal.CircularRevealWidget: void buildCircularRevealCache()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>
<com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$startBackup$1: java.lang.Object invokeSuspend(java.lang.Object)>
<android.app.Application$ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: void onCreate(android.os.Bundle)>
<com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)>
<com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType[] values()>
<com.google.android.gms.internal.measurement.zzha: void zzq(int,long)>
<android.widget.FrameLayout: boolean isOpaque()>
<com.facebook.react.modules.i18nmanager.I18nUtil: com.facebook.react.modules.i18nmanager.I18nUtil getInstance()>
<com.facebook.imagepipeline.producers.BaseProducerContext: java.lang.String getId()>
<com.google.android.gms.measurement.internal.zzai: void zzh(com.google.android.gms.measurement.internal.zzao)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)>
<com.facebook.react.views.viewpager.ReactViewPagerManager: int getChildCount(com.facebook.react.views.viewpager.ReactViewPager)>
<com.facebook.react.uimanager.events.Event: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void <init>(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)>
<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher negate()>
<com.facebook.common.logging.LoggingDelegate: void wtf(java.lang.String,java.lang.String)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllAadNgcAccounts()>
<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>
<com.facebook.imagepipeline.producers.NetworkFetcher: void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int)>
<com.google.android.gms.measurement.internal.zzas: void <init>(com.google.android.gms.measurement.internal.zzas,long)>
<ch.qos.logback.core.rolling.FixedWindowRollingPolicy: int getMaxWindowSize()>
<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>
<com.azure.authenticator.databinding.AccountActionLayoutBinding: void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,android.widget.TextView)>
<com.google.android.gms.common.internal.zzs: android.content.Intent zzb(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onSaveInstanceState(android.os.Bundle)>
<android.widget.DatePicker: void removeAllViews()>
<com.google.android.gms.measurement.internal.zzkk: long zzO(byte[])>
<com.fasterxml.jackson.core.json.DupDetector: boolean isDup(java.lang.String)>
<com.fasterxml.jackson.core.base.ParserBase: void reportUnexpectedNumberChar(int,java.lang.String)>
<com.google.android.gms.measurement.internal.zzes: void zzb(boolean)>
<com.facebook.react.views.scroll.ReactScrollViewManager: void <init>()>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void showMfaFingerprintOptOutDialog()>
<ch.qos.logback.core.net.ObjectWriterFactory: void <init>()>
<com.google.android.gms.internal.measurement.zzff: android.content.Context zza()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,android.app.Service,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.adjust.sdk.IAttributionHandler: void init(com.adjust.sdk.IActivityHandler,boolean)>
<ch.qos.logback.core.rolling.helper.DateTokenConverter: java.util.TimeZone getTimeZone()>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: void onCreate(android.os.Bundle)>
<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
<com.google.android.material.navigation.NavigationBarMenuView: void setItemIconSize(int)>
<com.google.android.gms.cloudmessaging.zzf: void zzc()>
<com.azure.authenticator.databinding.SettingsPreferenceButtonRedBinding: void <init>(android.widget.Button,android.widget.Button)>
<java.util.concurrent.BlockingQueue: java.util.Iterator iterator()>
<com.google.android.gms.internal.measurement.zzdj: void zzbh(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>
<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>
<com.google.android.gms.common.GoogleApiAvailability: void zah(android.content.Context)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder: com.facebook.imagepipeline.request.ImageRequest$RequestLevel convertCacheLevelToRequestLevel(com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel)>
<com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolParams access$400(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.gms.common.api.internal.BackgroundDetector: boolean readCurrentStateIfPossible(boolean)>
<ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter: void disableSubsequentReconfiguration()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.db.dao.NotificationDao notificationDao()>
<com.google.android.gms.measurement.internal.zzkd: void zzad(com.google.android.gms.internal.measurement.zzda,java.lang.String)>
<ch.qos.logback.core.ConsoleAppender: void start()>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>
<java.util.ArrayList: void ensureCapacity(int)>
<com.google.common.collect.ImmutableMap$Builder: void <init>(int)>
<ch.qos.logback.core.net.SocketConnectorBase: java.net.Socket awaitConnection(long)>
<okhttp3.Response: okhttp3.Response$Builder newBuilder()>
<ch.qos.logback.core.UnsynchronizedAppenderBase: void setName(java.lang.String)>
<com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void hideAutofillDisableBannerIfRequired()>
<com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: void execute(android.text.SpannableStringBuilder,int)>
<com.google.android.gms.common.internal.zzg: void <init>(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle)>
<com.google.android.gms.maps.internal.IStreetViewPanoramaDelegate: void setOnStreetViewPanoramaCameraChangeListener(com.google.android.gms.maps.internal.zzbh)>
<com.google.android.gms.common.Feature: void <init>(java.lang.String,int,long)>
<android.widget.ImageButton: void setPressed(boolean)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(int)>
<com.google.android.gms.auth.api.identity.SignInPassword: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzlb: void <init>()>
<android.view.Surface: void release()>
<com.fasterxml.jackson.core.io.NumberOutput: int full3(int,byte[],int)>
<com.google.android.gms.internal.location.zzaz: void zzD(com.google.android.gms.internal.location.zzba,android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.google.android.gms.maps.internal.zzbk: void <init>()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: javax.inject.Provider registerThirdPartyAccountViewModelProvider()>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)>
<com.azure.authenticator.databinding.FrxPrivacyConsentBinding: com.azure.authenticator.databinding.FrxPrivacyConsentBinding bind(android.view.View)>
<com.azure.authenticator.databinding.FragmentAutofillControlSettingsBinding: com.azure.authenticator.databinding.FragmentAutofillControlSettingsBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.internal.measurement.zzko: void <init>(java.lang.String,int,com.google.android.gms.internal.measurement.zzkp,int)>
<com.google.android.gms.common.GoogleApiAvailabilityLight: int getClientVersion(android.content.Context)>
<com.google.android.gms.cloudmessaging.zzq: void zza(java.lang.Object)>
<com.facebook.soloader.MinElf: long get64(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)>
<com.google.android.material.internal.CollapsingTextHelper: void getTextPaintCollapsed(android.text.TextPaint)>
<ch.qos.logback.core.net.server.ServerSocketAppenderBase: ch.qos.logback.core.spi.PreSerializationTransformer getPST()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver_MembersInjector: void injectMsaNotificationActionManager(com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver,com.azure.authenticator.notifications.msa.MsaNotificationActionManager)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void injectEnterpriseSettingsHandler(com.azure.authenticator.ui.fragment.main.SettingsFragment,com.microsoft.brooklyn.ui.settings.EnterpriseSettingsHandler)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void <init>()>
<com.microsoft.brooklyn.module.autofill.request.FillRequestProcessor: void <init>(com.microsoft.brooklyn.module.autofill.request.AutofillReqParsingUseCase,com.microsoft.brooklyn.module.autofill.response.abstraction.FillResponseManager)>
<com.azure.authenticator.ui.fragment.main.Hilt_SendFeedbackFragment: void initializeComponentContext()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$$special$$inlined$viewModels$4: void <init>(kotlin.jvm.functions.Function0)>
<ch.qos.logback.core.net.server.ServerRunner: void accept(ch.qos.logback.core.net.server.ClientVisitor)>
<ch.qos.logback.core.Context: void register(ch.qos.logback.core.spi.LifeCycle)>
<com.google.android.gms.common.api.internal.zaaz: void zaj(com.google.android.gms.common.api.internal.zaaz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.internal.StatusPendingResult,boolean)>
<com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.navigation.NavigationBarItemView getNewItem()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzE(int)>
<android.widget.EditText: int getGravity()>
<ch.qos.logback.classic.Logger: boolean isEnabledFor(org.slf4j.Marker,ch.qos.logback.classic.Level)>
<ch.qos.logback.classic.net.SimpleSocketServer: void signalAlmostReadiness()>
<ch.qos.logback.core.pattern.PatternLayoutEncoderBase: void <init>()>
<com.facebook.imagepipeline.memory.BasePool: java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket)>
<java.lang.Short: short shortValue()>
<com.adjust.sdk.AdjustConfig: boolean checkEnvironment(java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule_ConfigFactory: void <init>(javax.inject.Provider)>
<com.adjust.sdk.Logger: void <init>()>
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: void encode(com.google.android.datatransport.cct.internal.ClientInfo,com.google.firebase.encoders.ObjectEncoderContext)>
<android.view.KeyEvent: int getKeyCode()>
<com.microsoft.authenticator.backup.abstraction.AutoBackupWorker: void <init>(android.content.Context,androidx.work.WorkerParameters,com.azure.authenticator.storage.Storage,com.azure.authenticator.authentication.msa.MsaAccountManager,com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>
<com.facebook.react.ReactInstanceManager$ReactContextInitParams: com.facebook.react.bridge.JSBundleLoader getJsBundleLoader()>
<javax.net.ssl.SSLSocket: void setOOBInline(boolean)>
<com.google.android.material.datepicker.Month: com.google.android.material.datepicker.Month create(int,int)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String getRegexForAmPms()>
<com.facebook.imagepipeline.common.BytesRange: boolean contains(com.facebook.imagepipeline.common.BytesRange)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onFailure$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1: void <init>(com.facebook.imagepipeline.cache.ImageCacheStatsTracker)>
<com.facebook.fbreact.specs.NativeToastAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<com.airbnb.lottie.LottieAnimationView$4: com.airbnb.lottie.LottieResult call()>
<ch.qos.logback.core.spi.ContextAwareImpl: void setContext(ch.qos.logback.core.Context)>
<ch.qos.logback.classic.boolex.OnErrorEvaluator: boolean evaluate(ch.qos.logback.classic.spi.ILoggingEvent)>
<java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>
<com.facebook.react.animated.DiffClampAnimatedNode: double getInputNodeValue()>
<ch.qos.logback.core.util.Duration: ch.qos.logback.core.util.Duration valueOf(java.lang.String)>
<com.microsoft.authenticator.mfasdk.authentication.ui.MfaAuthDialogActivity$Companion: boolean isAuthActivityActive()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onScaleChanged()>
<com.google.android.gms.dynamite.DynamiteModule: int zza(android.content.Context,java.lang.String,boolean)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$showMsaErrorDialog$2: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<com.google.android.gms.internal.measurement.zzkr: boolean zza()>
<com.google.android.gms.internal.measurement.zzlh: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity injectAddMsaAccountActivity2(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity)>
<kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>
<com.google.android.gms.internal.location.zzbc: com.google.android.gms.internal.location.zzbc zzb(com.google.android.gms.internal.location.zzba,android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment_MembersInjector: void injectExportPasswordFragmentHandler(com.azure.authenticator.ui.fragment.main.SettingsFragment,com.microsoft.brooklyn.ui.exportCred.ExportPasswordFragmentHandler)>
<android.graphics.Matrix: void setScale(float,float,float,float)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<com.google.android.material.chip.ChipDrawable: boolean isStateful(android.content.res.ColorStateList)>
<java.net.HttpURLConnection: int getResponseCode()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)>
<sun.misc.Unsafe: boolean getBoolean(java.lang.Object,long)>
<com.evernote.android.job.util.JobCat: void w(java.lang.String)>
<com.facebook.common.media.MediaUtils: java.lang.String extractExtension(java.lang.String)>
<com.facebook.react.modules.core.JavaTimerManager$Timer: int access$500(com.facebook.react.modules.core.JavaTimerManager$Timer)>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
<com.google.android.gms.internal.measurement.zzcz: boolean zzc()>
<com.facebook.react.bridge.JavaModuleWrapper: void <init>(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)>
<com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedStateForView(int,boolean)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: java.util.List updatePriority()>
<com.microsoft.authenticator.backup.entities.CloudBackup: int hashCode()>
<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int,int)>
<ch.qos.logback.core.rolling.helper.DateParser: java.text.SimpleDateFormat getDateFormatter(ch.qos.logback.core.rolling.helper.FileNamePattern)>
<android.text.Spannable: int getSpanEnd(java.lang.Object)>
<com.google.android.gms.common.internal.zzc: void zzd(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzk()>
<com.google.android.material.animation.ChildrenAlphaProperty: void <init>(java.lang.String)>
<com.airbnb.lottie.network.LottieNetworkFetcher: com.airbnb.lottie.network.LottieFetchResult fetchSync(java.lang.String)>
<com.airbnb.lottie.animation.content.GradientStrokeContent: int getGradientHash()>
<com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>
<com.google.common.base.Joiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator)>
<android.widget.HorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.FrameLayout: void requestLayout()>
<android.graphics.Canvas: int getHeight()>
<com.airbnb.lottie.network.LottieFetchResult: java.lang.String contentType()>
<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.google.android.gms.maps.model.CircleOptions: int getStrokeColor()>
<com.microsoft.authenticator.core.common.Strings: java.lang.String getTrimmedStringForLogging(java.lang.String)>
<ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String getName()>
<com.google.android.gms.measurement.internal.zzjp: void zza()>
<java.util.Map$Entry: boolean equals(java.lang.Object)>
<com.azure.authenticator.ui.dialog.AppDialogFragments$showLockScreenRequiredDialog$lockScreenRequiredDialogBuilder$2: void <init>(android.content.DialogInterface$OnClickListener)>
<com.google.android.gms.auth.api.signin.internal.zzs: void <init>()>
<com.google.android.gms.common.zzy: com.google.android.gms.common.zzy zza(java.lang.String)>
<com.google.android.material.timepicker.ClockHandView: android.util.Pair getValuesForAnimation(float)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>
<com.google.android.gms.measurement.internal.zzib: void zzj(android.os.Bundle,long)>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
<android.view.View: android.view.ViewOverlay getOverlay()>
<com.airbnb.lottie.model.animatable.AnimatableIntegerValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<com.google.android.gms.common.api.internal.RegistrationMethods$Builder: void <init>(com.google.android.gms.common.api.internal.zacd)>
<com.google.android.gms.common.api.internal.zaar: java.util.concurrent.locks.Lock zak(com.google.android.gms.common.api.internal.zaar)>
<com.facebook.imagepipeline.core.ImagePipeline$4: void <init>(com.facebook.imagepipeline.core.ImagePipeline)>
<com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzki zzk(java.lang.String,java.lang.String)>
<com.google.android.gms.common.zzw: com.google.android.gms.common.zzw zzd(java.lang.String)>
<com.google.android.material.textfield.IndicatorViewController: void adjustIndicatorPadding()>
<androidx.interpolator.view.animation.LinearOutSlowInInterpolator: void <init>()>
<com.facebook.drawee.drawable.DrawableUtils: int getOpacityFromColor(int)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: void handleRestoreError(com.microsoft.authenticator.backup.entities.BackupRestoreError,java.lang.String,java.lang.Exception,java.lang.String)>
<com.google.android.material.textfield.TextInputLayout$2: void <init>(com.google.android.material.textfield.TextInputLayout)>
<com.azure.authenticator.databinding.AddNewMfaAccountBinding: com.azure.authenticator.databinding.AddNewMfaAccountBinding bind(android.view.View)>
<com.evernote.android.job.JobRequest: boolean requiresCharging()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$launchCheckWorkplaceJoinStatus$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel,kotlin.coroutines.Continuation)>
<ch.qos.logback.classic.util.CopyOnInheritThreadLocal: java.util.HashMap childValue(java.util.HashMap)>
<android.os.PowerManager$WakeLock: void release()>
<java.io.File: boolean isAbsolute()>
<com.facebook.react.views.image.ReactImageView: void <init>(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)>
<com.airbnb.lottie.model.layer.BaseLayer: void addValueCallback(java.lang.Object,com.airbnb.lottie.value.LottieValueCallback)>
<com.azure.authenticator.ui.backup.RestoreFlowActivity: com.azure.authenticator.authentication.msa.MsaAccountManager getMsaAccountManager$app_productionRelease()>
<javax.net.ssl.SSLSocket: java.io.OutputStream getOutputStream()>
<okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>
<com.google.crypto.tink.KeysetHandle: com.google.crypto.tink.proto.EncryptedKeyset encrypt(com.google.crypto.tink.proto.Keyset,com.google.crypto.tink.Aead)>
<ch.qos.logback.core.util.CharSequenceToRegexMapper: java.lang.String getRegexForLongDaysOfTheWeek()>
<android.text.Layout: float getSecondaryHorizontal(int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig build()>
<com.google.android.gms.internal.maps.zzj: void <init>(android.os.IBinder)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>
<com.evernote.android.job.util.JobCat: void e(java.lang.Throwable)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>
<java.util.Collection: java.util.Iterator iterator()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.businesslogic.ReceiptUseCase receiptUseCase()>
<com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenInfoFragment_MembersInjector: void injectActionsAdapter(com.microsoft.authenticator.accountFullscreen.viewLogic.AccountFullscreenInfoFragment,com.microsoft.authenticator.accountFullscreen.abstraction.AccountActionsAdapter)>
<com.google.android.gms.common.zzy: com.google.android.gms.common.zzy zzd(java.util.List)>
<ch.qos.logback.core.FileAppender: boolean isPrudent()>
<java.lang.String: int indexOf(java.lang.String,int)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void handlePostTouchScrolling(int,int)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>
<com.google.android.gms.common.data.zab: void <init>(java.lang.String[],java.lang.String)>
<com.google.android.gms.safetynet.SafetyNetApi$RecaptchaTokenResult: java.lang.String getTokenResult()>
<android.app.FragmentTransaction: int commitAllowingStateLoss()>
<android.widget.RadioButton: void onAttachedToWindow()>
<java.math.BigDecimal: void <init>(long)>
<com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(com.fasterxml.jackson.core.JsonGenerator)>
<com.google.android.gms.internal.maps.zzt: void setSnippet(java.lang.String)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void _writeNull()>
<android.widget.TextView: void setTranslationY(float)>
<com.facebook.drawee.view.DraweeView: void onAttach()>
<com.google.android.material.card.MaterialCardViewHelper: void setRippleColor(android.content.res.ColorStateList)>
<com.microsoft.authenticator.core.telemetry.TelemetryManager: void trackEvent(com.microsoft.authenticator.core.telemetry.entities.ITelemetryEvent,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)>
<com.google.android.gms.internal.common.zzr: com.google.android.gms.internal.common.zzr zzc(java.util.Iterator)>
<com.facebook.react.views.scroll.OnScrollDispatchHelper: float getYFlingVelocity()>
<com.google.android.gms.maps.internal.zzj: void <init>(android.os.IBinder)>
<java.nio.ByteBuffer: int remaining()>
<java.util.Locale: java.util.Locale getDefault()>
<com.facebook.react.bridge.JavaMethodWrapper$10: void <init>()>
<com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer,android.util.Pair)>
<com.google.android.material.chip.ChipDrawable: void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate)>
<com.evernote.android.job.JobCreator: com.evernote.android.job.Job create(java.lang.String)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>
<ch.qos.logback.core.joran.event.SaxEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator)>
<com.google.android.gms.internal.measurement.zzdj: long zzL()>
<com.azure.authenticator.ui.fragment.main.SettingsFragmentDirections$ActionSettingsFragmentToCredentialListFragment: java.lang.String getImportedPasswordCount()>
<com.azure.authenticator.databinding.SettingsPreferenceButtonRedBinding: android.widget.Button getRoot()>
<com.google.android.gms.measurement.internal.zzic: void <init>(com.google.android.gms.measurement.internal.zzjb,java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp,boolean,com.google.android.gms.internal.measurement.zzs)>
<com.facebook.react.animated.NativeAnimatedModule$3: void <init>(com.facebook.react.animated.NativeAnimatedModule,java.util.ArrayList)>
<com.airbnb.lottie.parser.ShapeFillParser: com.airbnb.lottie.model.content.ShapeFill parse(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.google.android.datatransport.cct.internal.LogRequest$Builder: com.google.android.datatransport.cct.internal.LogRequest$Builder setClientInfo(com.google.android.datatransport.cct.internal.ClientInfo)>
<com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()>
<android.widget.TextView: void setScaleX(float)>
<com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)>
<com.microsoft.authenticator.authentication.aad.businessLogic.DenyAadNgcSessionUseCase: java.lang.Object denyNgcSession(com.microsoft.ngc.aad.NgcSession,com.azure.authenticator.accounts.AadAccount,java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$Builder: void <init>(com.google.android.datatransport.runtime.DaggerTransportRuntimeComponent$1)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getCid()>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.Hilt_SharedDeviceModeFragment: void onAttach(android.app.Activity)>
<android.widget.Button: void setId(int)>
<com.evernote.android.job.JobRequest: void scheduleAsync(com.evernote.android.job.JobRequest$JobScheduledCallback)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void runUpdates(long)>
<com.adjust.sdk.PackageFactory: com.adjust.sdk.ActivityPackage buildInstallReferrerSdkClickPackage(java.lang.String,long,long,com.adjust.sdk.ActivityState,com.adjust.sdk.AdjustConfig,com.adjust.sdk.DeviceInfo,com.adjust.sdk.SessionParameters)>
<com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.LogEvent$Builder jsonBuilder(java.lang.String)>
<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>
<com.google.android.gms.safetynet.zzk: void <init>()>
<com.facebook.react.views.view.ViewGroupClickEvent: void <init>(int)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: int resolveAdjustedSize(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.registration.businessLogic.MfaDeleteRegistrationUseCase mfaDeleteRegistrationUseCase()>
<com.google.android.gms.maps.model.LatLngBounds: double zzb(double,double)>
<com.google.android.gms.internal.measurement.zzdu: boolean zza()>
<android.widget.ScrollView: void setVerticalFadingEdgeEnabled(boolean)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setNativeId(android.view.View,java.lang.String)>
<android.text.Layout: android.text.TextPaint getPaint()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewModel getAccountsViewModel()>
<com.google.android.gms.location.ActivityTransition: void <init>(int,int)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1: com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)>
<ch.qos.logback.core.ConsoleAppender: void <init>()>
<com.fasterxml.jackson.core.io.JsonStringEncoder: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.experimentation.abstraction.ExperimentationWorker experimentationWorker(android.content.Context,androidx.work.WorkerParameters)>
<android.widget.ImageButton: void setScaleY(float)>
<com.google.android.gms.internal.measurement.zzkh: byte zzv(java.lang.Object,long)>
<com.google.android.material.navigation.NavigationBarMenuView$1: void <init>(com.google.android.material.navigation.NavigationBarMenuView)>
<com.azure.authenticator.storage.database.AccountStorage: long getAccountCount()>
<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<com.google.android.gms.internal.auth-api.zzaz: java.lang.Object checkNotNull(java.lang.Object)>
<com.facebook.common.file.FileUtils$CreateDirectoryException: void <init>(java.lang.String,java.lang.Throwable)>
<android.widget.ImageButton: int getRight()>
<java.lang.Integer: int lowestOneBit(int)>
<com.google.android.gms.internal.measurement.zzcy: com.google.android.gms.internal.measurement.zzcy zzb(long)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void reactSmoothScrollTo(int,int)>
<com.google.android.gms.measurement.internal.zzav: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter$AccountsListMenuViewHolder: void <init>(com.azure.authenticator.databinding.AccountListMenuItemBinding)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzi()>
<com.google.crypto.tink.proto.KeyData$Builder: com.google.crypto.tink.proto.KeyData$Builder setValue(com.google.crypto.tink.shaded.protobuf.ByteString)>
<com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule)>
<java.net.URL: java.io.InputStream openStream()>
<ch.qos.logback.core.helpers.CyclicBuffer: java.lang.Object get()>
<com.facebook.react.views.text.TextAttributes: void setAllowFontScaling(boolean)>
<com.google.android.gms.common.api.internal.zabz: void <init>(com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient,android.os.IBinder)>
<androidx.constraintlayout.widget.ConstraintSet: void <init>()>
<com.google.common.collect.MapMakerInternalMap: java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.lang.String getLogSessionId()>
<com.google.android.gms.measurement.internal.zzfi: boolean zzd()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onDestroyView()>
<com.airbnb.lottie.model.layer.TextLayer: boolean isModifier(int)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment)>
<com.facebook.drawee.controller.AbstractDraweeController: void releaseFetch()>
<com.azure.authenticator.authentication.msa.MsaAccountManager: com.azure.authenticator.storage.database.AccountStorage getAccountStorage()>
<com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)>
<com.google.android.gms.stats.WakeLock: void <init>(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String)>
<com.fasterxml.jackson.core.JsonLocation: long getByteOffset()>
<com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)>
<ch.qos.logback.core.sift.AppenderTracker: void processPriorToRemoval(ch.qos.logback.core.Appender)>
<com.adjust.sdk.PackageHandler: void deleteState(android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.util.exceptions.ExceptionProcessor exceptionProcessor()>
<com.google.android.gms.common.api.internal.zaay: void <init>(com.google.android.gms.common.api.internal.zaaz)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel access$13100(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()>
<java.lang.Class: boolean isPrimitive()>
<com.google.android.material.navigation.NavigationBarView: void setLabelVisibilityMode(int)>
<android.os.Process: int myTid()>
<com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String getStyle()>
<com.google.android.gms.measurement.internal.zzfl: void zzN(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>
<com.airbnb.lottie.animation.keyframe.ShapeKeyframeAnimation: void <init>(java.util.List)>
<com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutBase(com.facebook.react.uimanager.ReactShadowNode)>
<com.azure.authenticator.databinding.FragmentCredentialListBinding: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,com.azure.authenticator.databinding.AutofillToggleBannerLayoutBinding,android.widget.FrameLayout,com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView,android.widget.ImageView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.ScrollView,android.widget.FrameLayout,androidx.coordinatorlayout.widget.CoordinatorLayout,androidx.constraintlayout.widget.ConstraintLayout,com.azure.authenticator.databinding.ImportPasswordBannerBinding,android.widget.ImageView,androidx.constraintlayout.widget.ConstraintLayout,android.widget.ScrollView,android.view.View,com.facebook.shimmer.ShimmerFrameLayout,android.widget.TextView,android.widget.TextView,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.widget.TextView)>
<java.io.RandomAccessFile: int read(byte[])>
<com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation: int getIntValue()>
<com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState$Companion: void <init>()>
<com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder: com.google.android.datatransport.cct.internal.AndroidClientInfo$Builder setDevice(java.lang.String)>
<com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder: com.facebook.imagepipeline.core.ImagePipelineExperiments build()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void setHalfExpandedRatio(float)>
<com.facebook.drawee.controller.AbstractDraweeController: void init(java.lang.String,java.lang.Object)>
<com.google.android.material.transformation.FabTransformationBehavior: android.view.ViewGroup toViewGroupOrNull(android.view.View)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: double getJSFPS()>
<com.google.android.material.chip.ChipDrawable: void setCheckedIconTintResource(int)>
<com.facebook.react.views.viewpager.ReactViewPager: int getViewCountInAdapter()>
<com.adjust.sdk.AdjustSessionSuccess: void <init>()>
<androidx.appcompat.app.AppCompatDialogFragment: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.backuprestore.presentationlogic.RestoreViewModel access$13900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.facebook.react.ReactActivityDelegate: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.material.tabs.TabLayout$Tab: boolean isSelected()>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<com.facebook.yoga.YogaNode: void setMarginPercent(com.facebook.yoga.YogaEdge,float)>
<com.google.android.material.button.MaterialButton: void updateIconPosition(int,int)>
<com.evernote.android.job.JobStorage: com.evernote.android.job.JobRequest get(int)>
<ch.qos.logback.classic.spi.LoggerContextListener: void onReset(ch.qos.logback.classic.LoggerContext)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean equals(java.lang.Object)>
<com.google.android.material.card.MaterialCardViewHelper: android.content.res.ColorStateList getCardBackgroundColor()>
<com.azure.authenticator.storage.database.AppDatabase_Impl: java.util.List access$900(com.azure.authenticator.storage.database.AppDatabase_Impl)>
<com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<javax.net.SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String getString(java.lang.String)>
<com.google.android.gms.measurement.internal.zzhn: void zzZ()>
<dagger.hilt.android.internal.managers.FragmentComponentManager: android.content.ContextWrapper createContextWrapper(android.view.LayoutInflater,androidx.fragment.app.Fragment)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtual()>
<com.facebook.imagepipeline.cache.CountingMemoryCache$2: void <init>(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry)>
<com.google.android.gms.measurement.internal.zzkd: void zzF()>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase access$getBrokerAccountUseCase$p(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.google.android.gms.common.data.DataBufferObserver: void onDataChanged()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.authentication.viewLogic.AadNgcRichContextFragment injectAadNgcRichContextFragment2(com.microsoft.authenticator.authentication.viewLogic.AadNgcRichContextFragment)>
<com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void lambda$static$2(android.database.sqlite.SQLiteDatabase)>
<com.google.android.material.timepicker.TimePickerView$4: void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector)>
<com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector: void <init>(com.facebook.cache.disk.DefaultDiskStorage)>
<com.google.android.gms.measurement.internal.zzkd: void zzs()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountsViewType: void <init>(java.lang.String,int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: dagger.hilt.android.internal.modules.ApplicationContextModule access$2500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.drawee.interfaces.DraweeController: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)>
<java.io.OutputStream: void flush()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs: java.lang.String getUrl()>
<com.microsoft.onlineid.Ticket: com.microsoft.onlineid.ISecurityScope getScope()>
<java.util.Collection: boolean removeAll(java.util.Collection)>
<com.microsoft.authenticator.core.logging.BaseLogger: void e(java.lang.String,java.lang.Throwable)>
<com.airbnb.lottie.LottieResult: void <init>(java.lang.Throwable)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getEncryptionKeyAlias()>
<com.microsoft.authenticator.di.ActivityModule_ProvideScanUnknownQrCodeManagerFactory: com.microsoft.authenticator.qrcode.abstraction.IScanQrCodeAdapter provideScanUnknownQrCodeManager(com.microsoft.authenticator.di.ActivityModule,androidx.fragment.app.FragmentActivity,com.microsoft.authenticator.common.businessLogic.QrCodeResultHandlerFactory,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>
<com.google.android.material.tabs.TabLayout$Tab: void <init>()>
<com.google.android.material.datepicker.MaterialCalendar: com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar)>
<com.fasterxml.jackson.core.io.UTF8Writer: void illegalSurrogate(int)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMapLongClickListener(com.google.android.gms.maps.internal.zzan)>
<com.google.android.datatransport.runtime.TransportContext: com.google.android.datatransport.runtime.TransportContext withPriority(com.google.android.datatransport.Priority)>
<com.google.android.gms.measurement.internal.zzgh: java.lang.Object zzb(android.os.Bundle,java.lang.String,java.lang.Class,java.lang.Object)>
<android.widget.CompoundButton: android.content.Context getContext()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeDouble(android.os.Parcel,int,double)>
<android.widget.EditText: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.evernote.android.job.JobStorage: java.util.Set getAllJobRequests(java.lang.String,boolean)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)>
<com.evernote.android.job.Job: com.evernote.android.job.Job$Params getParams()>
<java.util.AbstractSet: void <init>()>
<com.google.android.gms.internal.maps.zzk: void setDimensions(float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback: androidx.appcompat.app.AppCompatActivity access$getParentActivity$p(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback)>
<com.google.android.material.chip.ChipDrawable: void setCloseIconEndPaddingResource(int)>
<com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback: void <init>(com.google.android.material.bottomsheet.BottomSheetDialogFragment,com.google.android.material.bottomsheet.BottomSheetDialogFragment$1)>
<com.google.android.gms.internal.measurement.zzcz: com.google.android.gms.internal.measurement.zzcz zzf()>
<com.facebook.react.views.text.TextLayoutManager$SetSpanOperation: void <init>(int,int,com.facebook.react.views.text.ReactSpan)>
<android.graphics.drawable.StateListDrawable: void <init>()>
<com.airbnb.lottie.model.animatable.AnimatableGradientColorValue: void <init>(java.util.List)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$showResultAndRatingDialogIfNecessary$10$AbstractAuthRequestActivity()>
<ch.qos.logback.classic.net.SimpleSSLSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int,javax.net.ssl.SSLContext)>
<com.google.android.material.button.MaterialButtonHelper: int getStrokeWidth()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdated()>
<com.facebook.react.modules.network.ProgressRequestBody: long contentLength()>
<com.azure.authenticator.databinding.AccountChooserActivityBinding: com.azure.authenticator.databinding.AccountChooserActivityBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
<com.google.android.gms.common.internal.zal: void <init>(com.google.android.gms.common.GoogleApiAvailabilityLight)>
<com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()>
<com.google.android.gms.common.internal.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: java.lang.String findName(int,int)>
<com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.IGmsServiceBroker zze(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.internal.IGmsServiceBroker)>
<com.google.android.gms.measurement.internal.zzho: void zzo(java.lang.String,java.lang.String,android.os.Bundle)>
<com.facebook.react.uimanager.PointerEvents: void <init>(java.lang.String,int)>
<com.azure.authenticator.logging.CollectLogsUtils: void registerForLoggingCallbacks(android.content.Context)>
<androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>
<com.google.android.material.datepicker.MaterialCalendar: void toggleVisibleSelector()>
<com.google.android.material.color.MaterialColors: int getColor(android.content.Context,int,java.lang.String)>
<com.google.android.gms.maps.internal.zzbo: void <init>()>
<com.google.android.gms.common.BlockingServiceConnection: android.os.IBinder getServiceWithTimeout(long,java.util.concurrent.TimeUnit)>
<com.google.android.gms.common.images.ImageManager$ImageReceiver: java.util.ArrayList zad(com.google.android.gms.common.images.ImageManager$ImageReceiver)>
<com.google.android.material.shape.ShapeAppearancePathProvider: void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)>
<com.airbnb.lottie.LottieTask: void access$300(com.airbnb.lottie.LottieTask,com.airbnb.lottie.LottieResult)>
<com.google.common.io.BaseEncoding: com.google.common.io.BaseEncoding base16()>
<com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)>
<com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: void <init>(com.facebook.react.bridge.ReadableNativeMap)>
<androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>
<com.google.android.gms.auth.api.signin.internal.SignInHubActivity$zzc: void <init>(com.google.android.gms.auth.api.signin.internal.SignInHubActivity,com.google.android.gms.auth.api.signin.internal.zzy)>
<com.google.android.gms.measurement.internal.zzei: java.lang.String zzn()>
<ch.qos.logback.core.util.FileUtil: boolean createMissingParentDirectories(java.io.File)>
<android.widget.PopupMenu: android.view.Menu getMenu()>
<com.google.android.gms.common.server.response.zaj: void <init>()>
<com.facebook.drawee.drawable.ScalingUtils$StatefulScaleType: java.lang.Object getState()>
<ch.qos.logback.core.pattern.PatternLayoutBase: java.lang.String getPresentationHeaderPrefix()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zaw(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,float)>
<com.facebook.react.ReactAndroidHWInputDeviceHelper: void handleKeyEvent(android.view.KeyEvent)>
<com.facebook.react.uimanager.events.EventDispatcher: com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback access$800(com.facebook.react.uimanager.events.EventDispatcher)>
<com.facebook.react.modules.storage.AsyncLocalStorageUtil: java.lang.String buildKeySelection(int)>
<android.widget.ScrollView: void setScrollbarFadingEnabled(boolean)>
<okhttp3.Request$Builder: okhttp3.Request build()>
<com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)>
<com.google.android.gms.internal.measurement.zzmn: boolean zzb()>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>
<com.google.android.datatransport.cct.internal.LogEvent: com.google.android.datatransport.cct.internal.LogEvent$Builder protoBuilder(byte[])>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)>
<com.evernote.android.job.JobRequest: int schedule()>
<ch.qos.logback.core.pattern.parser.Parser: ch.qos.logback.core.pattern.parser.FormattingNode C()>
<com.google.android.gms.internal.measurement.zzjk: int zzu(int,java.util.List,boolean)>
<com.facebook.drawee.components.DraweeEventTracker: com.facebook.drawee.components.DraweeEventTracker newInstance()>
<com.google.android.material.snackbar.BaseTransientBottomBar: void access$1400(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>
<com.google.android.gms.auth.api.accounttransfer.AccountTransferClient$zzb: void <init>(com.google.android.gms.auth.api.accounttransfer.zzc)>
<dummyMainClass: com.azure.authenticator.ui.authentication.AadRemoteNgcSessionActivity dummyMainMethod_com_azure_authenticator_ui_authentication_AadRemoteNgcSessionActivity(android.content.Intent)>
<ch.qos.logback.core.sift.AppenderTracker: boolean isComponentStale(ch.qos.logback.core.Appender)>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.common.internal.Supplier access$1300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.microsoft.brooklyn.module.autofill.authentication.CredentialsAutofillAuthActivity_MembersInjector: void injectCredsRepository(com.microsoft.brooklyn.module.autofill.authentication.CredentialsAutofillAuthActivity,com.microsoft.brooklyn.module.repository.CredentialsRepository)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeInt(android.os.Parcel,int,int)>
<com.microsoft.brooklyn.module.BrooklynModuleInitializer: boolean isModuleEnabled()>
<androidx.fragment.app.Fragment: void <init>(int)>
<com.google.android.gms.internal.measurement.zzbu: boolean zza()>
<ch.qos.logback.core.rolling.helper.DateParser: void <init>(ch.qos.logback.core.rolling.helper.FileNamePattern)>
<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>
<android.widget.ScrollView: void setMeasuredDimension(int,int)>
<com.microsoft.onlineid.AccountManager: boolean onActivityResult(int,int,android.content.Intent)>
<com.google.common.io.BaseEncoding$Base64Encoding: void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character)>
<com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer: com.facebook.common.references.CloseableReference access$300(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer)>
<com.google.android.material.navigation.NavigationBarView: androidx.appcompat.view.menu.MenuView getMenuView()>
<com.google.android.gms.measurement.internal.zzad: java.lang.String zza(java.lang.String,java.lang.String)>
<com.facebook.react.views.modal.ModalHostShadowNode: void <init>()>
<com.microsoft.brooklyn.ui.credential.AddCredentialFragment_MembersInjector: void injectGeneratePassInfoHelper(com.microsoft.brooklyn.ui.credential.AddCredentialFragment,com.microsoft.brooklyn.module.generatepasswords.businesslogic.GeneratePasswordInfoHelper)>
<com.facebook.yoga.YogaNode: float getLayoutHeight()>
<com.facebook.react.fabric.mounting.mountitems.UpdateLayoutMountItem: void <init>(int,int,int,int,int,int)>
<com.google.android.gms.dynamic.zad: void <init>(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.widget.FrameLayout,android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.gms.measurement.internal.zzg: void zzb()>
<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<androidx.collection.SparseArrayCompat: void <init>()>
<com.google.android.material.textfield.PasswordToggleEndIconDelegate: android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate)>
<com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float)>
<com.microsoft.brooklyn.ui.settings.EnterpriseSettingsHandler: void configureBrooklynEnterpriseAutofillOptions(androidx.preference.PreferenceCategory,androidx.preference.Preference,androidx.preference.Preference,androidx.preference.SwitchPreference,androidx.preference.SwitchPreference,androidx.preference.SwitchPreference,androidx.preference.Preference,androidx.preference.Preference,android.content.Context,com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhy zzbC()>
<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>
<com.google.android.gms.internal.measurement.zzmr: void <init>()>
<com.fasterxml.jackson.core.io.UTF32Reader: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean)>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaB()>
<com.facebook.react.ReactNativeHost: java.util.List getPackages()>
<com.google.android.gms.internal.maps.zzn: boolean zzb(com.google.android.gms.internal.maps.zzn)>
<android.widget.HorizontalScrollView: void setHorizontalScrollBarEnabled(boolean)>
<com.google.android.gms.internal.auth.zzaz: void <init>()>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getNgcServerKeyIdentifier()>
<com.azure.authenticator.storage.database.DbAccount: void setEncryptedOathSecretKey(java.lang.String)>
<com.google.android.datatransport.cct.internal.AutoBatchedLogRequestEncoder$ClientInfoEncoder: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.biometric.MfaPinAuthentication access$9500(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<com.fasterxml.jackson.core.util.TextBuffer: java.lang.String contentsAsString()>
<com.google.android.material.animation.MotionSpec: boolean hasTiming(java.lang.String)>
<com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker: boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String)>
<com.google.android.gms.common.server.response.FastJsonResponse$Field: com.google.android.gms.common.server.converter.zaa zae()>
<com.facebook.react.uimanager.ReactShadowNode: void setStyleWidth(float)>
<com.google.android.material.tabs.TabIndicatorInterpolator: void <init>()>
<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object)>
<com.microsoft.authenticator.features.frx.viewLogic.FirstRunSyncToggleFragment_MembersInjector: void injectTelemetryManager(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSyncToggleFragment,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.common.api.internal.zabl: void zac(com.google.android.gms.common.ConnectionResult,java.lang.Exception)>
<com.facebook.react.views.image.ReactImageView$1: void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable)>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager: java.lang.Object getTokenSilently(com.azure.authenticator.accounts.AadAccount,java.lang.String,kotlin.coroutines.Continuation)>
<com.google.android.gms.auth.api.credentials.HintRequest: java.lang.String getServerClientId()>
<com.google.android.gms.common.images.ImageManager: void zaa(com.google.android.gms.common.images.zag)>
<com.adjust.sdk.ResponseData: com.adjust.sdk.ResponseData buildResponseData(com.adjust.sdk.ActivityPackage)>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onCreateView$3: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.gms.common.api.internal.zabd: void zas(java.lang.RuntimeException)>
<java.util.Set: java.util.Iterator iterator()>
<com.facebook.react.bridge.ReactContext: void onHostPause()>
<com.google.android.gms.measurement.internal.zzeq: void <init>(com.google.android.gms.measurement.internal.zzkd)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: void migrateAnythingBefore7(androidx.sqlite.db.SupportSQLiteDatabase)>
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<ch.qos.logback.classic.net.server.ServerSocketReceiver: int getPort()>
<ch.qos.logback.core.hook.ShutdownHookBase: void stop()>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper scrollBy(float,float)>
<com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzdp zze(java.lang.Iterable)>
<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>
<com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)>
<com.google.android.gms.internal.measurement.zzp: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzs)>
<java.math.BigInteger: java.math.BigInteger valueOf(long)>
<com.facebook.drawee.generic.WrappingUtils: void updateLeafRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)>
<com.facebook.imageformat.DefaultImageFormatChecker: com.facebook.imageformat.ImageFormat getWebpFormat(byte[],int)>
<com.google.android.gms.internal.measurement.zzdj: void zzaQ(com.google.android.gms.internal.measurement.zzdj,java.lang.String)>
<androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()>
<com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: boolean shouldAnimateVisibilityChange()>
<com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)>
<com.google.android.gms.maps.internal.zzaa: void <init>()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.workaccount.businesslogic.DiscoveryUseCase access$7200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: int getThumbnailKind(com.facebook.imagepipeline.common.ResizeOptions)>
<com.google.android.gms.maps.UiSettings: void <init>(com.google.android.gms.maps.internal.IUiSettingsDelegate)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzM()>
<com.google.android.gms.measurement.internal.zzck: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar$AnimationListener: void onAnimationEnd(com.google.android.material.bottomappbar.BottomAppBar)>
<ch.qos.logback.classic.net.server.SSLServerSocketAppender: boolean isIncludeCallerData()>
<com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()>
<ch.qos.logback.classic.PatternLayout: java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.measurement.internal.zzfi: boolean zzm(com.google.android.gms.measurement.internal.zzfi)>
<com.facebook.react.views.viewpager.ReactViewPager: void removeViewFromAdapter(int)>
<com.google.android.gms.internal.measurement.zzfo: java.lang.Object zza()>
<com.google.android.material.button.MaterialButtonToggleGroup: boolean isChildVisible(int)>
<com.google.android.gms.internal.measurement.zzdj: void zzaR(com.google.android.gms.internal.measurement.zzdj)>
<com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void doExecute(com.google.android.gms.common.api.Api$AnyClient)>
<androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)>
<com.evernote.android.job.JobStorage: boolean access$200(com.evernote.android.job.JobStorage,com.evernote.android.job.JobRequest,int)>
<com.microsoft.authenticator.mfasdk.account.entities.AccountCapability: void addCapability(com.microsoft.authenticator.mfasdk.account.entities.AccountCapability$AccountCapabilityEnum)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker$doWork$2$1$asyncResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void lambda$showMfaFingerprintOptOutDialog$2(java.util.HashMap,android.content.DialogInterface,int)>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty: void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)>
<java.util.Collections: java.util.Set singleton(java.lang.Object)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.azure.authenticator.authentication.msa.MsaRefreshUserDaWorker_AssistedFactory msaRefreshUserDaWorker_AssistedFactory()>
<com.facebook.soloader.ExoSoSource: void <init>(android.content.Context,java.lang.String)>
<com.google.android.gms.common.api.internal.zaba: void zaf(android.os.Bundle)>
<com.google.android.gms.internal.measurement.zzkz: long zzc()>
<com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource: boolean startNextDataSource()>
<com.facebook.cache.disk.DiskCacheConfig$Builder: int access$000(com.facebook.cache.disk.DiskCacheConfig$Builder)>
<com.google.android.gms.measurement.internal.zzg: void zzT(long)>
<com.google.android.gms.internal.location.zzau: void zzc()>
<java.lang.StringBuffer: int length()>
<com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: void <init>()>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void createDelegate(com.google.android.gms.dynamic.OnDelegateCreatedListener)>
<com.google.android.gms.internal.measurement.zzla: long zzh()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void calculateCollapsedOffset()>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<com.azure.authenticator.databinding.FragmentPaymentListBinding: com.azure.authenticator.databinding.FragmentPaymentListBinding bind(android.view.View)>
<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>
<com.google.android.gms.auth.api.credentials.CredentialsClient: void <init>(android.app.Activity,com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCBuilder: void <init>(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC,com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$1)>
<com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorColor(int)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)>
<com.azure.authenticator.common.Util$Companion: void setupLongClickCopyText(java.lang.String,android.view.View,int,int,int)>
<com.azure.authenticator.storage.database.DbAccount: java.lang.String getReplicationScope()>
<com.azure.authenticator.ui.action.ReEnableAutoBackupAction_Factory: com.azure.authenticator.ui.action.ReEnableAutoBackupAction get()>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.google.common.collect.MapMakerInternalMap$Segment: boolean containsKey(java.lang.Object,int)>
<androidx.work.ListenableWorker: java.util.Set getTags()>
<java.util.regex.Matcher: boolean matches()>
<com.facebook.common.executors.CallerThreadExecutor: void <init>()>
<androidx.appcompat.widget.ListPopupWindow: long getSelectedItemId()>
<com.google.android.material.internal.CollapsingTextHelper: boolean setCollapsedTypefaceInternal(android.graphics.Typeface)>
<com.google.android.gms.auth.api.signin.internal.Storage: void saveDefaultGoogleSignInAccount(com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.facebook.imagepipeline.producers.Consumer: void onCancellation()>
<android.view.View: int getMeasuredHeightAndState()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<com.google.android.gms.common.api.internal.zaax: void <init>(com.google.android.gms.common.api.internal.zaaz,android.os.Looper)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel_HiltModules_KeyModule_ProvideFactory: void <init>()>
<com.google.android.gms.common.util.CollectionUtils: java.util.Set setOf(java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.android.material.button.MaterialButtonHelper: void setRippleColor(android.content.res.ColorStateList)>
<com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void zzb()>
<com.google.android.gms.common.internal.zaq: void <init>(com.google.android.gms.common.api.Response)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.generatepasswords.viewlogic.GeneratePasswordAutofillActivity injectGeneratePasswordAutofillActivity2(com.microsoft.brooklyn.module.generatepasswords.viewlogic.GeneratePasswordAutofillActivity)>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions: boolean zzd(com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)>
<com.google.android.gms.internal.measurement.zzhk: com.google.android.gms.internal.measurement.zzhk[] values()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)>
<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo initTableInfo(int)>
<com.google.android.gms.location.LocationRequest: void <init>(int,long,long,boolean,long,int,float,long,boolean)>
<com.azure.authenticator.ui.action.UserInteractionRequiredActionManager: void onDestroy()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.authenticator.registration.thirdparty.abstraction.RegisterThirdPartyAccountViewModel access$13700(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl)>
<com.microsoft.authenticator.msa.MsaBaseAccountManager: java.lang.Object getTicketInteractively(android.content.Context,int,java.lang.String,com.microsoft.onlineid.SecurityScope,kotlin.coroutines.Continuation)>
<com.facebook.drawee.view.DraweeHolder: com.facebook.drawee.view.DraweeHolder create(com.facebook.drawee.interfaces.DraweeHierarchy,android.content.Context)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordPromptFragment injectBackupPasswordPromptFragment2(com.microsoft.did.feature.backuprestore.viewlogic.BackupPasswordPromptFragment)>
<com.facebook.react.viewmanagers.SliderManagerInterface: void setMaximumValue(android.view.View,double)>
<com.google.android.material.datepicker.CalendarConstraints$Builder: com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long)>
<com.google.android.gms.internal.measurement.zzmi: void <init>()>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBean()>
<com.google.android.gms.common.api.internal.LifecycleCallback: void onResume()>
<com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor(java.lang.Integer)>
<com.microsoft.authenticator.mainactivity.ui.MainActivityViewModel: void validateMsaAccountsAsync(com.azure.authenticator.ui.MainActivity)>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP: void <init>(ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP$Usage)>
<java.util.Arrays: void sort(java.lang.Object[])>
<com.google.android.gms.internal.measurement.zzec: void <init>(com.google.android.gms.internal.measurement.zzdv)>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<com.facebook.imagepipeline.producers.FetchState: java.lang.String getId()>
<android.view.KeyEvent: void startTracking()>
<com.azure.authenticator.databinding.AadAddAccountSetupBinding: com.azure.authenticator.databinding.AadAddAccountSetupBinding bind(android.view.View)>
<com.google.android.material.shape.MaterialShapeDrawable: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.gms.cloudmessaging.Rpc: void zza(android.os.Message)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void approveMsaSession()>
<com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback: void onSuccess(java.io.File)>
<com.google.android.gms.internal.maps.zzt: boolean zzj(com.google.android.gms.internal.maps.zzt)>
<com.google.android.gms.dynamic.zag: void <init>(com.google.android.gms.dynamic.DeferredLifecycleHelper)>
<com.google.android.gms.common.stats.WakeLockTracker: void <init>()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory create()>
<com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier: java.util.concurrent.ScheduledExecutorService get()>
<com.google.android.gms.measurement.internal.zzkg: java.lang.Object zza()>
<android.widget.TextView: void setTextSize(int,float)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void setHotModuleReplacementEnabled(boolean)>
<com.microsoft.onlineid.AccountManager: void getSignOutIntent(com.microsoft.onlineid.UserAccount,android.os.Bundle)>
<com.facebook.react.bridge.JSApplicationIllegalArgumentException: void <init>(java.lang.String)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment: androidx.fragment.app.FragmentActivity access$getParentActivity$p(com.azure.authenticator.ui.fragment.main.SendFeedbackFragment)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.request.Postprocessor getPostprocessor()>
<com.google.android.material.behavior.SwipeDismissBehavior: boolean canSwipeDismissView(android.view.View)>
<com.google.android.gms.auth.api.signin.internal.HashAccumulator: com.google.android.gms.auth.api.signin.internal.HashAccumulator addObject(java.lang.Object)>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuAdapter: void <init>(android.content.Context,java.util.List)>
<java.util.concurrent.ConcurrentHashMap: int size()>
<com.airbnb.lottie.utils.LottieValueAnimator: float getMinFrame()>
<android.view.View: android.view.View findViewById(int)>
<com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)>
<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>
<com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment_MembersInjector: void injectStorage(com.azure.authenticator.ui.fragment.sharedDeviceMode.SharedDeviceModeFragment,com.azure.authenticator.storage.Storage)>
<android.widget.TextView: int getPaddingRight()>
<com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback: void maybePostFromNonUI()>
<sun.misc.Unsafe: void putLong(java.lang.Object,long,long)>
<com.airbnb.lottie.animation.content.ShapeContent: void invalidate()>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.LocalContentUriFetchProducer newLocalContentUriFetchProducer()>
<com.airbnb.lottie.utils.MiscUtils: android.graphics.PointF addPoints(android.graphics.PointF,android.graphics.PointF)>
<com.evernote.android.job.util.BatteryStatus: void <init>(boolean,float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$generateNgcKey$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback,com.microsoft.onlineid.UserAccount,android.os.Bundle,kotlin.coroutines.Continuation)>
<java.lang.Integer: int intValue()>
<javax.net.ssl.SSLSocket: boolean getKeepAlive()>
<com.google.android.gms.safetynet.SafetyNetApi$SafeBrowsingResult: long getLastUpdateTimeMs()>
<com.google.android.gms.common.api.internal.zaar: com.google.android.gms.signin.zae zao(com.google.android.gms.common.api.internal.zaar)>
<com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInOnPremQrFragment_MembersInjector: void injectRegisterAadMfaAccountManager(com.microsoft.authenticator.registration.aad.viewlogic.AadPhoneSignInOnPremQrFragment,com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager)>
<com.google.android.gms.common.zaa: void <init>()>
<com.facebook.datasource.AbstractDataSource: void notifyDataSubscribers()>
<com.google.crypto.tink.KeysetWriter: void write(com.google.crypto.tink.proto.EncryptedKeyset)>
<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>
<com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)>
<com.facebook.imagepipeline.memory.LruBitmapPool: void release(android.graphics.Bitmap)>
<com.google.android.gms.measurement.internal.zzkd: com.google.android.gms.measurement.internal.zzhs zzm()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$3: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCBuilder: com.azure.authenticator.PhoneFactorApplication_HiltComponents$ServiceC build()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: kotlinx.coroutines.Job generateBackupAsync(java.lang.String,com.microsoft.onlineid.UserKey,com.microsoft.onlineid.Ticket)>
<com.azure.authenticator.storage.Storage: void markAccountForForceReregistration(java.lang.String)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollDelta(android.view.View)>
<com.microsoft.brooklyn.module.autofill.BrooklynAutofillService_MembersInjector: void injectFillRequestProcessor(com.microsoft.brooklyn.module.autofill.BrooklynAutofillService,com.microsoft.brooklyn.module.autofill.request.FillRequestProcessor)>
<com.google.android.gms.common.api.internal.GoogleApiManager: boolean zap(com.google.android.gms.common.ConnectionResult,int)>
<ch.qos.logback.core.recovery.ResilientOutputStreamBase: java.io.OutputStream openNewOutputStream()>
<com.azure.authenticator.storage.database.AccountWriter: void delete(com.azure.authenticator.accounts.GenericAccount)>
<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<com.airbnb.lottie.animation.content.TrimPathContent: void <init>(com.airbnb.lottie.model.layer.BaseLayer,com.airbnb.lottie.model.content.ShapeTrimPath)>
<com.google.android.material.expandable.ExpandableWidgetHelper: android.os.Bundle onSaveInstanceState()>
<com.facebook.react.views.switchview.ReactSwitchEvent: com.facebook.react.bridge.WritableMap serializeEventData()>
<com.google.android.gms.dynamic.IFragmentWrapper: int zzj()>
<android.view.Window: void clearFlags(int)>
<java.io.Reader: int read(char[],int,int)>
<com.facebook.react.CoreModulesPackage: void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.uimanager.UIImplementationProvider,boolean,int)>
<android.graphics.Color: int blue(int)>
<ch.qos.logback.classic.turbo.MDCValueLevelPair: ch.qos.logback.classic.Level getLevel()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$startWorkplaceJoin$1: void <init>(com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment,boolean,java.lang.String,java.util.Map,kotlin.coroutines.Continuation)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>
<android.graphics.Bitmap: void setHasAlpha(boolean)>
<com.google.android.gms.dynamic.LifecycleDelegate: void onDestroy()>
<ch.qos.logback.core.rolling.helper.FileFilterUtil: int extractCounter(java.io.File,java.lang.String)>
<com.azure.authenticator.logging.CollectLogsUtils: java.util.HashMap getAccountsTypeCountForTelemetryProperties(java.util.List)>
<com.facebook.imagepipeline.producers.LocalFetchProducer: com.facebook.imagepipeline.image.EncodedImage getByteBufferBackedEncodedImage(java.io.InputStream,int)>
<com.google.android.gms.internal.measurement.zzdj: boolean zzW()>
<com.azure.authenticator.storage.database.migration.Migration10To11$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.imagepipeline.cache.BufferedDiskCache: void writeToDiskCache(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<com.google.android.gms.cloudmessaging.zza: void zza(android.os.Message)>
<com.google.android.gms.internal.firebase_messaging.zze: void <init>()>
<com.facebook.imagepipeline.image.QualityInfo: boolean isOfGoodEnoughQuality()>
<com.google.common.base.Optional: boolean equals(java.lang.Object)>
<com.airbnb.lottie.model.CubicCurveData: void <init>()>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<com.microsoft.authenticator.registration.thirdparty.abstraction.QrCodeResultHandlerThirdPartyAccount: void <init>(com.microsoft.authenticator.commonuilibrary.dialogs.DialogFragmentManager,com.microsoft.authenticator.registration.thirdparty.businessLogic.ActivationParametersParserThirdParty,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.material.appbar.AppBarLayout: androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)>
<com.azure.authenticator.storage.database.DbAccount: void setRestoreCapability(int)>
<com.google.android.gms.location.FusedLocationProviderClient: void <init>(android.app.Activity)>
<com.facebook.react.animated.NativeAnimatedModule$12: void <init>(com.facebook.react.animated.NativeAnimatedModule,int)>
<com.facebook.react.bridge.ReactNoCrashSoftException: void <init>(java.lang.String)>
<com.google.android.gms.maps.model.CameraPosition$Builder: void <init>(com.google.android.gms.maps.model.CameraPosition)>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: java.lang.String getProvider()>
<ch.qos.logback.classic.db.SQLBuilder: java.lang.String buildCreateLoggingEventTableSQL(ch.qos.logback.classic.db.names.DBNameResolver)>
<java.text.DateFormatSymbols: void <init>(java.util.Locale)>
<com.azure.authenticator.ui.fragment.main.SendFeedbackFragment_MembersInjector: void <init>(javax.inject.Provider)>
<com.airbnb.lottie.LottieCompositionFactory$4: com.airbnb.lottie.LottieResult call()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_StoreConfigFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()>
<ch.qos.logback.core.spi.AppenderAttachableImpl: boolean isAttached(ch.qos.logback.core.Appender)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<com.google.android.gms.common.wrappers.InstantApps: boolean isInstantApp(android.content.Context)>
<java.util.Arrays: void fill(int[],int)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageRequestEndTimeMs(long)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistrationCancel$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.location.GeofencingRequest$Builder: com.google.android.gms.location.GeofencingRequest$Builder setInitialTrigger(int)>
<com.google.android.gms.location.SleepClassifyEvent: void <init>(int,int,int,int,int,int,int,boolean,int)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getTenantCountryCode()>
<android.content.DialogInterface$OnCancelListener: void onCancel(android.content.DialogInterface)>
<okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)>
<com.azure.authenticator.logging.Hilt_LoggingReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.google.android.gms.maps.StreetViewPanoramaView$zzb: void <init>(android.view.ViewGroup,android.content.Context,com.google.android.gms.maps.StreetViewPanoramaOptions)>
<android.graphics.Path: boolean isConvex()>
<com.google.android.gms.common.api.GoogleApiActivity: android.content.Intent zaa(android.content.Context,android.app.PendingIntent,int,boolean)>
<com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)>
<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri,com.facebook.imagepipeline.common.ResizeOptions)>
<androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>
<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>
<com.google.android.gms.common.internal.zzi: void <init>(android.os.Bundle,com.google.android.gms.common.Feature[],int,com.google.android.gms.common.internal.ConnectionTelemetryConfiguration)>
<com.facebook.react.views.view.ReactDrawableHelper: int getColor(android.content.Context,com.facebook.react.bridge.ReadableMap)>
<com.google.android.material.shape.ShapePath$PathArcOperation: float getLeft()>
<com.google.android.gms.internal.measurement.zzkn: int zzh(byte[],int,int)>
<com.facebook.imageutils.TiffUtil: int readTiffHeader(java.io.InputStream,int,com.facebook.imageutils.TiffUtil$TiffHeader)>
<com.azure.authenticator.databinding.AadAccountPageWebViewFragmentBinding: com.azure.authenticator.databinding.AadAccountPageWebViewFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.imagepipeline.memory.BitmapCounter: void <init>(int,int)>
<com.google.android.material.shape.MaterialShapeDrawable: android.graphics.RectF getBoundsAsRectF()>
<android.widget.Spinner: int getHeight()>
<com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation: void onLayoutUpdate(int,int,int,int)>
<com.google.android.gms.auth.api.accounttransfer.zzi: void <init>(com.google.android.gms.auth.api.accounttransfer.AccountTransferClient,com.google.android.gms.internal.auth.zzah)>
<com.google.common.collect.MapMakerInternalMap$HashIterator: com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry()>
<com.azure.authenticator.ui.LaunchActivity: void launchNextActivity(boolean)>
<androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>
<com.google.android.gms.common.internal.BaseGmsClient: void <init>(android.content.Context,android.os.Handler,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailabilityLight,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: com.microsoft.authenticator.authentication.entities.AuthenticationType getInitialAuthenticationType()>
<com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority getHigherPriority(com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.common.Priority)>
<com.facebook.imagepipeline.producers.JobScheduler$JobState: void <init>(java.lang.String,int)>
<com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding: com.azure.authenticator.databinding.AutofillDisabledCardBannerBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnMarkerDragListener(com.google.android.gms.maps.internal.zzat)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.authenticator.registration.mfa.abstraction.RegisterAadMfaAccountManager registerAadMfaAccountManager()>
<com.google.android.material.chip.Chip: boolean shouldEnsureMinTouchTargetSize()>
<com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)>
<com.google.android.material.shape.ShapeAppearanceModel$Builder: com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float)>
<android.os.Handler: void removeMessages(int,java.lang.Object)>
<com.facebook.imagepipeline.core.ImagePipelineExperiments: com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod getProducerFactoryMethod()>
<com.adjust.sdk.ActivityHandler: void disableThirdPartySharing()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions$Builder: void <init>(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean isConnected()>
<com.google.android.gms.measurement.internal.zzkd: java.lang.String zzY(com.google.android.gms.measurement.internal.zzp)>
<com.google.android.datatransport.runtime.EncodedPayload: boolean equals(java.lang.Object)>
<android.widget.TextView: int getBreakStrategy()>
<com.google.android.datatransport.runtime.AutoValue_EventInternal$Builder: com.google.android.datatransport.runtime.EventInternal$Builder setAutoMetadata(java.util.Map)>
<com.google.android.gms.internal.measurement.zzjs: void <init>(int,com.google.android.gms.internal.measurement.zzjl)>
<com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()>
<com.facebook.react.ReactActivityDelegate: void onWindowFocusChanged(boolean)>
<ch.qos.logback.core.rolling.helper.FileFinder: void findDirs(java.util.List,java.util.List,int,java.util.List)>
<com.facebook.react.fabric.FabricUIManager: java.util.List getAndResetViewCommandMountItems()>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: java.util.Map zak(java.util.List)>
<ch.qos.logback.core.rolling.helper.RollingCalendar: void <init>(java.lang.String)>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.azure.authenticator.databinding.FragmentStopSyncAccountBinding: android.widget.ScrollView getRoot()>
<com.google.android.gms.internal.measurement.zzag: void <init>(com.google.android.gms.internal.measurement.zzbr,android.os.Bundle)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)>
<com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()>
<java.util.ArrayDeque: java.util.Iterator iterator()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver_MembersInjector: void injectMembers(com.azure.authenticator.notifications.msa.MsaNotificationActionBroadcastReceiver)>
<android.widget.Button: android.os.Parcelable onSaveInstanceState()>
<com.facebook.drawee.generic.WrappingUtils: android.graphics.drawable.Drawable maybeApplyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)>
<com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void closeSafely(java.io.Closeable)>
<com.azure.authenticator.databinding.AddMsaActivityLayoutBinding: com.azure.authenticator.databinding.AddMsaActivityLayoutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.azure.authenticator.ui.backup.RestoreFlowViewModel: com.azure.authenticator.ui.backup.RestoreFlowViewModel$RestoreActivityState getActivityState()>
<android.content.ContentProvider: android.content.Context getContext()>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setContentDescription(java.lang.String)>
<android.widget.FrameLayout: void addView(android.view.View)>
<kotlin.Pair: java.lang.Object component2()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ViewModelCImpl: com.microsoft.did.feature.notifications.presentationlogic.CredentialNotificationsViewModel credentialNotificationsViewModel()>
<com.google.android.material.behavior.SwipeDismissBehavior: void <init>()>
<com.google.android.gms.auth.account.WorkAccountApi: com.google.android.gms.common.api.PendingResult addWorkAccount(com.google.android.gms.common.api.GoogleApiClient,java.lang.String)>
<android.view.View: void measure(int,int)>
<com.facebook.imagepipeline.memory.GenericByteArrayPool: int getSizeInBytes(int)>
<com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory: com.google.android.datatransport.runtime.ExecutionModule_ExecutorFactory create()>
<com.google.android.gms.common.api.internal.GoogleApiManager: void zad(com.google.android.gms.common.api.GoogleApi)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: android.graphics.Matrix getTransformationMatrix(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions)>
<com.google.android.material.snackbar.BaseTransientBottomBar: boolean hasSnackbarStyleAttr()>
<com.azure.authenticator.ui.fragment.main.'-$$Lambda$SettingsFragment$As1p6SYngVk17e4infVrEL_bQWQ': void <init>(com.azure.authenticator.ui.fragment.main.SettingsFragment)>
<com.azure.authenticator.OnAppUpgradeReceiver$setFingerprintPreferenceIfNecessary$1: void <init>(com.azure.authenticator.OnAppUpgradeReceiver,android.content.Context,kotlin.coroutines.Continuation)>
<com.airbnb.lottie.utils.LottieValueAnimator: float getSpeed()>
<com.google.common.base.Optional: boolean isPresent()>
<com.facebook.drawee.view.AspectRatioMeasure: void updateMeasureSpec(com.facebook.drawee.view.AspectRatioMeasure$Spec,float,android.view.ViewGroup$LayoutParams,int,int)>
<com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding: com.azure.authenticator.databinding.PasswordAutoChangeConfirmLayoutBinding bind(android.view.View)>
<com.google.android.gms.measurement.internal.zzjb: void zzG(com.google.android.gms.internal.measurement.zzs,com.google.android.gms.measurement.internal.zzas,java.lang.String)>
<com.facebook.react.views.viewpager.PageSelectedEvent: void <init>(int,int)>
<com.google.android.gms.internal.measurement.zzdi: java.lang.String zzG()>
<com.google.android.gms.internal.measurement.zzdq: void zzx()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$Migration: void upgrade(android.database.sqlite.SQLiteDatabase)>
<com.adjust.sdk.PackageBuilder: com.adjust.sdk.ActivityPackage buildAttributionPackage(java.lang.String)>
<com.google.android.material.chip.ChipDrawable: float getCloseIconEndPadding()>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: float getOverlapRatioForOffset(android.view.View)>
<android.content.Context: boolean deleteDatabase(java.lang.String)>
<com.google.android.material.button.MaterialButtonToggleGroup: void updateChildShapes()>
<com.google.android.gms.common.api.Batch: void <init>(java.util.List,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.zab)>
<android.widget.CheckBox: void setMinHeight(int)>
<com.facebook.react.views.viewpager.ReactViewPager: void <init>(com.facebook.react.bridge.ReactContext)>
<com.google.android.gms.internal.safetynet.zzi: void zza(com.google.android.gms.internal.safetynet.zzg)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: com.facebook.common.util.TriState shouldTransform(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder)>
<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils: boolean isRotationAngleAllowed(int)>
<com.google.android.gms.auth.api.signin.internal.zzi: android.content.Intent zze(android.content.Context,com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.google.android.material.datepicker.MaterialCalendar: androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar)>
<com.google.android.gms.measurement.internal.zzaa: void <init>(com.google.android.gms.measurement.internal.zzaa)>
<com.google.android.gms.internal.auth.zzu: void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.auth.api.accounttransfer.zzn,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>
<com.google.android.gms.internal.measurement.zzda: long zzn()>
<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>
<com.microsoft.onlineid.sdk.extension.Session: java.lang.String getNotificationTitle()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: java.util.List getOverlays()>
<com.google.android.gms.common.api.internal.zaaw: void <init>(com.google.android.gms.common.api.internal.zaaz,com.google.android.gms.common.api.internal.StatusPendingResult,boolean,com.google.android.gms.common.api.GoogleApiClient)>
<com.facebook.react.views.swiperefresh.RefreshEvent: java.lang.String getEventName()>
<com.facebook.react.views.text.TextAttributeProps: void setTextShadowRadius(float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel$generateMsaNgcKeyAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.google.android.gms.dynamic.DeferredLifecycleHelper: void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle)>
<com.facebook.imagepipeline.producers.LocalResourceFetchProducer: int getResourceId(com.facebook.imagepipeline.request.ImageRequest)>
<com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInUseCase: void <init>(android.content.Context,com.microsoft.ngc.provider.cryptography.NgcCredentialManager,com.azure.authenticator.storage.database.AccountWriter,com.azure.authenticator.storage.database.AccountStorage)>
<com.google.android.gms.measurement.internal.zzec: boolean zzq(int,byte[])>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_HiltModules_KeyModule_ProvideFactory$InstanceHolder: com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel_HiltModules_KeyModule_ProvideFactory access$000()>
<com.google.android.gms.internal.measurement.zziw: com.google.android.gms.internal.measurement.zzix zzaD()>
<bolts.Task: java.lang.Exception getError()>
<androidx.fragment.app.Fragment: void onStop()>
<com.facebook.datasource.AbstractDataSource$1: void <init>(com.facebook.datasource.AbstractDataSource,boolean,com.facebook.datasource.DataSubscriber,boolean)>
<com.google.android.gms.internal.measurement.zzkh: void zzB(java.lang.Object,long,boolean)>
<android.view.View: int resolveSizeAndState(int,int,int)>
<com.google.android.gms.common.data.DataHolder: long getLong(java.lang.String,int,int)>
<ch.qos.logback.core.joran.spi.InterpretationContext: java.lang.Object peekObject()>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void <init>()>
<com.google.android.gms.measurement.internal.zzkf: void zzB(java.lang.StringBuilder,int,java.util.List)>
<com.google.android.material.tabs.TabLayout: void setPagerAdapter(androidx.viewpager.widget.PagerAdapter,boolean)>
<com.facebook.imagepipeline.memory.PoolConfig: int getBitmapPoolMaxPoolSize()>
<com.facebook.react.uimanager.ReactRoot: android.view.ViewGroup getRootViewGroup()>
<com.facebook.react.views.art.PropHelper: int toFloatArray(com.facebook.react.bridge.ReadableArray,float[])>
<com.google.android.gms.common.api.GoogleApiClient: boolean maybeSignIn(com.google.android.gms.common.api.internal.SignInConnectionListener)>
<com.adjust.sdk.GooglePlayServicesClient: com.adjust.sdk.GooglePlayServicesClient$GooglePlayServicesInfo getGooglePlayServicesInfo(android.content.Context)>
<com.google.android.gms.common.api.internal.zab: void <init>(com.google.android.gms.common.api.internal.zaa)>
<com.facebook.yoga.YogaNode: void setAlignContent(com.facebook.yoga.YogaAlign)>
<androidx.room.RoomOpenHelper$ValidationResult: void <init>(boolean,java.lang.String)>
<com.google.android.gms.internal.auth.zzax: void <init>(com.google.android.gms.common.api.Status)>
<com.google.crypto.tink.KeyManager: java.lang.Object getPrimitive(com.google.crypto.tink.shaded.protobuf.ByteString)>
<com.microsoft.did.feature.cardflow.viewlogic.DeepLinkFragment_MembersInjector: void injectVcCredentialTelemetryClient(com.microsoft.did.feature.cardflow.viewlogic.DeepLinkFragment,com.microsoft.did.util.VerifiableCredentialTelemetryClient)>
<com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder: boolean zzd(com.google.android.gms.auth.api.credentials.CredentialPickerConfig$Builder)>
<com.facebook.react.uimanager.ReactShadowNode: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int)>
<com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher: void handleException(okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback)>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy: ch.qos.logback.core.rolling.helper.ArchiveRemover getArchiveRemover()>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setOn(android.view.View,boolean)>
<com.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.String toString()>
<java.lang.Math: double min(double,double)>
<com.facebook.soloader.nativeloader.NativeLoader: void init(com.facebook.soloader.nativeloader.NativeLoaderDelegate)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzn(com.google.android.gms.internal.measurement.zzdu)>
<com.azure.authenticator.profile.GetAadProfileImageTask: void <init>(android.content.Context,com.azure.authenticator.accounts.GenericAccount,com.azure.authenticator.profile.ProfileImageTaskCallback)>
<com.adjust.sdk.ActivityHandler: boolean checkOrderIdI(java.lang.String)>
<com.google.android.gms.internal.measurement.zzlx: void <init>()>
<com.airbnb.lottie.model.content.ShapeData: boolean isClosed()>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>
<com.facebook.react.LazyReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()>
<com.microsoft.did.datasource.network.ApiProvider: void <init>(retrofit2.Retrofit)>
<com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener: java.lang.String getNativeId()>
<com.google.android.gms.common.internal.BaseGmsClient: void connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)>
<com.google.android.material.button.MaterialButton: int getTextHeight()>
<java.util.concurrent.locks.Condition: boolean await(long,java.util.concurrent.TimeUnit)>
<java.util.Stack: java.lang.Object peek()>
<com.facebook.soloader.SoFileLoader: void load(java.lang.String,int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: java.lang.Object lambda$recordFailure$3(java.lang.String,android.database.sqlite.SQLiteDatabase)>
<com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: javax.inject.Provider fcmTokenDailyRetryRefreshWorker_AssistedFactoryProvider()>
<com.google.android.gms.tasks.Continuation: java.lang.Object then(com.google.android.gms.tasks.Task)>
<com.adjust.sdk.ActivityHandler: void trackAdRevenueI(java.lang.String,org.json.JSONObject)>
<java.util.AbstractMap: void <init>()>
<com.google.android.gms.common.api.internal.zacs: void <init>()>
<com.google.android.datatransport.runtime.backends.CreationContext: com.google.android.datatransport.runtime.time.Clock getMonotonicClock()>
<ch.qos.logback.core.pattern.parser.OptionTokenizer: void emitOptionToken(java.util.List,java.util.List)>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: void <init>()>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void access$setResultAndFinish(com.azure.authenticator.ui.backup.BackupFlowActivity,int)>
<com.google.android.gms.common.server.response.FastJsonResponse: void addConcreteTypeInternal(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.String,com.google.android.gms.common.server.response.FastJsonResponse)>
<com.google.android.gms.common.internal.zam: void <init>(android.os.IBinder)>
<com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams: com.facebook.imagepipeline.memory.PoolParams get()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$SingleKeyframeWrapper: void <init>(java.util.List)>
<com.facebook.cache.common.WriterCallback: void write(java.io.OutputStream)>
<com.google.android.material.textfield.ClearTextEndIconDelegate: boolean hasText(android.text.Editable)>
<com.facebook.react.modules.storage.AsyncStorageErrorUtil: com.facebook.react.bridge.WritableMap getInvalidKeyError(java.lang.String)>
<com.google.common.collect.ImmutableCollection: java.lang.Object[] internalArray()>
<com.facebook.react.uimanager.events.EventDispatcher: java.util.Comparator access$1300()>
<android.widget.Button: void onSizeChanged(int,int,int,int)>
<com.google.android.material.datepicker.MaterialDatePicker: int getThemeResId(android.content.Context)>
<com.facebook.react.modules.core.JavaTimerManager: com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$1102(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable)>
<com.google.android.material.transformation.FabTransformationBehavior$1: void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View)>
<com.facebook.soloader.UnpackingSoSource$InputDso: void close()>
<androidx.appcompat.widget.ListPopupWindow: void setHeight(int)>
<com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)>
<com.airbnb.lottie.LottieComposition: com.airbnb.lottie.model.Marker getMarker(java.lang.String)>
<com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<com.facebook.react.uimanager.events.EventDispatcher: int access$1100(com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.gms.internal.common.zzq: com.google.android.gms.internal.common.zzx zza()>
<com.facebook.react.uimanager.ReactRoot: void setShouldLogContentAppeared(boolean)>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel$performSessionRequest$1: void <init>(com.azure.authenticator.ui.authentication.MsaAuthViewModel,com.microsoft.onlineid.sts.request.ApproveSessionRequest$RequestType,kotlin.coroutines.Continuation)>
<com.google.android.gms.auth.api.proxy.ProxyResponse: void <init>(int,android.os.Bundle,byte[])>
<com.adjust.sdk.Util: boolean equalString(java.lang.String,java.lang.String)>
<com.azure.authenticator.accounts.GenericAccount: void setRestoreCapability(com.azure.authenticator.accounts.RestoreCapability)>
<com.facebook.imageformat.DefaultImageFormatChecker: boolean isJpegHeader(byte[],int)>
<com.facebook.imagepipeline.memory.MemoryChunk: void close()>
<com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)>
<com.google.android.material.chip.Chip: boolean ensureAccessibleTouchTarget(int)>
<androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>
<com.facebook.imagepipeline.producers.ProducerContext: com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean shouldHide(android.view.View,float)>
<com.google.android.gms.internal.measurement.zzji: int zzc(java.lang.Object)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry_Factory: void <init>(javax.inject.Provider,javax.inject.Provider)>
<com.google.android.gms.internal.measurement.zzgg: int indexOf(java.lang.Object)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: com.azure.authenticator.accounts.AadAccount getAadAccount()>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>
<com.google.android.material.datepicker.MonthAdapter: int firstPositionInMonth()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setMyLocationButtonEnabled(boolean)>
<ch.qos.logback.core.rolling.helper.FileFinder: java.lang.String unescapePath(java.lang.String)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1: void onChange(boolean,android.net.Uri)>
<com.facebook.react.animated.NativeAnimatedNodesManager: void disconnectAnimatedNodeFromView(int,int)>
<com.adjust.sdk.AdjustFactory$1$1: void <init>(com.adjust.sdk.AdjustFactory$1)>
<com.facebook.drawee.controller.AbstractDraweeController: void addControllerListener(com.facebook.drawee.controller.ControllerListener)>
<com.facebook.imagepipeline.cache.DefaultCacheKeyFactory: void <init>()>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.internal.measurement.zzdo: com.google.android.gms.internal.measurement.zzdo zzb()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig$Builder builder()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int)>
<com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker: com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker getInstance()>
<com.google.android.material.shape.ShapeAppearancePathProvider: com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.Postprocessor getPostprocessor()>
<android.widget.ImageButton: void setVisibility(int)>
<com.facebook.react.bridge.ReactSoftException: void logSoftException(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.location.zzav: void <init>(android.content.Context,com.google.android.gms.internal.location.zzbg)>
<com.google.android.datatransport.runtime.backends.MetadataBackendRegistry$BackendFactoryProvider: java.util.Map getBackendProviders()>
<com.google.common.collect.Ordering: com.google.common.collect.Ordering onResultOf(com.google.common.base.Function)>
<com.facebook.react.views.text.TextInlineImageSpan: void onFinishTemporaryDetach()>
<com.facebook.react.views.image.ReactImageView: float[] access$300()>
<com.google.android.gms.common.api.internal.RegisterListenerMethod: void registerListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: void <init>()>
<com.facebook.imagepipeline.producers.ProducerContext: boolean isIntermediateResultExpected()>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStore: void recordNextCallTime(com.google.android.datatransport.runtime.TransportContext,long)>
<com.google.android.material.chip.ChipDrawable: void setTextEndPadding(float)>
<androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)>
<ch.qos.logback.core.pattern.parser.FormattingNode: int hashCode()>
<com.google.android.gms.measurement.internal.zzfb: void <init>(com.google.android.gms.measurement.internal.zzfb$zza)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$onTicketAcquired$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback,com.microsoft.onlineid.UserAccount,com.microsoft.onlineid.Ticket,android.os.Bundle,kotlin.coroutines.Continuation)>
<com.google.common.collect.ImmutableList$SubList: com.google.common.collect.ImmutableList subList(int,int)>
<java.util.Map: java.lang.Object remove(java.lang.Object)>
<com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.proto.OutputPrefixType getOutputPrefixType()>
<android.view.MenuItem: int getOrder()>
<com.google.android.gms.internal.measurement.zzdf: boolean zzi()>
<com.facebook.common.internal.Objects$ToStringHelper: com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object)>
<android.os.Parcel: byte[] createByteArray()>
<com.facebook.react.uimanager.MatrixMathHelper: double roundTo3Places(double)>
<ch.qos.logback.core.net.SyslogOutputStream: int getSendBufferSize()>
<com.microsoft.authenticator.mfasdk.authentication.entities.AdditionalAuthDetails: void setLongitude(java.lang.Double)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onNgcRegistrationError$1: void <init>(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.microsoft.onlineid.exception.AuthenticationException,kotlin.coroutines.Continuation)>
<com.google.android.gms.common.api.internal.zabl: boolean zaL(boolean)>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: java.lang.String getBackupUpdateDate()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onCreateView$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.google.android.material.chip.ChipDrawable: void setChipIconSizeResource(int)>
<com.google.android.gms.common.api.internal.LifecycleCallback: android.app.Activity getActivity()>
<com.google.android.material.datepicker.YearGridAdapter$ViewHolder: void <init>(android.widget.TextView)>
<com.facebook.imagepipeline.listener.RequestListener: void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean)>
<com.airbnb.lottie.LottieAnimationView: void onVisibilityChanged(android.view.View,int)>
<com.google.android.gms.common.server.response.FastJsonResponse: void zae(com.google.android.gms.common.server.response.FastJsonResponse$Field,long)>
<com.google.android.material.chip.ChipGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateStateOnScroll(int,int)>
<com.google.android.gms.common.util.ArrayUtils: void writeArray(java.lang.StringBuilder,boolean[])>
<com.google.android.gms.location.places.PlaceReport: java.lang.String getPlaceId()>
<java.util.HashSet: java.util.Iterator iterator()>
<com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)>
<com.google.android.gms.maps.model.LatLngBounds: boolean zza(double)>
<com.facebook.react.modules.network.RequestBodyUtil: okhttp3.RequestBody getEmptyBody(java.lang.String)>
<com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)>
<com.facebook.imagepipeline.image.QualityInfo: int getQuality()>
<com.facebook.react.bridge.DynamicFromMap$1: void <init>()>
<com.evernote.android.job.JobProxy$Common: long getAverageDelayMsSupportFlex(com.evernote.android.job.JobRequest)>
<ch.qos.logback.core.util.ExecutorServiceUtil: void shutdown(java.util.concurrent.ExecutorService)>
<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>
<com.evernote.android.job.v21.JobProxy21: int convertNetworkType(com.evernote.android.job.JobRequest$NetworkType)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getReactTag()>
<com.microsoft.authenticator.authentication.aad.abstraction.AadTokenRefreshManager: void initializeBroker()>
<com.facebook.imagepipeline.memory.Bucket: int getFreeListSize()>
<com.adjust.sdk.ActivityHandler$37: void <init>(com.adjust.sdk.ActivityHandler,com.adjust.sdk.SessionResponseData)>
<com.google.android.gms.internal.measurement.zzdt: com.google.android.gms.internal.measurement.zzdt zzf()>
<ch.qos.logback.core.ContextBase: long getBirthTime()>
<com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$AnimationListener: void onValueChanged()>
<com.adjust.sdk.UtilNetworking: void setUserAgent(java.lang.String)>
<com.facebook.drawee.generic.RootDrawable: void setControllerOverlay(android.graphics.drawable.Drawable)>
<com.azure.authenticator.ui.authentication.AbstractAuthRequestActivity: void lambda$buildDialog$9$AbstractAuthRequestActivity(android.content.DialogInterface)>
<com.google.android.gms.common.internal.zzab: void <init>(android.os.IBinder)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_15_16()>
<ch.qos.logback.core.net.server.RemoteReceiverStreamClient: void close()>
<com.airbnb.lottie.LottieDrawable: int getRepeatCount()>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase: void setDateInCurrentPeriod(long)>
<com.evernote.android.job.JobStorage$JobCacheId: com.evernote.android.job.JobRequest create(java.lang.Integer)>
<com.google.android.gms.common.util.DeviceProperties: boolean isAuto(android.content.pm.PackageManager)>
<com.google.android.material.chip.Chip: android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip)>
<com.facebook.shimmer.Shimmer$ColorHighlightBuilder: com.facebook.shimmer.Shimmer$ColorHighlightBuilder setBaseColor(int)>
<ch.qos.logback.classic.joran.action.FindIncludeAction: void <init>()>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory)>
<com.azure.authenticator.accounts.GenericAccount: java.lang.String generateRfcTotp()>
<com.google.android.gms.common.api.internal.zax: void zap(com.google.android.gms.common.api.internal.zax)>
<com.facebook.react.MemoryPressureRouter: void <init>(android.content.Context)>
<java.io.IOException: void printStackTrace()>
<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependents(android.view.View)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor: void reset()>
<android.app.Dialog: android.view.Window getWindow()>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountCallback$generateNgcKey$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.react.animated.TransformAnimatedNode: void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap)>
<com.google.android.gms.common.GoogleApiAvailability: boolean isUserResolvableError(int)>
<com.google.android.gms.internal.measurement.zznl: boolean zzb()>
<android.widget.LinearLayout: void onRtlPropertiesChanged(int)>
<com.google.android.gms.measurement.internal.zzgo: void <init>(com.google.android.gms.measurement.internal.zzhn,android.os.Bundle)>
<com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)>
<com.google.android.material.datepicker.CalendarConstraints: int getMonthSpan()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: int getFadeDuration()>
<com.google.android.gms.internal.measurement.zznv: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$configureEnterpriseControls$$inlined$CoroutineExceptionHandler$1: void <init>(kotlinx.coroutines.CoroutineExceptionHandler$Key,com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel)>
<com.airbnb.lottie.model.animatable.AnimatableShapeValue: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation createAnimation()>
<ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy: void <init>()>
<okhttp3.Request: java.lang.Object tag()>
<androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder allowMainThreadQueries()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)>
<com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)>
<com.google.android.material.snackbar.SnackbarManager: boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback)>
<com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>
<com.microsoft.authenticator.backup.entities.metadata.BackupMetadata: java.lang.String getDeviceName()>
<com.evernote.android.job.Job: android.content.Context getContext()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.facebook.react.bridge.JSBundleLoader$4: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.common.api.internal.zabo: com.google.android.gms.common.api.internal.ApiKey zac(com.google.android.gms.common.api.internal.zabo)>
<com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)>
<com.google.android.material.shape.ShapePath$PathLineOperation: float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy: void setTimeBasedRollingPolicy(ch.qos.logback.core.rolling.TimeBasedRollingPolicy)>
<com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.zzq)>
<com.google.android.gms.common.internal.RootTelemetryConfiguration: boolean getMethodInvocationTelemetryEnabled()>
<java.util.ArrayDeque: void addLast(java.lang.Object)>
<com.google.android.gms.common.api.internal.zabl: void zaH(com.google.android.gms.common.api.Status,java.lang.Exception,boolean)>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector)>
<com.facebook.drawee.generic.RoundingParams: float getPadding()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.facebook.common.internal.Preconditions: void checkArgument(boolean)>
<com.airbnb.lottie.LottieDrawable$2: void <init>(com.airbnb.lottie.LottieDrawable)>
<com.google.common.base.MoreObjects$ToStringHelper: void java8CompatibilityCheck()>
<ch.qos.logback.classic.spi.ClassPackagingData: java.lang.String getCodeLocation()>
<com.azure.authenticator.storage.database.AccountDao: void updateAccount(com.azure.authenticator.storage.database.DbAccount)>
<com.adjust.sdk.AdjustFactory: long getTimerInterval()>
<com.google.android.material.shape.CornerSize: float getCornerSize(android.graphics.RectF)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_14_15()>
<ch.qos.logback.core.sift.Discriminator: java.lang.String getDiscriminatingValue(java.lang.Object)>
<com.google.android.material.chip.Chip: boolean handleAccessibilityExit(android.view.MotionEvent)>
<com.facebook.drawee.drawable.RoundedDrawable: void updatePath()>
<com.google.android.gms.common.zzk: void <init>(byte[])>
<com.google.android.material.tabs.TabLayout: void updateAllTabs()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)>
<com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity_MembersInjector: void injectAuthIntentSenderProvider(com.microsoft.brooklyn.module.autofill.dialogs.AddressSaveNudgeActivity,com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider)>
<java.util.concurrent.TimeUnit: long toSeconds(long)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment_MembersInjector: void injectMembers(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<android.view.View: android.os.IBinder getWindowToken()>
<ch.qos.logback.core.net.server.AbstractServerSocketAppender: java.lang.String getAddress()>
<com.google.android.gms.tasks.zzac: void <init>(int,com.google.android.gms.tasks.zzw)>
<com.azure.authenticator.notifications.msa.MsaProtectionNotificationProcessingResult: com.azure.authenticator.notifications.msa.MsaProtectionNotificationProcessingResult[] values()>
<com.google.android.gms.auth.api.signin.internal.Storage: void zaa(java.lang.String,java.lang.String)>
<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)>
<com.microsoft.authenticator.registration.aad.entities.AadAddAccountStatus: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>
<com.facebook.drawee.view.DraweeHolder: android.graphics.drawable.Drawable getTopLevelDrawable()>
<com.airbnb.lottie.animation.content.ContentGroup: java.lang.String getName()>
<com.adjust.sdk.Util: java.lang.String readStringField(java.io.ObjectInputStream$GetField,java.lang.String,java.lang.String)>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>
<com.azure.authenticator.PhoneFactorApplication_MembersInjector: void injectMembers(com.azure.authenticator.PhoneFactorApplication)>
<com.google.android.gms.common.api.internal.zan: void <init>(com.google.android.gms.common.api.internal.zao,android.app.Dialog)>
<com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)>
<com.azure.authenticator.ui.fragment.main.SettingsFragment: void configureAutofillAuthPreference()>
<com.facebook.react.views.view.ReactViewBackgroundDrawable: int fastBorderCompatibleColorOrZero(int,int,int,int,int,int,int,int)>
<com.facebook.yoga.YogaOverflow: int intValue()>
<android.os.Vibrator: void cancel()>
<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<com.facebook.react.uimanager.UIManagerModule$2: void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,java.lang.Object)>
<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>
<com.facebook.react.ReactAndroidHWInputDeviceHelper: void dispatchEvent(java.lang.String,int,int)>
<android.view.View: int getMeasuredState()>
<com.google.android.gms.internal.maps.zzh: void setStrokeWidth(float)>
<com.google.android.gms.measurement.internal.zzal: long zze(com.google.android.gms.measurement.internal.zzal,long)>
<com.google.android.material.tabs.TabLayout$Tab: void select()>
<com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)>
<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext reset(int)>
<com.google.android.material.transformation.FabTransformationBehavior: float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)>
<com.google.android.gms.common.api.internal.NonGmsServiceBrokerClient: void zaa(java.lang.String)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)>
<com.facebook.imagepipeline.request.ImageRequest: com.facebook.imagepipeline.common.BytesRange getBytesRange()>
<com.facebook.imagepipeline.cache.CountingLruMap: java.util.ArrayList removeAll(com.facebook.common.internal.Predicate)>
<com.facebook.react.modules.core.ChoreographerCompat: void removeFrameCallback(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback)>
<com.airbnb.lottie.LottieCompositionFactory: com.airbnb.lottie.LottieResult fromJsonReaderSyncInternal(com.airbnb.lottie.parser.moshi.JsonReader,java.lang.String,boolean)>
<com.google.android.gms.maps.model.zzn: void <init>()>
<com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>
<ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP: void setMaxFileSize(ch.qos.logback.core.util.FileSize)>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder setRotationOptions(com.facebook.imagepipeline.common.RotationOptions)>
<ch.qos.logback.core.joran.spi.Interpreter: java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.favicon.FaviconRefreshWorker_AssistedFactory access$15200(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.memory.PoolFactory access$1900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.google.android.gms.measurement.internal.zzaf: com.google.android.gms.measurement.internal.zzaf zzc(java.lang.String)>
<com.google.android.material.navigation.NavigationBarMenuView: com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int)>
<com.google.android.gms.auth.api.credentials.HintRequest$Builder: boolean zze(com.google.android.gms.auth.api.credentials.HintRequest$Builder)>
<com.google.android.gms.internal.measurement.zzjr: boolean contains(java.lang.Object)>
<com.facebook.imagepipeline.cache.CountingLruMap: int getCount()>
<com.google.android.gms.maps.internal.zzai: void <init>(android.os.IBinder)>
<com.google.android.gms.maps.model.IndoorBuilding$zza: com.google.android.gms.internal.maps.zzq zza(android.os.IBinder)>
<com.google.android.gms.internal.measurement.zzgu: int zza(int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$13: void <init>(long)>
<ch.qos.logback.core.joran.util.StringToObjectConverter: java.lang.Object convertToEnum(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class)>
<com.google.android.gms.common.ErrorDialogFragment: void show(android.app.FragmentManager,java.lang.String)>
<com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onSlide(android.view.View,float)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightPercent(float)>
<com.facebook.imagepipeline.memory.BucketMap: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: void zzaS(com.google.android.gms.internal.measurement.zzdj,long)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.identity.client.api.BrokerHostingAppPublicApi brokerHostingAppPublicApi()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>
<com.azure.authenticator.ui.msa.MsaProtectionActivity: java.lang.String getUrl()>
<com.google.android.material.textfield.IndicatorViewController: android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)>
<com.google.android.gms.internal.measurement.zzla: long zzG()>
<com.facebook.react.views.image.ReactImageView: void access$400(com.facebook.react.views.image.ReactImageView,float[])>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: boolean zzr(com.google.android.gms.common.AccountPicker$AccountChooserOptions,boolean)>
<javax.mail.internet.MimeMessage: void <init>(javax.mail.Session)>
<com.facebook.react.animated.InterpolationAnimatedNode: double interpolate(double,double[],double[],java.lang.String,java.lang.String)>
<com.facebook.drawee.controller.AbstractDraweeController: android.graphics.drawable.Drawable createDrawable(java.lang.Object)>
<ch.qos.logback.core.net.DefaultSocketConnector: void <init>(java.net.InetAddress,int,long,long)>
<ch.qos.logback.core.spi.DeferredProcessingAware: void prepareForDeferredProcessing()>
<com.adjust.sdk.Util: java.lang.String getFireAdvertisingId(android.content.ContentResolver)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int)>
<com.android.installreferrer.api.InstallReferrerClientImpl$InstallReferrerServiceConnection: void <init>(com.android.installreferrer.api.InstallReferrerClientImpl,com.android.installreferrer.api.InstallReferrerStateListener,com.android.installreferrer.api.InstallReferrerClientImpl$1)>
<com.facebook.imagepipeline.producers.StatefulProducerRunnable: void onFailure(java.lang.Exception)>
<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void writeRaw(java.lang.String)>
<com.adjust.sdk.DeviceInfo: void reloadPlayIds(android.content.Context)>
<com.google.android.material.floatingactionbutton.MotionStrategy: java.util.List getListeners()>
<com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: int getJobId(com.google.android.datatransport.runtime.TransportContext)>
<com.facebook.react.views.text.TextAttributeProps: int getTextBreakStrategy(java.lang.String)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.DecodeProducer newDecodeProducer(com.facebook.imagepipeline.producers.Producer)>
<com.facebook.imagepipeline.producers.NetworkFetchProducer$1: void <init>(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setBorderTopLeftRadius(android.view.View,float)>
<com.google.android.gms.internal.measurement.zzgf: int zzm(com.google.android.gms.internal.measurement.zzji,int,byte[],int,int,com.google.android.gms.internal.measurement.zzhz,com.google.android.gms.internal.measurement.zzge)>
<com.google.android.gms.internal.measurement.zzkz: long zzx()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.android.gms.common.api.Api: java.lang.String zad()>
<com.google.android.gms.internal.measurement.zzdg: com.google.android.gms.internal.measurement.zzdj zza(int)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity$onAddAccountCancel$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.facebook.common.webp.WebpBitmapFactory: void setWebpErrorLogger(com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger)>
<com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)>
<com.facebook.common.memory.PooledByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>
<com.google.android.gms.dynamite.zzg: void <init>()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout(float,float)>
<com.google.android.datatransport.runtime.scheduling.DefaultScheduler$$Lambda$1: void <init>(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.TransportScheduleCallback,com.google.android.datatransport.runtime.EventInternal)>
<com.facebook.react.views.image.ReactImageView: void maybeUpdateView()>
<com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel_MembersInjector: void injectStorage(com.microsoft.brooklyn.ui.common.BrooklynSharedViewModel,com.azure.authenticator.storage.Storage)>
<com.google.android.gms.internal.maps.zzo: com.google.android.gms.internal.maps.zzn zze(android.os.IBinder)>
<com.google.android.gms.internal.auth-api.zzad: void <init>()>
<java.util.regex.Matcher: java.lang.String group()>
<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<java.util.List: java.util.Iterator iterator()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.enterpriseDenyList.persistence.EnterpriseDenyListStorage enterpriseDenyListStorage()>
<com.google.android.gms.measurement.internal.zzjh: void zza()>
<com.google.android.gms.internal.measurement.zzdq: int zzf()>
<com.google.android.material.tabs.TabLayout: void removeAllTabs()>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions zze()>
<com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zan(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod,java.lang.Runnable)>
<ch.qos.logback.classic.pattern.DateConverter: java.util.Locale parseLocale(java.lang.String)>
<com.facebook.react.bridge.MemoryPressure: void <init>(java.lang.String,int)>
<com.google.android.gms.measurement.internal.zzg: long zzD()>
<android.app.job.JobParameters: int getJobId()>
<android.graphics.Path: void transform(android.graphics.Matrix)>
<com.airbnb.lottie.animation.keyframe.PathKeyframe: void createPath()>
<com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)>
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)>
<java.util.Properties: java.util.Set keySet()>
<com.google.android.gms.maps.internal.IStreetViewPanoramaFragmentDelegate: void onDestroy()>
<com.facebook.react.views.text.CustomStyleSpan: void <init>(int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void updateJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest: com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder builder()>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
<ch.qos.logback.core.android.SystemPropertiesProxy: void setClassLoader(java.lang.ClassLoader)>
<android.os.Looper: void loop()>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>
<com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity$1: void <init>(com.azure.authenticator.ui.authentication.Hilt_AadRemoteNgcSessionActivity)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<com.facebook.cache.disk.DiskCacheConfig$Builder: void <init>(android.content.Context)>
<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setTrackColorForTrue(android.view.View,java.lang.Integer)>
<com.facebook.react.views.scroll.ReactScrollView: boolean isScrollPerfLoggingEnabled()>
<com.adjust.sdk.SharedPreferencesManager: void saveRawReferrerArray(org.json.JSONArray)>
<com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()>
<com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)>
<com.google.android.gms.internal.measurement.zzip: void <init>()>
<com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNodeToNode(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)>
<com.microsoft.authenticator.core.configuration.selfhost.SelfhostConfig: void <init>(android.content.Context)>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>
<com.facebook.drawee.gestures.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<ch.qos.logback.classic.spi.IThrowableProxy: ch.qos.logback.classic.spi.IThrowableProxy getCause()>
<com.facebook.yoga.YogaNodeJNIFinalizer: void freeNatives()>
<com.google.android.gms.common.util.DeviceProperties: boolean zza(android.content.Context)>
<com.microsoft.workaccount.workplacejoin.WorkplaceJoin: com.microsoft.workaccount.workplacejoin.WorkplaceJoin getInstance()>
<java.util.Collection: boolean isEmpty()>
<com.google.android.material.navigation.NavigationBarPresenter$SavedState: void <init>(android.os.Parcel)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _matchFalse()>
<com.google.android.gms.common.internal.zzaf: void zzc(android.content.Context)>
<java.util.Calendar: int get(int)>
<com.google.android.material.timepicker.ChipTextInputComboView: com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.registration.aad.businesslogic.AadPhoneSignInSetupUseCase aadPhoneSignInSetupUseCase()>
<android.os.PowerManager: boolean isInteractive()>
<ch.qos.logback.core.encoder.LayoutWrappingEncoder: byte[] convertToBytes(java.lang.String)>
<com.evernote.android.job.JobExecutor: long access$100()>
<com.microsoft.did.businesslogic.CorrelationUseCase: void <init>(com.microsoft.did.sdk.CorrelationVectorService)>
<ch.qos.logback.core.util.COWArrayList: void markAsStale()>
<java.lang.StringBuilder: int length()>
<com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback: com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase access$getMsaRegistrationUseCase$p(com.azure.authenticator.authentication.msa.ui.RegisterMsaNgcCallback)>
<ch.qos.logback.core.spi.ContextAwareBase: void addInfo(java.lang.String,java.lang.Throwable)>
<com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)>
<com.facebook.imagepipeline.memory.PoolConfig$Builder: com.facebook.imagepipeline.memory.PoolStatsTracker access$100(com.facebook.imagepipeline.memory.PoolConfig$Builder)>
<com.google.android.gms.common.data.DataHolder: void close()>
<com.airbnb.lottie.LottieDrawable: void setFontAssetDelegate(com.airbnb.lottie.FontAssetDelegate)>
<com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)>
<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$21: com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$Function lambdaFactory$()>
<com.google.android.gms.internal.location.zzbs: com.google.android.gms.internal.location.zzbs zzk(java.lang.Object[],int)>
<android.view.View: int getImportantForAccessibility()>
<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAadMfaAccountsWithUsername(java.lang.String)>
<com.google.android.gms.maps.StreetViewPanoramaOptions: void <init>(com.google.android.gms.maps.model.StreetViewPanoramaCamera,java.lang.String,com.google.android.gms.maps.model.LatLng,java.lang.Integer,byte,byte,byte,byte,byte,com.google.android.gms.maps.model.StreetViewSource)>
<com.adjust.sdk.SdkClickHandler: java.lang.ref.WeakReference access$300(com.adjust.sdk.SdkClickHandler)>
<com.airbnb.lottie.model.layer.BaseLayer: void setMatteLayer(com.airbnb.lottie.model.layer.BaseLayer)>
<com.google.android.gms.internal.location.zzam: void zze(android.app.PendingIntent,com.google.android.gms.internal.location.zzak,java.lang.String)>
<com.adjust.sdk.AdjustInstance: boolean checkActivityHandler(java.lang.String)>
<com.google.android.material.appbar.HeaderScrollingViewBehavior: boolean shouldHeaderOverlapScrollingChild()>
<com.airbnb.lottie.model.layer.NullLayer: void <init>(com.airbnb.lottie.LottieDrawable,com.airbnb.lottie.model.layer.Layer)>
<java.lang.Long: long longValue()>
<com.evernote.android.job.JobRequest: boolean requiresDeviceIdle()>
<com.azure.authenticator.databinding.EnableRemoteNgcSuccessBinding: android.widget.ScrollView getRoot()>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<com.facebook.yoga.YogaMeasureOutput: long make(int,int)>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
<com.facebook.common.webp.WebpSupportStatus: com.facebook.common.webp.WebpBitmapFactory loadWebpBitmapFactoryIfExists()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _nextAfterName()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginAuto(int)>
<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String)>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<com.google.android.gms.common.images.zah: void <init>()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)>
<com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge fromInt(int)>
<com.google.android.gms.common.zzm: com.google.android.gms.common.zzw zzb(java.lang.String,boolean,boolean,boolean)>
<com.google.android.gms.common.api.internal.ListenerHolder$Notifier: void onNotifyListenerFailed()>
<com.google.android.gms.common.data.DataHolder: double zac(java.lang.String,int,int)>
<com.google.android.gms.internal.measurement.zzkz: long zzA()>
<com.airbnb.lottie.animation.LPaint: void <init>()>
<com.azure.authenticator.notifications.msa.MsaNotificationActionWorker_Factory: com.azure.authenticator.notifications.msa.MsaNotificationActionWorker get(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.material.resources.CancelableFontCallback: void cancel()>
<com.airbnb.lottie.model.KeyPath: void <init>(com.airbnb.lottie.model.KeyPath)>
<com.microsoft.identity.common.java.logging.Logger: void setLogLevel(com.microsoft.identity.common.java.logging.Logger$LogLevel)>
<com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)>
<com.facebook.drawee.drawable.FadeDrawable: void fadeInLayer(int)>
<com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)>
<com.google.android.gms.auth.api.credentials.Credential: java.util.List zzf(com.google.android.gms.auth.api.credentials.Credential)>
<android.widget.LinearLayout: int getLeft()>
<com.google.android.gms.common.api.internal.zax: android.app.PendingIntent zaD()>
<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: short getCoalescingKey(long)>
<android.graphics.Matrix: void mapPoints(float[])>
<bolts.TaskCompletionSource: boolean trySetResult(java.lang.Object)>
<com.adjust.sdk.PackageFactory: com.adjust.sdk.ActivityPackage buildReftagSdkClickPackage(java.lang.String,long,com.adjust.sdk.ActivityState,com.adjust.sdk.AdjustConfig,com.adjust.sdk.DeviceInfo,com.adjust.sdk.SessionParameters)>
<com.google.android.datatransport.cct.internal.AutoValue_AndroidClientInfo$Builder: void <init>()>
<com.google.android.gms.common.internal.GmsClientSupervisor: int getDefaultBindFlags()>
<com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager$$Lambda$3: void <init>()>
<android.view.Window: void setStatusBarColor(int)>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>
<com.facebook.react.uimanager.ReactShadowNode: boolean isLayoutOnly()>
<java.lang.Integer: double doubleValue()>
<com.azure.authenticator.MainNavDirections$ToWelcomeFragment: java.lang.String getType()>
<com.google.android.gms.ads.identifier.AdvertisingIdClient: void zza()>
<com.google.android.gms.internal.measurement.zzm: java.lang.Object zze(android.os.Bundle,java.lang.Class)>
<com.github.amlcurran.showcaseview.ApiUtils: boolean isCompatWithHoneycomb()>
<com.microsoft.authenticator.features.msa.entities.MsaProtectionMessage: java.lang.String getPrimaryButtonText()>
<com.google.android.gms.measurement.internal.zzgf: void zzv()>
<java.util.ArrayDeque: void <init>()>
<androidx.work.WorkInfo: androidx.work.WorkInfo$State getState()>
<com.facebook.imagepipeline.request.ImageRequestBuilder: com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithSource(android.net.Uri)>
<com.google.android.gms.auth.api.identity.GetSignInIntentRequest: java.lang.String getHostedDomainFilter()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$4: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1$dialogBackupAlreadyExistsDialogBuilder$2: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1)>
<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher: java.net.HttpURLConnection downloadFrom(android.net.Uri,int)>
<com.google.android.material.shadow.ShadowViewDelegate: void setShadowPadding(int,int,int,int)>
<com.adjust.sdk.AdjustInstance$7: void <init>(com.adjust.sdk.AdjustInstance,android.content.Context,java.lang.String,long)>
<com.facebook.react.animated.ValueAnimatedNode: void setValueListener(com.facebook.react.animated.AnimatedNodeValueListener)>
<com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.utilitysdk.CommonLibraryController commonLibraryController()>
<com.azure.authenticator.databinding.ViewLogBinding: com.azure.authenticator.databinding.ViewLogBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.facebook.react.modules.network.ForwardingCookieHandler: void clearCookiesAsync(com.facebook.react.bridge.Callback)>
<com.google.android.gms.internal.measurement.zzhe: com.google.android.gms.internal.measurement.zzhq zzc(com.google.android.gms.internal.measurement.zzix,int)>
<androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)>
<com.google.android.material.internal.CollapsingTextHelper: boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean)>
<com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence)>
<com.facebook.cache.disk.DiskStorageCache$CacheStats: void <init>()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onUINeeded$1: void <init>(com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback,kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.common.zzn: boolean hasPrevious()>
<com.google.android.gms.internal.measurement.zzdb: com.google.android.gms.internal.measurement.zzdb zzm()>
<com.google.android.gms.common.images.ImageManager: void <init>(android.content.Context,boolean)>
<com.facebook.react.modules.image.ImageLoaderModule$2: void <init>(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.Promise)>
<com.google.android.gms.measurement.internal.zzdz: void zzn(com.google.android.gms.measurement.internal.zzaa)>
<com.facebook.react.views.checkbox.ReactCheckBox: void setOn(boolean)>
<com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer: com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot()>
<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getMandatorySystemGestureInsets()>
<com.google.android.material.tabs.TabLayout: void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean)>
<com.facebook.imagepipeline.producers.ResizeAndRotateProducer: boolean shouldRotate(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage)>
<com.microsoft.workaccount.workplacejoin.telemetry.TelemetryLogger: void setIsLogEnabled(java.lang.Boolean)>
<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>
<ch.qos.logback.core.util.OptionHelper: java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object)>
<com.google.android.gms.auth.api.credentials.IdToken: java.lang.String getIdToken()>
<org.json.JSONArray: void <init>(java.lang.String)>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment$MsaAccountCallback: void <init>(com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragment)>
<androidx.appcompat.widget.ListPopupWindow: int getSelectedItemPosition()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<com.facebook.react.bridge.JavaOnlyArray: void <init>(java.lang.Object[])>
<ch.qos.logback.classic.spi.ThrowableProxyUtil: void subjoinFirstLine(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy)>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Builder: void <init>()>
<java.lang.Character: int digit(char,int)>
<com.google.android.gms.measurement.internal.zzkg: void <init>(int,java.lang.String,long,java.lang.Long,java.lang.Float,java.lang.String,java.lang.String,java.lang.Double)>
<com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule_SchemaVersionFactory create()>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>
<com.azure.authenticator.ui.authentication.MsaAuthViewModel: void invalidateNgcKey()>
<com.facebook.systrace.SystraceMessage$NoopBuilder: void <init>()>
<com.airbnb.lottie.animation.content.PolystarContent: void createPolygonPath()>
<com.facebook.react.uimanager.ReactShadowNode: int getScreenHeight()>
<com.google.android.material.badge.BadgeDrawable: com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState)>
<java.util.zip.Adler32: long getValue()>
<androidx.preference.PreferenceFragmentCompat: androidx.preference.Preference findPreference(java.lang.CharSequence)>
<com.google.android.material.textfield.CutoutDrawable: void <init>(com.google.android.material.shape.ShapeAppearanceModel)>
<com.google.android.material.transformation.ExpandableBehavior: void <init>(android.content.Context,android.util.AttributeSet)>
<ch.qos.logback.core.sift.DefaultDiscriminator: void <init>()>
<com.google.android.material.navigation.NavigationBarPresenter: void setId(int)>
<com.google.android.gms.internal.measurement.zzbv: void <init>(com.google.android.gms.internal.measurement.zzbs)>
<com.azure.authenticator.authentication.msa.MsaAccountManager$validateAccountAsync$2$validateAccountCallback$1: void <init>(kotlin.coroutines.Continuation)>
<com.google.android.gms.internal.maps.zzh: int getFillColor()>
<com.facebook.imagepipeline.memory.PoolStatsTracker: void onSoftCapReached()>
<ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover: void capTotalSize(java.util.List)>
<com.facebook.imagepipeline.producers.Producer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthPercent(float)>
<javax.net.ssl.SSLSocket: boolean getEnableSessionCreation()>
<com.facebook.react.bridge.DynamicFromObject: boolean isNull()>
<com.facebook.react.ReactActivityDelegate: void onResume()>
<com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void <init>(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>
<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface: void setStyleAttr(android.view.View,java.lang.String)>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>
<com.google.android.material.textfield.IndicatorViewController: void hideError()>
<com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder: com.azure.authenticator.accounts.GenericAccount access$getGenericAccount$p(com.azure.authenticator.ui.fragment.accounts.adapter.DefaultAccountViewHolder)>
<com.adjust.sdk.ActivityHandler: void readConfigFile(android.content.Context)>
<com.google.android.datatransport.cct.internal.AndroidClientInfo: java.lang.String getProduct()>
<com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)>
<com.google.android.gms.maps.internal.IMapFragmentDelegate: com.google.android.gms.dynamic.IObjectWrapper onCreateView(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle)>
<com.facebook.imageutils.BitmapUtil: android.util.Pair decodeDimensions(java.io.InputStream)>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>
<com.airbnb.lottie.model.layer.BaseLayer: void resolveChildKeyPath(com.airbnb.lottie.model.KeyPath,int,java.util.List,com.airbnb.lottie.model.KeyPath)>
<com.azure.authenticator.ui.MainActivity$setStausbarColorForFragments$1: void <init>(com.azure.authenticator.ui.MainActivity)>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: void _reportInvalidToken(java.lang.String,java.lang.String)>
<com.google.android.gms.maps.zzaf: void <init>(com.google.android.gms.maps.StreetViewPanorama,com.google.android.gms.maps.StreetViewPanorama$OnStreetViewPanoramaClickListener)>
<com.facebook.yoga.YogaNode: void setWidth(float)>
<com.facebook.imagepipeline.decoder.ProgressiveJpegParser: void <init>(com.facebook.common.memory.ByteArrayPool)>
<android.os.SystemClock: long elapsedRealtime()>
<ch.qos.logback.core.util.CachingDateFormatter: void <init>(java.lang.String)>
<com.azure.authenticator.accounts.RestoreCapability$RestoreCapabilityEnum$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<com.google.android.material.floatingactionbutton.FloatingActionButton: void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)>
<com.facebook.imagepipeline.core.ProducerFactory: com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer newBitmapMemoryCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer)>
<com.google.android.gms.ads.identifier.AdvertisingIdClient$zza: void disconnect()>
<com.google.android.material.textfield.DropdownMenuEndIconDelegate: com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int)>
<com.google.android.gms.maps.model.TileOverlay: void <init>(com.google.android.gms.internal.maps.zzac)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.authenticator.features.frx.viewLogic.FirstRunSyncToggleFragment injectFirstRunSyncToggleFragment2(com.microsoft.authenticator.features.frx.viewLogic.FirstRunSyncToggleFragment)>
<com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)>
<com.github.amlcurran.showcaseview.ShowcaseView: void access$1000(com.github.amlcurran.showcaseview.ShowcaseView,long)>
<com.google.android.gms.common.internal.zzh: void <init>()>
<com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)>
<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>
<com.google.android.gms.measurement.internal.zzap: void <init>(com.google.android.gms.measurement.internal.zzaq)>
<com.google.android.gms.common.api.internal.zaaz: android.content.Context zak(com.google.android.gms.common.api.internal.zaaz)>
<com.azure.authenticator.accounts.GenericAccount: void setIsTotpCodeShown(boolean)>
<com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.uimanager.UIViewOperationQueue$1)>
<com.azure.authenticator.storage.database.AccountStorage: com.azure.authenticator.accounts.AadAccount getCloudAadMfaAccount(java.lang.String,java.lang.String)>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountCallback$onUINeeded$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<com.facebook.react.views.drawer.events.DrawerSlideEvent: java.lang.String getEventName()>
<com.google.android.gms.internal.location.zzaz: void zzF(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzai)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: kotlinx.coroutines.Job denyAadNgcSession$default(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,java.lang.String,int,java.lang.Object)>
<com.facebook.drawee.backends.pipeline.DefaultDrawableFactory: void <init>(android.content.res.Resources,com.facebook.imagepipeline.drawable.DrawableFactory)>
<com.microsoft.authenticator.reactnative.ReactNativeFragmentManager: void startReactFragment$default(androidx.fragment.app.FragmentActivity,int,java.lang.String,com.microsoft.authenticator.core.telemetry.TelemetryManager,android.os.Bundle,int,java.lang.Object)>
<com.adjust.sdk.ActivityHandler$20: void <init>(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.common.ConnectionResult: boolean hasResolution()>
<com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()>
<com.google.android.gms.common.server.converter.StringToIntConverter: com.google.android.gms.common.server.converter.StringToIntConverter add(java.lang.String,int)>
<androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)>
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>
<android.text.Editable: int getSpanStart(java.lang.Object)>
<com.microsoft.brooklyn.module.generatepasswords.presentationlogic.ChangePasswordAutofillViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions mapType(int)>
<com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes()>
<com.google.android.gms.internal.ads_identifier.zzc: void zza(android.os.Parcel,boolean)>
<com.facebook.imagepipeline.memory.MemoryPooledByteBuffer: boolean isClosed()>
<com.facebook.react.uimanager.util.ReactFindViewUtil: void notifyViewRendered(android.view.View)>
<com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty: void <init>(java.lang.String)>
<com.google.android.gms.common.internal.zab: void <init>(java.util.Set)>
<com.google.android.gms.common.GoogleApiAvailability: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,com.google.android.gms.common.ConnectionResult)>
<com.azure.authenticator.ui.MainActivity: void setupAppToolbar()>
<android.view.View: void requestLayout()>
<com.google.android.gms.internal.measurement.zzls: boolean zzb()>
<com.google.android.gms.location.FusedLocationProviderClient: void zzc(com.google.android.gms.tasks.CancellationToken,com.google.android.gms.internal.location.zzba,com.google.android.gms.internal.location.zzaz,com.google.android.gms.tasks.TaskCompletionSource)>
<com.google.android.gms.internal.measurement.zzgz: void zzl(int)>
<com.airbnb.lottie.network.LottieFetchResult: java.lang.String error()>
<androidx.fragment.app.Fragment: android.content.Context requireContext()>
<com.google.android.gms.common.data.DataHolder: void zaa()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)>
<com.google.android.gms.internal.measurement.zzp: void setConsent(android.os.Bundle,long)>
<com.facebook.cache.disk.DiskStorageCache: boolean maybeUpdateFileCacheSizeAndIndex()>
<com.google.android.gms.internal.measurement.zzdj: void zzaV(com.google.android.gms.internal.measurement.zzdj)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: androidx.lifecycle.MutableLiveData getRequestAddress()>
<com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback$onAcquireKeyError$$inlined$let$lambda$1: void <init>(com.azure.authenticator.ui.backup.BackupFlowActivity,kotlin.coroutines.Continuation,com.azure.authenticator.ui.backup.BackupFlowActivity$GetKeyCallback,com.microsoft.onlineid.exception.AuthenticationException)>
<ch.qos.logback.classic.turbo.MDCValueLevelPair: java.lang.String getValue()>
<androidx.fragment.app.Fragment: int getId()>
<com.facebook.imagepipeline.producers.ProducerContextCallbacks: void onPriorityChanged()>
<android.widget.LinearLayout: void setId(int)>
<com.google.android.gms.internal.measurement.zzw: void <init>(android.os.IBinder)>
<android.widget.LinearLayout: void addView(android.view.View)>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<com.google.android.gms.tasks.zzaa: void <init>(com.google.android.gms.tasks.zzx)>
<com.adjust.sdk.ActivityHandler$InternalState: void <init>(com.adjust.sdk.ActivityHandler)>
<android.view.View: void setTranslationY(float)>
<com.azure.authenticator.storage.database.AccountStorage: java.util.List getAllAadAccounts()>
<com.airbnb.lottie.LottieAnimationView: void playAnimation()>
<com.google.android.material.textfield.TextInputLayout: void refreshIconDrawableState(com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: boolean isFinished()>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>
<ch.qos.logback.core.pattern.PatternLayoutBase: void setOutputPatternAsHeader(boolean)>
<android.content.Context: void startActivity(android.content.Intent)>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzr(long)>
<com.google.android.gms.common.ConnectionResult: void <init>(int,android.app.PendingIntent,java.lang.String)>
<com.google.android.gms.internal.measurement.zzlp: boolean zza()>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions$Builder setSupported(boolean)>
<com.google.android.gms.measurement.internal.zzkd: void zzB(com.google.android.gms.measurement.internal.zzas,com.google.android.gms.measurement.internal.zzp)>
<com.facebook.imagepipeline.memory.PoolFactory: com.facebook.common.memory.ByteArrayPool getSmallByteArrayPool()>
<com.facebook.imagepipeline.image.EncodedImage: void parseMetaDataIfNeeded()>
<com.google.android.gms.measurement.internal.zzhu: void <init>(java.lang.String,java.lang.String,long,boolean,long)>
<com.google.android.material.snackbar.BaseTransientBottomBar: void animateViewIn()>
<com.google.android.material.timepicker.ClockHandView: void drawSelector(android.graphics.Canvas)>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)>
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)>
<com.google.android.material.textfield.CutoutDrawable: void postDraw(android.graphics.Canvas)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.facebook.react.views.slider.ReactSlider: double getStepValue()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int)>
<android.view.Window: void setLayout(int,int)>
<com.facebook.react.views.checkbox.ReactCheckBoxManager: void setOn(com.facebook.react.views.checkbox.ReactCheckBox,boolean)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: void <init>()>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)>
<com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy copy()>
<com.microsoft.authenticator.workaccount.businesslogic.BrokerAccountUseCase: java.lang.Object syncBrokerAccounts(kotlin.coroutines.Continuation)>
<com.google.common.collect.MapMakerInternalMap$InternalEntry: int getHash()>
<com.google.android.gms.internal.measurement.zzgc: void zzbL()>
<com.facebook.soloader.UnpackingSoSource: void extractDso(com.facebook.soloader.UnpackingSoSource$InputDso,byte[])>
<javax.net.ssl.SSLSocket: void setKeepAlive(boolean)>
<com.google.android.gms.measurement.internal.zzkk: int zzap(java.lang.String)>
<androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>
<com.microsoft.onlineid.AccountManager: com.microsoft.onlineid.AccountManager setAccountCollectionCallback(com.microsoft.onlineid.IAccountCollectionCallback)>
<com.google.android.gms.common.api.Response: void setResult(com.google.android.gms.common.api.Result)>
<com.google.android.material.shape.MaterialShapeDrawable: float getBottomLeftCornerResolvedSize()>
<com.google.android.gms.common.server.response.FastJsonResponse: void zac(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.math.BigInteger)>
<bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>
<android.widget.LinearLayout: void bringToFront()>
<com.airbnb.lottie.model.content.Repeater: boolean isHidden()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: int getMapType()>
<com.google.android.gms.maps.model.TileOverlayOptions: boolean getFadeIn()>
<com.google.android.gms.common.api.internal.zabb: void <init>(com.google.android.gms.common.api.internal.zaba)>
<com.google.android.material.badge.BadgeDrawable$SavedState$1: com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel)>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
<com.google.android.gms.internal.measurement.zzkz: com.google.android.gms.internal.measurement.zzla zzK()>
<com.google.android.material.shape.MaterialShapeDrawable: float getStrokeInsetLength()>
<com.facebook.yoga.YogaNode: void setMinHeight(float)>
<com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void <init>(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.views.view.ReactViewGroup$1)>
<com.facebook.imagepipeline.request.ImageRequest$RequestLevel: int getValue()>
<com.google.android.gms.internal.measurement.zzjk: void zzX(int,java.util.List,com.google.android.gms.internal.measurement.zzha)>
<com.facebook.imagepipeline.memory.BucketMap: void maybePrune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry)>
<com.google.android.gms.common.api.GoogleApiClient: java.util.Set getAllClients()>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void clearImageOriginListeners()>
<com.facebook.drawee.debug.DebugControllerOverlayDrawable: void prepareDebugTextParameters(android.graphics.Rect,int,int)>
<android.view.ViewGroup: int getWidth()>
<com.google.android.material.chip.ChipDrawable: void setCloseIconContentDescription(java.lang.CharSequence)>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<java.lang.Float: float intBitsToFloat(int)>
<android.content.Intent: android.os.Bundle getExtras()>
<java.io.DataOutputStream: void close()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void processAddAccountArguments(android.os.Bundle,androidx.fragment.app.FragmentActivity)>
<com.google.common.collect.ForwardingConcurrentMap: void <init>()>
<com.evernote.android.job.JobRequest: void setStarted(boolean)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)>
<com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()>
<android.os.Messenger: void <init>(android.os.IBinder)>
<com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()>
<com.google.android.datatransport.runtime.TransportContext: void <init>()>
<com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()>
<dummyMainClass: com.azure.authenticator.ui.fragment.main.ThirdPartyNoticeFragment dummyMainMethod_com_azure_authenticator_ui_fragment_main_ThirdPartyNoticeFragment(android.content.Intent,android.app.Activity)>
<com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>
<com.google.android.material.internal.ThemeEnforcement: void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int)>
<com.facebook.common.logging.FLog: void d(java.lang.String,java.lang.String)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: com.google.android.datatransport.Encoding toEncoding(java.lang.String)>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zzb(android.os.Parcel,int,int,int)>
<androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)>
<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR2()>
<com.google.android.gms.location.zzbv: void <init>()>
<com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)>
<com.google.android.gms.tasks.zze: void <init>(com.google.android.gms.tasks.zzf,com.google.android.gms.tasks.Task)>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel: kotlin.Pair evaluateRichContextPolicy(com.microsoft.authenticator.graphclient.entities.AuthMethodsPolicyResult)>
<com.github.amlcurran.showcaseview.ShotStateStore: void <init>(android.content.Context)>
<dagger.hilt.android.internal.managers.ApplicationComponentManager: void <init>(dagger.hilt.android.internal.managers.ComponentSupplier)>
<com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)>
<com.facebook.imagepipeline.producers.JobScheduler: void <init>(java.util.concurrent.Executor,com.facebook.imagepipeline.producers.JobScheduler$JobRunnable,int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)>
<com.microsoft.authenticator.authentication.aad.entities.IAuthenticationResultWrapper: java.lang.String getTenantId()>
<com.facebook.react.uimanager.events.Event: short getCoalescingKey()>
<com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.did.datasource.db.dao.PresentationReceiptDao presentationReceiptDao()>
<com.google.android.gms.internal.measurement.zzbr: void zzf(com.google.android.gms.measurement.internal.zzgm)>
<com.facebook.imagepipeline.producers.BaseProducerContextCallbacks: void <init>()>
<com.google.android.gms.auth.api.credentials.CredentialsApi: com.google.android.gms.common.api.PendingResult request(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.auth.api.credentials.CredentialRequest)>
<com.facebook.react.animated.NativeAnimatedModule$17: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int)>
<com.facebook.react.views.art.ARTSurfaceViewManager: com.facebook.react.views.art.ARTSurfaceView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)>
<org.xml.sax.helpers.AttributesImpl: void <init>(org.xml.sax.Attributes)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void <init>(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig,com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)>
<com.google.android.material.tabs.ElasticTabIndicatorInterpolator: void <init>()>
<ch.qos.logback.classic.net.SimpleSocketServer: void usage(java.lang.String)>
<com.google.android.gms.internal.location.zza: android.os.Parcel zza()>
<com.google.android.datatransport.runtime.TransportRuntime: void initialize(android.content.Context)>
<ch.qos.logback.core.joran.action.AppenderAction: void <init>()>
<com.google.common.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$5: com.microsoft.authenticator.experimentation.abstraction.ExperimentationWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.internal.measurement.zzdd: com.google.android.gms.internal.measurement.zzdd zzb()>
<com.fasterxml.jackson.core.util.BufferRecycler: void <init>(int,int)>
<com.facebook.imagepipeline.request.Postprocessor: java.lang.String getName()>
<com.google.android.material.shape.ShapeAppearancePathProvider: void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.facebook.react.views.textinput.ReactEditText: boolean requestFocusInternal()>
<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder: android.graphics.drawable.Drawable getBackground()>
<java.util.Collections: java.util.List emptyList()>
<com.azure.authenticator.storage.database.DbAccount: void setPlainTextOathSecretKey(java.lang.String)>
<com.facebook.drawee.backends.pipeline.PipelineDraweeController: void initializePerformanceMonitoring(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener)>
<com.google.android.datatransport.runtime.SendRequest$Builder: com.google.android.datatransport.runtime.SendRequest build()>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setJustifyContent(com.facebook.yoga.YogaJustify)>
<com.facebook.react.uimanager.BaseViewManagerInterface: void setRenderToHardwareTexture(android.view.View,boolean)>
<java.net.HttpURLConnection: java.util.Map getHeaderFields()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.notifications.BrooklynIntroNotificationWorker_AssistedFactory access$14900(com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC)>
<com.google.android.gms.internal.base.zal: java.util.concurrent.ExecutorService zab(int,java.util.concurrent.ThreadFactory,int)>
<java.util.concurrent.ExecutionException: void <init>(java.lang.String,java.lang.Throwable)>
<dummyMainClass: androidx.startup.InitializationProvider dummyMainMethod_androidx_startup_InitializationProvider(android.content.Intent)>
<java.lang.StringBuilder: void <init>(int)>
<android.widget.FrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.android.gms.maps.SupportStreetViewPanoramaFragment: void <init>()>
<com.azure.authenticator.databinding.AddressListRowLayoutBinding: android.widget.RelativeLayout getRoot()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_26_27$cp()>
<com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel$approveAadNgcSessionSuspend$2: void <init>(com.azure.authenticator.ui.authentication.AadRemoteNgcSessionViewModel,java.lang.String,kotlin.coroutines.Continuation)>
<com.adjust.sdk.ActivityHandler: void access$1500(com.adjust.sdk.ActivityHandler)>
<com.google.android.gms.location.LocationStatusCodes: com.google.android.gms.common.api.Status zzb(int)>
<java.lang.Character: boolean isSurrogatePair(char,char)>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void hideRedboxDialog()>
<android.content.res.TypedArray: int getColor(int,int)>
<com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doBestEffortWrite(com.google.android.gms.common.api.internal.TaskApiCall)>
<com.facebook.react.views.text.TextAttributes: void setLineHeight(float)>
<androidx.startup.InitializationProvider: java.lang.String getType(android.net.Uri)>
<com.airbnb.lottie.animation.content.ContentGroup: boolean hasTwoOrMoreDrawableContent()>
<com.google.android.material.button.MaterialButtonHelper: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)>
<com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager$Companion: com.microsoft.ngc.aad.metadata.DiscoveryMetadataManager getInstance()>
<com.google.android.gms.maps.model.GroundOverlayOptions: void <init>(android.os.IBinder,com.google.android.gms.maps.model.LatLng,float,float,com.google.android.gms.maps.model.LatLngBounds,float,float,boolean,float,float,float,boolean)>
<com.azure.authenticator.ui.MainActivity_MembersInjector: void injectBottomNavigationController(com.azure.authenticator.ui.MainActivity,com.microsoft.authenticator.common.abstraction.BottomNavigationController)>
<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions compassEnabled(boolean)>
<com.google.android.gms.internal.location.zzai: void zzb(com.google.android.gms.internal.location.zzaa)>
<com.google.android.gms.common.util.JsonUtils: boolean areJsonValuesEquivalent(java.lang.Object,java.lang.Object)>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<com.airbnb.lottie.utils.MiscUtils: double lerp(double,double,double)>
<com.azure.authenticator.ui.backup.Hilt_BackupFlowActivity: void inject()>
<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>
<com.adjust.sdk.ActivityHandler: void trackNewSessionI(long)>
<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>
<com.azure.authenticator.ui.fragment.accounts.adapter.AccountListActionMenuItem: int getActionTextResourceId()>
<android.graphics.Paint: void setTextSize(float)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountViewModel: void <init>(android.content.Context,com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase)>
<com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.Feature zaN(com.google.android.gms.common.Feature[])>
<androidx.collection.ArraySet: void <init>(int)>
<com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()>
<com.google.android.material.floatingactionbutton.MotionStrategy: void onAnimationStart(android.animation.Animator)>
<com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>
<com.google.android.gms.internal.measurement.zzmj: boolean zzd()>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setMaxZoomPreference(float)>
<com.google.android.gms.measurement.internal.zzg: void zzw(long)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder setGoogleIdTokenRequestOptions(com.google.android.gms.auth.api.identity.BeginSignInRequest$GoogleIdTokenRequestOptions)>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: java.lang.String _parseAposName()>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void computeBoundingBox(android.view.View,int[])>
<com.azure.authenticator.databinding.DialogEditAccountNameBinding: com.azure.authenticator.databinding.DialogEditAccountNameBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)>
<com.google.android.material.chip.ChipDrawable: java.lang.CharSequence getText()>
<com.google.android.gms.auth.api.signin.GoogleSignIn: void requestPermissions(androidx.fragment.app.Fragment,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount,com.google.android.gms.common.api.Scope[])>
<com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isPlayServicesPossiblyUpdating(android.content.Context,int)>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
<com.adjust.sdk.ActivityHandler: void writeSessionPartnerParametersI()>
<java.util.EnumMap: java.util.Set keySet()>
<com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()>
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>
<ch.qos.logback.classic.android.SQLiteAppender$1: void <init>(ch.qos.logback.classic.android.SQLiteAppender,ch.qos.logback.classic.android.Clock)>
<com.google.crypto.tink.proto.Keyset$Key$Builder: com.google.crypto.tink.proto.Keyset$Key$Builder setOutputPrefixType(com.google.crypto.tink.proto.OutputPrefixType)>
<com.facebook.imageformat.ImageFormatChecker: com.facebook.imageformat.ImageFormat determineImageFormat(java.io.InputStream)>
<com.google.android.material.datepicker.MaterialDatePicker: java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)>
<com.google.android.gms.auth.api.credentials.CredentialRequestResult: com.google.android.gms.auth.api.credentials.Credential getCredential()>
<com.google.android.gms.common.api.internal.zaaz: java.lang.String zae()>
<java.util.Set: void clear()>
<com.google.common.base.Equivalence: int hash(java.lang.Object)>
<androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zOrderOnTop(boolean)>
<com.google.android.datatransport.cct.CctTransportBackend$HttpResponse: void <init>(int,java.net.URL,long)>
<com.google.android.material.tabs.TabLayout$Tab: int getTabLabelVisibility()>
<com.evernote.android.job.v19.JobProxy19: void <init>(android.content.Context)>
<java.util.Map: void clear()>
<com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode[] values()>
<androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setConstraints(androidx.work.Constraints)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: com.facebook.imagepipeline.transformation.BitmapTransformation getBitmapTransformation()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: int access$1600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.azure.authenticator.notifications.msa.MsaNotificationActionManager_Factory: com.azure.authenticator.notifications.msa.MsaNotificationActionManager newInstance(com.azure.authenticator.jobs.DeferrableWorkerUtils,com.microsoft.authenticator.authentication.msa.businessLogic.MsaSessionUseCase)>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: ch.qos.logback.core.net.ssl.SecureRandomFactoryBean getSecureRandom()>
<com.facebook.react.devsupport.interfaces.DevSupportManager: void setRemoteJSDebugEnabled(boolean)>
<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface: void setTrackColorForFalse(android.view.View,java.lang.Integer)>
<com.google.android.gms.auth.api.Auth$AuthCredentialsOptions$Builder: void <init>()>
<com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener: void <init>(com.facebook.drawee.backends.pipeline.info.ImageOriginListener[])>
<ch.qos.logback.core.pattern.PatternLayoutBase: void start()>
<com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)>
<ch.qos.logback.core.joran.spi.ElementSelector: int getTailMatchLength(ch.qos.logback.core.joran.spi.ElementPath)>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>
<com.google.android.material.appbar.ViewOffsetHelper: void <init>(android.view.View)>
<com.google.android.gms.measurement.internal.zzdz: java.util.List zzr(java.lang.String,java.lang.String,java.lang.String)>
<com.evernote.android.job.JobRequest: void updateStats(boolean,boolean)>
<android.graphics.drawable.Drawable: void setHotspot(float,float)>
<com.microsoft.did.util.VerifiableCredentialTelemetryClient: void <init>()>
<com.facebook.react.modules.core.JavaTimerManager: void onInstanceDestroy()>
<com.facebook.react.modules.camera.CameraRollManager: void putLocationInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int)>
<com.adjust.sdk.SharedPreferencesManager: void clear()>
<androidx.cardview.widget.CardView: float getMaxCardElevation()>
<com.google.android.gms.internal.auth-api.zzq: com.google.android.gms.auth.api.Auth$AuthCredentialsOptions zzf()>
<com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs$Builder: com.azure.authenticator.ui.msa.MsaAccountPageWebViewFragmentArgs build()>
<com.azure.authenticator.notifications.AbstractNotification$Action: java.lang.String getActionName()>
<com.facebook.react.views.art.ARTSurfaceViewManager: com.facebook.react.views.art.ARTSurfaceViewShadowNode createShadowNodeInstance()>
<com.google.android.gms.common.api.internal.zabd: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zac(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.facebook.react.views.textinput.ReactEditText: android.text.method.KeyListener access$400()>
<com.facebook.react.views.view.ReactViewGroup: void access$000(com.facebook.react.views.view.ReactViewGroup,android.view.View)>
<androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)>
<com.facebook.imagepipeline.producers.DiskCacheReadProducer: java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.repository.UtilitySDKRepository utilitySDKRepository()>
<com.facebook.react.views.picker.ReactPicker: void setStagedItems(java.util.List)>
<com.google.android.gms.internal.measurement.zziz: void zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)>
<android.widget.ScrollView: void postInvalidateOnAnimation()>
<com.azure.authenticator.accounts.AadAccount: void setPhoneAppDetailId(java.lang.String)>
<android.text.style.BackgroundColorSpan: void <init>(int)>
<java.net.URL: java.lang.String toString()>
<com.google.android.material.snackbar.SnackbarManager: void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl: com.microsoft.brooklyn.module.autofill.authentication.AuthIntentSenderProvider authIntentSenderProvider()>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<com.google.android.gms.internal.measurement.zzcf: java.lang.String zzc()>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaAuthenticationTimeTelemetry: void setSubType(java.lang.String)>
<android.app.PendingIntent: void send(int)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int)>
<com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,boolean)>
<androidx.work.CoroutineWorker: java.lang.Object setForeground(androidx.work.ForegroundInfo,kotlin.coroutines.Continuation)>
<com.google.android.gms.auth.api.signin.GoogleSignInOptions: boolean zae(com.google.android.gms.auth.api.signin.GoogleSignInOptions)>
<com.microsoft.authenticator.graphclient.businessLogic.AuthMethodsPolicyManager: java.lang.Object getPolicyFromGraphAPI(java.lang.String,java.lang.String,com.microsoft.authenticator.graphclient.AuthenticationMethod,com.microsoft.authenticator.core.protocol.CloudEnvironment,java.lang.String,kotlin.coroutines.Continuation)>
<com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder toBuilder()>
<com.adjust.sdk.ISdkClickHandler: void resumeSending()>
<com.google.android.material.resources.MaterialResources: boolean isFontScaleAtLeast1_3(android.content.Context)>
<ch.qos.logback.core.status.StatusManager: java.util.List getCopyOfStatusListenerList()>
<com.airbnb.lottie.LottieDrawable: float getSpeed()>
<com.azure.authenticator.ui.fragment.main.Hilt_BackupDetailsFragment: void <init>()>
<androidx.work.Constraints$Builder: androidx.work.Constraints build()>
<com.airbnb.lottie.model.layer.TextLayer: void drawTextGlyphs(com.airbnb.lottie.model.DocumentData,android.graphics.Matrix,com.airbnb.lottie.model.Font,android.graphics.Canvas)>
<com.google.android.gms.maps.StreetViewPanoramaFragment$zzb: void zza(com.google.android.gms.maps.StreetViewPanoramaFragment$zzb,android.app.Activity)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions useViewLifecycleInFragment(boolean)>
<com.google.android.gms.maps.model.LatLngBounds: boolean equals(java.lang.Object)>
<com.azure.authenticator.OnAppUpgradeReceiver_MembersInjector: void injectMembers(com.azure.authenticator.OnAppUpgradeReceiver)>
<com.google.android.material.button.MaterialButton: boolean isIconTop()>
<com.facebook.react.jstasks.HeadlessJsTaskContext: java.util.Set access$100(com.facebook.react.jstasks.HeadlessJsTaskContext)>
<com.facebook.react.modules.camera.CameraRollManager: void access$300(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int)>
<com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetrics(android.content.Context)>
<com.google.android.gms.maps.internal.zzbz: com.google.android.gms.maps.internal.zze zza(android.content.Context)>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationViewModel$configureBrooklynEnterpriseControls$$inlined$CoroutineExceptionHandler$1: void <init>(kotlinx.coroutines.CoroutineExceptionHandler$Key)>
<com.google.android.gms.internal.measurement.zzde: com.google.android.gms.internal.measurement.zzde zza(java.lang.String)>
<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>
<com.google.android.gms.auth.api.credentials.CredentialsClient: void <init>(android.content.Context,com.google.android.gms.auth.api.Auth$AuthCredentialsOptions)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.airbnb.lottie.utils.MiscUtils: float lerp(float,float,float)>
<com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>
<android.content.Context: java.lang.String getString(int)>
<java.net.ServerSocket: void close()>
<com.google.android.material.textfield.MaterialAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.material.shape.ShapeAppearanceModel: com.google.android.material.shape.CornerSize getBottomLeftCornerSize()>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int)>
<com.google.android.gms.maps.zzg: void <init>(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$InfoWindowAdapter)>
<com.facebook.drawee.controller.BaseControllerListener: void onRelease(java.lang.String)>
<ch.qos.logback.core.spi.FilterAttachableImpl: void <init>()>
<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void _skipLine()>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzn(java.lang.Object[],int)>
<androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)>
<com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray)>
<com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)>
<com.google.android.gms.internal.measurement.zzim: java.lang.String zzi(int)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvidePasswordChangeRunnerFactory: com.microsoft.vienna.sdk.AutomationRunner providePasswordChangeRunner(com.microsoft.brooklyn.module.di.BrooklynHiltModule,com.microsoft.vienna.vienna_utils_lib.logging.ILogger,com.microsoft.vienna.vienna_utils_lib.telemetry.ITelemetryLogger)>
<com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()>
<com.google.android.gms.internal.measurement.zzkh: float zzj(java.lang.Object,long)>
<com.facebook.react.modules.network.ForwardingCookieHandler$1: java.lang.Boolean doInBackgroundGuarded()>
<com.azure.authenticator.ui.fragment.main.ThirdPartyNoticeFragment$Companion: void <init>()>
<com.google.android.material.bottomappbar.BottomAppBar$Behavior$1: void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior)>
<com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate: com.google.android.gms.dynamic.IObjectWrapper zoomByWithFocus(float,int,int)>
<android.graphics.RectF: void set(android.graphics.Rect)>
<com.facebook.debug.holder.Printer: void logMessage(com.facebook.debug.debugoverlay.model.DebugOverlayTag,java.lang.String,java.lang.Object[])>
<com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader$$Lambda$4: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection lambdaFactory$(com.google.android.datatransport.runtime.scheduling.persistence.EventStore)>
<com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void saveAllAccountsToStorage(java.util.List)>
<com.microsoft.authenticator.authentication.msa.businessLogic.MsaChangeFcmTokenUseCase: void <init>(com.azure.authenticator.storage.Storage,com.azure.authenticator.storage.database.AccountStorage,com.microsoft.onlineid.sdk.extension.SessionManager,com.microsoft.authenticator.core.telemetry.TelemetryManager)>
<com.google.android.gms.internal.measurement.zzho: void <init>(com.google.android.gms.internal.measurement.zzhs)>
<com.microsoft.brooklyn.module.di.BrooklynHiltModule_ProvidePasswordChangeTelemetryLoggerFactory: com.microsoft.vienna.vienna_utils_lib.telemetry.ITelemetryLogger providePasswordChangeTelemetryLogger(com.microsoft.brooklyn.module.di.BrooklynHiltModule)>
<com.microsoft.did.feature.backuprestore.presentationlogic.RestoreViewModel_HiltModules_KeyModule_ProvideFactory: java.lang.String provide()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior)>
<com.google.android.gms.internal.measurement.zzkh: void zzK(java.lang.Object,long,byte)>
<ch.qos.logback.core.util.OptionHelper: java.lang.String getSystemProperty(java.lang.String)>
<com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)>
<com.google.android.gms.auth.api.identity.zzj: void <init>()>
<ch.qos.logback.core.joran.action.AbstractIncludeAction: java.net.URL getInputURL(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes)>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>
<ch.qos.logback.core.spi.AbstractComponentTracker$Entry: void <init>(java.lang.String,java.lang.Object,long)>
<com.facebook.react.modules.debug.FpsDebugFrameCallback: int getNumFrames()>
<com.airbnb.lottie.LottieDrawable: com.airbnb.lottie.model.layer.CompositionLayer access$000(com.airbnb.lottie.LottieDrawable)>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setScrollGesturesEnabled(boolean)>
<com.google.android.gms.measurement.internal.zzfc: boolean zzf(java.lang.String)>
<ch.qos.logback.classic.LoggerContext: void resetTurboFilterList()>
<com.facebook.react.ReactInstanceManager: java.util.List getOrCreateViewManagers(com.facebook.react.bridge.ReactApplicationContext)>
<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.google.android.gms.auth.zzd: java.util.List getAccountChangeEvents(android.content.Context,int,java.lang.String)>
<com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: void <init>(java.lang.Object[],int,int)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: com.facebook.imagepipeline.image.QualityInfo getQualityInfo()>
<java.util.Date: long getTime()>
<ch.qos.logback.core.util.DefaultInvocationGate: void <init>()>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment: void onPause()>
<com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: com.facebook.common.memory.PooledByteBufferOutputStream merge(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage)>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>
<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Parcel[] createParcelArray(android.os.Parcel,int)>
<com.facebook.react.modules.network.CountingOutputStream: void write(byte[],int,int)>
<ch.qos.logback.core.util.OptionHelper: java.lang.String getEnv(java.lang.String)>
<com.adjust.sdk.AttributionHandler: void checkAttributionI(com.adjust.sdk.IActivityHandler,com.adjust.sdk.ResponseData)>
<com.azure.authenticator.ui.fragment.accounts.AccountListFragment$onViewCreated$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountListFragment)>
<android.widget.ScrollView: int getHeight()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ActivityRetainedCImpl$ActivityCImpl$FragmentCI: com.microsoft.did.feature.notifications.viewlogic.CredentialNotificationsFragment injectCredentialNotificationsFragment2(com.microsoft.did.feature.notifications.viewlogic.CredentialNotificationsFragment)>
<com.google.android.material.tabs.TabLayout: void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab)>
<com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)>
<com.google.android.gms.internal.maps.zzz: void setWidth(float)>
<com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[],int[])>
<com.google.android.material.floatingactionbutton.MotionStrategy: android.animation.AnimatorSet createAnimator()>
<com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable: boolean access$802(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean)>
<com.facebook.react.uimanager.ReactShadowNode: int getReactTag()>
<com.azure.authenticator.ui.fragment.main.DeviceRegistrationFragment$$special$$inlined$viewModels$1: androidx.fragment.app.Fragment invoke()>
<com.adjust.sdk.Util: java.lang.Boolean getFireTrackingEnabled(android.content.ContentResolver)>
<com.google.android.gms.location.zzap: void zzb(boolean)>
<com.google.android.gms.measurement.internal.zzaf: java.lang.Boolean zzj(java.lang.Boolean,java.lang.Boolean)>
<com.microsoft.did.di.VcWalletModule_DefaultRetrofitFactory: retrofit2.Retrofit defaultRetrofit(com.microsoft.did.di.VcWalletModule,okhttp3.OkHttpClient,kotlinx.serialization.json.Json)>
<com.google.android.gms.dynamite.zza: void <init>(java.lang.String,java.lang.ClassLoader)>
<com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)>
<ch.qos.logback.classic.Logger: void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable)>
<com.google.android.material.textfield.TextInputLayout: void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)>
<androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)>
<com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)>
<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>
<com.google.android.material.datepicker.MaterialCalendar: void <init>()>
<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>
<com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver)>
<com.facebook.imagepipeline.image.ImmutableQualityInfo: com.facebook.imagepipeline.image.QualityInfo of(int,boolean,boolean)>
<com.azure.authenticator.notifications.msa.MsaNotification$Companion: void <init>()>
<com.facebook.react.bridge.JSIModuleRegistry: void <init>()>
<com.google.android.gms.measurement.internal.zzix: void <init>(com.google.android.gms.measurement.internal.zzja,com.google.android.gms.measurement.internal.zzdz)>
<ch.qos.logback.classic.log4j.XMLLayout: java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent)>
<com.google.android.gms.measurement.internal.zzeu: long zza()>
<com.airbnb.lottie.parser.AnimatableValueParser: com.airbnb.lottie.model.animatable.AnimatableColorValue parseColor(com.airbnb.lottie.parser.moshi.JsonReader,com.airbnb.lottie.LottieComposition)>
<com.facebook.react.views.picker.ReactPickerAdapter: java.lang.Integer getPrimaryTextColor()>
<com.google.android.gms.internal.measurement.zzjk: void zzP(int,java.util.List,com.google.android.gms.internal.measurement.zzha,boolean)>
<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>
<com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()>
<com.google.android.gms.common.api.GoogleApi: int zab()>
<com.google.common.io.BaseEncoding$Alphabet: int decode(char)>
<ch.qos.logback.core.UnsynchronizedAppenderBase: ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object)>
<com.azure.authenticator.accounts.AadAccount: java.lang.String getEncryptionKeyAlias()>
<android.widget.ScrollView: void setOverScrollMode(int)>
<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder: void <init>()>
<android.widget.ListAdapter: java.lang.Object getItem(int)>
<com.azure.authenticator.storage.database.migration.Migration12To13: android.content.Context access$get_context$p(com.azure.authenticator.storage.database.migration.Migration12To13)>
<com.azure.authenticator.ui.authentication.MsaSessionActivity: void showEntropyLayout()>
<ch.qos.logback.core.net.ssl.SSLContextFactoryBean: java.lang.String locationFromSystemProperty(java.lang.String)>
<com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature[] values()>
<com.microsoft.authenticator.reactnative.ReactNativeFragmentManager: void onReactFragmentBackPressed(androidx.fragment.app.FragmentActivity,int)>
<ch.qos.logback.classic.jul.JULHelper: java.lang.String asJULLoggerName(java.lang.String)>
<com.facebook.react.uimanager.NativeViewHierarchyManager: void <init>(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager)>
<com.google.android.gms.internal.location.zzt: void <init>(com.google.android.gms.internal.location.zzz,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationCallback,android.os.Looper)>
<com.evernote.android.job.v21.PlatformJobService: android.os.IBinder onBind(android.content.Intent)>
<com.facebook.react.animated.NativeAnimatedModule$16: void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int)>
<com.google.android.gms.common.api.internal.zaar: void zaH()>
<com.google.android.material.chip.ChipDrawable: android.content.res.ColorStateList getChipBackgroundColor()>
<com.google.android.gms.internal.location.zzaz: void zzK(com.google.android.gms.internal.location.zzai)>
<com.google.android.gms.common.api.GoogleApiClient: com.google.android.gms.common.ConnectionResult blockingConnect(long,java.util.concurrent.TimeUnit)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void onCreate(android.os.Bundle)>
<org.json.JSONObject: void <init>(java.lang.String)>
<com.azure.authenticator.storage.MfaSdkAccountTranslator: com.azure.authenticator.accounts.AadAccount mergeMfaSdkAccountDataIntoAadAccountObject$app_productionRelease(com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount,com.azure.authenticator.accounts.AadAccount)>
<com.azure.authenticator.OnAppUpgradeReceiver: void setFingerprintPreferenceIfNecessary(android.content.Context)>
<com.google.android.gms.measurement.internal.zzgt: void <init>(com.google.android.gms.measurement.internal.zzhn,java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)>
<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer)>
<com.facebook.drawee.backends.pipeline.info.ImagePerfState: void setImageOrigin(int)>
<com.facebook.imageformat.ImageFormatCheckerUtils: byte[] asciiBytes(java.lang.String)>
<com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void handleException(java.lang.Exception)>
<com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$$Lambda$7: void <init>(java.lang.String)>
<com.adjust.sdk.ActivityHandler: void trackEventI(com.adjust.sdk.AdjustEvent)>
<com.facebook.react.modules.camera.ImageEditingManager: java.io.File writeBitmapToExternalCache(android.content.Context,android.graphics.Bitmap,java.lang.String)>
<androidx.work.Configuration$Builder: androidx.work.Configuration build()>
<com.adjust.sdk.ActivityPackage: java.util.Map getParameters()>
<com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void <init>(androidx.drawerlayout.widget.DrawerLayout,com.facebook.react.uimanager.events.EventDispatcher)>
<com.google.android.gms.internal.location.zzav: void zzf(com.google.android.gms.internal.location.zzba,android.app.PendingIntent,com.google.android.gms.internal.location.zzai)>
<com.azure.authenticator.ui.backup.BackupFlowActivity: void showSignInToUpdateBackupDialog()>
<com.google.android.gms.internal.measurement.zzce: com.google.android.gms.internal.measurement.zzce zza(java.lang.String)>
<com.google.android.gms.measurement.internal.zzjb: void zzQ(java.lang.Runnable)>
<com.microsoft.brooklyn.ui.credential.AddCredentialFragment_MembersInjector: void injectFaviconManager(com.microsoft.brooklyn.ui.credential.AddCredentialFragment,com.microsoft.brooklyn.module.favicon.PicassoFaviconManager)>
<android.widget.AutoCompleteTextView: void addTextChangedListener(android.text.TextWatcher)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$ServiceCImpl: com.microsoft.brooklyn.module.autofill.response.businesslogic.payment.PaymentSaveDatasetsUseCase paymentSaveDatasetsUseCase()>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setNetworkFetcher(com.facebook.imagepipeline.producers.NetworkFetcher)>
<com.facebook.soloader.MinElf$ISA: void <init>(java.lang.String,int,java.lang.String)>
<com.google.android.material.appbar.HeaderBehavior: boolean canDragView(android.view.View)>
<android.database.Cursor: java.lang.String getString(int)>
<com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getEndOpacity()>
<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>
<com.google.android.gms.auth.api.identity.BeginSignInRequest$Builder: com.google.android.gms.auth.api.identity.BeginSignInRequest build()>
<com.google.android.gms.maps.internal.IMapViewDelegate: void onStop()>
<com.azure.authenticator.accounts.AccountCapability: void <init>(com.azure.authenticator.accounts.AccountCapability$AccountCapabilityEnum)>
<com.airbnb.lottie.model.content.ShapeStroke: com.airbnb.lottie.model.animatable.AnimatableFloatValue getDashOffset()>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>
<android.animation.TimeInterpolator: float getInterpolation(float)>
<com.google.android.material.appbar.HeaderBehavior: int getMaxDragOffset(android.view.View)>
<com.google.android.datatransport.Encoding: int hashCode()>
<com.airbnb.lottie.model.layer.Layer: float getTimeStretch()>
<com.facebook.imagepipeline.drawable.DrawableFactory: boolean supportsImageType(com.facebook.imagepipeline.image.CloseableImage)>
<com.microsoft.authenticator.mfasdk.account.entities.MfaSdkAccount: java.lang.String getSecretKey()>
<com.google.android.gms.internal.maps.zzr: com.google.android.gms.internal.maps.zzq zzf(android.os.IBinder)>
<com.google.android.gms.measurement.internal.zzcg: void <init>()>
<android.app.Fragment: int getTargetRequestCode()>
<android.widget.GridView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.google.android.gms.maps.internal.IGoogleMapDelegate: void setOnPoiClickListener(com.google.android.gms.maps.internal.zzbb)>
<com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
<android.widget.CheckBox: android.content.Context getContext()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC$14: com.microsoft.authenticator.logging.powerLift.businesslogic.PowerLiftUploadWorker create(android.content.Context,androidx.work.WorkerParameters)>
<com.google.android.gms.internal.auth-api.zzan: void <init>(com.google.android.gms.internal.auth-api.zzak,com.google.android.gms.auth.api.identity.SavePasswordRequest)>
<android.animation.AnimatorSet: void end()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel: void showEnterpriseControlMessage(java.lang.String)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.callercontext.CallerContextVerifier access$2700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<ch.qos.logback.core.pattern.parser.Token: java.util.List getOptionsList()>
<com.google.android.material.bottomsheet.BottomSheetBehavior: void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)>
<com.microsoft.authenticator.backup.businessLogic.BackupRestoreUseCase: java.lang.Object retrieveBackup(java.lang.String,com.microsoft.onlineid.Ticket,kotlin.coroutines.Continuation)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionType(com.facebook.yoga.YogaPositionType)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$handleDeletionTicketResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>
<ch.qos.logback.core.joran.spi.ElementPath: void <init>(java.util.List)>
<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int)>
<com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzu zzh(int,int)>
<com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)>
<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)>
<com.azure.authenticator.logging.LoggingReceiver_GeneratedInjector: void injectLoggingReceiver(com.azure.authenticator.logging.LoggingReceiver)>
<com.airbnb.lottie.parser.moshi.JsonReader: int nextInt()>
<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface: void setSize(android.view.View,int)>
<android.widget.ImageView: boolean onTouchEvent(android.view.MotionEvent)>
<com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int)>
<com.google.android.gms.location.zzb: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<com.google.android.gms.internal.measurement.zzjk: int zzj(java.util.List)>
<com.google.android.gms.internal.measurement.zzda: com.google.android.gms.internal.measurement.zzda zzf(com.google.android.gms.internal.measurement.zzdf)>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>
<ch.qos.logback.core.rolling.helper.FileFilterUtil: int findHighestCounter(java.io.File[],java.lang.String)>
<com.google.android.gms.common.api.internal.zaag: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zac(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)>
<com.google.android.material.textfield.ClearTextEndIconDelegate$9: void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate)>
<com.google.android.gms.common.internal.GmsClientSupervisor: com.google.android.gms.common.internal.GmsClientSupervisor getInstance(android.content.Context)>
<com.google.android.gms.auth.api.signin.internal.HashAccumulator: com.google.android.gms.auth.api.signin.internal.HashAccumulator zaa(boolean)>
<com.azure.authenticator.logging.ExternalLogger: void <init>(android.content.Context)>
<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)>
<android.widget.CheckBox: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.android.gms.measurement.internal.zzjb: com.google.android.gms.measurement.internal.zzdz zzM(com.google.android.gms.measurement.internal.zzjb)>
<com.google.android.material.tabs.TabLayout: void setTabIndicatorFullWidth(boolean)>
<com.google.android.material.navigation.NavigationBarItemView: int getItemDefaultMarginResId()>
<com.adjust.sdk.ActivityHandler: void removeSessionCallbackParameterI(java.lang.String)>
<com.google.android.gms.internal.measurement.zzby: boolean zza()>
<com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int getFieldId(int)>
<com.facebook.react.modules.core.JavaTimerManager$2: void <init>(com.facebook.react.modules.core.JavaTimerManager,boolean)>
<java.util.HashSet: void clear()>
<ch.qos.logback.core.joran.action.IADataForComplexProperty: java.lang.Object getNestedComplexProperty()>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<com.google.android.gms.internal.measurement.zzdi: com.google.android.gms.internal.measurement.zzdi zzak(java.lang.Iterable)>
<ch.qos.logback.core.rolling.helper.Compressor: java.util.concurrent.Future asyncCompress(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.measurement.zzla: java.lang.String zze()>
<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>
<com.google.android.gms.measurement.internal.zzjb: void zzr(com.google.android.gms.internal.measurement.zzs,java.lang.String,java.lang.String,boolean)>
<com.evernote.android.job.JobStorageDatabaseErrorHandler: void deleteApi16(java.io.File)>
<com.google.android.datatransport.runtime.SafeLoggingExecutor$SafeLoggingRunnable: void <init>(java.lang.Runnable)>
<com.airbnb.lottie.animation.content.TrimPathContent: com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation getStart()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)>
<com.azure.authenticator.notifications.AbstractNotification$Action: void <init>(java.lang.String,int,java.lang.String)>
<com.microsoft.authenticator.common.businessLogic.AuthenticatorState: void setCheckForInvalidMfaAccount(boolean)>
<java.lang.Exception: void printStackTrace(java.io.PrintStream)>
<com.google.android.gms.maps.CameraUpdateFactory: void zza(com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate)>
<com.microsoft.authenticator.registration.msa.businesslogic.MsaRegistrationUseCase: java.lang.Object registerMsaNgcKey(java.lang.String,com.microsoft.onlineid.Ticket,boolean,kotlin.coroutines.Continuation)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subListUnchecked(int,int)>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.authenticator.mfasdk.authentication.businessLogic.MfaTotpUseCase mfaTotpUseCase()>
<ch.qos.logback.classic.spi.IThrowableProxy: java.lang.String getMessage()>
<com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)>
<android.widget.EditText: android.view.ViewParent getParent()>
<com.facebook.common.logging.FLog: void v(java.lang.Class,java.lang.String)>
<com.azure.authenticator.ui.backup.BackupFlowActivity$createBackupPromptingIfNeeded$1: java.lang.Object invokeSuspend(java.lang.Object)>
<com.google.android.gms.internal.measurement.zzjs: java.util.SortedMap zzn()>
<ch.qos.logback.core.sift.SiftingJoranConfiguratorBase: void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore)>
<java.util.LinkedList: java.lang.Object pollFirst()>
<com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel$silentlyRegisterForAadPhoneSignInPushNotifications$1: void <init>(com.azure.authenticator.ui.fragment.accounts.AccountsListViewModel,java.util.List,kotlin.coroutines.Continuation)>
<okhttp3.ResponseBody: byte[] bytes()>
<kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>
<com.facebook.soloader.MinElf$ISA: java.lang.String toString()>
<com.google.android.gms.measurement.internal.zzae: boolean zzr()>
<com.google.android.material.shape.CornerTreatment: void <init>()>
<com.google.android.gms.internal.measurement.zzdj: boolean zza()>
<com.azure.authenticator.storage.database.migration.Migrations: androidx.room.migration.Migration access$getMIGRATION_19_20$cp()>
<com.airbnb.lottie.parser.KeyframesParser: void setEndFrames(java.util.List)>
<com.google.android.gms.internal.measurement.zzjk: void zzaa(int,java.util.List,com.google.android.gms.internal.measurement.zzha,com.google.android.gms.internal.measurement.zzji)>
<androidx.fragment.app.Fragment: boolean isResumed()>
<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.airbnb.lottie.LottieDrawable: void setRepeatMode(int)>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<dummyMainClass: androidx.room.MultiInstanceInvalidationService dummyMainMethod_androidx_room_MultiInstanceInvalidationService(android.content.Intent)>
<com.facebook.react.views.viewpager.ReactViewPager: void setScrollEnabled(boolean)>
<com.evernote.android.job.JobProxy: void plantPeriodicFlexSupport(com.evernote.android.job.JobRequest)>
<com.airbnb.lottie.parser.moshi.JsonReader: java.lang.String getPath()>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>
<com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenX()>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>
<com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()>
<com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void jumpIndicatorToSelectedPosition()>
<com.evernote.android.job.Job$Result: void <init>(java.lang.String,int)>
<com.google.android.gms.common.internal.BaseGmsClient: boolean zzh(com.google.android.gms.common.internal.BaseGmsClient)>
<com.evernote.android.job.JobManager: void <init>(android.content.Context)>
<com.adjust.sdk.DeviceInfo: java.lang.String getAppVersion(android.content.Context)>
<ch.qos.logback.classic.Level: ch.qos.logback.classic.Level fromLocationAwareLoggerInteger(int)>
<com.google.android.gms.common.AccountPicker$AccountChooserOptions: com.google.android.gms.common.zza zzs(com.google.android.gms.common.AccountPicker$AccountChooserOptions,com.google.android.gms.common.zza)>
<android.widget.LinearLayout: void setActivated(boolean)>
<com.facebook.imagepipeline.core.ImagePipelineConfig$Builder: com.facebook.imagepipeline.core.ExecutorSupplier access$2500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder)>
<com.adjust.sdk.scheduler.ThreadExecutor: void submit(java.lang.Runnable)>
<com.google.android.gms.common.util.Base64Utils: java.lang.String encode(byte[])>
<com.google.android.material.card.MaterialCardViewHelper: void updateElevation()>
<com.google.android.gms.internal.measurement.zzkh: sun.misc.Unsafe zzr()>
<com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1: void <init>()>
<com.fasterxml.jackson.core.json.UTF8StreamJsonParser: com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int)>
<com.google.android.gms.common.api.internal.zabt: void zac(int,boolean)>
<com.google.android.gms.internal.measurement.zzgs: void zzf(com.google.android.gms.internal.measurement.zzgh)>
<com.google.android.gms.measurement.internal.zzjb: void zzs(com.google.android.gms.measurement.internal.zzkg)>
<com.google.android.datatransport.cct.internal.LogResponse: void <init>()>
<java.lang.Thread: void <init>()>
<com.facebook.drawee.controller.AbstractDraweeControllerBuilder: void maybeBuildAndSetRetryManager(com.facebook.drawee.controller.AbstractDraweeController)>
<com.facebook.imagepipeline.core.ImagePipeline: java.lang.String generateUniqueFutureId()>
<com.google.android.gms.internal.measurement.zzcd: boolean zzd()>
<com.google.android.gms.maps.internal.IUiSettingsDelegate: void setTiltGesturesEnabled(boolean)>
<ch.qos.logback.core.net.server.ConcurrentServerRunner: void access$100(ch.qos.logback.core.net.server.ConcurrentServerRunner,ch.qos.logback.core.net.server.Client)>
<ch.qos.logback.core.net.DefaultSocketConnector: java.net.Socket createSocket()>
<com.google.android.gms.internal.measurement.zzkz: long zzu()>
<com.azure.authenticator.ui.backup.BackupFlowViewModel$BackupActivityState: java.lang.String getMsaCid()>
<com.azure.authenticator.DaggerPhoneFactorApplication_HiltComponents_SingletonC: com.microsoft.brooklyn.module.sync.AddressesSDKConnector addressesSDKConnector()>
<ch.qos.logback.core.pattern.DynamicConverter: void addStatus(ch.qos.logback.core.status.Status)>
<androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)>
<com.google.android.gms.measurement.internal.zzfc: void zze(java.lang.String)>
<com.google.android.gms.common.api.internal.zaaa: void zab(com.google.android.gms.tasks.TaskCompletionSource,boolean)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.azure.authenticator.storage.Storage: java.lang.String readCipherIv(java.lang.String)>
<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String _findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)>
<com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity: void access$finishActivityWithResult(com.azure.authenticator.authentication.msa.ui.AddMsaAccountActivity,com.azure.authenticator.authentication.msa.MsaAccountManager$ResultCode)>
<com.azure.authenticator.storage.database.migration.Migrations$Companion: androidx.room.migration.Migration getMIGRATION_25_26()>
<com.azure.authenticator.authentication.msa.ui.SignOutMsaAccountActivity_MembersInjector: void <init>(javax.inject.Provider,javax.inject.Provider)>
<androidx.collection.LongSparseArray: void clear()>
<com.google.android.material.snackbar.BaseTransientBottomBar: void access$1500(com.google.android.material.snackbar.BaseTransientBottomBar)>
<com.facebook.react.bridge.DynamicFromObject: void <init>(java.lang.Object)>
<com.adjust.sdk.ActivityHandler$38: void <init>(com.adjust.sdk.ActivityHandler)>
<com.airbnb.lottie.model.LottieCompositionCache: com.airbnb.lottie.model.LottieCompositionCache getInstance()>
<com.google.android.gms.internal.location.zzbp: boolean zzf()>
<com.adjust.sdk.AdjustFactory: long getTimerStart()>
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>
<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()>
<com.google.android.gms.measurement.internal.zzfc: java.lang.String zza(java.lang.String,java.lang.String)>
<com.google.android.gms.cloudmessaging.zzr: int zza()>
<com.google.android.gms.common.api.internal.BasePendingResult: void <init>(com.google.android.gms.common.api.GoogleApiClient)>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>
<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>
<android.app.Activity: void onBackPressed()>
<org.qtproject.qt5.android.QtEditText: void setFocusable(boolean)>
<java.util.Arrays: boolean equals(byte[],byte[])>
<android.bluetooth.BluetoothGattCharacteristic: void setWriteType(int)>
<org.qtproject.qt5.android.QtNative: void keyDown(int,int,int,boolean)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: boolean sendEventForVirtualViewId(int,int)>
<org.qtproject.qt5.android.QtLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<android.view.MotionEvent: float getX(int)>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)>
<org.qtproject.qt5.android.HideKeyboardRunnable: void <init>()>
<java.util.LinkedList: java.lang.Object removeFirst()>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.content.UriPermission: boolean isWritePermission()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothInputStreamThread: void readyData(long,byte[],int)>
<android.view.ContextMenu: void clearHeader()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo access$800(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate,int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()>
<org.qtproject.qt5.android.EditPopupMenu: void hide()>
<org.qtproject.qt5.android.bindings.QtActivity: void onWindowFocusChanged(boolean)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: int access$900(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<android.app.Activity: void onPause()>
<org.qtproject.qt5.android.CursorHandle: boolean initOverlay()>
<org.qtproject.qt5.android.ExtractStyle: void extractSwitch(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<org.qtproject.qt5.android.ExtractStyle: void extractToolBar(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<org.kde.necessitas.ministro.IMinistro$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONArray getJsonArray(float[])>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void leServerConnectionStateChange(long,int,int)>
<org.qtproject.qt5.android.bindings.QtLoader$4: void <init>(org.qtproject.qt5.android.bindings.QtLoader)>
<org.qtproject.qt5.android.bindings.QtActivity: android.content.ComponentName getComponentName()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.os.Binder: void <init>()>
<android.view.SurfaceView: void <init>(android.content.Context)>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>
<android.app.Service: void onDestroy()>
<android.graphics.drawable.LayerDrawable: int getId(int)>
<org.qtproject.qt5.android.CursorView: void adjusted(int,int)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setGravity(int)>
<java.lang.reflect.Field: float getFloat(java.lang.Object)>
<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>
<android.view.KeyEvent: int getKeyCode()>
<org.qtproject.qt5.android.QtNative$12: void <init>()>
<org.qtproject.qt5.android.ExtractStyle: java.lang.reflect.Field tryGetAccessibleField(java.lang.Class,java.lang.String)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
<android.view.accessibility.AccessibilityNodeProvider: void <init>()>
<android.content.res.TypedArray: float getFloat(int,float)>
<android.widget.PopupWindow: void setHeight(int)>
<org.qtproject.qt5.android.bindings.QtApplication: void onTerminate()>
<org.qtproject.qt5.android.QtActivityDelegate: boolean updateActivity(android.app.Activity)>
<org.qtproject.qt5.android.QtNative: void onClipboardDataChanged()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void setHoveredVirtualViewId(int)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>
<org.qtproject.qt5.android.QtNative: void updateApplicationState(int)>
<android.os.Bundle: boolean containsKey(java.lang.String)>
<android.app.Activity: void onContentChanged()>
<android.bluetooth.BluetoothGattCallback: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)>
<org.qtproject.qt5.android.QtNative: void quitQtAndroidPlugin()>
<org.qtproject.qt5.android.CursorHandle: int bottom()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean setComposingRegion(int,int)>
<org.qtproject.qt5.android.QtSurface$1: void <init>(org.qtproject.qt5.android.QtSurface)>
<android.view.MotionEvent: int getDeviceId()>
<org.qtproject.qt5.android.network.QtNetwork$ProxyReceiver: void <init>()>
<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>
<java.lang.Object: void <init>()>
<android.bluetooth.BluetoothGatt: boolean setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)>
<org.qtproject.qt5.android.EditContextView: android.content.Context getContext()>
<org.qtproject.qt5.android.QtThread$1: void <init>(org.qtproject.qt5.android.QtThread)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void <init>(android.app.Activity,android.view.ViewGroup,org.qtproject.qt5.android.QtActivityDelegate)>
<android.net.Uri: java.lang.String getPath()>
<org.kde.necessitas.ministro.IMinistro$Stub: void requestLoader(org.kde.necessitas.ministro.IMinistroCallback,android.os.Bundle)>
<android.app.ActionBar: void show()>
<org.qtproject.qt5.android.QtLayout: void invalidate()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$IoJobType: int ordinal()>
<android.view.Window: android.content.Context getContext()>
<android.os.Parcel: android.os.IBinder readStrongBinder()>
<android.view.Menu: void clear()>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattCharacteristic)>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>
<org.qtproject.qt5.android.bindings.QtLoader: android.content.Intent getIntent()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$IoJobType: void <init>(java.lang.String,int)>
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()>
<java.lang.SecurityException: void printStackTrace()>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
<org.qtproject.qt5.android.QtActivityDelegate: void hideSplashScreen()>
<java.util.ListIterator: java.lang.Object next()>
<org.qtproject.qt5.android.bindings.QtActivity: void onStart()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getLayerDrawable(java.lang.Object,java.lang.String)>
<org.qtproject.qt5.android.QtNative: void fillContextMenu(android.view.Menu)>
<android.bluetooth.le.ScanSettings$Builder: void <init>()>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
<android.app.Activity: android.view.Display getDisplay()>
<android.bluetooth.BluetoothDevice: int getType()>
<android.bluetooth.BluetoothGatt: void disconnect()>
<org.kde.necessitas.ministro.IMinistro$Stub: org.kde.necessitas.ministro.IMinistro asInterface(android.os.IBinder)>
<org.qtproject.qt5.android.bindings.QtLoader: android.content.ContextWrapper access$100(org.qtproject.qt5.android.bindings.QtLoader)>
<android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)>
<android.view.KeyEvent: int getAction()>
<org.qtproject.qt5.android.ExtractStyle: void extractTabBar(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<android.app.Activity: android.content.Intent getIntent()>
<org.qtproject.qt5.android.bindings.QtActivity: void onLowMemory()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean selectAll()>
<java.io.IOException: java.lang.String toString()>
<android.bluetooth.BluetoothGattCallback: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.qtproject.qt5.android.QtThread$2: void <init>(org.qtproject.qt5.android.QtThread,java.lang.Runnable,java.util.concurrent.Semaphore)>
<org.kde.necessitas.ministro.IMinistroCallback$Stub: org.kde.necessitas.ministro.IMinistroCallback asInterface(android.os.IBinder)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: java.util.concurrent.atomic.AtomicInteger access$100(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>
<android.app.Activity: void onStop()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onMenuOpened(int,android.view.Menu)>
<org.qtproject.qt5.android.QtLayout: void <init>(android.content.Context,java.lang.Runnable)>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<java.util.ArrayList: boolean isEmpty()>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>
<org.qtproject.qt5.android.QtNative: void keyboardVisibilityChanged(boolean)>
<org.qtproject.qt5.android.QtActivityDelegate: void updateSelection(int,int,int,int)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.graphics.drawable.Drawable access$500(org.qtproject.qt5.android.QtMessageDialogHelper)>
<android.app.Activity: void onStart()>
<android.view.View: void setSystemUiVisibility(int)>
<java.io.FileOutputStream: void <init>(java.lang.String)>
<android.view.MotionEvent: float getHistoricalX(int,int)>
<org.qtproject.qt5.android.QtNative: void runPendingCppRunnables()>
<android.view.Display: int getRotation()>
<android.app.Activity: boolean onSearchRequested()>
<org.qtproject.qt5.android.QtActivityDelegate: int getSurfaceCount()>
<android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()>
<priv.wh201906.serialtest.MainActivity: void onCreate(android.os.Bundle)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: boolean executeMtuExchange()>
<org.qtproject.qt5.android.QtLayout: int getSuggestedMinimumHeight()>
<android.view.ViewGroup$LayoutParams: void <init>(int,int)>
<org.qtproject.qt5.android.QtLayout: void moveChild(android.view.View,int)>
<org.qtproject.qt5.android.bindings.QtActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<java.io.File: boolean exists()>
<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
<android.widget.ScrollView: void addView(android.view.View)>
<android.app.Activity: void openOptionsMenu()>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.content.BroadcastReceiver: void <init>()>
<org.qtproject.qt5.android.QtNativeInputConnection: java.lang.String getSelectedText(int)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean paste()>
<android.view.inputmethod.ExtractedText: void <init>()>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu$OnDismissListener)>
<java.util.ArrayList: void <init>()>
<android.bluetooth.BluetoothGatt: boolean readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$1500(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>
<android.app.Activity: void onDetachedFromWindow()>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: java.lang.String descriptionForAccessibleObject(int)>
<org.qtproject.qt5.android.bindings.QtActivity: void closeContextMenu()>
<java.lang.System: void exit(int)>
<org.qtproject.qt5.android.QtNative: org.qtproject.qt5.android.QtActivityDelegate activityDelegate()>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<java.lang.String: void <init>()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$IoJobType: org.qtproject.qt5.android.bluetooth.QtBluetoothLE$IoJobType[] values()>
<java.util.ArrayList: java.lang.Object get(int)>
<org.qtproject.qt5.android.QtNative$22: void <init>()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothInputStreamThread: boolean isInterrupted()>
<android.bluetooth.BluetoothGatt: java.util.List getServices()>
<org.qtproject.qt5.android.bindings.QtActivity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<java.io.FileOutputStream: void close()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<org.kde.necessitas.ministro.IMinistroCallback$Stub: void <init>()>
<org.qtproject.qt5.android.QtActivityDelegate: void resetOptionsMenu()>
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()>
<android.bluetooth.BluetoothGatt: void close()>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>
<java.util.ArrayList: int indexOf(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean dispatchTouchEvent(android.view.MotionEvent)>
<java.lang.String: int compareTo(java.lang.String)>
<android.view.SurfaceHolder: android.view.Surface getSurface()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean beginBatchEdit()>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.QtNative: void setClassLoader(java.lang.ClassLoader)>
<android.view.MotionEvent: int getActionIndex()>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<android.app.Service: void <init>()>
<java.util.HashSet: void <init>()>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
<java.lang.Thread: void setName(java.lang.String)>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<org.qtproject.qt5.android.QtNative: void handleLocationChanged(int,int,int)>
<org.qtproject.qt5.android.QtNative$31: void <init>()>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtLoader: android.content.ServiceConnection access$000(org.qtproject.qt5.android.bindings.QtLoader)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getGradientDrawable(android.graphics.drawable.GradientDrawable)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$1: void <init>(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>
<java.util.List: java.lang.Object get(int)>
<org.qtproject.qt5.android.QtNative: void updatePrimaryClip(android.content.ClipData)>
<org.qtproject.qt5.android.QtNative: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.os.Handler: void <init>()>
<org.qtproject.qt5.android.QtActivityDelegate: void notifyScrolledEvent(int)>
<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>
<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>
<org.qtproject.qt5.android.QtNative$17: void <init>(int)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setPadding(int,int,int,int)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<java.util.ArrayList: void <init>(java.util.Collection)>
<org.qtproject.qt5.android.bindings.QtLoader$1: void <init>(org.qtproject.qt5.android.bindings.QtLoader)>
<org.qtproject.qt5.android.QtNative$15: void <init>(int)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.qtproject.qt5.android.QtActivityDelegate: void hideSoftwareKeyboard()>
<org.qtproject.qt5.android.bindings.QtLoader: void finish()>
<android.app.Activity: void onPostResume()>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>
<org.qtproject.qt5.android.QtEditText: android.os.IBinder getWindowToken()>
<android.app.Activity: void startActivity(android.content.Intent)>
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>
<org.qtproject.qt5.android.EditContextView: int getHeight()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
<org.qtproject.qt5.android.bindings.QtLoader$3$1: void <init>(org.qtproject.qt5.android.bindings.QtLoader$3)>
<android.view.MotionEvent: float getY()>
<java.io.File: void <init>(java.lang.String)>
<java.util.LinkedList: void addFirst(java.lang.Object)>
<org.qtproject.qt5.android.ExtractStyle: java.util.ArrayList getArrayListFromIntArray(int[])>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>
<org.qtproject.qt5.android.ExtractStyle: java.util.HashMap getStateIds(java.lang.Object)>
<org.qtproject.qt5.android.QtLayout: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<android.os.Bundle: void <init>()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leDescriptorRead(long,java.lang.String,java.lang.String,int,java.lang.String,byte[])>
<java.lang.Thread: void start()>
<android.widget.TextView: java.lang.CharSequence getText()>
<org.qtproject.qt5.android.QtThread: void exit()>
<org.qtproject.qt5.android.CursorHandle: int width()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.app.AlertDialog access$002(org.qtproject.qt5.android.QtMessageDialogHelper,android.app.AlertDialog)>
<android.os.Looper: android.os.Looper getMainLooper()>
<java.util.ArrayList: void trimToSize()>
<android.app.Activity: android.content.res.Resources$Theme getTheme()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getStatesList(int[])>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<org.qtproject.qt5.android.EditContextView: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>
<org.qtproject.qt5.android.QtMessageDialogHelper$1: void <init>(org.qtproject.qt5.android.QtMessageDialogHelper)>
<android.graphics.drawable.ColorDrawable: void <init>(int)>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>
<android.bluetooth.le.ScanSettings$Builder: android.bluetooth.le.ScanSettings build()>
<org.qtproject.qt5.android.bindings.QtActivity: void onAttachedToWindow()>
<android.widget.Button: void setText(java.lang.CharSequence)>
<android.graphics.Bitmap: int getWidth()>
<org.qtproject.qt5.android.QtNative: double access$600()>
<org.qtproject.qt5.android.bindings.QtServiceLoader: void onCreate()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.QtLayout: void detachViewFromParent(android.view.View)>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>
<android.os.Parcel: void writeInt(int)>
<android.app.AlertDialog: android.view.Window getWindow()>
<java.util.HashMap: java.util.Set keySet()>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>
<org.qtproject.qt5.android.QtActivityDelegate: void initializeAccessibility()>
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getAnimationDrawable(android.graphics.drawable.AnimationDrawable,java.lang.String)>
<android.widget.PopupWindow: void setClippingEnabled(boolean)>
<org.qtproject.qt5.android.QtActivityDelegate: void createSurface(int,boolean,int,int,int,int,int)>
<android.widget.PopupMenu: android.view.Menu getMenu()>
<org.qtproject.qt5.android.bindings.QtActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()>
<android.content.ClipboardManager: boolean hasPrimaryClip()>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>
<android.view.MotionEvent: int getActionMasked()>
<org.qtproject.qt5.android.QtActivityDelegate: int access$1000(org.qtproject.qt5.android.QtActivityDelegate)>
<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate$1: void <init>(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.graphics.drawable.Drawable access$900(org.qtproject.qt5.android.QtMessageDialogHelper,java.lang.String)>
<android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onSearchRequested()>
<android.widget.TextView: void setLongClickable(boolean)>
<android.view.ViewGroup: void removeView(android.view.View)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$BondStateBroadcastReceiver: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,org.qtproject.qt5.android.bluetooth.QtBluetoothLE$1)>
<org.qtproject.qt5.android.QtActivityDelegate: void updateFullScreen()>
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: boolean scrollForward(int)>
<android.content.res.ColorStateList: int getColorForState(int[],int)>
<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<android.os.Parcel: android.os.Parcel obtain()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean copyURL()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getJsonChunkInfo(int[])>
<java.util.ListIterator: void remove()>
<android.content.pm.ActivityInfo: int getThemeResource()>
<org.qtproject.qt5.android.bindings.QtApplication: org.qtproject.qt5.android.bindings.QtApplication$InvokeResult invokeDelegate(java.lang.Object[])>
<org.qtproject.qt5.android.QtNative: android.content.ClipboardManager access$1302(android.content.ClipboardManager)>
<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<java.lang.Exception: java.lang.String toString()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<java.io.OutputStreamWriter: void close()>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: void writeIndent()>
<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>
<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>
<org.qtproject.qt5.android.bearer.QtNetworkReceiver$BroadcastReceiverPrivate: void <init>(org.qtproject.qt5.android.bearer.QtNetworkReceiver$1)>
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<org.qtproject.qt5.android.CursorHandle: void <init>(android.app.Activity,android.view.View,int,int,boolean)>
<android.view.MotionEvent: long getEventTime()>
<java.lang.reflect.Field: char getChar(java.lang.Object)>
<org.qtproject.qt5.android.QtNative: void onNewIntent(android.content.Intent)>
<org.qtproject.qt5.android.QtActivityDelegate: org.qtproject.qt5.android.QtEditText access$000(org.qtproject.qt5.android.QtActivityDelegate)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothInputStreamThread: void errorOccurred(long,int)>
<org.kde.necessitas.ministro.IMinistro$Stub$Proxy: void <init>(android.os.IBinder)>
<org.qtproject.qt5.android.bindings.QtActivityLoader: void <init>(org.qtproject.qt5.android.bindings.QtActivity)>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
<org.qtproject.qt5.android.QtActivityDelegate: void notifyAccessibilityLocationChange(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>
<org.kde.necessitas.ministro.IMinistroCallback$Stub: void loaderReady(android.os.Bundle)>
<org.qtproject.qt5.android.QtActivityDelegate: void resetSoftwareKeyboard()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: void errorOccurred(long,int)>
<android.os.Looper: java.lang.Thread getThread()>
<org.qtproject.qt5.android.bindings.QtLoader$3: void <init>(org.qtproject.qt5.android.bindings.QtLoader)>
<android.view.MotionEvent: int getButtonState()>
<java.util.UUID: java.util.UUID fromString(java.lang.String)>
<java.util.Iterator: boolean hasNext()>
<java.lang.reflect.Field: void setAccessible(boolean)>
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractImageViewInformation(int,java.lang.String)>
<org.qtproject.qt5.android.QtLayout: void setNativeOrientation(int)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void notifyValueChanged(int,java.lang.String)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.text.Spanned access$700(org.qtproject.qt5.android.QtMessageDialogHelper)>
<java.util.HashMap: java.util.Set entrySet()>
<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<org.qtproject.qt5.android.QtNative$4: void <init>(java.lang.String,java.lang.String,java.lang.String[])>
<android.app.Service: void onTaskRemoved(android.content.Intent)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void leServerDescriptorWritten(long,android.bluetooth.BluetoothGattDescriptor,byte[])>
<android.view.accessibility.AccessibilityEvent: java.util.List getText()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>
<org.qtproject.qt5.android.QtSurface: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<java.util.Set: java.util.Iterator iterator()>
<android.bluetooth.BluetoothGattServer: boolean sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte[])>
<org.qtproject.qt5.android.QtActivityDelegate: boolean access$300(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.QtLayout: android.view.ViewParent getParent()>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<android.app.Activity: void invalidateOptionsMenu()>
<android.content.res.Resources: int getColor(int)>
<android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<priv.wh201906.serialtest.MainActivity: void <init>()>
<android.view.MotionEvent: void setLocation(float,float)>
<java.util.List: int size()>
<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>
<android.view.MenuItem: int getItemId()>
<org.qtproject.qt5.android.QtNativeInputConnection: org.qtproject.qt5.android.QtExtractedText getExtractedText(int,int,int)>
<org.qtproject.qt5.android.bindings.QtActivity: void onPostResume()>
<android.bluetooth.BluetoothGattCallback: void <init>()>
<org.qtproject.qt5.android.QtLayout: void measureChildren(int,int)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<org.qtproject.qt5.android.QtThread: void <init>()>
<android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>
<android.content.res.TypedArray: boolean hasValue(int)>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<org.qtproject.qt5.android.QtActivityDelegate$6: void <init>(org.qtproject.qt5.android.QtActivityDelegate)>
<java.lang.Object: boolean equals(java.lang.Object)>
<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<java.util.HashSet: int size()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<org.qtproject.qt5.android.bindings.QtLoader$2: void <init>(org.qtproject.qt5.android.bindings.QtLoader)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.view.SurfaceHolder: void setFormat(int)>
<org.qtproject.qt5.android.bindings.QtApplication: void <init>()>
<java.net.InetAddress: java.lang.String getHostAddress()>
<org.qtproject.qt5.android.QtNative: void longPress(int,int,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnServiceAdded(int,android.bluetooth.BluetoothGattService)>
<org.qtproject.qt5.android.QtActivityDelegate$5: void <init>(org.qtproject.qt5.android.QtActivityDelegate)>
<android.view.MotionEvent: int getToolType(int)>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,int,byte[])>
<android.app.AlertDialog: void setView(android.view.View)>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: int hitTest(float,float)>
<org.qtproject.qt5.android.bindings.QtActivity: void onNewIntent(android.content.Intent)>
<org.qtproject.qt5.android.QtNative: int access$000()>
<org.qtproject.qt5.android.QtNative: void mouseDown(int,int,int)>
<org.qtproject.qt5.android.QtActivityDelegate: boolean access$1402(org.qtproject.qt5.android.QtActivityDelegate,boolean)>
<org.qtproject.qt5.android.bindings.QtActivity: java.lang.CharSequence getTitle()>
<android.os.Handler: boolean post(java.lang.Runnable)>
<org.qtproject.qt5.android.QtActivityDelegate: void bringChildToFront(int)>
<org.qtproject.qt5.android.QtActivityDelegate: void onCreatePopupMenu(android.view.Menu)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<org.qtproject.qt5.android.QtNative: void setSurface(int,java.lang.Object,int,int)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: void setActive(boolean)>
<android.view.MotionEvent: float getTouchMinor(int)>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>
<org.qtproject.qt5.android.bindings.QtLoader: void runOnUiThread(java.lang.Runnable)>
<org.qtproject.qt5.android.QtNative: boolean sendMouseEvent(android.view.MotionEvent,int)>
<org.qtproject.qt5.android.QtActivityDelegate$7: void <init>(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.QtNative: void sendTouchEvent(android.view.MotionEvent,int)>
<org.qtproject.qt5.android.QtLayout: void addView(android.view.View,int)>
<android.app.Application: void onTerminate()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$GattEntry: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,org.qtproject.qt5.android.bluetooth.QtBluetoothLE$1)>
<java.lang.Class: java.lang.String getCanonicalName()>
<org.qtproject.qt5.android.bindings.QtActivityLoader: void startApp(boolean)>
<java.io.File: boolean mkdirs()>
<org.qtproject.qt5.android.QtNative: void tabletEvent(int,int,long,int,int,int,float,float,float)>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>
<org.qtproject.qt5.android.QtMessageDialogHelper$1$1: void <init>(org.qtproject.qt5.android.QtMessageDialogHelper$1)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: void interrupt()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$GattEntryType: void <init>(java.lang.String,int)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean cut()>
<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>
<org.qtproject.qt5.android.EditContextView$OnClickListener: void contextButtonClicked(int)>
<org.qtproject.qt5.android.QtNativeDialogHelper: void dialogResult(long,int)>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>
<android.bluetooth.le.AdvertiseCallback: void <init>()>
<org.qtproject.qt5.android.EditContextView: int getWidth()>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<android.graphics.drawable.Drawable: boolean setLevel(int)>
<org.qtproject.qt5.android.bindings.QtLoader: void <init>(android.content.ContextWrapper,java.lang.Class)>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,android.content.res.Resources$Theme)>
<org.qtproject.qt5.android.QtActivityDelegate: boolean setKeyboardVisibility(boolean,long)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$1: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer)>
<org.qtproject.qt5.android.ExtractStyle: void extractProgressBarInfo(org.json.JSONObject,int)>
<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leScanResult(long,android.bluetooth.BluetoothDevice,int,byte[])>
<org.qtproject.qt5.android.ExtractStyle: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.app.Service: boolean onUnbind(android.content.Intent)>
<android.view.View: android.view.ViewParent getParent()>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.text.Spanned access$300(org.qtproject.qt5.android.QtMessageDialogHelper)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager: void markDeviceConnectivity(android.bluetooth.BluetoothDevice,boolean)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$AccessibilityManagerListener: void <init>(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate,org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$1)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean commitText(java.lang.String,int)>
<org.qtproject.qt5.android.ExtractStyle: void extractViewInformation(int,org.json.JSONObject,java.lang.String)>
<org.qtproject.qt5.android.bindings.QtActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<java.lang.String: boolean equals(java.lang.Object)>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<java.lang.Integer: int intValue()>
<org.qtproject.qt5.android.QtNative: void keyboardVisibilityUpdated(boolean)>
<java.util.ArrayList: int size()>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<org.qtproject.qt5.android.QtNative: void touchCancel(int)>
<android.app.AlertDialog: void setCancelable(boolean)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<org.qtproject.qt5.android.QtMessageDialogHelper: java.util.ArrayList access$400(org.qtproject.qt5.android.QtMessageDialogHelper)>
<java.lang.Runnable: void run()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void resetData()>
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<org.qtproject.qt5.android.ExtractStyle: void extractWindow(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager$Entry: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager)>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener)>
<org.qtproject.qt5.android.QtLayout: int displayRotation()>
<org.qtproject.qt5.android.bindings.QtActivity: android.view.View onCreatePanelView(int)>
<android.content.UriPermission: android.net.Uri getUri()>
<android.view.KeyEvent: java.lang.String getCharacters()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.qtproject.qt5.android.ExtractStyle: void extractProgressBar(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter,int,java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate$4: boolean isSimilarRotation(int,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager: java.util.List getToBeUpdatedDevices(android.bluetooth.BluetoothGattCharacteristic)>
<org.kde.necessitas.ministro.IMinistro: void requestLoader(org.kde.necessitas.ministro.IMinistroCallback,android.os.Bundle)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getVPath(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.view.Window: void clearFlags(int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<org.qtproject.qt5.android.EditContextView$ContextButton: android.content.res.Resources getResources()>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothGattServer openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)>
<org.qtproject.qt5.android.bindings.QtActivity: void onConfigurationChanged(android.content.res.Configuration)>
<org.qtproject.qt5.android.QtThread: void run(java.lang.Runnable)>
<java.util.Iterator: java.lang.Object next()>
<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<java.lang.Enum: void <init>(java.lang.String,int)>
<org.qtproject.qt5.android.QtServiceDelegate: boolean startApplication()>
<org.qtproject.qt5.android.EditContextView: void updateButtons(int)>
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()>
<java.io.OutputStreamWriter: void write(java.lang.String,int,int)>
<org.qtproject.qt5.android.EditPopupMenu: void <init>(android.app.Activity,android.view.View)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.qtproject.qt5.android.QtNative: int access$200()>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<org.qtproject.qt5.android.QtInputConnection: void <init>(org.qtproject.qt5.android.QtEditText)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leCharacteristicWritten(long,int,byte[],int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void scheduleServiceDetailDiscovery(int)>
<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>
<java.util.UUID: int compareTo(java.util.UUID)>
<android.view.MotionEvent: int getAction()>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$ReadWriteJob: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,org.qtproject.qt5.android.bluetooth.QtBluetoothLE$1)>
<android.view.View: void setId(int)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: boolean scrollBackward(int)>
<org.qtproject.qt5.android.EditContextView: void <init>(android.content.Context,org.qtproject.qt5.android.EditContextView$OnClickListener)>
<org.qtproject.qt5.android.QtNative$5: void <init>(android.view.View,boolean)>
<android.view.MotionEvent: float getPressure(int)>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: void value(org.json.JSONObject)>
<android.content.res.TypedArray: int getInt(int,int)>
<android.view.KeyEvent: int getUnicodeChar()>
<org.qtproject.qt5.android.bindings.QtLoader: void downloadUpgradeMinistro(java.lang.String)>
<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>
<org.qtproject.qt5.android.QtNative$24: void <init>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<android.bluetooth.BluetoothServerSocket: void close()>
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>
<org.qtproject.qt5.android.QtNative: int getAction(int,android.view.MotionEvent)>
<org.qtproject.qt5.android.QtNative: android.net.Uri getUriWithValidPermission(android.content.Context,java.lang.String,java.lang.String)>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.widget.PopupWindow: int getWidth()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>
<org.qtproject.qt5.android.QtNative$25: void <init>(int,boolean,int,int,int,int,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.view.View$AccessibilityDelegate: void <init>()>
<org.qtproject.qt5.android.CursorView: android.graphics.drawable.Drawable getDrawable()>
<android.view.Window: android.view.View getDecorView()>
<android.view.MotionEvent: float getHistoricalY(int,int)>
<org.qtproject.qt5.android.QtNative: void setService(android.app.Service,org.qtproject.qt5.android.QtServiceDelegate)>
<org.qtproject.qt5.android.bindings.QtActivity: android.app.Dialog onCreateDialog(int)>
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()>
<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
<java.util.concurrent.Semaphore: void <init>(int)>
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()>
<org.qtproject.qt5.android.QtActivityDelegate$4: void <init>(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.bindings.QtActivity: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>
<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.widget.PopupWindow: boolean isShowing()>
<org.qtproject.qt5.android.QtActivityDelegate: int access$502(org.qtproject.qt5.android.QtActivityDelegate,int)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean commitCompletion(java.lang.String,int)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()>
<java.lang.Math: int abs(int)>
<android.content.Context: android.content.ContentResolver getContentResolver()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.app.Activity access$300(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<android.app.Activity: void onDestroy()>
<org.qtproject.qt5.android.QtEditText: boolean requestFocus()>
<org.qtproject.qt5.android.ExtractStyle: java.lang.String getStatesName(int[])>
<org.qtproject.qt5.android.extras.QtNative: void onServiceDisconnected(long,java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate: int access$500(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onTrackballEvent(android.view.MotionEvent)>
<android.widget.ImageView: void <init>(android.content.Context)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtLoader: java.lang.Class contextClassName()>
<FLOWDROID_EXCEPTIONS: void throw_java_lang_Exception_0()>
<org.qtproject.qt5.android.QtActivityDelegate: void onTerminate()>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: boolean access$000(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate,android.view.MotionEvent)>
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>
<org.qtproject.qt5.android.bindings.QtLoader$1: void onClick(android.content.DialogInterface,int)>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>
<android.app.Service: void stopSelf()>
<org.qtproject.qt5.android.QtActivityDelegate: void insertNativeView(int,android.view.View,int,int,int,int)>
<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractTextAppearance(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnConnectionStateChange(android.bluetooth.BluetoothDevice,int,int)>
<java.lang.String: int length()>
<org.qtproject.qt5.android.QtNative: void onActivityResult(int,int,android.content.Intent)>
<android.content.IntentFilter: void <init>(java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate: int access$902(org.qtproject.qt5.android.QtActivityDelegate,int)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void dumpNodes(int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<org.qtproject.qt5.android.bindings.QtActivity: void onContextMenuClosed(android.view.Menu)>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>
<java.net.SocketException: void printStackTrace()>
<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>
<org.qtproject.qt5.android.QtEditText: void setInputType(int)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void interruptCurrentIO(int)>
<org.qtproject.qt5.android.QtNative$20$1: void <init>(org.qtproject.qt5.android.QtNative$20)>
<org.qtproject.qt5.android.QtThread: java.lang.Thread access$100(org.qtproject.qt5.android.QtThread)>
<java.util.HashMap: void <init>()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$1000(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<org.qtproject.qt5.android.bindings.QtActivityLoader$2: void <init>(org.qtproject.qt5.android.bindings.QtActivityLoader)>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.qtproject.qt5.android.QtActivityDelegate: void updateHandles(int,int,int,int,int,int,int,int,boolean)>
<android.os.HandlerThread: void <init>(java.lang.String)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.View access$202(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate,android.view.View)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<java.util.ArrayList: java.util.ListIterator listIterator()>
<android.bluetooth.le.ScanCallback: void onScanFailed(int)>
<org.qtproject.qt5.android.QtActivityDelegate: java.lang.String access$1300(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: android.bluetooth.BluetoothGattCharacteristic cloneChararacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<org.qtproject.qt5.android.QtNative$28: void <init>(int)>
<java.lang.IllegalStateException: java.lang.String getMessage()>
<org.qtproject.qt5.android.QtNative: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.qtproject.qt5.android.QtActivityDelegate: void destroySurface(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: void join(long)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean endBatchEdit()>
<org.qtproject.qt5.android.bindings.QtActivity: void onTitleChanged(java.lang.CharSequence,int)>
<org.qtproject.qt5.android.QtNative: void keyboardGeometryChanged(int,int,int,int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractItemStyle(int,java.lang.String)>
<org.qtproject.qt5.android.QtNative: void onCreateContextMenu(android.view.ContextMenu)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.bluetooth.le.ScanSettings$Builder: android.bluetooth.le.ScanSettings$Builder setScanMode(int)>
<java.lang.String: java.lang.String trim()>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<org.qtproject.qt5.android.QtSurface: void setFocusable(boolean)>
<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<org.qtproject.qt5.android.QtActivityDelegate$8$2: void <init>(org.qtproject.qt5.android.QtActivityDelegate$8)>
<org.qtproject.qt5.android.bindings.QtActivity: void onContentChanged()>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>
<java.lang.System: long nanoTime()>
<java.util.List: boolean isEmpty()>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<java.util.concurrent.atomic.AtomicInteger: void set(int)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<org.qtproject.qt5.android.bindings.QtLoader: java.lang.String getTitle()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractTextAppearanceInformation(int,java.lang.String)>
<org.qtproject.qt5.android.bearer.QtNetworkReceiver$BroadcastReceiverPrivate: void <init>()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.view.MotionEvent: float getY(int)>
<org.qtproject.qt5.android.QtActivityDelegate$8: void <init>(org.qtproject.qt5.android.QtActivityDelegate,int,int,int,int)>
<org.qtproject.qt5.android.QtThread: void post(java.lang.Runnable)>
<org.qtproject.qt5.android.QtNative: boolean hasClipboardText()>
<android.app.Service: void onCreate()>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$HoverEventListener: void <init>(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<org.qtproject.qt5.android.CursorHandle: void hide()>
<android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>
<android.graphics.Bitmap: int getPixel(int,int)>
<android.widget.LinearLayout: void setOrientation(int)>
<android.bluetooth.BluetoothGattServerCallback: void onExecuteWrite(android.bluetooth.BluetoothDevice,int,boolean)>
<android.graphics.Rect: void offset(int,int)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.View access$200(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<org.qtproject.qt5.android.QtEditText: void setInitialCapsMode(int)>
<java.lang.String: boolean isEmpty()>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>
<org.qtproject.qt5.android.QtNativeLibrariesDir: java.lang.String nativeLibrariesDir(android.content.Context)>
<android.util.DisplayMetrics: void <init>()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<org.qtproject.qt5.android.QtLayout: android.content.Context getContext()>
<org.qtproject.qt5.android.QtNative: boolean onOptionsItemSelected(int,boolean)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<android.bluetooth.BluetoothGattServerCallback: void onConnectionStateChange(android.bluetooth.BluetoothDevice,int,int)>
<java.util.ArrayList: void <init>(int)>
<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)>
<org.qtproject.qt5.android.QtNative: org.qtproject.qt5.android.QtActivityDelegate access$1200()>
<java.lang.Thread: void join()>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<org.qtproject.qt5.android.QtLayout: void setActivityDisplayRotation(int)>
<org.qtproject.qt5.android.QtSurface: float getX()>
<org.qtproject.qt5.android.QtNative$16: void <init>(int,int)>
<java.lang.reflect.Method: java.lang.String getName()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()>
<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>
<android.app.Service: java.io.File getFilesDir()>
<android.app.Activity: void setContentView(android.view.View)>
<android.os.Parcel: void writeString(java.lang.String)>
<org.qtproject.qt5.android.QtNative: android.app.Service access$1000()>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<org.qtproject.qt5.android.QtNative: boolean access$1102(boolean)>
<android.view.Display: float getRefreshRate()>
<android.view.MotionEvent: float getX()>
<org.qtproject.qt5.android.QtInputConnection: boolean finishComposingText()>
<org.qtproject.qt5.android.QtLayout: void addView(android.view.View)>
<android.view.MotionEvent: float getOrientation(int)>
<org.qtproject.qt5.android.QtEditText: void setImeOptions(int)>
<java.lang.Runtime: void exit(int)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: int access$902(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate,int)>
<org.qtproject.qt5.android.QtActivityDelegate: int access$600(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$800(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<java.util.ArrayList: void clear()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean deleteSurroundingText(int,int)>
<java.util.List: java.util.ListIterator listIterator()>
<org.qtproject.qt5.android.bindings.QtActivityLoader: void onCreate(android.os.Bundle)>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>
<org.qtproject.qt5.android.QtNative: java.lang.String loadMainLibrary(java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate: boolean loadApplication(android.app.Activity,java.lang.ClassLoader,android.os.Bundle)>
<org.qtproject.qt5.android.QtLayout: android.view.WindowInsets getRootWindowInsets()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer,org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$1)>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: void close()>
<org.qtproject.qt5.android.bindings.QtActivity: void onDestroy()>
<org.qtproject.qt5.android.QtNative$6: void <init>(boolean[],java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.bindings.QtActivityLoader: void ministroNotFound()>
<org.qtproject.qt5.android.bindings.QtActivity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<android.app.Activity: void finish()>
<org.qtproject.qt5.android.bindings.QtActivity: void onUserLeaveHint()>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<org.qtproject.qt5.android.QtNative: void handleRefreshRateChanged(float)>
<org.qtproject.qt5.android.QtNativeInputConnection: java.lang.String getTextBeforeCursor(int,int)>
<android.app.Activity: void onUserLeaveHint()>
<android.content.ClipboardManager: void clearPrimaryClip()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: void setName(java.lang.String)>
<android.content.ClipData: void addItem(android.content.ClipData$Item)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onGenericMotionEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.QtNative: boolean updateNativeActivity()>
<org.qtproject.qt5.android.QtNative: void waitForServiceSetup()>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.QtLayout: int indexOfChild(android.view.View)>
<android.view.KeyEvent: int getUnicodeChar(int)>
<java.lang.UnsupportedOperationException: void printStackTrace()>
<org.qtproject.qt5.android.QtSurface: void setId(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$600(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,int)>
<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$1: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<android.bluetooth.BluetoothGattServer: boolean addService(android.bluetooth.BluetoothGattService)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager: void insertOrUpdate(android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothDevice,byte[])>
<org.qtproject.qt5.android.QtNative$19: void <init>(int)>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
<org.qtproject.qt5.android.QtNative: int access$100()>
<java.io.IOException: void printStackTrace()>
<android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()>
<org.qtproject.qt5.android.QtNative: void setDisplayMetrics(int,int,int,int,double,double,double,double,float)>
<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>
<java.lang.Class: java.lang.Object newInstance()>
<android.view.KeyEvent: long getDownTime()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)>
<android.view.View: int getVisibility()>
<java.util.LinkedList: void clear()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.UUID: boolean equals(java.lang.Object)>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<android.view.View: int getWidth()>
<android.graphics.Rect: int width()>
<org.qtproject.qt5.android.bindings.QtLoader$4: void onClick(android.content.DialogInterface,int)>
<org.qtproject.qt5.android.QtActivityDelegate: int access$602(org.qtproject.qt5.android.QtActivityDelegate,int)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.content.res.Resources$Theme access$202(org.qtproject.qt5.android.QtMessageDialogHelper,android.content.res.Resources$Theme)>
<org.qtproject.qt5.android.QtActivityDelegate: void notifyObjectHide(int,int)>
<android.app.Activity: void onResume()>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<android.os.Looper: void quitSafely()>
<android.bluetooth.BluetoothGattCallback: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>
<android.widget.PopupMenu: void show()>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattDescriptor)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getDrawable(java.lang.Object,java.lang.String,android.graphics.Rect)>
<android.net.Uri: java.lang.String getScheme()>
<android.content.ClipData: int getItemCount()>
<org.qtproject.qt5.android.QtActivityDelegate: boolean isKeyboardVisible()>
<org.qtproject.qt5.android.QtNative: void setApplicationDisplayMetrics(int,int,int,int,double,double,double,double,float)>
<org.qtproject.qt5.android.bindings.QtActivity: void finish()>
<org.qtproject.qt5.android.network.QtNetwork: android.net.ProxyInfo access$002(android.net.ProxyInfo)>
<java.util.ArrayList: java.lang.Object[] toArray()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void finishCurrentServiceDiscovery(int)>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<android.view.View: int getMeasuredHeight()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.ExtractStyle: void extractListView(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<org.qtproject.qt5.android.network.QtNetwork: android.net.ConnectivityManager getConnectivityManager(android.content.Context)>
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<org.json.JSONArray: org.json.JSONArray put(double)>
<android.view.View: void setVisibility(int)>
<android.content.Context: java.lang.String getPackageName()>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<java.lang.String: boolean startsWith(java.lang.String)>
<android.app.Activity: android.content.res.Resources getResources()>
<android.content.Intent: void <init>(java.lang.String)>
<org.qtproject.qt5.android.bindings.QtLoader: void ministroNotFound()>
<android.widget.TextView: void setId(int)>
<org.qtproject.qt5.android.QtNative$2: void <init>(java.util.ArrayList)>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>
<org.qtproject.qt5.android.QtSurface: void <init>(android.content.Context,int,boolean,int)>
<org.qtproject.qt5.android.QtNative$13: void <init>()>
<org.qtproject.qt5.android.QtNative$11: void <init>(int,int,int,int,int,int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getVGroup(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtActivity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<java.util.HashSet: boolean add(java.lang.Object)>
<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<org.qtproject.qt5.android.QtActivityDelegate: void notifyQtAndroidPluginRunning(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.accessibility.AccessibilityEvent getEventForVirtualViewId(int,int)>
<org.qtproject.qt5.android.ExtractStyle: int[] stateSetUnion(int[],int[])>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: org.qtproject.qt5.android.QtActivityDelegate access$400(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.app.Activity: void onWindowFocusChanged(boolean)>
<org.qtproject.qt5.android.ExtractStyle: void extractCompoundButton(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter,int,java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate: void openContextMenu(int,int,int,int)>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void scheduleMtuExchange()>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<org.qtproject.qt5.android.bindings.QtActivity: void onPrepareDialog(int,android.app.Dialog)>
<android.content.ClipData: void addItem(android.content.ContentResolver,android.content.ClipData$Item)>
<android.graphics.drawable.StateListDrawable: int getStateCount()>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<android.view.View: void getLocationInWindow(int[])>
<org.qtproject.qt5.android.bindings.QtActivity: void onPause()>
<org.qtproject.qt5.android.bindings.QtActivity: void onPostCreate(android.os.Bundle)>
<java.lang.Object: java.lang.Object clone()>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<android.widget.RelativeLayout: void <init>(android.content.Context)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leConnectionStateChange(long,int,int)>
<java.io.File: java.lang.String[] list()>
<java.io.File: java.lang.String getAbsolutePath()>
<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()>
<java.lang.Thread: java.lang.Thread currentThread()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leCharacteristicRead(long,java.lang.String,int,java.lang.String,int,byte[])>
<org.qtproject.qt5.android.bindings.QtActivity: void onSaveInstanceState(android.os.Bundle)>
<org.qtproject.qt5.android.bindings.QtActivity: void <init>()>
<android.widget.TextView: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo getNodeForVirtualViewId(int)>
<android.view.KeyEvent: long getEventTime()>
<org.qtproject.qt5.android.EditPopupMenu: void setPosition(int,int,int,org.qtproject.qt5.android.CursorHandle,org.qtproject.qt5.android.CursorHandle,org.qtproject.qt5.android.CursorHandle)>
<org.qtproject.qt5.android.QtActivityDelegate: void loadActivity(android.app.Activity)>
<org.qtproject.qt5.android.QtNative: void onOptionsMenuClosed(android.view.Menu)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<java.util.LinkedList: boolean isEmpty()>
<java.util.ArrayList: java.lang.Object remove(int)>
<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>
<android.content.res.XmlResourceParser: java.lang.String getName()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getVectorDrawable(java.lang.Object)>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter name(java.lang.String)>
<org.qtproject.qt5.android.QtLayout: void setMeasuredDimension(int,int)>
<java.io.InputStream: int read(byte[])>
<org.qtproject.qt5.android.QtNative: void keyUp(int,int,int,boolean)>
<org.qtproject.qt5.android.bindings.QtServiceLoader: void startApp(boolean)>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<org.qtproject.qt5.android.QtLayout: boolean postDelayed(java.lang.Runnable,long)>
<android.os.Parcel: int readInt()>
<java.util.List: java.util.Iterator iterator()>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>
<java.util.List: java.lang.Object set(int,java.lang.Object)>
<org.qtproject.qt5.android.QtSurface: float getY()>
<org.qtproject.qt5.android.bindings.QtApplication: java.lang.Object invokeDelegateMethod(java.lang.reflect.Method,java.lang.Object[])>
<org.qtproject.qt5.android.QtNative: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.qtproject.qt5.android.QtNative: android.app.Activity access$900()>
<org.qtproject.qt5.android.QtActivityDelegate: android.view.inputmethod.InputMethodManager access$100(org.qtproject.qt5.android.QtActivityDelegate)>
<android.content.ClipData$Item: android.net.Uri getUri()>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: int modifiedReadWriteHandle(int,org.qtproject.qt5.android.bluetooth.QtBluetoothLE$IoJobType)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONArray getJsonArray(int[],int,int)>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<org.qtproject.qt5.android.QtActivityDelegate: void onContextMenuClosed(android.view.Menu)>
<android.app.Service: void onLowMemory()>
<android.bluetooth.BluetoothGattServerCallback: void onServiceAdded(int,android.bluetooth.BluetoothGattService)>
<android.bluetooth.BluetoothGattServer: boolean notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.view.View: int getMeasuredWidth()>
<org.qtproject.qt5.android.QtActivityDelegate: void bringChildToBack(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leServiceDetailDiscoveryFinished(long,java.lang.String,int,int)>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>
<org.qtproject.qt5.android.bindings.QtApplication$InvokeResult: void <init>()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$1200(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,int,int)>
<org.qtproject.qt5.android.bindings.QtService: void stopSelf()>
<android.content.Context: android.content.Context getApplicationContext()>
<org.qtproject.qt5.android.bindings.QtActivity: void onOptionsMenuClosed(android.view.Menu)>
<android.view.View: android.content.Context getContext()>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<android.view.MotionEvent: int getHistorySize()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<java.util.concurrent.Semaphore: void release()>
<android.widget.PopupWindow: void dismiss()>
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
<android.app.Activity: void onPostCreate(android.os.Bundle)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$AccessibilityManagerListener: void <init>(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<java.lang.StringBuilder: int length()>
<android.graphics.Bitmap: int getHeight()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$300(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.content.Context,android.content.Intent)>
<java.lang.Class: java.lang.String getName()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void performNextIOThreaded()>
<org.qtproject.qt5.android.bindings.QtActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<org.qtproject.qt5.android.bindings.QtServiceLoader: void <init>(org.qtproject.qt5.android.bindings.QtService)>
<dummyMainClass: priv.wh201906.serialtest.MainActivity dummyMainMethod_priv_wh201906_serialtest_MainActivity(android.content.Intent)>
<org.qtproject.qt5.android.bindings.QtActivity: void onCreate(android.os.Bundle)>
<android.app.Activity: void onAttachFragment(android.app.Fragment)>
<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: void newSocket(long,android.bluetooth.BluetoothSocket)>
<android.app.ActionBar: void hide()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<priv.wh201906.serialtest.MainActivity: void shareFile(java.lang.String)>
<android.app.Application: void <init>()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void notifyObjectFocus(int)>
<android.content.UriPermission: boolean isReadPermission()>
<org.qtproject.qt5.android.QtLayout: int getSuggestedMinimumWidth()>
<java.util.LinkedList: java.lang.Object remove()>
<java.lang.InterruptedException: void printStackTrace()>
<java.lang.Long: long longValue()>
<android.app.Activity: android.content.pm.PackageManager getPackageManager()>
<android.app.Activity: void onAttachedToWindow()>
<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>
<android.widget.Button: void <init>(android.content.Context)>
<org.qtproject.qt5.android.bindings.QtActivity: void onUserInteraction()>
<java.util.LinkedList: boolean add(java.lang.Object)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>
<org.qtproject.qt5.android.QtLayout$LayoutParams: void <init>(int,int,int,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: boolean executeWriteJob(org.qtproject.qt5.android.bluetooth.QtBluetoothLE$ReadWriteJob)>
<android.os.Bundle: int getInt(java.lang.String)>
<android.view.View: void <init>(android.content.Context)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<org.qtproject.qt5.android.QtLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.widget.PopupWindow: void setContentView(android.view.View)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void notifyObjectHide(int,int)>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leServicesDiscovered(long,int,java.lang.String)>
<java.lang.SecurityException: void <init>(java.lang.String)>
<java.lang.Exception: void printStackTrace()>
<org.qtproject.qt5.android.CursorView: void getLocationOnScreen(int[])>
<android.bluetooth.BluetoothGattServerCallback: void <init>()>
<org.qtproject.qt5.android.bindings.QtLoader$3$1$1: void <init>(org.qtproject.qt5.android.bindings.QtLoader$3$1,android.os.Bundle)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<org.qtproject.qt5.android.QtLayout: void setLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams,boolean)>
<org.qtproject.qt5.android.QtMessageDialogHelper$1$2: void <init>(org.qtproject.qt5.android.QtMessageDialogHelper$1)>
<java.io.File: boolean isDirectory()>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<org.qtproject.qt5.android.QtNative: void sendTrackballEvent(android.view.MotionEvent,int)>
<org.json.JSONArray: void <init>()>
<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>
<android.app.Activity: boolean isInMultiWindowMode()>
<java.security.cert.X509Certificate: byte[] getEncoded()>
<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.qtproject.qt5.android.QtActivityDelegate$8$1: void <init>(org.qtproject.qt5.android.QtActivityDelegate$8)>
<java.util.Arrays: void sort(int[])>
<android.os.HandlerThread: void start()>
<org.qtproject.qt5.android.QtNative$26: void <init>(int,android.view.View,int,int,int,int)>
<java.util.HashMap: int size()>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: void endObject()>
<org.json.JSONObject: java.lang.String toString()>
<org.qtproject.qt5.android.QtNative: boolean startApplication(java.lang.String,java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: boolean executeReadJob(org.qtproject.qt5.android.bluetooth.QtBluetoothLE$ReadWriteJob)>
<org.qtproject.qt5.android.QtActivityDelegate: int access$200(org.qtproject.qt5.android.QtActivityDelegate)>
<android.app.Activity: void closeContextMenu()>
<android.content.res.Resources: java.lang.String getString(int)>
<org.qtproject.qt5.android.QtNative$9: void <init>(int,int,int,int)>
<android.content.ClipData$Item: java.lang.String getHtmlText()>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onKeyShortcut(int,android.view.KeyEvent)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo access$700(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<android.bluetooth.le.ScanRecord: byte[] getBytes()>
<org.qtproject.qt5.android.bindings.QtActivityLoader$1: void <init>(org.qtproject.qt5.android.bindings.QtActivityLoader)>
<java.lang.Long: int intValue()>
<java.util.List: boolean add(java.lang.Object)>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<org.qtproject.qt5.android.QtNative: void startQtApplication()>
<android.app.AlertDialog: void dismiss()>
<org.qtproject.qt5.android.QtNative: boolean sendGenericMotionEvent(android.view.MotionEvent,int)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$HoverEventListener: void <init>(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate,org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$1)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: int parentId(int)>
<android.app.Activity: android.content.ContentResolver getContentResolver()>
<java.lang.Class: java.lang.Class[] getInterfaces()>
<org.qtproject.qt5.android.QtActivityDelegate$3: void <init>(org.qtproject.qt5.android.QtActivityDelegate,android.os.Handler)>
<org.qtproject.qt5.android.QtActivityDelegate: void setSurfaceGeometry(int,int,int,int,int)>
<priv.wh201906.serialtest.MainActivity: void shareText(java.lang.String)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: boolean clickAction(int)>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View,int)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getClassName()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnDescriptorReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattDescriptor)>
<org.qtproject.qt5.android.QtNative$8: void <init>()>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<org.qtproject.qt5.android.QtNativeInputConnection: java.lang.String getTextAfterCursor(int,int)>
<org.kde.necessitas.ministro.IMinistroCallback: android.os.IBinder asBinder()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean updateCursorPosition()>
<org.qtproject.qt5.android.QtThread: java.util.ArrayList access$200(org.qtproject.qt5.android.QtThread)>
<org.qtproject.qt5.android.QtNative: boolean isStarted()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leServiceError(long,int,int)>
<org.qtproject.qt5.android.QtEditText: android.content.Context getContext()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.qtproject.qt5.android.bindings.QtLoader$2: void onClick(android.content.DialogInterface,int)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.os.Parcel: void readException()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void populateHandles()>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<java.lang.String: java.lang.String valueOf(char)>
<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void <init>(org.qtproject.qt5.android.EditContextView,android.content.Context,int)>
<org.qtproject.qt5.android.QtNative: void setActivity(android.app.Activity,org.qtproject.qt5.android.QtActivityDelegate)>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>
<org.qtproject.qt5.android.ExtractStyle: java.util.HashMap getStateTransitions(java.lang.Object)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$GattEntry: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setSingleLine()>
<org.qtproject.qt5.android.network.QtNetwork$ProxyReceiver: void <init>(org.qtproject.qt5.android.network.QtNetwork$1)>
<org.qtproject.qt5.android.QtNative: void handleOrientationChanged(int,int)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setText(int)>
<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>
<android.view.MotionEvent: int getSource()>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<org.qtproject.qt5.android.ExtractStyle: int findStateIndex(int,java.util.HashMap)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: boolean dispatchHoverEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.QtActivityDelegate: void setFullScreen(boolean)>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>
<java.lang.StringBuilder: void <init>()>
<org.qtproject.qt5.android.CursorHandle: void updatePosition(int,int)>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setTextColor(int)>
<org.qtproject.qt5.android.bindings.QtActivity: void setTheme(int)>
<org.qtproject.qt5.android.QtSurface: void setZOrderMediaOverlay(boolean)>
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.graphics.drawable.StateListDrawable: boolean getPadding(android.graphics.Rect)>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.widget.LinearLayout: void setId(int)>
<android.bluetooth.BluetoothGatt: boolean readDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>
<java.lang.Object: void notify()>
<org.qtproject.qt5.android.QtLayout: android.view.ViewTreeObserver getViewTreeObserver()>
<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>
<android.view.ViewGroup: void <init>(android.content.Context)>
<java.lang.reflect.Constructor: void setAccessible(boolean)>
<java.lang.String: char charAt(int)>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<android.view.Window: void setSoftInputMode(int)>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<java.lang.Object: java.lang.String toString()>
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void <init>(int,int,boolean)>
<android.view.MotionEvent: int getPointerCount()>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.text.Spanned access$800(org.qtproject.qt5.android.QtMessageDialogHelper)>
<android.view.WindowMetrics: android.graphics.Rect getBounds()>
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>
<java.lang.Class: java.lang.reflect.Field[] getFields()>
<org.qtproject.qt5.android.QtNative: float access$800()>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothInputStreamThread: void setName(java.lang.String)>
<java.lang.Exception: void <init>(java.lang.String)>
<org.qtproject.qt5.android.ExtractStyle: int[] extractNativeChunkInfo20(long)>
<android.view.View: void invalidate()>
<android.app.Service: void onTrimMemory(int)>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
<java.lang.Math: int round(float)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<android.net.Uri: java.lang.String toString()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void sendNotificationsOrIndications(android.bluetooth.BluetoothGattCharacteristic)>
<org.qtproject.qt5.android.ExtractStyle: void extractViewInformation(int,org.json.JSONObject,java.lang.String,android.util.AttributeSet)>
<org.qtproject.qt5.android.QtNative$29: void <init>(int)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.bluetooth.BluetoothGattServerCallback: void onNotificationSent(android.bluetooth.BluetoothDevice,int)>
<java.lang.Class: boolean isInstance(java.lang.Object)>
<android.view.KeyEvent: int getDeadChar(int,int)>
<android.view.MotionEvent: float getAxisValue(int)>
<android.view.MenuItem: boolean isChecked()>
<org.qtproject.qt5.android.QtNative$7: void <init>()>
<org.qtproject.qt5.android.QtSurface: void setFocusableInTouchMode(boolean)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.text.Spanned access$600(org.qtproject.qt5.android.QtMessageDialogHelper)>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>
<java.util.HashMap: void <init>(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$700(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<org.qtproject.qt5.android.QtActivityDelegate: void notifyValueChanged(int,java.lang.String)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.os.RemoteException: void printStackTrace()>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<android.content.Intent: android.os.Bundle getExtras()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager$Entry: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager,org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$1)>
<org.qtproject.qt5.android.bindings.QtActivity: void onCreateHook(android.os.Bundle)>
<java.util.List: boolean contains(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtActivity: void onPanelClosed(int,android.view.Menu)>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractDefaultPalette()>
<org.qtproject.qt5.android.EditContextView: void addButton(int)>
<org.qtproject.qt5.android.bindings.QtActivity: void onStop()>
<android.bluetooth.le.ScanResult: int getRssi()>
<java.util.ListIterator: boolean hasNext()>
<org.qtproject.qt5.android.bearer.QtNetworkReceiver: void activeNetworkInfoChanged()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$1100(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<android.app.Activity: void onUserInteraction()>
<org.qtproject.qt5.android.QtNative: android.content.ClipboardManager access$1300()>
<android.view.View: void layout(int,int,int,int)>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>
<org.qtproject.qt5.android.QtActivityDelegate: java.lang.String getAppIconSize(android.app.Activity)>
<android.widget.PopupWindow: void setWidth(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: int handleForCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<java.util.Map$Entry: java.lang.Object getValue()>
<java.lang.StringBuilder: java.lang.String toString()>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void printStackTrace()>
<android.content.Intent: java.lang.String getAction()>
<org.qtproject.qt5.android.QtNative: double access$400()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: int access$000(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<android.graphics.Rect: void <init>()>
<android.app.Activity: void onCreate(android.os.Bundle)>
<org.qtproject.qt5.android.QtActivityDelegate: boolean startApplication()>
<android.view.Window: void addFlags(int)>
<org.qtproject.qt5.android.QtActivityDelegate$2$1: void <init>(org.qtproject.qt5.android.QtActivityDelegate$2,android.os.Handler)>
<org.qtproject.qt5.android.QtActivityDelegate: void setActionBarVisibility(boolean)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onContextItemSelected(android.view.MenuItem)>
<org.qtproject.qt5.android.QtNative$32: void <init>(int)>
<org.json.JSONException: void printStackTrace()>
<android.system.Os: java.lang.String getenv(java.lang.String)>
<org.qtproject.qt5.android.QtInputConnection: void setClosing(boolean)>
<org.qtproject.qt5.android.bindings.QtActivity: void onBackPressed()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getRippleDrawable(java.lang.Object,java.lang.String,android.graphics.Rect)>
<android.os.Handler: void <init>(android.os.Looper)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.KeyEvent: int getRepeatCount()>
<android.app.Activity: java.io.File getFilesDir()>
<org.qtproject.qt5.android.bindings.QtActivity: void onActivityResult(int,int,android.content.Intent)>
<android.widget.RelativeLayout$LayoutParams: void setMargins(int,int,int,int)>
<org.qtproject.qt5.android.QtLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>
<java.util.LinkedList: void <init>()>
<org.qtproject.qt5.android.QtActivityDelegate: int getSelectHandleWidth()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: boolean connectServer()>
<java.lang.Object: java.lang.Class getClass()>
<android.content.res.TypedArray: int getColor(int,int)>
<java.io.OutputStreamWriter: void write(java.lang.String)>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>
<android.content.ClipData: android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>
<java.lang.reflect.Field: java.lang.String getName()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo getNodeForView()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean setSelection(int,int)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void notifyLocationChange(int)>
<android.view.inputmethod.CompletionInfo: int getPosition()>
<android.view.MotionEvent: float getTouchMajor(int)>
<org.qtproject.qt5.android.bearer.QtNetworkReceiver: void access$000()>
<org.qtproject.qt5.android.QtNative: void touchAdd(int,int,int,boolean,int,int,float,float,float,float)>
<org.qtproject.qt5.android.bindings.QtActivityLoader: void finish()>
<android.content.Intent: android.content.Intent addFlags(int)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<org.qtproject.qt5.android.QtLayout: void removeView(android.view.View)>
<org.qtproject.qt5.android.QtActivityDelegate$2$1$1: void <init>(org.qtproject.qt5.android.QtActivityDelegate$2$1)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$500(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,int,int)>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<org.qtproject.qt5.android.QtServiceDelegate: boolean loadApplication(android.app.Service,java.lang.ClassLoader,android.os.Bundle)>
<org.qtproject.qt5.android.QtNative$27: void <init>(int,int,int,int,int)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.graphics.drawable.Drawable getIconDrawable()>
<org.qtproject.qt5.android.QtNative: void onContextMenuClosed(android.view.Menu)>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>
<org.qtproject.qt5.android.EditContextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.view.MotionEvent: float getRawY()>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: android.graphics.Rect screenRect(int)>
<org.qtproject.qt5.android.QtActivityDelegate: int access$700(org.qtproject.qt5.android.QtActivityDelegate)>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
<android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: boolean isAlive()>
<org.qtproject.qt5.android.bindings.QtActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<org.qtproject.qt5.android.QtActivityDelegate: void showSoftwareKeyboard(int,int,int,int,int,int)>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(byte[])>
<android.view.KeyEvent: int getMetaState()>
<org.kde.necessitas.ministro.IMinistroCallback$Stub$Proxy: void <init>(android.os.IBinder)>
<org.qtproject.qt5.android.CursorView: int getHeight()>
<org.qtproject.qt5.android.QtNative: android.os.IBinder onBind(android.content.Intent)>
<org.qtproject.qt5.android.QtNative: void loadQtLibraries(java.util.ArrayList)>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattDescriptor,boolean,boolean,int,byte[])>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean setComposingText(java.lang.String,int)>
<org.qtproject.qt5.android.QtNative$3: void <init>(java.util.ArrayList,java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$3: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<org.qtproject.qt5.android.EditContextView: void setBackground(android.graphics.drawable.Drawable)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void notifyScrolledEvent(int)>
<org.qtproject.qt5.android.bindings.QtActivity: void startActivity(android.content.Intent)>
<org.qtproject.qt5.android.QtNative: int access$300()>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>
<org.qtproject.qt5.android.bindings.QtActivity: void onActionModeFinished(android.view.ActionMode)>
<priv.wh201906.serialtest.MainActivity: android.content.Intent getIntent()>
<org.qtproject.qt5.android.ExtractStyle$DrawableCache: void <init>(org.json.JSONObject,java.lang.Object)>
<org.qtproject.qt5.android.QtNative: void setApplicationState(int)>
<org.qtproject.qt5.android.extras.QtNative: void onServiceConnected(long,java.lang.String,android.os.IBinder)>
<org.qtproject.qt5.android.QtNative: void loadBundledLibraries(java.util.ArrayList,java.lang.String)>
<android.os.Parcel: void enforceInterface(java.lang.String)>
<org.qtproject.qt5.android.ExtractStyle: void extractAbsSeekBar(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<java.lang.String: java.lang.String toString()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getJsonRect(android.graphics.Rect)>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leCharacteristicChanged(long,int,byte[])>
<org.qtproject.qt5.android.QtEditText: void <init>(android.content.Context,org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$200(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,int)>
<org.qtproject.qt5.android.QtNative: org.qtproject.qt5.android.QtServiceDelegate serviceDelegate()>
<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>
<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.content.Context: android.content.res.Resources getResources()>
<android.content.Context: android.content.res.Resources$Theme getTheme()>
<org.qtproject.qt5.android.QtNative$10: void <init>(int,int,int,int,int,int,int,int,boolean)>
<android.widget.ScrollView: void <init>(android.content.Context)>
<java.lang.Long: java.lang.Long valueOf(long)>
<org.qtproject.qt5.android.QtNative: void mouseUp(int,int,int)>
<android.view.View: void getLocationOnScreen(int[])>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void leDescriptorWritten(long,int,byte[],int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<android.os.Parcel: void writeNoException()>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<priv.wh201906.serialtest.MainActivity: void onNewIntent(android.content.Intent)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<java.lang.IllegalArgumentException: void printStackTrace()>
<org.qtproject.qt5.android.QtNative$14: void <init>(boolean)>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: void <init>(java.lang.String)>
<android.view.Menu: int size()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$GattEntryType: org.qtproject.qt5.android.bluetooth.QtBluetoothLE$GattEntryType[] values()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothSocketServer: boolean isInterrupted()>
<android.bluetooth.BluetoothGattCallback: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)>
<java.lang.String: void <init>(byte[],java.lang.String)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<java.util.Hashtable: void clear()>
<org.qtproject.qt5.android.bindings.QtActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<org.qtproject.qt5.android.QtActivityDelegate: void closeContextMenu()>
<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.app.AlertDialog access$000(org.qtproject.qt5.android.QtMessageDialogHelper)>
<org.qtproject.qt5.android.QtNative: boolean onContextItemSelected(int,boolean)>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<org.qtproject.qt5.android.bindings.QtActivity: void onDetachedFromWindow()>
<org.qtproject.qt5.android.QtNative: void updateWindow()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()>
<org.qtproject.qt5.android.bindings.QtActivity: android.content.res.Resources getResources()>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<org.qtproject.qt5.android.bindings.QtActivity: android.content.pm.PackageManager getPackageManager()>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<org.qtproject.qt5.android.QtNative: void quitQtCoreApplication()>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate$AccessibilityManagerListener: void onAccessibilityStateChanged(boolean)>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>
<android.app.Activity: void onRestart()>
<org.qtproject.qt5.android.QtActivityDelegate: int access$900(org.qtproject.qt5.android.QtActivityDelegate)>
<org.qtproject.qt5.android.QtEditText: boolean postDelayed(java.lang.Runnable,long)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<android.graphics.Rect: int height()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnReceive(android.content.Context,android.content.Intent)>
<org.qtproject.qt5.android.QtNativeInputConnection: int getCursorCapsMode(int)>
<android.bluetooth.le.ScanCallback: void <init>()>
<android.content.ComponentName: java.lang.String flattenToString()>
<org.qtproject.qt5.android.QtNative: android.content.Context getContext()>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: void invalidateVirtualViewId(int)>
<org.qtproject.qt5.android.bindings.QtLoader: java.util.ArrayList prefferedAbiLibs(java.lang.String[])>
<org.json.JSONObject: void <init>()>
<android.app.Activity: void onLowMemory()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>
<android.view.animation.AccelerateInterpolator: void <init>()>
<org.qtproject.qt5.android.ExtractStyle: void extractItemsStyle(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<org.qtproject.qt5.android.QtMessageDialogHelper: long handler()>
<android.app.AlertDialog: void show()>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getColorStateList(android.content.res.ColorStateList)>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractTextAppearanceInformation(int,java.lang.String,int,android.util.AttributeSet)>
<org.qtproject.qt5.android.QtSurface: int getId()>
<org.qtproject.qt5.android.QtNative$1: void <init>()>
<org.qtproject.qt5.android.QtActivityDelegate: void notifyObjectFocus(int)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject findPatchesMarings(android.graphics.drawable.Drawable)>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<android.graphics.drawable.BitmapDrawable: int getGravity()>
<android.widget.PopupWindow: void update(int,int,int,int)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setEllipsize(android.text.TextUtils$TruncateAt)>
<android.os.Bundle: void putInt(java.lang.String,int)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean onTouchEvent(android.view.MotionEvent)>
<org.qtproject.qt5.android.bindings.QtActivity: java.lang.CharSequence onCreateDescription()>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Math: int max(int,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: int handleForDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<org.qtproject.qt5.android.bindings.QtActivity: void startActivityForResult(android.content.Intent,int)>
<android.view.WindowManager: android.view.WindowMetrics getMaximumWindowMetrics()>
<org.qtproject.qt5.android.bindings.QtActivity: void onRestart()>
<java.util.Map$Entry: java.lang.Object getKey()>
<org.qtproject.qt5.android.extras.QtNative: boolean onTransact(long,int,android.os.Parcel,android.os.Parcel,int)>
<org.qtproject.qt5.android.ExtractStyle: void <init>(android.content.Context,java.lang.String,boolean)>
<org.qtproject.qt5.android.QtNative: void terminateQt()>
<org.qtproject.qt5.android.QtActivityDelegate: void onCreate(android.os.Bundle)>
<org.qtproject.qt5.android.QtNative: android.app.Activity activity()>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<org.qtproject.qt5.android.bindings.QtService: void onCreateHook()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$ReadWriteJob: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<org.qtproject.qt5.android.QtMessageDialogHelper: void reset()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnDescriptorWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattDescriptor,boolean,boolean,int,byte[])>
<org.qtproject.qt5.android.bindings.QtActivity: java.lang.Object onRetainNonConfigurationInstance()>
<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<java.lang.Boolean: boolean booleanValue()>
<org.qtproject.qt5.android.QtMessageDialogHelper$2: void <init>(org.qtproject.qt5.android.QtMessageDialogHelper)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void access$900(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>
<android.app.AlertDialog: boolean isShowing()>
<org.qtproject.qt5.android.QtThread: boolean access$000(org.qtproject.qt5.android.QtThread)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: boolean performActionForVirtualViewId(int,int,android.os.Bundle)>
<org.qtproject.qt5.android.QtNative$20: void <init>(java.util.concurrent.Semaphore)>
<android.view.MotionEvent: float getRawX()>
<org.qtproject.qt5.android.QtActivityDelegate: java.lang.String access$1100()>
<org.qtproject.qt5.android.CursorHandle: void setPosition(int,int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractCheckedTextView(java.lang.String)>
<android.content.Intent: java.lang.String getType()>
<java.lang.System: void load(java.lang.String)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: boolean populateNode(int,android.view.accessibility.AccessibilityNodeInfo)>
<android.view.animation.Animation: void setDuration(long)>
<org.qtproject.qt5.android.QtActivityDelegate: boolean onContextItemSelected(android.view.MenuItem)>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean copy()>
<android.view.MotionEvent: float getPressure()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$ClientCharacteristicManager: byte[] valueFor(android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothDevice)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnServicesDiscovered(android.bluetooth.BluetoothGatt,int)>
<android.widget.TextView: void <init>(android.content.Context)>
<java.util.Hashtable: void <init>(int)>
<org.qtproject.qt5.android.CursorView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setVisibility(int)>
<android.graphics.drawable.GradientDrawable$Orientation: java.lang.String name()>
<android.app.AlertDialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<org.qtproject.qt5.android.bindings.QtActivity: void runOnUiThread(java.lang.Runnable)>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.app.Activity access$100(org.qtproject.qt5.android.QtMessageDialogHelper)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.qtproject.qt5.android.QtNative: void touchBegin(int)>
<org.qtproject.qt5.android.QtLayout: void getLocationOnScreen(int[])>
<org.qtproject.qt5.android.CursorView: void <init>(android.content.Context,org.qtproject.qt5.android.CursorHandle)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void performNextIO()>
<priv.wh201906.serialtest.MainActivity: void handleIntent(android.content.Intent)>
<org.qtproject.qt5.android.bindings.QtActivityLoader$1: void onClick(android.content.DialogInterface,int)>
<org.qtproject.qt5.android.bindings.QtLoader: void loadApplication(android.os.Bundle)>
<java.io.File: java.io.File getParentFile()>
<android.app.AlertDialog: void setCanceledOnTouchOutside(boolean)>
<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getRotateDrawable(android.graphics.drawable.RotateDrawable,java.lang.String)>
<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<org.qtproject.qt5.android.QtNative: boolean startQtAndroidPlugin(java.lang.String,java.lang.String)>
<org.json.JSONArray: org.json.JSONArray put(int)>
<org.qtproject.qt5.android.QtNative: void mouseMove(int,int,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnCharacteristicWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,int,byte[])>
<org.qtproject.qt5.android.accessibility.QtNativeAccessibility: int[] childIdListForAccessibleObject(int)>
<org.json.JSONObject: java.lang.String quote(java.lang.String)>
<android.app.Activity: void registerForContextMenu(android.view.View)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void leServerCharacteristicChanged(long,android.bluetooth.BluetoothGattCharacteristic,byte[])>
<priv.wh201906.serialtest.MainActivity: android.view.Window getWindow()>
<android.app.Activity: android.view.Window getWindow()>
<android.os.ResultReceiver: void <init>(android.os.Handler)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$2: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void leServerAdvertisementError(long,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void handleOnMtuChanged(android.bluetooth.BluetoothGatt,int,int)>
<org.qtproject.qt5.android.EditContextView: void addView(android.view.View)>
<org.qtproject.qt5.android.ExtractStyle: void extractCalendar(org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter)>
<org.kde.necessitas.ministro.IMinistroCallback$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<org.qtproject.qt5.android.bindings.QtApplication: void setQtContextDelegate(java.lang.Class,java.lang.Object)>
<android.bluetooth.BluetoothGattCallback: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<org.qtproject.qt5.android.QtEditText: void setFocusableInTouchMode(boolean)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$GattEntryType: int ordinal()>
<org.qtproject.qt5.android.QtNativeInputConnection: boolean finishComposingText()>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.view.View: int getId()>
<android.app.Activity: void <init>()>
<org.qtproject.qt5.android.ExtractStyle: java.lang.reflect.Field getAccessibleField(java.lang.Class,java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.lang.CharSequence: java.lang.String toString()>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.ClipData$Item: java.lang.CharSequence getText()>
<java.lang.Math: int min(int,int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>
<org.qtproject.qt5.android.QtNative: double access$500()>
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<org.qtproject.qt5.android.EditContextView$ContextButton: void setOnClickListener(android.view.View$OnClickListener)>
<org.qtproject.qt5.android.QtNative: boolean isTabletEventSupported()>
<org.qtproject.qt5.android.QtActivityDelegate$2: void <init>(org.qtproject.qt5.android.QtActivityDelegate,int,int,int,int,int,int)>
<android.view.MotionEvent: int getPointerId(int)>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.concurrent.Semaphore: void acquire()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.bluetooth.BluetoothGatt: boolean discoverServices()>
<java.lang.Object: void wait()>
<org.qtproject.qt5.android.QtNative: void touchEnd(int,int)>
<org.qtproject.qt5.android.EditPopupMenu: void initOverlay()>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE: void <init>()>
<java.lang.String: java.lang.String replace(char,char)>
<android.os.Parcel: void recycle()>
<org.qtproject.qt5.android.QtActivityDelegate: android.app.Activity access$400(org.qtproject.qt5.android.QtActivityDelegate)>
<java.lang.Exception: void <init>()>
<android.content.res.TypedArray: void recycle()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnCharacteristicReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattCharacteristic)>
<java.util.LinkedList: boolean contains(java.lang.Object)>
<org.qtproject.qt5.android.bindings.QtActivity: void onActionModeStarted(android.view.ActionMode)>
<org.qtproject.qt5.android.bindings.QtActivity: android.content.Intent getIntent()>
<org.qtproject.qt5.android.QtActivityDelegate: org.qtproject.qt5.android.QtLayout access$800(org.qtproject.qt5.android.QtActivityDelegate)>
<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>
<org.qtproject.qt5.android.bindings.QtService: android.content.pm.PackageManager getPackageManager()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.qtproject.qt5.android.QtNative$23: void <init>()>
<org.qtproject.qt5.android.QtNative: void sendRequestPermissionsResult(int,java.lang.String[],int[])>
<org.qtproject.qt5.android.ExtractStyle$SimpleJsonWriter: void beginObject()>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>
<org.qtproject.qt5.android.bindings.QtActivity: boolean requestWindowFeature(int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getStateListDrawable(java.lang.Object,java.lang.String)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$BondStateBroadcastReceiver: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE)>
<android.os.Handler: android.os.Looper getLooper()>
<org.qtproject.qt5.android.QtLayout: android.view.View getChildAt(int)>
<org.qtproject.qt5.android.bindings.QtActivity: void onResume()>
<android.widget.RelativeLayout$LayoutParams: void addRule(int)>
<org.qtproject.qt5.android.QtNative$21: void <init>(int,int,int,int)>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)>
<android.bluetooth.BluetoothGattDescriptor: boolean setValue(byte[])>
<org.qtproject.qt5.android.QtLayout: int getChildCount()>
<org.qtproject.qt5.android.QtActivityDelegate: int access$728(org.qtproject.qt5.android.QtActivityDelegate,int)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<java.util.UUID: java.lang.String toString()>
<org.qtproject.qt5.android.QtNative: void mouseWheel(int,int,int,float,float)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLE$TimeoutRunnable: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLE,int)>
<android.app.Activity: android.view.View onCreatePanelView(int)>
<android.bluetooth.BluetoothGattServer: void close()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<org.qtproject.qt5.android.QtMessageDialogHelper: android.graphics.drawable.Drawable getStyledDrawable(java.lang.String)>
<org.qtproject.qt5.android.bindings.QtActivityLoader$2: void onClick(android.content.DialogInterface,int)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject extractTextAppearance(int,boolean)>
<java.lang.Class: java.lang.Class getSuperclass()>
<java.lang.Thread: void <init>()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothBroadcastReceiver: void jniOnReceive(long,android.content.Context,android.content.Intent)>
<android.util.TypedValue: void <init>()>
<org.qtproject.qt5.android.QtNative: void runAction(java.lang.Runnable)>
<org.qtproject.qt5.android.QtNative$30: void <init>(int)>
<org.qtproject.qt5.android.QtActivityDelegate: java.lang.String access$1200()>
<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<java.lang.String: java.lang.String[] split(java.lang.String,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.qtproject.qt5.android.QtNative: void quitApp()>
<org.qtproject.qt5.android.QtLayout: int resolveSize(int,int)>
<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<org.qtproject.qt5.android.QtLayout: void requestLayout()>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer: void handleOnExecuteWrite(android.bluetooth.BluetoothDevice,int,boolean)>
<org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate: android.view.ViewGroup access$500(org.qtproject.qt5.android.accessibility.QtAccessibilityDelegate)>
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>
<org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer$2: void <init>(org.qtproject.qt5.android.bluetooth.QtBluetoothLEServer)>
<org.qtproject.qt5.android.ButtonStruct: void <init>(org.qtproject.qt5.android.QtMessageDialogHelper,int,java.lang.String)>
<org.qtproject.qt5.android.bindings.QtLoader: void access$200(org.qtproject.qt5.android.bindings.QtLoader,android.os.Bundle)>
<org.qtproject.qt5.android.QtNative: double access$700()>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.content.ClipboardManager: void addPrimaryClipChangedListener(android.content.ClipboardManager$OnPrimaryClipChangedListener)>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<org.qtproject.qt5.android.QtSurface: android.view.SurfaceHolder getHolder()>
<android.content.res.XmlResourceParser: int next()>
<org.qtproject.qt5.android.QtActivityDelegate: void hideSplashScreen(int)>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>
<org.qtproject.qt5.android.ExtractStyle: org.json.JSONObject getAnimatedStateListDrawable(java.lang.Object,java.lang.String)>
<org.qtproject.qt5.android.QtNative$18: void <init>(int,java.lang.String)>
<android.app.Activity: android.app.ActionBar getActionBar()>
